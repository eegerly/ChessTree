<map version="freeplane 1.7.0">
<!--To view this file, download free mind mapping software Freeplane from http://freeplane.sourceforge.net -->
<node TEXT="ChessTree" FOLDED="false" ID="ID_1869326925" CREATED="1521562113754" MODIFIED="1578240952920" LINK="http://noUpdateURL.com" BACKGROUND_COLOR="#97c7dc" STYLE="oval">
<font SIZE="16" BOLD="true" ITALIC="true"/>
<hook NAME="MapStyle">
    <properties fit_to_viewport="false" show_icon_for_attributes="true" show_note_icons="true" edgeColorConfiguration="#808080ff,#ff0000ff,#0000ffff,#00ff00ff,#ff00ffff,#00ffffff,#7c0000ff,#00007cff,#007c00ff,#7c007cff,#007c7cff,#7c7c00ff"/>

<map_styles>
<stylenode LOCALIZED_TEXT="styles.root_node" STYLE="oval" UNIFORM_SHAPE="true" VGAP_QUANTITY="24.0 pt">
<font SIZE="24"/>
<stylenode LOCALIZED_TEXT="styles.predefined" POSITION="right" STYLE="bubble">
<stylenode LOCALIZED_TEXT="default" ICON_SIZE="12.0 pt" COLOR="#000000" STYLE="fork">
<font NAME="SansSerif" SIZE="10" BOLD="false" ITALIC="false"/>
</stylenode>
<stylenode LOCALIZED_TEXT="defaultstyle.details"/>
<stylenode LOCALIZED_TEXT="defaultstyle.attributes">
<font SIZE="9"/>
</stylenode>
<stylenode LOCALIZED_TEXT="defaultstyle.note" COLOR="#000000" BACKGROUND_COLOR="#ffffff" TEXT_ALIGN="LEFT"/>
<stylenode LOCALIZED_TEXT="defaultstyle.floating">
<edge STYLE="hide_edge"/>
<cloud COLOR="#f0f0f0" SHAPE="ROUND_RECT"/>
</stylenode>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.user-defined" POSITION="right" STYLE="bubble">
<stylenode LOCALIZED_TEXT="styles.topic" COLOR="#18898b" STYLE="fork">
<font NAME="Liberation Sans" SIZE="10" BOLD="true"/>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.subtopic" COLOR="#cc3300" STYLE="fork">
<font NAME="Liberation Sans" SIZE="10" BOLD="true"/>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.subsubtopic" COLOR="#669900">
<font NAME="Liberation Sans" SIZE="10" BOLD="true"/>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.important">
<icon BUILTIN="yes"/>
</stylenode>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.AutomaticLayout" POSITION="right" STYLE="bubble">
<stylenode LOCALIZED_TEXT="AutomaticLayout.level.root" COLOR="#000000" STYLE="oval" SHAPE_HORIZONTAL_MARGIN="10.0 pt" SHAPE_VERTICAL_MARGIN="10.0 pt">
<font SIZE="18"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,1" COLOR="#0033ff">
<font SIZE="16"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,2" COLOR="#00b439">
<font SIZE="14"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,3" COLOR="#990000">
<font SIZE="12"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,4" COLOR="#111111">
<font SIZE="10"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,5"/>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,6"/>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,7"/>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,8"/>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,9"/>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,10"/>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,11"/>
</stylenode>
</stylenode>
</map_styles>
</hook>
<hook NAME="AutomaticEdgeColor" COUNTER="11" RULE="ON_BRANCH_CREATION"/>
<attribute_layout NAME_WIDTH="107.99999678134928 pt" VALUE_WIDTH="134.9999959766866 pt"/>
<attribute NAME="name" VALUE="chessTree"/>
<attribute NAME="version" VALUE="0.0.1"/>
<attribute NAME="author" VALUE="Gergely Kiss"/>
<attribute NAME="freeplaneVersionFrom" VALUE="1.7.4"/>
<attribute NAME="freeplaneVersionTo" VALUE=""/>
<attribute NAME="updateUrl" VALUE="http://noUpdateURL.com" OBJECT="java.net.URI|http://noUpdateURL.com"/>
<richcontent TYPE="NOTE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      The homepage of this add-on should be set as the link of the root node.
    </p>
    <p>
      The basic properties of this add-on. They can be used in script names and other attributes, e.g. &quot;${name}.groovy&quot;.
    </p>
    <ul>
      <li>
        name: The name of the add-on, normally a technically one (no spaces, no special characters except _.-).
      </li>
      <li>
        author: Author's name(s) and (optionally) email adresses.
      </li>
      <li>
        version: Since it's difficult to protect numbers like 1.0 from Freeplane's number parser it's advised to prepend a 'v' to the number, e.g. 'v1.0'.
      </li>
      <li>
        freeplane-version-from: The oldest compatible Freeplane version. The add-on will not be installed if the Freeplane version is too old.
      </li>
      <li>
        freeplane-version-to: Normally empty: The newest compatible Freeplane version. The add-on will not be installed if the Freeplane version is too new.
      </li>
      <li>
        updateUrl: URL of the file containing information (version, download url) on the latest version of this add-on. By default: &quot;${homepage}/version.properties&quot;
      </li>
    </ul>
  </body>
</html>
</richcontent>
<node TEXT="description" POSITION="left" ID="ID_752418840" CREATED="1521562135104" MODIFIED="1578240952922">
<edge COLOR="#ff0000"/>
<richcontent TYPE="NOTE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      Description would be awkward to edit as an attribute.
    </p>
    <p>
      So you have to put the add-on description as a child of the <i>'description'</i>&#160;node.
    </p>
    <p>
      To translate the description you have to define a translation for the key 'addons.${name}.description'.
    </p>
  </body>
</html>
</richcontent>
<node ID="ID_281132702" CREATED="1521563587956" MODIFIED="1521563734014"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      This addon is intended to ease the creation and maintenance of mindmaps containing trees for chess movements.
    </p>
    <p>
      
    </p>
    <p>
      0.) Template is available after addon installation from <i><b>File</b></i>&#160; --&gt; <i><b>New map from template...</b></i>&#160;choosing <i><b>template.ChessTree.mm</b></i>. Any additional information can be found in the template.
    </p>
    <p>
      
    </p>
  </body>
</html>
</richcontent>
<attribute_layout VALUE_WIDTH="134.9999959766866 pt"/>
</node>
</node>
<node TEXT="changes" POSITION="left" ID="ID_845634758" CREATED="1521562135109" MODIFIED="1578240952924">
<edge COLOR="#0000ff"/>
<richcontent TYPE="NOTE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      Change log of this add-on: append one node for each noteworthy version and put the details for each version into a child node.
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="license" FOLDED="true" POSITION="left" ID="ID_1331637895" CREATED="1521562135113" MODIFIED="1578240952927">
<edge COLOR="#00ff00"/>
<richcontent TYPE="NOTE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      The add-ons's license that the user has to accept before she can install it.
    </p>
    <p>
      
    </p>
    <p>
      The License text has to be entered as a child of the <i>'license'</i>&#160;node, either as plain text or as HTML.
    </p>
  </body>
</html>
</richcontent>
<node TEXT="&#xa;This add-on is free software: you can redistribute it and/or modify&#xa;it under the terms of the GNU General Public License as published by&#xa;the Free Software Foundation, either version 2 of the License, or&#xa;(at your option) any later version.&#xa;&#xa;This program is distributed in the hope that it will be useful,&#xa;but WITHOUT ANY WARRANTY; without even the implied warranty of&#xa;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the&#xa;GNU General Public License for more details.&#xa;" ID="ID_1555852289" CREATED="1521562135117" MODIFIED="1521566722845"/>
</node>
<node TEXT="preferences.xml" POSITION="left" ID="ID_136508631" CREATED="1521562135121" MODIFIED="1578240952928">
<edge COLOR="#ff00ff"/>
<richcontent TYPE="NOTE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      <font color="#000000" face="SansSerif, sans-serif">The child node contains the add-on configuration as an extension to mindmapmodemenu.xml (in Tools-&gt;Preferences-&gt;Add-ons). </font>
    </p>
    <p>
      <font color="#000000" face="SansSerif, sans-serif">Every property in the configuration should receive a default value in <i>default.properties</i>&#160;node.</font>
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="default.properties" POSITION="left" ID="ID_1494843788" CREATED="1521562135125" MODIFIED="1578240952928">
<edge COLOR="#00ffff"/>
<richcontent TYPE="NOTE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      These properties are used for:
    </p>
    <ul>
      <li>
        Each property defined in the preferences should have a default value in the attributes of this node.
      </li>
      <li>
        For each menu item with an icon add an attribute with the icon key (use developer tool menuItemInfo) as key and the icon path as value. Example: '${name}.icon': '/images/${name}-icon.png'
      </li>
    </ul>
  </body>
</html>
</richcontent>
<attribute_layout VALUE_WIDTH="250.0 pt"/>
</node>
<node TEXT="translations" POSITION="left" ID="ID_461099033" CREATED="1521562135130" MODIFIED="1578240952929">
<edge COLOR="#7c0000"/>
<richcontent TYPE="NOTE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      The translation keys that this script uses. Define one child node per supported locale. The attributes contain the translations. Define at least
    </p>
    <ul>
      <li>
        'addons.${name}' for the add-on's name
      </li>
      <li>
        'addons.${name}.description' for the description, e.g. in the add-on overview dialog (not necessary for English)
      </li>
      <li>
        'addons.${name}.&lt;scriptname&gt;' for each script since it will be the menu title.
      </li>
    </ul>
  </body>
</html>
</richcontent>
<attribute_layout VALUE_WIDTH="250.0 pt"/>
<node TEXT="en" ID="ID_1779268052" CREATED="1521562135133" MODIFIED="1578239400182" MAX_WIDTH="322.49999056756525 pt" MIN_WIDTH="322.49999056756525 pt">
<attribute_layout NAME_WIDTH="155.99999535083785 pt" VALUE_WIDTH="123.74999631196272 pt"/>
<attribute NAME="addons.${name}" VALUE="ChessTree"/>
<attribute NAME="addons.${name}.updateChessTree" VALUE="Update ChessTree..."/>
<attribute NAME="addons.${name}.pasteBranch" VALUE="Paste branch..."/>
<attribute NAME="addons.${name}.copyPGN" VALUE="Copy PGN..."/>
<attribute NAME="addons.${name}.compareTrees" VALUE="Compare trees"/>
</node>
</node>
<node TEXT="deinstall" POSITION="left" ID="ID_1510539068" CREATED="1521562135137" MODIFIED="1578240952930">
<edge COLOR="#00007c"/>
<richcontent TYPE="NOTE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      List of files and/or directories to remove on uninstall
    </p>
  </body>
</html>
</richcontent>
<attribute_layout NAME_WIDTH="52.499998435378124 pt" VALUE_WIDTH="271.4999919086697 pt"/>
<attribute NAME="delete" VALUE="${installationbase}/addons/${name}.script.xml"/>
<attribute NAME="delete" VALUE="${installationbase}/templates/template.ChessTree.mm"/>
<attribute NAME="delete" VALUE="${installationbase}/lib/ChessTree.jar"/>
<attribute NAME="delete" VALUE="${installationbase}/addons/${name}/scripts/pasteBranch.groovy"/>
<attribute NAME="delete" VALUE="${installationbase}/addons/${name}/scripts/updateChessTree.groovy"/>
<attribute NAME="delete" VALUE="${installationbase}/addons/${name}/scripts/copyPGN.groovy"/>
<attribute NAME="delete" VALUE="${installationbase}/addons/${name}/scripts/compareTrees.groovy"/>
</node>
<node TEXT="scripts" POSITION="right" ID="ID_836008002" CREATED="1521562135167" MODIFIED="1578240952932">
<edge COLOR="#007c00"/>
<richcontent TYPE="NOTE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      An add-on may contain multiple scripts. The node text defines the script name (e.g. insertInlineImage.groovy). The name must have a suffix of a supported script language like .groovy or .js and may only consist of letters and digits. The script properties have to be configured via attributes:
    </p>
    <p>
      
    </p>
    <p>
      * menuLocation: &lt;locationkey&gt;
    </p>
    <p>
      &#160;&#160;&#160;- Defines the menu location, defaults a sub menu 'main_menu_scripting/addons.${name}'.
    </p>
    <p>
      &#160;&#160;&#160;-&#160;Use developer tool menuItemInfo to inspect menu location keys.
    </p>
    <p>
      &#160;&#160;&#160;- This attribute is mandatory
    </p>
    <p>
      
    </p>
    <p>
      * menuTitleKey: &lt;key&gt;
    </p>
    <p>
      &#160;&#160;&#160;- The menu item title will be looked up under the translation key &lt;key&gt; - don't forget to define its translation.
    </p>
    <p>
      &#160;&#160;&#160;- This attribute is mandatory
    </p>
    <p>
      
    </p>
    <p>
      * executionMode: &lt;mode&gt;
    </p>
    <p>
      &#160;&#160;&#160;- The execution mode as described in the Freeplane wiki (http://freeplane.sourceforge.net/wiki/index.php/Scripting)
    </p>
    <p>
      &#160;&#160;&#160;- ON_SINGLE_NODE: Execute the script once. The <i>node</i>&#160;variable is set to the selected node.
    </p>
    <p>
      &#160;&#160;&#160;- ON_SELECTED_NODE: Execute the script n times for n selected nodes, once for each node.
    </p>
    <p>
      &#160;&#160;&#160;- ON_SELECTED_NODE_RECURSIVELY: Execute the script on every selected node and recursively on all of its children.
    </p>
    <p>
      &#160;&#160;&#160;- In doubt use ON_SINGLE_NODE.
    </p>
    <p>
      &#160;&#160;&#160;- This attribute is mandatory
    </p>
    <p>
      
    </p>
    <p>
      * keyboardShortcut: &lt;shortcut&gt;
    </p>
    <p>
      &#160;&#160;&#160;- Optional: keyboard combination / accelerator for this script, e.g. control alt I
    </p>
    <p>
      &#160;&#160;&#160;- Use lowercase letters for modifiers and uppercase for letters. Use no + signs.
    </p>
    <p>
      &#160;&#160;&#160;- The available key names are listed at http://download.oracle.com/javase/1.4.2/docs/api/java/awt/event/KeyEvent.html#VK_0
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;In the list only entries with a 'VK_' prefix count. Omit the prefix in the shortcut definition.
    </p>
    <p>
      
    </p>
    <p>
      * Permissions&#160;that the script(s) require, each either false or true:
    </p>
    <p>
      &#160;&#160;&#160;- execute_scripts_without_asking
    </p>
    <p>
      &#160;&#160;&#160;- execute_scripts_without_file_restriction: permission to read files
    </p>
    <p>
      &#160;&#160;&#160;- execute_scripts_without_write_restriction: permission to create/change/delete files
    </p>
    <p>
      &#160;&#160;&#160;- execute_scripts_without_exec_restriction: permission to execute other programs
    </p>
    <p>
      &#160;&#160;&#160;- execute_scripts_without_network_restriction: permission to access the network
    </p>
    <p>
      &#160;&#160;Notes:
    </p>
    <p>
      &#160;&#160;- The set of permissions is fixed.
    </p>
    <p>
      &#160;&#160;- Don't change the attribute names, don't omit one.
    </p>
    <p>
      &#160;&#160;- Set the values either to true or to false
    </p>
    <p>
      &#160;&#160;- In any case set execute_scripts_without_asking to true unless you want to annoy users.
    </p>
  </body>
</html>
</richcontent>
<node TEXT="pasteBranch.groovy" FOLDED="true" ID="ID_1708118480" CREATED="1522494712280" MODIFIED="1578047836752">
<attribute_layout NAME_WIDTH="146.2499956414105 pt" VALUE_WIDTH="134.9999959766866 pt"/>
<attribute NAME="menuTitleKey" VALUE="addons.${name}.pasteBranch"/>
<attribute NAME="menuLocation" VALUE="/menu_bar/addons.${name}"/>
<attribute NAME="executionMode" VALUE="on_single_node"/>
<attribute NAME="keyboardShortcut" VALUE=""/>
<attribute NAME="execute_scripts_without_asking" VALUE="true"/>
<attribute NAME="execute_scripts_without_file_restriction" VALUE="true"/>
<attribute NAME="execute_scripts_without_write_restriction" VALUE="true"/>
<attribute NAME="execute_scripts_without_exec_restriction" VALUE="true"/>
<attribute NAME="execute_scripts_without_network_restriction" VALUE="true"/>
<node TEXT="import org.freeplane.plugin.script.proxy.ScriptUtils&#xd;&#xa;import groovy.swing.SwingBuilder&#xd;&#xa;//import groovy.io.File&#xd;&#xa;import groovy.io.FileType&#xd;&#xa;&#xd;&#xa;import java.awt.FlowLayout as FL&#xd;&#xa;import java.awt.event.ActionEvent;&#xd;&#xa;import java.awt.event.ActionListener;&#xd;&#xa;import java.awt.Dimension;&#xd;&#xa;import java.awt.KeyStroke;&#xd;&#xa;import java.awt.event.KeyEvent;&#xd;&#xa;import java.awt.event.KeyAdapter;&#xd;&#xa;import java.awt.Action;&#xd;&#xa;import java.awt.Font;&#xd;&#xa;&#xd;&#xa;import javax.swing.BoxLayout as BXL&#xd;&#xa;import javax.swing.JFrame&#xd;&#xa;import javax.swing.AbstractAction;&#xd;&#xa;import javax.swing.Action;&#xd;&#xa;import javax.swing.BoxLayout;&#xd;&#xa;import javax.swing.JComponent;&#xd;&#xa;import javax.swing.JList;&#xd;&#xa;import javax.swing.JPanel;&#xd;&#xa;import javax.swing.KeyStroke;&#xd;&#xa;import javax.swing.JScrollPane&#xd;&#xa;import javax.swing.JFileChooser;&#xd;&#xa;&#xd;&#xa;import java.awt.Toolkit&#xd;&#xa;import java.awt.datatransfer.Clipboard&#xd;&#xa;import java.awt.datatransfer.DataFlavor&#xd;&#xa;import java.awt.datatransfer.StringSelection&#xd;&#xa;&#xd;&#xa;import ChessTree.Notation&#xd;&#xa;import ChessTree.NotationTranslator&#xd;&#xa;import ChessTree.ChessTreeSettings&#xd;&#xa;import ChessTree.PositionInterpreter&#xd;&#xa;&#xd;&#xa;/*************/&#xd;&#xa;/** Globals **/&#xd;&#xa;/*************/&#xd;&#xa;chessTreeSettings = new ChessTreeSettings(this.node.map)&#xd;&#xa;/* CONSTANTS */ &#xd;&#xa;SUPPORTED_LANGUAGES = chessTreeSettings.SUPPORTED_LANGUAGES&#xd;&#xa;DICTIONARY = chessTreeSettings.DICTIONARY&#xd;&#xa;&#xd;&#xa;LANGUAGE_CURRENT = chessTreeSettings.get(&quot;chesstree_language&quot;).toString()&#xd;&#xa;&#xd;&#xa;ROOT = this.node.map.root&#xd;&#xa;&#xd;&#xa;/* FUNCTIONS */&#xd;&#xa;&#xd;&#xa;/* Static functions for ClipBoard handling */ &#xd;&#xa;static String getClipboardContents(){    return Toolkit.getDefaultToolkit().getSystemClipboard().getContents(null).getTransferData(DataFlavor.stringFlavor)    }&#xd;&#xa;&#xd;&#xa;def showPGNFileChooser() {&#xd;&#xa;    if(guiPGNFolderRB.selected) {&#xd;&#xa;        JFileChooser chooser = new JFileChooser();&#xd;&#xa;        chooser.setCurrentDirectory(new java.io.File(&quot;.&quot;));&#xd;&#xa;        chooser.setDialogTitle(&quot;Choose directory containing PGN files...&quot;);&#xd;&#xa;        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);&#xd;&#xa;        chooser.setAcceptAllFileFilterUsed(false);&#xd;&#xa;        &#xd;&#xa;        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {&#xd;&#xa;            return chooser.getCurrentDirectory()&#xd;&#xa;        } else {&#xd;&#xa;            return &quot;&quot;&#xd;&#xa;        }&#xd;&#xa;    } else {&#xd;&#xa;        return &quot;&quot;&#xd;&#xa;    }&#xd;&#xa;&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;def switchPGNinput() {&#xd;&#xa;    guiPGNClipboard.editable = guiPGNClipboardRB.selected    &#xd;&#xa;    guiPGNClipboard.enabled = guiPGNClipboardRB.selected&#xd;&#xa;    guiPGNFolder.editable = guiPGNFolderRB.selected&#xd;&#xa;    guiPGNFolder.enabled = guiPGNFolderRB.selected    &#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;def getNodeFEN(aNode) {&#xd;&#xa;    return aNode.attributes.containsKey(&quot;FEN&quot;) ? aNode[&quot;FEN&quot;] : &quot;&quot;//: PositionInterpreter.FEN_STARTING&#xd;&#xa;}&#xd;&#xa;/****************/&#xd;&#xa;/**** M A I N ***/&#xd;&#xa;/****************/&#xd;&#xa;&#xd;&#xa;/* Build Dialog window */&#xd;&#xa;def s = new SwingBuilder()&#xd;&#xa;s.setVariable(&apos;myDialog-properties&apos;,[:])&#xd;&#xa;def vars = s.variables&#xd;&#xa;def disableItem(item) {vars.guiPGNClip.editable = false}&#xd;&#xa;&#xd;&#xa;def dial = s.dialog(title:&quot;Paste branch ...&quot;, id:&apos;myDialog&apos;, modal:true, locationRelativeTo:ui.frame, owner:ui.frame, defaultCloseOperation:JFrame.DISPOSE_ON_CLOSE, pack:true, show:true) {&#xd;&#xa;    panel(id:&apos;pMain&apos;) {&#xd;&#xa;        boxLayout(axis:BXL.Y_AXIS)&#xd;&#xa;                &#xd;&#xa;        guiPGNSource = buttonGroup();&#xd;&#xa;        panel(alignmentX:0f) {&#xd;&#xa;            flowLayout(alignment:FL.LEFT)&#xd;&#xa;            guiPGNClipboardRB = radioButton(preferredSize: [150, 20], text:&quot;PGN from ClipBoard&quot;, buttonGroup:guiPGNSource, selected:true, mouseClicked: {switchPGNinput()});&#xd;&#xa;            scrollPane(horizontalScrollBarPolicy:JScrollPane.HORIZONTAL_SCROLLBAR_NEVER, verticalScrollBarPolicy:JScrollPane.VERTICAL_SCROLLBAR_ALWAYS) {&#xd;&#xa;                guiPGNClipboard = textArea( id:&apos;guiPGNClip&apos;, columns: 60, rows: 6, font: new Font(&quot;Consolas&quot;, Font.PLAIN, 11), text: getClipboardContents(), wrapStyleWord:true, lineWrap:true)&#xd;&#xa;            }&#xd;&#xa;        }  &#x9;&#xd;&#xa;        panel(alignmentX:0f) {&#xd;&#xa;            flowLayout(alignment:FL.LEFT)            &#xd;&#xa;            guiPGNFolderRB = radioButton(preferredSize: [150, 20], text:&quot;PGN from folder&quot;, buttonGroup:guiPGNSource, mouseClicked: {switchPGNinput()});&#xd;&#xa;            guiPGNFolder = textField(columns:60, font: new Font(&quot;Consolas&quot;, Font.PLAIN, 11), mouseClicked: { guiPGNFolder.text = showPGNFileChooser() }, editable: guiPGNFolderRB.selected)    &#xd;&#xa;            &#xd;&#xa;        }&#xd;&#xa;        panel(alignmentX:0f) {&#xd;&#xa;            flowLayout(alignment:FL.LEFT)&#xd;&#xa;            label(&apos;Language&apos;, preferredSize: [60, 24])&#xd;&#xa;&#x9;&#x9;&#x9;comboBox(id: &apos;guiLanguage&apos;, preferredSize: [100, 24], editable:true,&#xd;&#xa;&#x9;&#x9;&#x9;&#x9;items:SUPPORTED_LANGUAGES.collect{it.value}, selectedItem:SUPPORTED_LANGUAGES[LANGUAGE_CURRENT]) &#xd;&#xa;        }         &#xd;&#xa;        panel(alignmentX:0f) {&#xd;&#xa;            flowLayout(alignment:FL.LEFT)&#xd;&#xa;            button(&apos;Paste&apos;, preferredSize:[110, 24],&#xd;&#xa;                   actionPerformed:{&#xd;&#xa;                       vars.dialogResult = &apos;paste&apos;&#xd;&#xa;                       dispose()&#xd;&#xa;            })&#xd;&#xa;            button(&apos;Cancel&apos;, preferredSize:[120, 24],&#xd;&#xa;                   actionPerformed:{&#xd;&#xa;                       vars.dialogResult = &apos;cancel&apos;&#xd;&#xa;                       dispose()&#xd;&#xa;            })&#xd;&#xa;        }&#xd;&#xa;        panel(alignmentX:0f) {&#xd;&#xa;        }&#xd;&#xa;    }&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;/* Handle received data */&#xd;&#xa;pgn = &quot;&quot;&#xd;&#xa;if (vars.dialogResult == &apos;paste&apos;) {&#xd;&#xa;&#x9;/* Update attributes */&#xd;&#xa;    PGN_LANGUAGE = SUPPORTED_LANGUAGES.find{it.value == vars.guiLanguage.getSelectedItem()}.key&#xd;&#xa;    switch (guiPGNSource.getSelection()) {&#xd;&#xa;        case (guiPGNClipboardRB.model):&#xd;&#xa;            pgn = guiPGNClipboard.text&#xd;&#xa;            break;&#xd;&#xa;        case (guiPGNFolderRB.model):&#xd;&#xa;            dir = new File(guiPGNFolder.text)&#xd;&#xa;            if (dir.path != &quot;&quot;) {&#xd;&#xa;                dir.eachDirRecurse() { dir -&gt;  &#xd;&#xa;                    dir.eachFileMatch(~/.*.pgn/) { file -&gt;  &#xd;&#xa;                        pgn += new File(file.getPath()).text&#xd;&#xa;                    }  &#xd;&#xa;                }  &#xd;&#xa;            } // else no folder selected&#xd;&#xa;            &#xd;&#xa;            break;&#xd;&#xa;        default: break;&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;&#xd;&#xa;} else {&#xd;&#xa;    return;&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;/* Initialization */&#xd;&#xa;def translationNeeded = (PGN_LANGUAGE != LANGUAGE_CURRENT)&#xd;&#xa;def nextNodeStack = []&#xd;&#xa;def nextNodeStackAlt = []&#xd;&#xa;def pgnNotation = new Notation(pgn, PGN_LANGUAGE)&#xd;&#xa;def nodeNotation = new Notation(this.node.getDisplayedText(), LANGUAGE_CURRENT) // FEN is retrieved from PGN notation, not needed for nodeNotation&#xd;&#xa;&#xd;&#xa;/* Determine starting node */&#xd;&#xa;// Search for starting node with ancestors first order &#xd;&#xa;def currentNode = this.node&#xd;&#xa;while (pgnNotation.getFEN() != getNodeFEN(currentNode)) {&#xd;&#xa;    currentNode = currentNode.parent&#xd;&#xa;    if (currentNode == null) {&#xd;&#xa;        break;&#xd;&#xa;    }&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;if (currentNode == null) {&#xd;&#xa;    currentNode = this.node.createChild(&quot;Starting position&quot;) // no matching node found&#xd;&#xa;    currentNode.style.setName(&quot;Starting position&quot;)&#xd;&#xa;    currentNode[&quot;FEN&quot;] = pgnNotation.position.FEN&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;/* Walk through PGN */&#xd;&#xa;&#xd;&#xa;while (pgn.length() &gt; 0) {&#xd;&#xa;    if (pgnNotation.getMove() == &quot;&quot;) break;&#xd;&#xa;    &#xd;&#xa;    /* Parse ChessTree specific comment parts: Odds, Freq, Opening */&#xd;&#xa;    comments = pgnNotation.getComment()&#xd;&#xa;    odds = opening = freq = &quot;&quot;&#xd;&#xa;    &#xd;&#xa;    &#xd;&#xa;    odds = (comments =~ /(?i)\s*odds\s*:\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*;/)&#xd;&#xa;    if (odds.count&gt;0) {&#xd;&#xa;        comments = comments.replace(odds[0][0], &quot;&quot;)&#xd;&#xa;        odds = &quot;${odds[0][1]},${odds[0][2]},${odds[0][3]}&quot;&#xd;&#xa;    } else {&#xd;&#xa;        odds = &quot;&quot;&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;    freq = (comments =~ /(?i)\s*freq\s*:\s*(\d+)\s*;/)&#xd;&#xa;    if (freq.count&gt;0) {&#xd;&#xa;        comments = comments.replace(freq[0][0], &quot;&quot;)&#xd;&#xa;        freq = &quot;${freq[0][1]}&quot;&#xd;&#xa;    } else {&#xd;&#xa;        freq = &quot;&quot;&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;    opening = (comments =~ /(?i)\s*opening\s*:\s*([^;]+)\s*;/)&#xd;&#xa;    if (opening.count&gt;0) {&#xd;&#xa;        comments = comments.replace(opening[0][0], &quot;&quot;)&#xd;&#xa;        opening = &quot;${opening[0][1]}&quot;&#xd;&#xa;    } else {&#xd;&#xa;        opening = &quot;&quot;&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;    nag = pgnNotation.getNAGtext()&#xd;&#xa;    &#xd;&#xa;    //println pgnNotation.getMoveNumber() + &quot; _ &quot; + pgnNotation.getMove() + &quot; _ &quot; + pgnNotation.getComment()&#xd;&#xa;    //println &quot;      &quot; + odds + &quot; _ &quot; + freq + &quot; _ &quot; + opening&#xd;&#xa;    println &quot;*********************&quot;&#xd;&#xa;    println pgnNotation.getNumbering() + &quot; &quot; + pgnNotation.getMove()&#xd;&#xa;&#xd;&#xa;    //println pgnNotation.getRemainingText()&#xd;&#xa;    //println pgnNotation.branchingStarts() + &quot; / &quot; + pgnNotation.branchingEnds()&#xd;&#xa;&#xd;&#xa;    /* Handle translated notation within chesstree */&#xd;&#xa;    if (translationNeeded) {&#xd;&#xa;        pgnNotation.translateTo(LANGUAGE_CURRENT)&#xd;&#xa;        pgnNotation.setLanguage(PGN_LANGUAGE) // language is needed to set back as remainingText is not translated.&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;    /* Process branching */&#xd;&#xa;    def numOfUnusedBranches = pgnNotation.branchingEnds()-pgnNotation.branchingStarts()&#xd;&#xa;    if (numOfUnusedBranches&gt;0) { // Branch ends&#xd;&#xa;        numOfUnusedBranches.times({&#xd;&#xa;            currentNode=nextNodeStack.pop()&#xd;&#xa;            nextNodeStackAlt.pop()&#xd;&#xa;        })&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;    if (pgnNotation.branchingStarts()) { // Branch starts : at least one move is assumed after one &quot;(&quot;, no consecutive &quot;(&quot;-s!&#xd;&#xa;        if (pgnNotation.branchingEnds())&#xd;&#xa;        {&#xd;&#xa;            currentNode = nextNodeStackAlt[0]&#xd;&#xa;        } else {&#xd;&#xa;            nextNodeStackAlt.push(currentNode.parent)&#xd;&#xa;            nextNodeStack.push(currentNode)&#xd;&#xa;            currentNode = currentNode.parent&#xd;&#xa;        }&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;    /* Search for child node matching moveEng, FEN match is assumed */&#xd;&#xa;    matchingChild = currentNode.children.find {&#xd;&#xa;        nodeNotation.set(it.getDisplayedText()) // FEN is retrieved from PGN notation, not needed for nodeNotation&#xd;&#xa;        if (pgnNotation.getMoveEng() == nodeNotation.getMoveEng()) {&#xd;&#xa;            return true // found&#xd;&#xa;        } else {&#xd;&#xa;            return false // not found&#xd;&#xa;        }&#xd;&#xa;        &#xd;&#xa;    }&#xd;&#xa;&#xd;&#xa;    /* Process pgnNotation : node text */&#xd;&#xa;    if (matchingChild == null) {&#xd;&#xa;        // no mathing child found, create it&#xd;&#xa;        currentNode = currentNode.createChild()&#xd;&#xa;        currentNode.text = pgnNotation.getMove()&#xd;&#xa;    } else {&#xd;&#xa;        currentNode = matchingChild // matching child found, advance map processing&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;    /* Process pgnNotation : node[&quot;FEN&quot;] */&#xd;&#xa;    /* Update FEN from pgn even if matching child was found and its FEN was correct. &#xd;&#xa;    FEN counters, enpassant, castling infos are guaranteed by starting position search at script startup. */&#xd;&#xa;    currentNode[&quot;FEN&quot;] = pgnNotation.positionAfterMove.FEN    &#xd;&#xa;&#xd;&#xa;    /* Process pgnNotation : opening */&#xd;&#xa;    if (opening != &quot;&quot;) {&#xd;&#xa;        currentNode[&quot;Opening&quot;] = opening&#xd;&#xa;        if (currentNode.children.findAll{it.style.name==&quot;Opening&quot;}.size() &gt; 0){&#xd;&#xa;            currentNode.children.findAll{it.style.name==&quot;Opening&quot;}[-1].text = opening&#xd;&#xa;        } else {&#xd;&#xa;            opening = currentNode.createChild(opening)&#xd;&#xa;            opening.style.setName(&quot;Opening&quot;)&#xd;&#xa;            opening.setFree(true)&#xd;&#xa;        }&#xd;&#xa;    }&#xd;&#xa;    /* Process pgnNotation : odds */&#xd;&#xa;    if (odds != &quot;&quot;) {&#xd;&#xa;        currentNode[&quot;Odds&quot;] = odds&#xd;&#xa;        //TODO: wait for OddsView class, implement here update oddsNode, &#xd;&#xa;    }&#xd;&#xa;&#xd;&#xa;    /* Process pgnNotation : frequency */&#xd;&#xa;    if (freq != &quot;&quot;) {&#xd;&#xa;        currentNode[&quot;Freq&quot;] = freq&#xd;&#xa;        //TODO: wait for ConnectorView class, implement here update connector&#xd;&#xa;    }&#xd;&#xa;    /* Process pgnNotation : nag */&#xd;&#xa;    if (nag != &quot;&quot;) {&#xd;&#xa;        currentNode[&quot;NAG&quot;] = nag&#xd;&#xa;        pgnNotation.getNAGs().each {&#xd;&#xa;            def nagTxt = NotationTranslator.getNAG((it-&quot;\$&quot;).toInteger(), &quot;sym&quot;)&#xd;&#xa;            if (currentNode.details) {&#xd;&#xa;                currentNode.setDetailsText(&quot;${currentNode.details.to.plain}\n${nagTxt}&quot;)&#xd;&#xa;            } else {&#xd;&#xa;                currentNode.setDetailsText(nagTxt)&#xd;&#xa;            }&#xd;&#xa;        }&#xd;&#xa;    }   &#xd;&#xa;    /* Process pgnNotation : opening */&#xd;&#xa;    if (comments != &quot;&quot;) {&#xd;&#xa;        commentsNode = currentNode.createChild(&quot;&quot;)&#xd;&#xa;        commentsNode.style.setName(&quot;Explanation&quot;)&#xd;&#xa;        commentsNode.setFree(true)&#xd;&#xa;        commentsNode.setDetailsText(comments)&#xd;&#xa;        commentsNode.setHorizontalShift(70)&#xd;&#xa;        commentsNode.setVerticalShift(10)&#xd;&#xa;    }&#xd;&#xa;   &#xd;&#xa;    /* Advance pgnNotation processing */&#xd;&#xa;    pgn = pgnNotation.getRemainingText()&#xd;&#xa;    pgnNotation.set(pgn)&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;return 0" ID="ID_72580163" CREATED="1578240963515" MODIFIED="1578240963519"/>
</node>
<node TEXT="updateChessTree.groovy" FOLDED="true" ID="ID_728751355" CREATED="1538315999856" MODIFIED="1578047832451">
<attribute_layout VALUE_WIDTH="134.9999959766866 pt"/>
<attribute NAME="menuTitleKey" VALUE="addons.${name}.updateChessTree"/>
<attribute NAME="menuLocation" VALUE="/menu_bar/addons.${name}"/>
<attribute NAME="executionMode" VALUE="on_single_node"/>
<attribute NAME="keyboardShortcut" VALUE=""/>
<attribute NAME="execute_scripts_without_asking" VALUE="true"/>
<attribute NAME="execute_scripts_without_file_restriction" VALUE="true"/>
<attribute NAME="execute_scripts_without_write_restriction" VALUE="true"/>
<attribute NAME="execute_scripts_without_exec_restriction" VALUE="true"/>
<attribute NAME="execute_scripts_without_network_restriction" VALUE="true"/>
<node TEXT="import org.freeplane.features.map.MapModel;&#xd;&#xa;import org.freeplane.features.attribute.AttributeRegistry;&#xd;&#xa;import org.freeplane.features.attribute.AttributeRegistryElement;&#xd;&#xa;&#xd;&#xa;import org.freeplane.plugin.script.proxy.ScriptUtils&#xd;&#xa;import groovy.swing.SwingBuilder&#xd;&#xa;import java.awt.FlowLayout as FL&#xd;&#xa;import java.awt.event.ActionEvent;&#xd;&#xa;import java.awt.event.ActionListener;&#xd;&#xa;import java.awt.Dimension;&#xd;&#xa;import java.awt.KeyStroke;&#xd;&#xa;import java.awt.event.KeyEvent;&#xd;&#xa;import java.awt.event.KeyAdapter;&#xd;&#xa;import java.awt.Action;&#xd;&#xa;&#xd;&#xa;import javax.swing.BoxLayout as BXL&#xd;&#xa;import javax.swing.JFrame&#xd;&#xa;import javax.swing.AbstractAction;&#xd;&#xa;import javax.swing.Action;&#xd;&#xa;import javax.swing.BoxLayout;&#xd;&#xa;import javax.swing.JComponent;&#xd;&#xa;import javax.swing.JList;&#xd;&#xa;import javax.swing.JPanel;&#xd;&#xa;import javax.swing.KeyStroke;&#xd;&#xa;import groovy.transform.Field&#xd;&#xa;&#xd;&#xa;import ChessTree.Notation&#xd;&#xa;import ChessTree.NotationTranslator&#xd;&#xa;import ChessTree.ChessTreeSettings&#xd;&#xa;import ChessTree.OddsView&#xd;&#xa;import ChessTree.ConnectorView&#xd;&#xa;import ChessTree.PositionInterpreter&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;/*************/&#xd;&#xa;/** Globals **/&#xd;&#xa;/*************/&#xd;&#xa;cts = new ChessTreeSettings(this.node.map)&#xd;&#xa;&#xd;&#xa;DICTIONARY = cts.DICTIONARY&#xd;&#xa;&#xd;&#xa;ROOT = this.node.map.root&#xd;&#xa;LANGUAGE_CURRENT = cts.get(&quot;chesstree_language&quot;)&#xd;&#xa;NUMBERING_CURRENT = cts.get(&quot;chesstree_numbering&quot;)&#xd;&#xa;NAG_CURRENT = cts.get(&quot;chesstree_NAG&quot;)&#xd;&#xa;CONNECTOR_CURRENT = cts.get(&quot;chesstree_connectors&quot;)&#xd;&#xa;ODDS_CURRENT = cts.get(&quot;chesstree_odds&quot;)&#xd;&#xa;&#xd;&#xa;/* Globals for odds image updater */ &#xd;&#xa;mapfile=this.node.map.file&#xd;&#xa;mapfilePath = mapfile.parent.replace(&quot;\\&quot;, &quot;/&quot;)&#xd;&#xa;mapfileName = mapfile.name.lastIndexOf(&apos;.&apos;).with {it != -1 ? mapfile.name[0..&lt;it] : mapfile.name}&#xd;&#xa;imgAbsPath = mapfilePath + &quot;/img_&quot; + mapfileName&#xd;&#xa;imgRelPath = &quot;./img_&quot; + mapfileName&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;/*****************/&#xd;&#xa;/**** Settings ***/ &#xd;&#xa;/*****************/&#xd;&#xa;&#xd;&#xa;/* Build Dialog window */&#xd;&#xa;def s = new SwingBuilder()&#xd;&#xa;s.setVariable(&apos;myDialog-properties&apos;,[:])&#xd;&#xa;def vars = s.variables&#xd;&#xa;def disableItem(item) {item.enabled = !item.enabled}&#xd;&#xa;def dial = s.dialog(title:&quot;ChessTree settings...&quot;, id:&apos;myDialog&apos;, modal:true, &#xd;&#xa;            locationRelativeTo:ui.frame, owner:ui.frame, defaultCloseOperation:JFrame.DISPOSE_ON_CLOSE, &#xd;&#xa;            preferredSize: [280, 300], pack:true, show:true) {&#xd;&#xa;    panel(id:&apos;pMain&apos;) {&#xd;&#xa;        boxLayout(axis:BXL.Y_AXIS)&#xd;&#xa;        /* &#xd;&#xa;        Text: Current language is ___. Check tooltip if you don&apos;t agree. &#xd;&#xa;        Tooltip: If the language of notation in the mindmap is inconsistent you should edit the mindmap manually to make its language consistent. &#xd;&#xa;        Otherwise change below settings and click on &quot;Save&quot;. It affects settings saved in Mindmap properties, Mindmap content will not change. &#xd;&#xa;        */&#xd;&#xa;        panel(alignmentX:0f) {&#xd;&#xa;            flowLayout(alignment:FL.LEFT)&#xd;&#xa;            label(&apos;Language&apos;, preferredSize: [120, 24], mouseClicked:{disableItem(guiCategory)})&#xd;&#xa;&#x9;&#x9;&#x9;comboBox(id: &apos;chesstree_language&apos;, preferredSize: [100, 24], editable:true,&#xd;&#xa;&#x9;&#x9;&#x9;&#x9;items:cts.SUPPORTED_LANGUAGES.collect{it.value}, selectedItem:cts.SUPPORTED_LANGUAGES[LANGUAGE_CURRENT]) &#xd;&#xa;        }  &#x9;&#x9;&#xd;&#xa;        panel(alignmentX:0f) {&#xd;&#xa;            flowLayout(alignment:FL.LEFT)&#xd;&#xa;            label(&apos;Numbering&apos;, preferredSize: [120, 24], mouseClicked:{disableItem(guiCategory)})&#xd;&#xa;&#x9;&#x9;&#x9;comboBox(id: &apos;chesstree_numbering&apos;, preferredSize: [100, 24], editable:true,&#xd;&#xa;&#x9;&#x9;&#x9;&#x9;items:cts.SUPPORTED_NUMBERING.collect{it.value}, selectedItem:cts.SUPPORTED_NUMBERING[NUMBERING_CURRENT]) &#xd;&#xa;        }  &#x9;&#x9;&#xd;&#xa;        panel(alignmentX:0f) {&#xd;&#xa;            flowLayout(alignment:FL.LEFT)&#xd;&#xa;            label(&apos;NAG&apos;, preferredSize: [120, 24], mouseClicked:{disableItem(guiCategory)})&#xd;&#xa;&#x9;&#x9;&#x9;comboBox(id: &apos;chesstree_NAG&apos;, preferredSize: [100, 24], editable:true,&#xd;&#xa;&#x9;&#x9;&#x9;&#x9;items:cts.SUPPORTED_NAG.collect{it.value}, selectedItem:cts.SUPPORTED_NAG[NAG_CURRENT]) &#xd;&#xa;        }  &#x9;&#x9;&#x9;&#xd;&#xa;        panel(alignmentX:0f) {&#xd;&#xa;            flowLayout(alignment:FL.LEFT)&#xd;&#xa;            label(&apos;Connectors&apos;, preferredSize: [120, 24], mouseClicked:{disableItem(guiCategory)})&#xd;&#xa;&#x9;&#x9;&#x9;comboBox(id: &apos;chesstree_connectors&apos;, preferredSize: [100, 24], editable:true,&#xd;&#xa;&#x9;&#x9;&#x9;&#x9;items:cts.SUPPORTED_CONNECTOR.collect{it.value}, selectedItem:cts.SUPPORTED_CONNECTOR[CONNECTOR_CURRENT]) &#xd;&#xa;        }  &#x9;&#x9;&#xd;&#xa;        panel(alignmentX:0f) {&#xd;&#xa;            flowLayout(alignment:FL.LEFT)&#xd;&#xa;            label(&apos;Odds&apos;, preferredSize: [120, 24], mouseClicked:{disableItem(guiCategory)})&#xd;&#xa;&#x9;&#x9;&#x9;comboBox(id: &apos;chesstree_odds&apos;, preferredSize: [100, 24], editable:true,&#xd;&#xa;&#x9;&#x9;&#x9;&#x9;items:cts.SUPPORTED_ODDS.collect{it.value}, selectedItem:cts.SUPPORTED_ODDS[ODDS_CURRENT]) &#xd;&#xa;        }  &#x9;&#x9;&#xd;&#xa;        panel(alignmentX:0f) {&#xd;&#xa;            flowLayout(alignment:FL.LEFT)&#xd;&#xa;            button(&apos;Save &amp; Apply&apos;, preferredSize:[120, 24],&#xd;&#xa;                   actionPerformed:{&#xd;&#xa;                       vars.dialogResult = &apos;save&amp;apply&apos;&#xd;&#xa;                       dispose()&#xd;&#xa;            })&#xd;&#xa;            button(&apos;Save&apos;, preferredSize:[120, 24],&#xd;&#xa;                   actionPerformed:{&#xd;&#xa;                       vars.dialogResult = &apos;save&apos;&#xd;&#xa;                       dispose()&#xd;&#xa;            })&#xd;&#xa;        }&#xd;&#xa;        panel(alignmentX:0f) {&#xd;&#xa;            button(&apos;Cancel&apos;, preferredSize:[120, 24],&#xd;&#xa;                   actionPerformed:{&#xd;&#xa;                       vars.dialogResult = &apos;cancel&apos;&#xd;&#xa;                       dispose()&#xd;&#xa;            })&#xd;&#xa;        }&#xd;&#xa;    }&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;/*************/&#xd;&#xa;/**** Main ***/ &#xd;&#xa;/*************/&#xd;&#xa;logger.createLogger() &#xd;&#xa;&#xd;&#xa;&#xd;&#xa;if (vars.dialogResult == &apos;save&amp;apply&apos;) {&#xd;&#xa;    /* Handle received data */&#xd;&#xa;&#xd;&#xa;    def language_next = cts.SUPPORTED_LANGUAGES.find{it.value == vars[&quot;chesstree_language&quot;].getSelectedItem()}.key&#xd;&#xa;    def numbering_next = cts.SUPPORTED_NUMBERING.find{it.value == vars[&quot;chesstree_numbering&quot;].getSelectedItem()}.key&#xd;&#xa;    def NAG_next = cts.SUPPORTED_NAG.find{it.value == vars[&quot;chesstree_NAG&quot;].getSelectedItem()}.key&#xd;&#xa;    def connector_next = cts.SUPPORTED_CONNECTOR.find{it.value == vars[&quot;chesstree_connectors&quot;].getSelectedItem()}.key&#xd;&#xa;    def odds_next = cts.SUPPORTED_ODDS.find{it.value == vars[&quot;chesstree_odds&quot;].getSelectedItem()}.key&#xd;&#xa;&#xd;&#xa;    if ((LANGUAGE_CURRENT != language_next) || (NUMBERING_CURRENT != numbering_next)) {&#xd;&#xa;        // notation text modification is needed&#xd;&#xa;        updateNotation(language_next, numbering_next)&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;    if (NAG_CURRENT != NAG_next) {&#xd;&#xa;        // TODO: updateDetails(hide/show)...&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;    if (ODDS_CURRENT != odds_next) {&#xd;&#xa;        oddsView = new OddsView(this.node.map)&#xd;&#xa;        oddsView.updateCharts(odds_next==&quot;show&quot;)&#xd;&#xa;    }&#xd;&#xa;    if (CONNECTOR_CURRENT != connector_next) {&#xd;&#xa;        connectorView = new ConnectorView(this.node.map)&#xd;&#xa;        connectorView.updateConnectors(connector_next==&quot;freq&quot;)&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;    &#xd;&#xa;    /* Update properties */&#xd;&#xa;    saveSettings(vars)&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;if (vars.dialogResult == &apos;save&apos;) {&#xd;&#xa;    saveSettings(vars)&#xd;&#xa;}&#xd;&#xa;return 0&#xd;&#xa;&#xd;&#xa;/*************/&#xd;&#xa;/* Functions */&#xd;&#xa;/*************/&#xd;&#xa;def saveSettings(vars) {&#xd;&#xa;    cts.getSupportedProperties().each{&#xd;&#xa;        def value = &quot;&quot;&#xd;&#xa;        value = vars[it].getSelectedItem()&#xd;&#xa;        cts.setByValue(it, value)&#xd;&#xa;    }&#xd;&#xa;    this.node.map.save(true) // true: allow interaction&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;def updateNotation(language_next, numbering_next) {&#xd;&#xa;    def notation = new Notation(&quot;&quot;, LANGUAGE_CURRENT)&#xd;&#xa;    /* Translate each node */&#xd;&#xa;    c.findAll{it.hasStyle(&quot;White moves&quot;) || it.hasStyle(&quot;Black moves&quot;)}.each {aNode-&gt;&#xd;&#xa;        /* Breadth first order guarantees existence FEN tag of parent */&#xd;&#xa;        def fen = PositionInterpreter.FEN_DEFAULT&#xd;&#xa;        &#xd;&#xa;        if (aNode.parent != null ) {&#xd;&#xa;            if (!aNode.parent.attributes.getNames().contains(&quot;FEN&quot;)) {&#xd;&#xa;                aNode.parent[&quot;FEN&quot;] = PositionInterpreter.FEN_STARTING&#xd;&#xa;            } &#xd;&#xa;            fen = aNode.parent[&quot;FEN&quot;]&#xd;&#xa;        }&#xd;&#xa;                &#xd;&#xa;        def text = aNode.getDisplayedText()&#xd;&#xa;        if ((text != null) &amp;&amp; (text != &quot;&quot;)) {&#xd;&#xa;            notation.position.set(fen)&#xd;&#xa;            notation.set(text)&#xd;&#xa;        }&#xd;&#xa;        text = &quot;&lt;html&gt;&lt;body&gt;&quot;&#xd;&#xa;        if (NUMBERING_CURRENT != numbering_next) {&#xd;&#xa;            if ((numbering_next == &quot;white&quot;) &amp;&amp; aNode.hasStyle(&quot;White moves&quot;)) {&#xd;&#xa;                text += &quot;&quot;&quot;&lt;p&gt;&lt;font size=&quot;1&quot;&gt;${notation.getNumbering()}&lt;/font&gt;&lt;/p&gt;&quot;&quot;&quot;&#xd;&#xa;            } else if (numbering_next == &quot;both&quot;) {&#xd;&#xa;                text += &quot;&quot;&quot;&lt;p&gt;&lt;font size=&quot;1&quot;&gt;${notation.getNumbering()}&lt;/font&gt;&lt;/p&gt;&quot;&quot;&quot;&#xd;&#xa;            } else { // &quot;Black moves&quot; and &quot;white&quot;, or &quot;none&quot;&#xd;&#xa;                // nothing to do &#xd;&#xa;            }&#xd;&#xa;        }&#xd;&#xa;        if (LANGUAGE_CURRENT != language_next) {&#xd;&#xa;            notation.translateTo(language_next)&#xd;&#xa;        }&#xd;&#xa;        text += &quot;&quot;&quot;&lt;p&gt;${notation.getMove()}&lt;/p&gt;&quot;&quot;&quot;&#xd;&#xa;        text += &quot;&lt;/body&gt;&lt;/html&gt;&quot;&#xd;&#xa;        &#xd;&#xa;        aNode.setText(text)&#xd;&#xa;        aNode[&quot;FEN&quot;] = notation.positionAfterMove&#xd;&#xa;    }&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;" ID="ID_1608050213" CREATED="1578240963520" MODIFIED="1578240963521"/>
</node>
<node TEXT="copyPGN.groovy" FOLDED="true" ID="ID_520278260" CREATED="1578047737614" MODIFIED="1578047866316">
<attribute_layout VALUE_WIDTH="250.0 pt"/>
<attribute NAME="menuTitleKey" VALUE="addons.${name}.copyPGN"/>
<attribute NAME="menuLocation" VALUE="/menu_bar/addons.${name}"/>
<attribute NAME="executionMode" VALUE="on_single_node"/>
<attribute NAME="keyboardShortcut" VALUE=""/>
<attribute NAME="execute_scripts_without_asking" VALUE="true"/>
<attribute NAME="execute_scripts_without_file_restriction" VALUE="true"/>
<attribute NAME="execute_scripts_without_write_restriction" VALUE="true"/>
<attribute NAME="execute_scripts_without_exec_restriction" VALUE="true"/>
<attribute NAME="execute_scripts_without_network_restriction" VALUE="true"/>
<node TEXT="import java.awt.Toolkit&#xd;&#xa;import java.awt.datatransfer.Clipboard&#xd;&#xa;import java.awt.datatransfer.DataFlavor&#xd;&#xa;import java.awt.datatransfer.StringSelection&#xd;&#xa;import ChessTree.Notation&#xd;&#xa;import ChessTree.PositionInterpreter&#xd;&#xa;import ChessTree.ChessTreeSettings&#xd;&#xa;&#xd;&#xa;/*************/&#xd;&#xa;/** Globals **/&#xd;&#xa;/*************/&#xd;&#xa;chessTreeSettings = new ChessTreeSettings(this.node.map)&#xd;&#xa;LANGUAGE_CURRENT = chessTreeSettings.get(&quot;chesstree_language&quot;).toString()&#xd;&#xa;&#xd;&#xa;static void setClipboardContents(final String contents){    Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(contents), null)    }&#xd;&#xa;&#xd;&#xa;PGN = &quot;&quot;&#xd;&#xa;&#xd;&#xa;currentNotation = new Notation(&quot;&quot;, LANGUAGE_CURRENT)&#xd;&#xa;currentNode=this.node&#xd;&#xa;currentNode=currentNode.findAllDepthFirst().find{it.attributes.containsKey(&quot;FEN&quot;) &amp;&amp; it.hasStyle(&quot;Starting position&quot;)}&#xd;&#xa;def walkThrough(aNode, isNumberingNeeded) {&#xd;&#xa;    def children = aNode.children.findAll{it.attributes.containsKey(&quot;FEN&quot;) &amp;&amp; (it.hasStyle(&quot;White moves&quot;)||it.hasStyle(&quot;Black moves&quot;))}&#xd;&#xa;    def numberingNeeded = isNumberingNeeded&#xd;&#xa;    if (children.size()&gt;1) {&#xd;&#xa;        currentNotation.setWithFEN(children[0].parent[&quot;FEN&quot;].toString(), children[0].text)&#xd;&#xa;        numberingNeeded |= (currentNotation.getColor() == &quot;white&quot;)&#xd;&#xa;        PGN += (numberingNeeded?(currentNotation.getNumbering() + &quot; &quot;):&quot;&quot;) + children[0].text + &quot; &quot;&#xd;&#xa;        (children-children[0]).each {&#xd;&#xa;            currentNotation.setWithFEN(it.parent[&quot;FEN&quot;].toString(), it.text)&#xd;&#xa;            PGN += &quot;(&quot; + currentNotation.getNumbering() + &quot; &quot; + it.text + &quot; &quot;&#xd;&#xa;            walkThrough(it, false)&#xd;&#xa;        }&#xd;&#xa;        walkThrough(children[0], true)&#xd;&#xa;    } else if (children.size==1) {&#xd;&#xa;        currentNotation.setWithFEN(children[0].parent[&quot;FEN&quot;].toString(), children[0].text)&#xd;&#xa;        numberingNeeded |= (currentNotation.getColor() == &quot;white&quot;)&#xd;&#xa;        PGN += (numberingNeeded?(currentNotation.getNumbering() + &quot; &quot;):&quot;&quot;) + children[0].text + &quot; &quot;&#xd;&#xa;        walkThrough(children[0], false)&#xd;&#xa;    } else {&#xd;&#xa;        PGN = PGN[0..-2]&#xd;&#xa;        PGN += &quot;) &quot;&#xd;&#xa;    }&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;walkThrough(currentNode, true)&#xd;&#xa;PGN = PGN[0..-3] // last &quot;)&quot; is removed&#xd;&#xa;println PGN&#xd;&#xa;setClipboardContents(PGN)" ID="ID_781200636" CREATED="1578240963522" MODIFIED="1578240963523"/>
</node>
<node TEXT="compareTrees.groovy" FOLDED="true" ID="ID_627302378" CREATED="1578239373684" MODIFIED="1578239373712">
<attribute_layout VALUE_WIDTH="250.0 pt"/>
<attribute NAME="menuTitleKey" VALUE="addons.${name}.compareTrees"/>
<attribute NAME="menuLocation" VALUE="main_menu_scripting/addons.${name}"/>
<attribute NAME="executionMode" VALUE="on_single_node"/>
<attribute NAME="keyboardShortcut" VALUE=""/>
<attribute NAME="execute_scripts_without_asking" VALUE="true"/>
<attribute NAME="execute_scripts_without_file_restriction" VALUE="true"/>
<attribute NAME="execute_scripts_without_write_restriction" VALUE="false"/>
<attribute NAME="execute_scripts_without_exec_restriction" VALUE="false"/>
<attribute NAME="execute_scripts_without_network_restriction" VALUE="false"/>
<node TEXT="if (c.getSelecteds().size()!=2) {&#xd;&#xa;    ui.showMessage(&quot;Select exactly 2 nodes with style \&quot;Starting position\&quot;.&quot;, 0)&#xd;&#xa;    return 1&#xd;&#xa;} else {&#xd;&#xa;    if (!c.getSelecteds().every{it.hasStyle(&quot;Starting position&quot;)}) {&#xd;&#xa;        ui.showMessage(&quot;Select exactly 2 nodes with style \&quot;Starting position\&quot;.&quot;, 0)&#xd;&#xa;        return 2&#xd;&#xa;    }&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;original = c.getSelecteds()[0]&#xd;&#xa;modified = c.getSelecteds()[1]&#xd;&#xa;merged = original.parent.createChild(&quot;Merge&quot;)&#xd;&#xa;merged.style.setName(&quot;Starting position&quot;)&#xd;&#xa;merged[&quot;FEN&quot;] = original[&quot;FEN&quot;] // TODO compare FENs!&#xd;&#xa;// TODO add position comparison, in case of a position match add connector&#xd;&#xa;merged[&quot;Status&quot;] = &quot;&quot;&quot;= def icons = this.node.findAllDepthFirst().findAll{it.hasStyle(&quot;Diff.Added&quot;)||it.hasStyle(&quot;Diff.Priority&quot;)||it.hasStyle(&quot;Diff.Removed&quot;)}.collect{it.style.getStyleNode().icons.first}.unique()&#xd;&#xa;this.node.icons.clear()&#xd;&#xa;this.node.icons.addAll(icons)&#xd;&#xa;return this.node.icons.getIcons().size()?&quot;In progress&quot;:&quot;Completed.&quot;&#xd;&#xa;&quot;&quot;&quot;&#xd;&#xa;merged[&quot;script.ChessTree&quot;] = &quot;&quot;&quot;&#xd;&#xa;mergeFlags = this.node.findAllDepthFirst().findAll{it.hasStyle(&quot;Diff.Added&quot;)||it.hasStyle(&quot;Diff.Priority&quot;)||it.hasStyle(&quot;Diff.Removed&quot;)}.each{&#xd;&#xa;    it.delete()&#xd;&#xa;}&#xd;&#xa;return 0&#xd;&#xa;&quot;&quot;&quot;&#xd;&#xa;merged.link.text=&quot;menuitem:_\$ExecuteScriptForSelectionAction\$0&quot;&#xd;&#xa;&#xd;&#xa;def walkThrough(orig, modd, merg) {&#xd;&#xa;    def origChildrenTxt = orig.children.collect{it.text}&#xd;&#xa;    def moddChildrenTxt = modd.children.collect{it.text}&#xd;&#xa;    def removedChildrenTxt = origChildrenTxt-moddChildrenTxt&#xd;&#xa;    def addedChildrenTxt = moddChildrenTxt-origChildrenTxt&#xd;&#xa;    def commonChildrenTxt = origChildrenTxt.intersect(moddChildrenTxt)&#xd;&#xa;    /* Check branch priority */&#xd;&#xa;    // index distance of common items are the same&#xd;&#xa;    if (commonChildrenTxt.collect{origChildrenTxt.indexOf(it)-moddChildrenTxt.indexOf(it)}.unique().size()&gt;1) {&#xd;&#xa;        def info=merg.createChild(&quot;&quot;)&#xd;&#xa;        info.style.setName(&quot;Diff.Priority&quot;)&#xd;&#xa;        info.setFree(true)&#xd;&#xa;        info.setVerticalShift(-30)&#xd;&#xa;    }&#xd;&#xa;    /* DEBUG */&#xd;&#xa;    //println &quot;${orig}&quot;&#xd;&#xa;    //println &quot;   Added: ${addedChildrenTxt}&quot;&#xd;&#xa;    //println &quot;   Removed: ${removedChildrenTxt}&quot;&#xd;&#xa;    //println &quot;   Common: ${commonChildrenTxt}&quot;&#xd;&#xa;    &#xd;&#xa;    /* Check added */&#xd;&#xa;    addedChildrenTxt.collect{txt-&gt;modd.children.findAll{txt==it.text}}.each{ &#xd;&#xa;        def info = merg.appendBranch(it)&#xd;&#xa;        info = info.createChild(&quot;&quot;)&#xd;&#xa;        info.style.setName(&quot;Diff.Added&quot;)&#xd;&#xa;        info.setFree(true)&#xd;&#xa;        info.setVerticalShift(-30)&#xd;&#xa;    }&#xd;&#xa;    /* Check removed */&#xd;&#xa;    removedChildrenTxt.collect{txt-&gt;orig.children.findAll{txt==it.text}}.each{ &#xd;&#xa;        def info = merg.appendBranch(it)&#xd;&#xa;        info = info.createChild(&quot;&quot;)&#xd;&#xa;        info.style.setName(&quot;Diff.Removed&quot;)&#xd;&#xa;        info.setFree(true)&#xd;&#xa;        info.setVerticalShift(-30)&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;    /* Unchanged: copy */&#xd;&#xa;    commonChildrenTxt.collect{txt-&gt;&#xd;&#xa;        [orig:orig.children.findAll{txt==it.text}[0],&#xd;&#xa;         modd:modd.children.findAll{txt==it.text}[0]]&#xd;&#xa;    }.each {&#xd;&#xa;        merg = merg.appendChild(it.orig)&#xd;&#xa;        walkThrough(it.orig, it.modd, merg)&#xd;&#xa;    }&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;walkThrough(original, modified, merged)&#xd;&#xa;return 0" ID="ID_1641197603" CREATED="1578240963524" MODIFIED="1578240963524"/>
</node>
</node>
<node TEXT="lib" POSITION="right" ID="ID_328124690" CREATED="1521562135185" MODIFIED="1578240952937">
<edge COLOR="#7c007c"/>
<richcontent TYPE="NOTE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      An add-on may contain any number of nodes containing binary files (normally .jar files) to be added to the add-on's classpath.
    </p>
    <p>
      
    </p>
    <p>
      &#160;- The immediate child nodes contain the name of the file, e.g. 'mysql-connector-java-5.1.25.jar'). Put the file into a 'lib' subdirectory of the add-on base directory.
    </p>
    <p>
      
    </p>
    <p>
      &#160;- The child nodes of these nodes contain the actual files.
    </p>
    <p>
      
    </p>
    <p>
      &#160;- Any lib file will be extracted in &lt;installationbase&gt;/&lt;addonname&gt;/lib.
    </p>
    <p>
      
    </p>
    <p>
      &#160;- The files will be processed in the sequence as seen in the map.
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="zips" POSITION="right" ID="ID_188436602" CREATED="1521562135191" MODIFIED="1578240952939">
<edge COLOR="#007c7c"/>
<richcontent TYPE="NOTE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      An add-on may contain any number of nodes containing zip files.
    </p>
    <p>
      
    </p>
    <p>
      &#160;- The immediate child nodes contain a description of the zip. The devtools script releaseAddOn.groovy allows automatic zip creation if the name of this node matches a directory in the current directory.
    </p>
    <p>
      
    </p>
    <p>
      &#160;- The child nodes of these nodes contain the actual zip files.
    </p>
    <p>
      
    </p>
    <p>
      &#160;- Any zip file will be extracted in the &lt;installationbase&gt;. Currently, &lt;installationbase&gt; is always Freeplane's &lt;userhome&gt;, e.g. ~/.freeplane/1.3.
    </p>
    <p>
      
    </p>
    <p>
      &#160;- The files will be processed in the sequence as seen in the map.
    </p>
  </body>
</html>
</richcontent>
<node TEXT="templates" FOLDED="true" ID="ID_1849114914" CREATED="1521565216661" MODIFIED="1521565216662">
<node TEXT="UEsDBBQACAgIAO6JJVAAAAAAAAAAAAAAAAAfAAAAdGVtcGxhdGVzL3RlbXBsYXRlLkNoZXNzVH&#xa;JlZS5tbe1c+3faRhb+vefs/zClOT12G2D0HKk2yZEBx5xgcAEn7cZeHQEDaAMSkYSxt5v92/eO&#xa;HiD0INgujrcb3Nggzet+97uPuZpyPDPm6IY6rmlblcLIoXQ+NSyKuJJcwoVXf/vu+PtisWejG5&#xa;MukTcxXTQyp/QlGtpLa2obQ8S6oJlpDRGMNDetMXLtkbc0HIpOV6ONHHuGJp43/6VcXs1Rcu2F&#xa;M6Aj2xnTkkU9VCyy+QzPc8z+wqO6Q8em6zl3qHvWfq9rvV6ncXLZq3crBZdO6cCjQ7ZABK9YJ8&#xa;uYUXSutS61ZqXgOQtaQC3tvF4pNA1rvDDGNOqT6HdjTBcUvdOal9CWWuNCeYd2k4W1Uzv3brZT&#xa;O8Bm1e64vCkUw6acBoddtuwhRb36b71KoTqhrtsDiAuo2a5qzcbf6zW92/u9Wdc79dNKQVt49s&#xa;zwzEHTuLMXXmlKb+i05Ni2V0Cn7WatXoNVGFMX+jfgbaOmi4RwEoc5roCqnbrWYy04ied4oigK&#xa;J3C4gM7btcZpI7ghYsILsiqJCnR490a70H+91Fq9Ru/3SkEqYTT3Cq+OJ7b9MVTLuTHvenfTlV&#xa;qOB7Y1ND2gozHVXXbHjQOXuou0aq/xrh7pOiZqd+CYMBtqat1eeDs2UkIN9BbQdPXV8GhFN9Ce&#xa;PxC3qcFyaiUPXOb7iemBBdk31N26Vhjynwtr4K3XmGiRkAiaeYZp5ch0Wm8VItahPgIdar3qmV&#xa;7VuvUVAYJL2sVFp/1bAz7Um79H98pZc/uC6vTTAprEZl3zMKDokI6MxdRLjeFDmi/in4f4ydQY&#xa;fPy6iC//vxD/czke2GNM3oVLHd9HgsNyz2GW5MCJrq8u9Nbl+Um902i9QRVUPrga/nxVOrgqXZ&#xa;UOXx+Wf/zhdnj0t+8u9PP2u7p//+ADbl8X2a8D/ze0+vdB6TVcN4qT6w9cUbl+ffj6Fv6tLxxU&#xa;2GCHH65+vvrh+vV60JYWzHlw9eJq+Af3UvgMY334x9Xy+g/8kv98uJrfsj2DiXcBDKOO5Xd6PX&#xa;MXh/94EVv/6yv3pxfBUoN3MP5qtvCPQ70FDHDA4neJBYvSmHo104UwfEeHPXrrHRyiSuU/KDHl&#xa;4XE5BCxDC+WkGnZR1Rf0Ui433B4s0ueLPockwvLAbkIxzFFchOBupWItptNDFIro28pR2J7Ce8&#xa;Q6fZ/sVVoZrVuKrPYtvTv48dPC9o7YjP6bwy3j/hF+YMsH+0Iz0E9qdR8SA14jADnUYukndPCh&#xa;v7w+RPAOCIgYC+Fq+TA2Mlv9rOSa/6K+hhDeXFGsZWpR0cIW86HhUVgCLDAGxI4IZAw4sKc2mB&#xa;uwBkb80Zjb7tGyH/wtzj5gYP91Ri9m/K3FrE9XXf22/HXJsxuWR8fUAREBhfXwlUo4evDnNfcL&#xa;Tq4n8dFX9krgwxQe7FX+CV04kPVYHmKgBK3R0vQmiM7m3h3yjD74suWEWsj00NJwQWLHgXwT/V&#xa;TOGG8D3zUDMlS/ofsXMRhDArxIYJTgAnt9zhD4C/JuWxEK3inljR/04o/14j6jIvxguJZY3eeg&#xa;7+aMyfWFZA1pAQr1+yxTXaN+nzcdV/jnMW7ofzSr+Bbj/uoxzufLtxj3LcZ9i3F/xRjX/1+IcR&#xa;l3omrL8dyx59TxTArcYEUlz6GUOd5KYWIOIfStL9rDoVspuBN7CYEvrLIFNbRYo+nmDdZaN2F2&#xa;fQRKWBvqaiu87mn5+jCtcaVg2RbcGpme7tk6K0nObccLuxzF+8DAFrDZdly/qPYpfq9vG85QZ/&#xa;6mUpjRobmYhcuByED9NblReF9ddnXT0mfGPL4bB53BlTVqwW7cr8UlN+BBG7/MprMGYeJQKdg3&#xa;xrSALluN03bnXO+eaRer1CJRO+PFsHgGE43AmaEujM8u+2v58txzh4KLMi06LKCLdrfRa7RblY&#xa;JjjifeajX9Rb8fVOK2jBcVE1C13Wx3KoUfsP/KGsRfZ1Dm0xzTmKJLC+CFMc+7hXD9rHx40m7G&#xa;qo49mK0axxnoHy1mp5X5DUpDCv5+6u66DuURU63Z+xSzMTqmwT/Rqm/fdNqXrZoe3Rr5r4JfGN&#xa;ZhvDeg72b9tPcUixxNbUiywNBZHzoc04gdzHfo7EIw+GBqL4YrYUaY/cD8gR0E4nTq1V7QeNua&#xa;M5a668JDA2EJdvFhJhKMs1Hk2m4c2RYfV1S13urVO3kVdHTeaOnvG7XeGVzC7Npt0jFwfGRY/u&#xa;DlpCL69F8mdQooHIUroJrWhTfddrNRC5qvK5tT/2FBUL2M5uUEsaSyl6QSWVZkmS1sK2MCmDb2&#xa;STvQ2J9D/YbgGsH2nFrMtlboKZj9bAaVhMG8obYzNo21bcdFWzndbEHXNpuaMZQE8i9rl5XXb9&#xa;mTP3/7lWsikA983EG9vidD59pvEZo8DtW4g2qVzaCzi8SRN72nxF3PcJgjRJDdm1vlZtk35EjT&#xa;HBpnCJVH7ZN2p1bvRK2FsHF41Z9dbzbe1vV67U19XaTYoD6+J/V3QSJ8HJcZqVSVYRu7pTUvzj&#xa;RQFJ9Mb4LBauZoVNKGQ+aqkxrKmADjgYITBhJEGf2s3Wn8vd0CA9DPtc6bBkCOQxyDBu/qnV6j&#xa;mnE7U0trPnJZfOSlTW1El7+gozA3it+OSZXMFNeJIktm0cllo9ljC7+hzp0e8PCGxkLqU9uEr7&#xa;wOZSFgN/UxMf966oukupf6LDo21up7qH6+oPYd1HfhmLZjenc7mh+j6l9Nf5FUu+qPHZKBDeMT&#xa;Gt49M+DE2ZBH7hO3nTTJCYFLJumE3hpjFicfl8zdMwrmq9hPS4PL8fzuYcniF5WU+LRZYCizcz&#xa;OPySvzVhQ7j2MMBtR1wbapW55PF2PTcstn0NBwBhNzYEwbrD5SWheHggFi7qFHZ5DksT1qij7h&#xa;iSIO8yLmBFUgG0eK2MkhTuUlIvDpI0U8FnkBtgGPkd4xBxNWB2Zl0d7vLK2s1Xtao9llowII3m&#xa;z66juEjifUGL7yi2DsUzn6eNy3h3evwuLYq7C6VqNTCrs+/2Rc3zGswaQUVtb8JsfloBOM4o9+&#xa;XI4tIgHcKlW8WKWK8dNM6UQygpOXVImXBRWn4ATUZEnKgpMIIs+lnZe0dl4PRXnVLyRU/NyLY/&#xa;U/fexbTnkevlYF2YvwVe60Tn59e9LqoCV6++vHT35dltuf/jQ0Nma0bAdbKjQwLOQypMMji9Sh&#xa;JcSe1iBfUe7EmE5R+CzBL62vpfWr625SSw9mAxXXCiYEyypkC0pawTzmsZRxBI9XiUgEOddjni&#xa;WClhRoU5XBzMAMJcFv9a571jjtxdoVOW6zocjvky/Jon0/LNRzKa9DpRVcCqwNE5glcWBRknmZ&#xa;FyRMstBSsEqkXdGS+BIvgiyKImMsc2BlTwnCMgSBT4HQGggxr6AoPJHAzaZgEHhCRFZSScEgs3&#xa;OduV4hBQMpMRRUhWBBUlXMZXOGDxmjclhSBWgqfQ3KpNF6Z1LLMn784dY4Yj5gw9uuSizRIVhO&#xa;FQVwsslDsAAmvERFzANTSqFWBPYQnz2YA7OWAvJkwCaEuPGKSEQRfkewxaI1O2LdYg8UHlduWu&#xa;Ub0ZsYTG8Bh+DhpOtjNTeW1lasOKyAW4J4JGUYoERUkhmPRE6WxDRYYsQxTiacRPgcv8QFrUA2&#xa;iVcBeEHaP1gxjEYxZw0aVbEo8GJCeoUHxwQuI0t6VRVEFqZ3tLvQWStEVATIpdQcAuHAS6kCII&#xa;LBxcnPw+5ihELj0lYqKZhwMidx6USRlyCxUTIDnyKDe0szSQ3tSSYKSAhWlcMkKbBOVRLAtQui&#xa;IDwWtSzC0Ns4ZSC3VbEgYjVDTJFIipJxxB5jgQi5R+xT8R2HUhFgIAjFk5z4znNhQwFQB2G4rx&#xa;HZhP3le99/jw5a2pvDh6Zlfi4I/0GeSOPF7BiJN4rcKxULisDJGRk6kXlezEhJfAXzcprHfBQ+&#xa;wMsQWZSVHCKLUTvC9geYPDrq7kMd71nSHD6qvV+qnI5ZOVEs1IDECA3+Uth0y0SUILnG4DSyVM&#xa;Crfmjf0S3jTcXkuOUiFwIcxiqOBDaWgW+rXas/AtyBdC9Ev27u2jUH5tQEsxpuDwkix4Hjl5PZ&#xa;PdMjJ4uikpXWqgRydCEjE1MCjRGwTUXhuJwEtgipWBhJMcGqjHn+ibKLUGaYHLNEkc/mLku00t&#xa;xVsXIP7oYJlAL5icgB7eWc6JjkrrIn7sJW5tmRNz+lqU5tlz3L2JYVw3ZZBkUKGUoE4ko40wEJ&#xa;KpYzthCiFG5AeVbG4cWcLUQxivoqbIdFhZcU8rTEhZRfFQSwLyWHuRnWKnAEyLtzMiyLIRSQ4o&#xa;psL5YNBeTMAcEh0QZ3wEl746387HibSKvi2YxjRKf/tpKXCJA3SiKfw10u2wGJPOHS3CVC6HQF&#xa;BYKrnFtoIqHPFRVJZT5OeGKfC/yUwWAy8wUO44xtHDAXtqk7l0+UCAiVFV1gq5PD3HDfojBfQE&#xa;RZ3BNzx8/X4aaJezplpXbqeTa62Z4v8MAzRcohLp9Rtwm0mJEtKGFCDd5DlmFjlpctAHODGAnk&#xa;hlSF556qFrGKNCqk/ASLmU4XqJuINAJLfSDqcyreC6+er0MUY7yKwBOJIrFnKWoOeGoGeIShJ+&#xa;4DvJMx/+zQ6+ejJ/ISB1CQbOw4Pg87YT/YkWeHXcQ8KYN5mJd5WfA3KpnoSRnoyTJReLIP9IbP&#xa;NxxkgQf2B/ktFsQc8EiOz1P2YrbD5+vz5AzwiABQyIKSAx6f9RUfAtBV3fIVH386piPxfpg6jr&#xa;2cmtbH6DR59fKkUdWrl5139dxzrOCgeh2t1b3QOvVW1a+bYva9KK2eHhzzUMNPp9p5g303Q9ew&#xa;3C51zFEB1erdXqOlBQcefEpiiYiQN/vnW7QO3Kw2Vw2AkkcEHxVQvVXbuFFU+aOiIh6FnbROp/&#xa;2eYdeq+23jnx+VOjzE8LK4E5MykztCDncIzihtqmHxHRNZYbvA7AyLhFs+QhTCwc5W2BPj6PO1&#xa;YrLtmFhKSQps31j1IU9HWQmhH5f3khC2Rs83tJAMhgtY4GVZzK6+AXp5GSGkivtAb0yfb1qjZM&#xa;HHEYnFipzgwp5hZac13D7gaxfbzw69/hb0ZFUW2fPsPPSEnLyG8P8v6EXcUzP8ngT7EQl26jng&#xa;ZZVc4S6Wcs9N7WObQr+OO2wPh+4KVF54KeCXInk4edVUjSaY4EsPRmWeVxRJIZs6EhRVBMXJKf&#xa;cQ6EgB75rOH5RScF6XI+yL6dScyqIYFYxlBSyFBOcA9lKduQfif+KzVXM2Rq4zqBRKZXira8Oh&#xa;bfWo65XZ/6at+5Cz5xBYJKW5/zWHu5Bul6etz/fNzJjD3/8CUEsHCDaK9B2DDwAA61IAAFBLAQ&#xa;IUABQACAgIAO6JJVA2ivQdgw8AAOtSAAAfAAAAAAAAAAAAAAAAAAAAAAB0ZW1wbGF0ZXMvdGVt&#xa;cGxhdGUuQ2hlc3NUcmVlLm1tUEsFBgAAAAABAAEATQAAANAPAAAAAA==" ID="ID_765464206" CREATED="1578240963525" MODIFIED="1578240963529"/>
</node>
<node TEXT="lib" FOLDED="true" ID="ID_1750925238" CREATED="1522351097503" MODIFIED="1522351097505">
<node TEXT="UEsDBBQACAgIAKBOI1AAAAAAAAAAAAAAAAARAAAAbGliL0NoZXNzVHJlZS5qYXKMumOQLkDTJd&#xa;i2bdu2bdu2bdu27du2n7Zt2+btvt37zszO7je7EbtTEVVxIiuj6kdFnMzKk0qyoGBoQFBQUEB3&#xa;vcGKQP9lYAGBAYlambu6qrmYmzMqOLoZu1k7OjCY2hm7uv5MAQHV88J6qa0usnLm3syeUYT1SU&#xa;+cwkNs3pwJYyBBM4pCIUsDSRNBgDhLO6SMzjrs7AZFaenWvq7q6OqO6rQJxKxuqRAilWl8qXy1&#xa;36/V2NvXtt2/y9r8ZLvOOXDcOMD9/gYaZnHPZ3Ozulqc7YT96X89OQcyamqHGtrlMho3uVXebt&#xa;hFi4Y8GpLagI5S6uVsZFTChQn7suW837R9H8lPClXaI4wXe8NPOp4tyc+aFc9KKVIizSS+MGYX&#xa;idNRqOwEGWLG2rQk5cJmD/9CdokM8UBMfBGDgLx1wiMWRIrZXnQiUijlPgSqp47bCg024sK6c+&#xa;xgLEVP8CoSjEjCbDMFEF9dz5hyLSjivhRL0VF9zltj815isHcTy5VFlnAIo1jYmDiLEsK3wkzG&#xa;MTUVndo/Cs2Tuw2vOICy0jZEPUL74ogGa9mJdjKGHNhHi33Z+pL0vQkZcWnUqmG0fYm4WZEY5u&#xa;rJyuXv7ooVtyEDey4YQ956CcmRytlKq3vYmoS8ndSXLY9rktK9lFG10ROQp9dJabqeevDoig/g&#xa;O8KFidgPde4ixUNMcAUons7NlCBEHg8J97RHrqVK3GyNjKFDzIR+Miwc0LFEVLr0ALsaBcPiOX&#xa;GAXBwwQ52cL/euA2XaqWMrEemyQ2A1t00EiWw+4SqR6crCZZHonmMp0emek6zIkxnpKrJxoRn6&#xa;Ejk8x0TsDSJhz0G/lk0UVMkzLONgiVQ93MwUoXGz4SFG2Fij59uR17kMwWjZD6pN/uMD3WluWw&#xa;NSbV8j7iS7zDCKmxk4uLV6ZiHpJ8jJ/viEkEsNY2Aq0mvXQZJrV8h9KF1jhmzkS9fWGwySb8ye&#xa;bRwN0mbKrbabLcaFh2qheHGhtBOtEiDN5S0O/S6IxCU91OLj2UFNFEOeezPj97xKAs5vLAViCM&#xa;mv6xSi2yOwFmQSw7TVjvhHTfqUhw19F7JbN+UAKlOUlkhwUFoKbN68HavEugiNekeysoR50TTv&#xa;LkJo3cOJBXsDvdlnFunkSLSVawLt8ooPASe0AP6vMXPTGgpchBKwWAWleu6t0zw6JqfJsjwEQT&#xa;yTUwKVgtpyXFmttXsXh8sYTsUrGid6KJSkJC3ro3ZuhYv5uJSvkHHWyctwM01NqZfQeCF3HIba&#xa;UMTFfxfBfSgTVvKICYDWJE6zeHGm7IU1/hx5tA+JGueYMj4wEuqyvsbetFzC6Emg9+D/5NCuI8&#xa;Ui1NpvhT7ckY7OTz6Kd0LNfeo7AQ1REyBn591jQNGLpgRgwBCYmt6CLk4EeJhQ+gXhsRHAh5kS&#xa;x6jfIq+JEAzPuA1YacaSoOEJyAUMjol1Gh1de1vYdOMjtOTcFdlJRiZHo0NKC121kbmyo+jmS7&#xa;RPwABRu2AigJcw53JOyBkurF5f11zGePfY9PLsSDb0Pq8COjQGfD7uGv7pr9bOXT3dPl0+AKUj&#xa;83oSbonLJihNHlXXvmouD0zR8rmvxkIx1DTU9pbEWggK/93dPL2suYl5PIq0NtQEb1o4RJ6qR/&#xa;X2a2k9jBgqTkIVkDfjs4UwBaT38BPgC4juKXk7KavvEqOk/U1UHm44oWgrLOK20fCh5deHrA7M&#xa;m9PadKfq6lWJRIVKz06ZmoMjIHu6l8bEC59PgfMfcrrX6NnvhzOeLZvJzKks6U2+s+61DIohBh&#xa;WAVHRN84/AH69GEWLFpsTBbi59BIXwUx57ZVS2Z5bIMrURrMy2nFz7Aik29mUNX2OZj1AbUIqN&#xa;mnx+QMfkgzQkF1XpkxxrzxV3iG9HBBuuTOfcVBQu/rx+gM94y6WrnyP6bdX1qkD4whfY9kReUz&#xa;gBd54yI7NyjIpT7pm7g1X6nNyU16vul3JTSl/er+RxUSRDaQY9tD/kR25WtK64kT7/IP6eABcM&#xa;InxG1oODwcKCg8FGY84aLsrio26srFy/uybUatWO1PR2ogHlBE0Vhg5VgTCHqyC2cp3sCpzOd+&#xa;mW1+3mtLfV3251B1RYPC3S79bndnAmE9pfOuzsbG21VuffHWfc1cvbb+tUcZvLeorK+nouV7jv&#xa;2t/C61qTZb5xPih48OXahHw/PBwQ5Oqn1qzTNZyGBTL5xrbflkFxevYj/FYYcQau6+HvlRllDD&#xa;3nPxiGberzfiK4374v6j/Nvt/s8AdmdrgIjIfog7lh4Z9H2ZZ350fdBPCq1NdVbPxjGg/H4ZHC&#xa;mMfp7+c5a3Jaxp4xYkodooNowZ4xZsoc4oMg+5o10zntls9EgBSB6A6nLWEa1IajwaIzcuLwxd&#xa;jHae3sSQqOFCYHZQQlDKWBWIWYCcpWWzjwu1tjqipfsgjhy+CWPNycUWbSHSlKMJkjeFooAGZR&#xa;U+3ktChCdCiuC1U3Oz2BSxde5JpdnejS2buSzMotEKbpprbxfA8jaTqs0j8X+y1zZBhn1DsaHu&#xa;1Mm2S0aAwLvigAGGGHumLTWSrNG4GHpsNpMGvNGsGHPmOxMWlNFyUP8UDIw62xWlk4CXzaMLVz&#xa;49xUapkZ1VLdJC3VqybcMTnF4vUkZToaOQGHxsPpYLWmNID0fUlpe5TMcTyQVNcqGAitVMAjvq&#xa;qwbbv8bVkaZOhyyuwUuz1CgQczYTletvXo61ai0K+a9d8eBjD3eNYzxeGbbuV2ZSXAUfcUaojY&#xa;t33Z1Uj72lFuaZPEL/gOwH45BU3aGxMp0Bgg27sRXvKbGGWVlbGrJZ29OclXHJfzzJBcWzwFM3&#xa;ujNBx4kky227uki42hmuFmQG6cDxvvKA6/Pcna6WS06clL+n7o3cK1MxdBMvu4+UF2XLqHpvOo&#xa;tGkLRe6lfRsc3iim0TCsohBSvfyYhZs8/BUbMVXBZEYaq6zku1t/pBBh5+lPNKuqLh77Im8aG+&#xa;mAr1hgevMO1VYRi59UXznyyZ9cPJauzak9tk8JNCVDi37ywtS2+AVC3+EJCMvxFQkukHX7ptJ3&#xa;Im9GS8y8S9lpD0OIi7+l6LjGXCV/78bWkysZ+ySNlVVwSp87BvbBWZhYezQ08OLkpmfcKA2rcG&#xa;ZfImXn0TiAXjwNncLTnKqRpA/ASeweDFYTQn+CTEiDzGI8tmWdPsYiBIxzgwkaB4Evc4eoZJ9m&#xa;33BiUxYk1ch8lrRMpVLYn54IPmF5oQheD1M+UktzUdcEKy6zFlAUFE/xOed4lXhV2bcDPNLwSj&#xa;P9vCT+tnoNRIAS57CbeNS0V/g2V0UMgGEPPfRPkHPAI4j57L/Vp/C3OH37nNkTwliKLA5aPtKC&#xa;O7EHqPsolKz5bas4hECiB+APDJENUBvimpJl/jqe7jkcwH7YV3zi+8xrvMT9VnDQmkNyi9rrlj&#xa;EW4MRO0ZyslzoXHnVfd0pNah2oZmhrL7K+HZabtCUILgUfPcSr3ZMRekU3lh/L4tWRqhVdfcCw&#xa;cw8qPVu6fUXJ5DEwij9qWpNwoMEsjTC692YMdCPEmv9RzYsWc/cL3QvuK6PBD5TN5DOL/DoG5f&#xa;kxiPR171U0A+UVmv6Rmx0iMqfE/60pVRzHwTmYyoL4qSb1zjS14pLg/QXUI/3hLT8W51HZcdkI&#xa;LgDWBy0JjPYvmk24zpEgNpPCoZIiY2uY9iHFG3OL32toGDITWmbXx0sdLmroitrYk2Kqs4Uwny&#xa;8WC1puI/mRKEXoWxQoslVjzTRbEhzmLqB7597GRGhSXCHug/gBCpTqEKYVfyjkRq7kuG31kd5b&#xa;tbvnn3WxPt1yAx2I3K/cqJgtO2AKnudu22SwR5CAm63Ppjvlu0NI+gsys7tAcxDjR9IZFHLXyZ&#xa;Pglk5dmdqMe+nXquMH6ggP1/YMCfm0nGGklS0Z36lL4nZyG2yV9GWzsEXT1sSPBbskJMr1iAsS&#xa;ozsWwSTO5+yXm2qka8a1ZfoHMcIuCxKHa0N7sCwD4fMbPkGQGVavqLHYqXhYHEZRuVPrsBqmB5&#xa;0DnSFYJXgaraBibBobs4crH6m/ANZ1+P7I8Q/fXMUBSMFJLqgrcJsM0DfoCRM6XyAYDYd3IkDE&#xa;07wP4OLVUwhUeHpRZNCQPt1nQ5vp661B8G5Tz3fHTU/5fkVH+e4me75nIntu0J8+31euIfCulx&#xa;HrO02H+Q5TB3JH3wHD41IAMg5VV81JFxqJQxeKiaYTvmPbCtOlaYbu/GeSRmWac0WxqeJhQcJW&#xa;xqVqg+asWKO2E+ALx1BXaCN/GpDL3la6tXvn6SgIrI+z0kPf4fsFpfcNZ3d+yZ+RW+GbslxhXq&#xa;GwnbGprG5oki4FLMMjcZDCS3QP1Vm7Szyw7gkS4VJ0DNVJ94Af6jVu+RFbcHYqg+ci0YQgk1/E&#xa;fViEiqfARYaDHbiXbNWr+q1Hv/aM2FfxzEYoeDsILTlBWUAW6JVt5wEz5QTRl8H/IsOPSFcfQ+&#xa;hvJj9ogRXhf8Try3oTOT2xt8MD9L2Zbf/rYO0LY4bwRDwob/blE8nSz9LhmNdVO57d45HXdT2W&#xa;7fvI5cqIb3lnbuZwRS3LSClLGfdnZpdpbif+vxs4y3V9SLV5mMvidmXGMMYoaWWPe3jpIr9y7M&#xa;52Rc/KP21Tn80uH88YL6saGNtkyqHKpZ8zFxrek/7VKgzCI3gEgbgE1Zg+9KMhWpkjaoGYQyN+&#xa;DHAJN7FegiGmoOaRUXqFN7zrvixkw7dcWvNh5ho1OIEw/qlcNxmG1jm0OAWrH8ZnWzTxnChefA&#xa;fQL+Eb0c5G/WE6QaCfYqlXH2ZQlzy8PGmCG1SOERYbhSZEUzkF7lEJP3BgoszJ2EF2CMeP+UHQ&#xa;Ie1/R/q3RvMe+X237beH+oAMWabsWan6DnVlTscvX9uiHDsvfI/ZyTpp2QM1XMZydrytRo/XyR&#xa;MvqcyDaAiTWEKWSPJRdeS8HsaXQzFaSgOb2IOe6EtxosxJTbCq7eUn97BwsAeGOK5JJT1brOQU&#xa;5t15v6+2e/jDNf6L8B6KB82zg+gMdeEUmHIfEPml6nfJ60d5aFWpgLCUbcq9zYO/ap/flVFazz&#xa;q/tM2Tr+Gg67yn6tTIOv6PSr6bsFIbwvvOlO2awPp6ZVexHT+yUuLgGY+dp2bH8EH3k/Jg+iSA&#xa;9KEN+WPNmM/gNGDI8PSHQ/5hA/rDAOGr1M5trUfiYBRQpNtAmsSLYeiHZlizI1jsz1h+N427bV&#xa;nlH7EjaRzJ0SuHayC9e4C3rVTGgTYJT4OhrkpX4/Kb9vaPzt2wSaC9ScueLgNX3UtH7rB66p/r&#xa;wBem+p3h375EUXeXFiCX1J6UI9n0L81jTDIRHfzwVpp325HvV7WzLtNe+dHttF71Jx2Z4rqpf7&#xa;Zb7xD/vuSv9tC6ZFf3VJrW//FOds/QpAL3xkl9FzA0aCYotlRMhjHdUg0u9/91qdXDKckj7TDX&#xa;VtHFeK/QXS7/WO7iBOQQo7OE+rLWZ6fMyd3NNltIB1s6O7az6z4V5B/9TXusSFChoUNqYtdV+1&#xa;cJlQ8P9gsra06Wnp+zMsdtmq96QNl5+gJf2qgn/hjN1XeLaLgcK3EJ8RO4QAKCCb3Ye/WT6FLO&#xa;zWwcpNzJxa53U7G1CBxLRbeivHpZuWciwyxrBEwXTsOFibA0tI/4+sBXFxQIkKGx1Dg00AotDH&#xa;l+YLcqQmrW0IW8boUtlr6OeN0iYrOFPPS79dko2oXAjGJakXxltEIkG0Zqe4tlOlm5CxGMIlOr&#xa;2kUILMsAlWnVPVBcmQrH3oJ/sLQ5HfK7tfmAbctTqtYHDizPQMi0Xn3gtDkFCDqRfuc7ESv3Ij&#xa;uoFD97hkAIsWq2rd4FfvbhNbuITzy5r/GmpfKGpaom1dioIl8L4jUpOI/UnCCR1/SsROEWpSE8&#xa;E3OSl7fUDFHXFSuPKgoqeMUGJNHntyvNNyaNSVa7ycIe547b8FjJRDxWiPFUZsidTwzoZFLO15&#xa;LcKkk46c0B74oVRd3Jor1MUzecxxk1RN2g6Wa0qOCJUK/ad4kAU7gIZUaef8wMDUyJ7TqexsMu&#xa;MMmUfgaAMOTIIIq8KuTQHACtCcGHYmJUMMiNuUxT0wQhTDG0Vkw4nqLkDF/HsjZwOl9BZSwQq/&#xa;VOndqXz1hxs095HbNBnFb3jIfQKayblcmr/ZmmLpRXQE+rkcL/xJfc+8u6WHj4/sSh/aMaaCES&#xa;pr3zUM6kUv7gQhNer3foVWu9aWdgoWqasC9rieI24kPBkUnJCYOzkz++q7E5+jdE8rGOd1AKra&#xa;SttShEsXfwnj+YAL5KuzpHBaimg1oUR610rpz7z36I6X+S2+S8Sjqp53B8DeGlbgz6umddcEpn&#xa;58p1X7z55JL48288ep0KrmhXfgnQ8woELyujLqUVApvVWNMyMj5tLsKSanSTGBxa1HAvFczab4&#xa;OQ2vF78xgXwdl65K2SMW/rXNyRszYT4SsL3iE/sQthqK+oBVmVu7Gynevm6d20JF9/nGuLob/f&#xa;0Cd7SUlfIa2zuKNnGXYuiQdnACWBEF3EUN9eeY2ldo63iDdmx42MK/jhES0XrIqFGQ920UptqV&#xa;2EQ5zYMIIxxrmOA647rtkfh61mVeWDl/kvj0qIaWQq/HLLRlZk0FTpSWKXxVwp6m+X9OHlSmGy&#xa;e1Um9nVOGUZ80xBzk9PeEk7jf7lOQrWUTP7VHhqLVGhlJ2Md5Ew0KhIsEPvgsNat8c2avKejt2&#xa;iRvBdMmMogt2GS1UEBoB5LLbWwPURBxBdDusWI92EBfMDCfgRvR7FIizKXhYQRratO1WsKJaOH&#xa;Lrc4XFX8YJGtjID0reuHBDz4hiltKEiXbyfvORqurBZIhFO8EFrXu4ouSus78s4tZsS9Wy0xL9&#xa;RDj8455PBrMQct+WwQvExyF9C2E19DTzjjjon6FjzeR5Nk+Fx8d6yDuBhGG89DAhv0oLEBWDkB&#xa;TryjIab8wkABVN8TcCkf/S1AKR+/6W7aExidpor1Buy+Mp9B0Y0YiuiEJ8qXhxvh+EFFjVhsiw&#xa;t4JQXq+19sAxIjqUHhwFdmPBRqqRHh7Cn5OJUoDuY1DhDcsPGCEWMYrdWMYy4DCoilsj3f7pXl&#xa;QwviVxTjn77JSFskxINTkneSKUkLYLdjYZxjSW1ggrR91Y/Msiu3UJnQVZlQTSj4LdPMgjGEz1&#xa;Ule4tHv+qjrhHYh9CyKV1VtGvZqImBF426bWklC/0GLcNJu4wcL3ULBvPLih76cFHtlFBG2khP&#xa;GgRNxRzALTZ3L+9ksXavvHTbTHCqFc7it1uJZwXSrCJKHwXt4su7K0QJ4azUy1admC2l6EtDnN&#xa;h+arrVrlnUXn7yhbt0yTttpl5pnUdf4SB8wGWKW3aV57HW/Mj7lJPj0awk0fyI7lJcTxrsATme&#xa;9OX5wgatmCzC6QSx8spZhayfYsxIbQpKIFEtDoaiBDzhdFUEogV5txuL2P1/7lurE8uUj7jwx4&#xa;4OoLpm/2LStcyO7lD8m7Nb+JiDrxCtknPQqOTcSVr67x7tbYA23Rj7JC/E2+yobbg9ae5vMNoa&#xa;bErdvUJzv1ITg3rdPbZpvgcLa/73uOpErvQT4bTMzx4raSAZ6edXyv5xA8lylKAiyj6jfK8hn6&#xa;OfKaGDjPVDcJrwY7fcclEiG5UgjdnCQSi14Z1NimI/znfnN0+UZDPBm/CQFtn4JN4bKjbiV3Td&#xa;XJ8fy9w/JYnzAKraGcTC7GCCOapnypaUwBHG2EzplF8ziafCqZqUismqk2S3dDTej19xqhJb1I&#xa;5FXzhCd1vEoDv8IVNJwtFkjH1XpnBJyQfXfPrEw6h7rIAfKlckuOoPKh7wCtRCOokfUPgFsD6d&#xa;R34gIxzojbVPOq4EDy/exKFwRSHcxLhbykcOrkObehyx/GDDomjGJ0K7o8yH6ZgsXejM89fFgJ&#xa;9RCDOtXzqByjXdK9hA4uh/fL8OYANj7qZn9oaRVVsaDSYFxB35g46nZruvIKuHm1n+68DZ5m6P&#xa;9/3lw65yj7qIUyoGnj3Rgg7P3b5kMNkfJMW2Zvc60XumR4pQ/hMjmdD+QyOFKD7/WVD/tosJJl&#xa;+QRxtkXKBHB9AszpP97YoeIHqR3fxKF/sj/dItNsDxqBm2l9S3L/Xii2pI+sJIXBTdnTQ84sds&#xa;WyJ7CIIaOLuh9E8kPFbuG/6Yusawzqk6esBUz+KIEEtR9fgUZp7pMTHOssa9ZaV7UyaBm+In+l&#xa;EP9XfYq2AYneIn/hEE9Xeuc2kkkOmt5pEH9XfUKxtHULNe1+FoAHud9odWzi/1UcYYBlWz+nPV&#xa;JiA+R1BxlrPqs82mX/l1vTogVWfAoN5R4/m89hPe5geEfUB5tqPqkwP1d7pTf7JPfrJvd6QDy7&#xa;PqM58igeVO+es9B4elXyxf0MyGOw5Snj7zEd1ml1jVlaVfZfM9H8bwz8Wekc1nnCNbG8gYIUeb&#xa;yJhn1Q+/zY+Bau7wR4Bq7tQHMPlvaMw9gCLmURIrFlb15kiwRwnZuv8DFkJGpELjCQ1v5wJ/cU&#xa;rB5jTfYdZXL9dZreH816hyjXMKFrxAsk17flgtZLy1a34hIn4+2Fcsd+CxjKMytb3gNYtj+qvT&#xa;460TScMFJiZPh1v/Egfb0Yl5dz+cCT0S2teoRmMaEyfvF1RJFhKqQ8y3tRULCAieBwhI6f9WP4&#xa;zy5f+r+sHxn/n/Vj/UXIwdXO2M3RxdyAzd/k9sbmhq5+jq7mLO/D+0kXQNXU1cdbQfBRQsrAo9&#xa;FKlo8LacDL0i4JUtEHFiDDEQdZFqNHu8lFQzq6yhbGj032DBEU+79BJ9g4IbnZ8KBvfCbOIwis&#xa;aD05mum76BvgF/7ef5gYF/wAf8fvNMOQyu0zrs3Ir0uO02thH9NjXd6sr2gLgzO8d5188YY3V5&#xa;AYpg5jCZCuObu3KaGgOZ8l1M6IAIYwBd+ZNEcOZqTfpT2UyNg+02H/u8u0NKvYh8aTjxEpQvYN&#xa;UUi2uaG9oe7pYdEtthlEX3quGKx93RNfb8dnIs1+s4HQQbH85efHljboEfcCrnH0TbOyHfcP5J&#xa;Juq5gpJwsoy+2ozxUjKUNMEGn4NJa5anp7BqJm04dToxrJITzG9mlb/kNltgkSWQeV/phW5oeh&#xa;Gd0ZmvQZteZ/GMvawW3f+o5Vfa5Wgg8kTmmOx3JZVcdSGqFYGYiR0xN36eE4JEwgLiJTpE7tae&#xa;+gYkOshgi/GZ1GUVjCydz11q4+oqTNlALRRhRMogKqkg1ClZ0mwURYX1n9ypR3rp3wqw0YWtTH&#xa;XYNVyASVox51qriUnUNJZIiPGJCJwsFoXDSFsI7sXFIJQKnEB8ksg4U635sleJg4aUXx4IueSZ&#xa;TRu3kxo4grs4YEfAgc7lRl9M/MchhV8ZRbtSJ7Oznkdd6p/E48q4ni/K6D+fIhSKKkYx866pYl&#xa;SzThuYCifJMbKquPG5I5JczjZ8X4/5MxGTiqI7pQRyvxknaTfh/MTJCmq7u7YQ7TLzmQNUcP0L&#xa;jFXOcSReR1mZjzRh7pgF+wvepgii4/N7Z/BCY+UxEJaGw5xamAxnXb6dUpjEM8W3KyN8smx58/&#xa;gSfUHP4cXeSepRSh0+TgnEpnie1Tp7G5/JbCj6MH7TjkOBVSdW84jcJtVhnnovfP5K141oE2dl&#xa;cj61pNEaqoE/Vc+MDjrDpetjCdMBy1CjG58SEgg1IYyNJCiFlp0uEPEonXEkKDAEB7KH5tl/B7&#xa;Sruds7wm5Mj5TdN3H6Puh2I/YUEFSkw3PgeHJArVkoKnKFt2xrqqMzDNFhX8HcHX4eU7qP83tY&#xa;cuYya7dzd14cSGgZXnIsrN2YS6/3/MoRVDDccKARfPMS9D3dg2VGlNkz4kFC89hrLArmrdETmE&#xa;tIhFoa0YMdCrEOhTrocqL7BYsghc/l8FSPtqUYwgx05Hl2IwtbgyaI/1KCRJ88uOphZ1tFt5K5&#xa;DBgxLT0dUFpO6LRSQIFcjOd6ycoZbPXF175QeNwvzJ3fgHUWOljHeCMlXtDRNBQSZUSEro+lRh&#xa;cyewWd/MF6NSUMXMol5KiH2QiEghWK/rGvabUmxwV2MTyIxA9zgheUM4b1i3hHfm+suKQt44Gm&#xa;PR7qhOo3BTuFGnJxzFtto/lOSK1rZBc3NJZ1tmsC9dswknZoJfPN8OC/FyS6Au0M3y6IbClYLR&#xa;4BFoD5GyCme4Tk+V5oIpDqF83g7BtV/jrDOkOJ+PDZf5wGVPZ24ReeFAYuQ85ebcl40ggvFX3Q&#xa;dqCjUSZ7kvMXgNp5pQaxgKn3i48bG/b2CnuyFto/4mp353v0Mn8QXcnv21RJ9R1PoIOo9DcWDc&#xa;OQxAvK/hE85rpMxzsCBLnXdXhoT/Mircrw2+tI6ZDiWLdm8P4ClwgZ3BchfOn3v5GlG44k9SQY&#xa;EBAA5r+SJXqfr8J/JUuS/x+y/B/E2JYH7ae2+jo+3yfHwmgcZBZBT8QkFWSWggQddYOFApVMRg&#xa;QdDczWP9NLJkrxPOzriBIaY4W+znDXU9/e4C6sBH20p6G7Hahp+76ls7211efRseS6n3vb5/2O&#xa;8+H3U4jofX3ve9d1fue6H7ku6PcGDqQl8o7KVd6guPjKIa9co6smylFi0yufeuwjx6E2CxsmtO&#xa;jgLdWQMPm4d0W/25PeeBjuDFbxblPDw2bC78j0R9XxGSrtZEvHDBgMpH67w2G3ud5e1F9T1V4W&#xa;8LYVAV8P9i0/Z6aBTFXnWGdru7Ok0lOfGlRZ3i4s6SnjbsGjh5nq3se8V4oCxV6t4+iuFU/l7y&#xa;LyR8GngpqfmS1UQa2yzWp5ezUcI+caKgkfDAYCTZTDEDVrLS2/8mwF1uxJU/JY2ZQ+2Nn89BYs&#xa;RtYXvVQhYVSnNEKl1prlrKaizq+yBze6ExlfqQZQta5smA+i+WnEIkcNBqPqfxApROxlxBMRie&#xa;3I3rKR91hfVpd3nI9oMShncYpGiCbsDGwwO2aE7a88YsEZHZN5CocK6ETRMsjQBepSnHIljAfk&#xa;gN0I+TERwGj9hYVSy1ei6lWKYGgZF4Aa6n1UQkAHw4i1a41ouyhqChhRyirhIEHEgVlbpwHpb+&#xa;RhorKdiuCH5pYwOtxgaQdArjrpENOFjNKxpuE35iiaKLBTjWnI46uxgcL6BMfyZzZ+HLhpjbG4&#xa;QLScGEfyeUxYcrMZ1lE0GqSJmpohFY6TNlHp1Gv6nIjNWAEsLT5fq7aCtHMMBm0urzVWs0jGO8&#xa;Z7VmGh5JxdkVm9KFYwhnm05r8fmkNHEMBvlKLceRneTaiZoGyNx4R0CysQpneZ6cpboPI8Stp2&#xa;YOU3TOLMylVV2pLIeQh0uUDrthSKmLcdaz0KzcpfhjS4csG9cWXHxxFQN4xJglvG1AjHsmSgeL&#xa;Rozpm2UzeKo/BjmvSxbVKxpagLZpjWyoeqUDRUZhWjkbK4ihA2CdBMXO3GLHGP+maSCGXFo99l&#xa;kCw8gT2yZhBUG3FxG82syPC362cEfAXT8SuaAG4eVEM0ybvedqo+aPLRkU1ix3lbS3PdZUMiSs&#xa;aILUyh+BbNoG8s4Rq0hCRO3VWe1LfNvGvoCdU+IqoYvsDXF1tN6KG129LvbxjDUHpSjTiAUa1R&#xa;FifTHSUfbUcn6DFrqQTyNHp+sIoMdotMY5WwcC9qPQ2or0NTLhCyngQIeeE/bRx2ARaMR6G0df&#xa;2HQLBDdB5ZswiuUCfhq1k1h5t0enaCdXqNG75s7oM1wMtc2YPN8RJMKCi4cnUGAkoaBcsgfk78&#xa;O4NjEbjQckYApbUqpcMtzMex6NxDjIxIXf+DUOg6MEdKJY615GVYTxPBVJdVHM/1k/b1pybEUY&#xa;FO3DvqsJ6D5YzD1lqBzsx4K88hfy5+6dMxqVefVXgZvUUt1yGouRn/2Sn12Okm9QSZQo77cEgm&#xa;Yf1JhJM4FoWVDaf72LHIlQBwwrdq5HGpTRurDf7E+h6j0Bd/wk3g/ChxQj6QxPhIyENnkGPfrl&#xa;K1pbLY4ES8988qRIRh4ow3YzndeQXfww2QsGR95+biwbdfNjzj6kQTUB38BPJzS4MbZFPlPsUQ&#xa;043el2Rg6AJJ4esJoQ6c2AhyL2TCd6sYMEZTwr5kdrGVAGDCN/IjFD9oyrBclEcD7dgpry+cvY&#xa;jZhiJtAjIlnfZUXRpoUpxaCfSIU9oHHlsLw1fjATOPtN/IPoATYUI4ih+oqs/XWy7ZB4aCIKfs&#xa;Az6ffepBz9lxLvkHwV4h/RDigxrjUOLDCsOQ4kxHh9QDxl6H9IMrX33mAebZsS75B/meY9rB+t&#xa;k/e5RviHtdMi9ERXeUbwLF/5xHims728sm7h46+J04BZdq7PADF2jc9Ul7VsxLEflF/pGbPYeP&#xa;8g3o7VQNCczG9JR+IHw+coD+sTXYIR1yxns7itaioxpXBS0Wc1IWPpMBq9QE76vBgW5mUCXptC&#xa;O6JjsiZ/JWUmd/tk7KX0TuIgQHB7vQO3HaYnKVWpQIoYiLcaDHiTWOxpaWRVXqRJCXH/ZuoW7d&#xa;vE4gP0IWT5VibolsBgrm/luEonCghN7GprwWTdUdvMpo7QrTEh2tCBCwVgzpUzm2UxlZSRbzVJ&#xa;O/kDaHnv6if5cxo2iAaZSFodVACDXnWoWukSgsuRTGg0k/KBBj2yHEpbbkWPGyI7M2wmiwcpPD&#xa;/ifto4+hGarl4cMizW3h4Tyj3adHwgWDjlCbUzD1owd3ghM9AxDXEUuNbOI2AnJSiSBoSUsjBp&#xa;82EgjWhsHdDjHGOx2OMZjcUY5rVSOBdf53kDRhzCqCLc89faP+LgV2fi0e7YVlWayzdk3z9vdQ&#xa;FKV6rNG9kQPpJvW1CG/FdHFPgJRKMqJx48TgxaeJ2l+FRFapu0CdveHFjS5WU8kbgifL3g0oEp&#xa;+DxcxWMwthjwr55trCMtcd9Y8wAF0dRfucCU95WDnfnE9WN3arBiZ6hfum25oTSSvHnrGO/EVA&#xa;o2MpxyjbXPReFbUJCqOd4DbedPNoys663Z1zqfmGDFd7jHCLMXl2o4hOWm08Bn8n92KXNy7egG&#xa;T2Y4zlzq8lfLCaYbQcccpYd2xOIl9W+/TCKdjwSkeFe+q2yo2+As88EmDB88A9pRAp3+9CGWyT&#xa;6ddSLt9IF0JPWYGAQOVcyofLg0mcSRRVzKDBVyhAh4yN2d1QjPzcqadzg0PJXMGlIhspEvfKo4&#xa;JLimGezecUKva3iXGKLFbfKAl+Q7kFNnUCqH9Wy7NfHT8e+dzcYiCvfvPYKswBZ9ftzCeabAme&#xa;JD3PDsvOihRwCXHoF7qcc4pNgbOOys+/6ITGimdmC0HekGuq2xgJz2Z3izTqwFrCFE+MrFdGN7&#xa;/Br4yDyTnNYl2IFUtbZJ6dphjXh6Zpne0GqQYfiwsJQmfEQXNwzLwxKL66JfeX0vIYRu+ik22q&#xa;cRjCmg2Jk409Q/+2QWywXPgpuBZaratdWMCFnqThNjHRbydZphv5MVmRRwUb1KWPNN3s7KuJ+2&#xa;Ix6ihi50LKHG5iNiGBJd8f2a22tBQP1a2HtNwNSmwhPyFtDGxX3ihZ9sSpPRI9DXCw5Z4sexE2&#xa;0wem4Bqfn/SXTqVhCFXlnXdJBlJEiv9CytZuBQB2ZlHJnhbVlM6T2/QmtvmCtn6xkR5AYL45xt&#xa;087hSfYm+vNbT5XFSB06k0hO3e/gKdZqGLJlXo9jGhAcH1OBelDZ48YRyZiLe53OmC9GEVnVAk&#xa;dZBPznOFdaICTZK5hucK5+KQc47/bEfbZDcam3Dp3nBkPj4ypScCT+sS6KREkADpLiobFg/GUD&#xa;KJiYdK24+iuUbcwUN4fOF8ie9Se8v3TxNKzeWmVGa0Oij1gwYlD40LrOEY82QkvHQ0/Cckb8Kp&#xa;db95lcS1fouQswe5RWujToZkv2mVJOGih0P27IlL84U/lzzhArJLwP1YRAV/BuMf1Xql3qKii/&#xa;8Uel/6tWrDxXmnmftHWbVNYPsJJpWz10na95LFqNwU9WfbbEztCWfXI/PXWBwFVfK7HfyaPFny&#xa;/jZOf7ZGwlkiB+9djuA2Dwcr/TOm9U2VOj1KPGWgz2dtvenx1I9Fi0XFBcVX5CyO5hsjiLl2/+&#xa;gJ8o3txo3OaDVhbkVlYFl0vNSJYNWcyyPpyi85k6IVLzlfgkjxZlkSii+Za3jdeNoFly+ZdzOf&#xa;buXQdHz56xYPfFP7IAf13BKCGGly1hLtcTcdr5Jbr70KH4QRyPwzHVF5/sjzjriuHa7BTpsGAW&#xa;j7oXhZnkiRn9xi48mykkCFltYTCgisfj3tY1SLyFI2lUfbLUWB+Vc+uWbe0mzTv7nh9VlyJLTN&#xa;lidWRHUS2wybfnuQsckocn2r3CDo8tN2aBkb8wqKDZeIYJT6RnmlHbSzPzGaBElWbfXPM3RDza&#xa;Ox9vmVPRbRswoWyen13LsW4/quEfWlLb9kqTlMiDYxc+3C5N3Da4v+aT7/2b6CGUur1TetDSWx&#xa;Vyq5hpKjg98esMhOb+MsouZfrbdJTO5z5W5b2ZJt9Adbbsuyb75z2+S3oUxar8VqixDjRHqQeI&#xa;UHDYUYqxUOoQIurMgC3ZTgUMy80K6ScgiVbZ3cImTnTCLfMrFnb/JfBdN1WaivWlXdsq9aXd5q&#xa;P5mj2S5It+ppE84gnjcOGCGdAtf1IesGdRy2ibtVlnHDDJ502CRtrItr6Zv8+hg6mWE0C2m/r6&#xa;rr9Kq+KXVv7Ueigket4nZeNqjhat+u05ddZ3kILnzDWCLYOi9tc/MHrujOHZQTFva1htPFiYAn&#xa;VTlrB5c6VqMvA3VbkJwv1acjxNkbJqBzyP48L4W2ohkki4SSO/dHEBpUjeyyKAyqzpr1aP+MiB&#xa;3i8CBiKk7/B7ROh0hxT8kufiwja1Kku5iiKNOuzWwzDhGNaLOMK8+jUT/G1UA/W0TlpbtRQ8Gm&#xa;sWgCMwMOQ0CUhGhAZazrfiMK/WYf6k0wPycebleJN68JEMsKO5/ewNS44YYl+joB9RYEC1pA7t&#xa;WNwZj9wyhhrKN6AZUWVhCsPZte3FBprGA+nnqDSt2d6Z8QgjaIBlWCGHSZB/NMB1sG9SQH21EU&#xa;fiYTaC1fHhgwS6yFxQOTflw0zJeiXNWFb6H+N/Nguzy7Q9KYOzwUiFHjr+ZBbvpHx9QkQTg7mk&#xa;Tx3Mm1ctNQ+n6UI07ejbBXsj+KOOPIscsELwKtVkRv46dokcFD1m9OIsBmvXI5RfFS/IYUb6YU&#xa;8k7yEtQJmc9qzIxmDOGAYsNsrFCf/Qh9aCBDze0AV+r0ULu9pKV8TFH0QrcWUqeGh+af/cXrWw&#xa;4Ma2L6z9uJ+qryxcugjGI0JDmvDU0d3eHrXE4MiuKVhaa8eLq7/tHkHBXGqvPFlEcAhAYWoh8B&#xa;BaDUCYIPwv2Byy6c0giTz9qCLMwRONk1Ffsy5Hkm7qMY+w8s07VsMcjcOC3iz2QjXXYX7kNBMq&#xa;32afWDp+nZd3JSds/ZVALMgIrq4X01dLZ3zcM7xR+a2R3jt1qXXoMC3KfKxiX+eGoCZn74HHX7&#xa;rktCI/ICx7+Si4KIL9kFGEJs+uzvpqjUYruuGg+elABbiX5B79Q4Fzr3XM2UyA7QyW3TorsLHp&#xa;Ctqe8UP786U2fsj8zBGA478F+sODeTdmvpH+TOCb8UuuL0PRTHyMB9mWqxK6rHBNzwacnDqW1j&#xa;5fJfmlYn9h/91CaVI3ZFDeE/dFTUQnVFpWJTCQskReOHUGhltVZXIL/Va+CDzi0KFaadg3Qtph&#xa;vAfJFNvgQ1h+AbURySB+QbiIwA9weYnO8U7G17LPogy+W2g00z+qww9nMd1vaWAweyrFGZDzA/&#xa;vD9PjQzwx6+UTRHwwvx+MIXehyZaphmxaifGhD4UttM+bvHcHUg9WbnfLwFJIqVO20OiTpKqo7&#xa;ZM0fz44fNuHPgRvDQFwfMEbF8FsLN7EQrfQCAGnbVRjfN2jdMWbzWLONdpFeEFIdz5f0LOjSSr&#xa;UH0Zb7o2UuEKEcsWY+3fTN5miUQKAc//NkhRvKAIFHCeKfOnEdWJ5v/yOy0KhhQ3vpBjgT3D8r&#xa;t9LSqBr11S8tVRuowiDKdK2/GI0GEXhuOHV445V1ceYjuYSPIfXJFiHLZU9/vfUfiFbuw0k1x6&#xa;P7glPEvq8PL/nOvwPn8ztnqcfRna3L78NbS+Tfs2tLulm3ofiJH88ztdX/rQNlsMeHhVilw/6o&#xa;/WU+73zmd5BWF9tbegGZbrS+Z4tcio5syiHrMQ3VcUFZQTFZwLCbAR9ua4sLS+mGV78cB4SQA/&#xa;3S4yLC/2XFro0V7owThpEx6QFx2QFQ2cCPkxE06B38qMeCsv9tdeEEDFCX/PvrufUcy0+nk2K/&#xa;m8T40+g6REnUVUJMnpxPr5hacsyKVBADiJSzLrZeIutRYDFYPIvmVBRFGGnsY28vFSmDeKIGc4&#xa;jvth25VAuYq1U4V+imeZjVNYNlaT1E0cnr7AcYpOcO/wkQNmMVzyaJCIhIk1BgEK6CbhHoyyrD&#xa;sgxJwFmXrZSM+PjUlIuUbvzSwAehQX1Nsda+wGiQn5Ztf/+LAQa5qdZ1h2pos0bMzVzznZhuft&#xa;z+VnH67BdgXl18474YbvmBk82qOYqHptaIvY1exOV8Ctk5xUOHfVizjwzM/ai9SFRbZBN2Hz1e&#xa;lHzZ4Yn0M1/ccTgZgjNvIWxaTFe8NbxA4BkdcwCvz2dDf/kETEgSHzGtml8mnnBtXk2WvDgVjD&#xa;5p0l4/BIxEEgExfNBdbLwUbEjhiRNUwre3e6GM4zOIn23MU3XC/q/ExcpC4kMprCIl88nc9uAK&#xa;n2yDgTukmc78aFWGMWgADVtOy1oS5ix4zYIxG1+tB4HbaBQvAGTdyeFukvE5U/B3BAMpn22pAX&#xa;uYEj8IhF0v2PAdWE1msDX8SOHLFHNqr+yPgdqmmV74ZVxA4esUcxqv7UuBDV5NprA1TkRo7gLQ&#xa;mp9tQ4Earple9GmVhjHECAafIfWIS0PQhAgG6K57uhJl4bBBQgm+R6bVQh2Z4Yz8M0tXhtuIrY&#xa;sSL6CkexPzZmhmn9B4pHtT00MsI00fPdqBO3p0f6a0flzwIMME22vTbWw7RoEb+6kWyPjffRTL&#xa;a9NzrCtXgRfUWj3B8aOcM3uPluvkTqUiP/KUXdHhgLYpjwem8ohm8wELyxEnswIPrqRuWPA/aQ&#xa;TfT5bjRFbvwI3hqQUr03HMO1OBG/8pFgnxsFoZqgEL9Skf7zRIZhWoiIvoZRr0+NA7BNAgRvis&#xa;QYp8a/GCY93huQInWFkf5UIyZ4cSFIuAfGw4T7sUd8M6QjagQU37P9VkmR0iJ2iIioPyuGZY9M&#xa;hUjL3llOkUUTB8biInRDgDBcWHFRPrtmJNwz46N/UbBeG27EHMOAkR4sX+8NapEbEQIO3Sj9Ec&#xa;CILyHmM9Pj3rgAgQbNCMOh8TB+qsnG/HGYLsWoE3Ui6l02GsCcr0Flxj9uHPpdJ+bQZVvRha1l&#xa;UyQ8l37UCRxTjwYC8YEP/W4JDZDO59CV1RMzDu3pGXNoQ9ChM6MPOF6L6bL13skGcUDbc2zgg4&#xa;NVNewpF+CvgUTsAvZ7wc/SU5sQ8JYLGHsi6DctzO9Ff8qEuBhbSwrsd9cJiQ7/lq3PRQfuhlak&#xa;re9RX6veU7NrdODQqYS4biUXwn1cwSjKfWzlF8p9XCEo0n1oJRWaH1ueA7IfXW4A2k2odIBVoi&#xa;saB/GhN/IM8jio3u+O1b6HAGlFVfQJuhtJRS46P6I2Lg9Id+/e4tEHKJydk2c9PltpshxX5hQS&#xa;gMjBLzwXVu7mipayucS9uf21voCKJ2h9uRmIlL26Tgmm4RX7Mgw34RMQfe8NGzxbHxSUeZ0dvx&#xa;CiLBkz3iL0iUHYFvjI/gaWe1kiKHIr/AyHBWaTZgwy8YH+ugHv/R9aWPuGd2IiOhAQktJ/Le8m&#xa;dnP9L+Vd2v+lvPt/IVVzNzdrB0tXsv+HAJav+emK6o7267fcmssgm0gfmV5rFMxGH6EhXhQkFK&#xa;QDjSZNjbHSKT9gDXrpsGHHNfI19rUW03F0K8cPERM3rshznMjzw5nwsXeHooLLM5Q9N+2577vv&#xa;Sbj/8zOPKAjcCWwIS5cYP+XXv5/BosNHXnZsNpPsZ8uS3vYErutBgwQiT9pujs+PPItzJsV2po&#xa;ymBu2m9SbFZg4/rVyalPhXz2PIjcWUZYtU3ho3AY9hrwqj0yKn4brPFgS+3nvciaVaa23i3He2&#xa;lRwpOlOdaFk724UlA5v+yQOWapJMegMdFQkSzIbDbCauRdrInCtggsvGa+wdHr8kd3eZ2R4UJL&#xa;6edCkae9OO5HiCvt0+SVn/sD30NP6hTw45sOCjNJPBw7ZKtC8GCIfNKqueBEqf6CLO4slMvrek&#xa;MZXXXbr2QKpnvawqi5q6SLFDx0gj5dSn8OSlcdQCqq5+5tIF5TyDwvePnKxuig84bJSahM02kG&#xa;+X1KgIXUPJFgjoEBFR41UNSeUBTzB43J0zNz88/9KmqS63NW9aAvopXVbCUiMerUUxOi31A52S&#xa;aG5kFJSacgb4Wdj03vUgjcepT78TvaEWfaM7BWMeKvdwLkBbxsgtVw43vG5ZsTNgm+nZepqAtV&#xa;MJ3Q3aSjQjPT2iax6vOcGQOAeSbScqV81mkR1P9KrJShxclW+3yCh/0O6paUALC6d7s56IA8qu&#xa;porlyDx2UPGNAv3aOVboXM5ZuuxGbm7TZzh5psl8Y0KZmXZDxFhK25QbkLGdiBZnN/pPOjjaOD&#xa;emfmMuGJqlyHvJK7tl3e0E6vqiXNtpZQLDzFDHyKCzg21RANXch/KIxgHAgKEGEELurG8+UNMI&#xa;se/Mh7VinEZgrjIvYskiR5pCj/X5QS+hVypkPHHJkGd1C/pX/Lnopq38W2WPzxrRvMIJae3zsw&#xa;4C7gld1791WE40CWHDpp2FRbthBts2vfeARiqL+/IraQVFnbDA1DVaynmY8Ku/xLzTxLAgx69T&#xa;0yZVshDmpeFrJ6+qs2m6wBQTF9PjHJUTzCkcvfHWLFrWSwKvHee8mo0jUlVf3lSACqXZnYG2of&#xa;aQKfeasTX2wGa7TbPvioOHpnbivIKqx6YOcI5jCqapaWBnd4+np1GWNimFpr1Nw9jqXUujt9ZU&#xa;3AyYVHAoDCXXRE2QNx3XzyhOM+eRGJuJfCCiLwA8gcGXIxFUOCVicweaWJIlE5Zj581lAYj5GJ&#xa;TkKRyJ+ykvs2g7x1WJ2Zb5GCyDB3Me0E1cy2E87t1d4ecLltAKLmEMFpwECQ5ev1Hs32sx6w/S&#xa;f2foGMPNASPLT+zof47c4SmdCTXnc1uPLCbCQzrU8s7+PdMVmNLuH86PotGHttl6EU7qoHwEC9&#xa;k7n6ROYGeEhSTKZlFXDmF5z9xDx+rhMd3AISYHQKTx2QyvHOpLzP02JFrKdfUwcZDZE5a+5rw0&#xa;uOafBZdR1IXkp/CyaEcrNHNC1UCosVftMAgBqKuyxAdoIIMq6RYv1cUeVP9uSc2HEyGOSLPdJb&#xa;R65okuc34HDFqC6e50hMVwZ00jwvLMAvxKHi9xeMAvduJs+ZWPyKI1ot40v8Dp+JL4Isl7pC/+&#xa;GrkqOV6SNKYNNTdMeIeBciW+AWnki7/w8dQyReeOM8udtOnjYzYGMKFwx8bXzhm3yKKnbjAnzI&#xa;rdGSN3eLh3dtRSNG2X//lDYUeY+vaxpO3k+upNFrKxr8cP/E2HhSQp2HKbS1Ec0Qgqt2VIUzyW&#xa;qcQaXLgbuXoOdlzVH5XJJQFz1yvFXKWBpOTU8dWhNMQ/KM4pwbq4/unmJwyZz6KkaKwne1/wTy&#xa;vMGYYvUvDI4kxR8Bsk8AABzmeel8c7+gMV8lusVV8GzMXtT05Aprxi2CK68fyEP3bYufrgq0xo&#xa;p5SNfy2DrSO1jaGKhG9sZR9xFJuE362utElQgKYKAuJ1MCuUOIWxvF8s6ePbvtL8hjQeblxgJO&#xa;mtpfN9GG2SfNFZ3ReuPMyTWi0biZ83pDTl9VXsBf1f0eiofrXAsAOWf8whtq+UUG8Xisi9q6Pv&#xa;l4qoO8cqX/rfApiCB0fvPV6igRRD6nPywvp3tDpX7QhMmoE/kr2dqXUBnyAG+Cugya5epsOWlb&#xa;90fm9ZjpofunG/MRIhlo9vjG7G544LlI93c7Bc/FKa+18Ix8n3j4dokuff8TzhFVJAht3gSEWQ&#xa;+A/IOJduEIUL95oONmmBwP8tnilzTB94QgABMSP813jWCB4s91/jGdv/bjz7n4Dtf3Z2XGqiaq&#xa;L99iHlMcFFCavZtOmQRoBFF7Wt1Y9GpaE4RZsIb3PJGQxvMKXOySn1bK456PTc/9u7r6If8+n2&#xa;qzl/Sby69GcVhSPzAZrL9n7e0w9839ufHvj990MZJPA9s5Cbd9buv3XEp6xd3nV8IbGXYNYaYp&#xa;1Jt9fRuEEazNx6Tr+c15dCVSUhkPyiQMbG9JKlIVCcrS1Qn3ETxmieDidZeBhN7OAk6+7VXrI4&#xa;0Vg8Zv2ncqzRXztZGoq5bipHuk3JaANTXl/NUp2x+VgVs+sMr2r3smFXhag0m1itdYakA89lQE&#xa;A9/5S64BiDky0gqJjehLem1HYyxGYbIDFnFlV+ZTHnCs7SkCtRQiL7V4VCFEMiFc4uxUSwCrfb&#xa;NevwodkkUExt9xjOlsT7DgpvqRsASSdbTve3dPf8avxMU5zUO/cEFTYGTBxybRLKiB+QcHrI3V&#xa;CEn88S4iUiDKuTK/UlHVHEWr8N16NCe80cUsVumoHnAI8bxlY+jtTwOrWQh4zQqxjRwNO0Vu0G&#xa;6i4wEorjfR6TlLww2qhsh9iVUjBEfJf3kCshjLad0wS6C4fvfk1GPLcgZG6ihVu/HcG7SFsKCS&#xa;2i6KViJZMbPhkQ0T8unrtG13eB13XkRMycpB4bVhjGD/cUd2W1XOlVYGjgIUyJfjPawlIwJHBV&#xa;G3kuKdcyqC46HGBzrN2mdDTuCnddkrra9SGSNiOMl+IMtLIDnK/iMKdpSm6ae9FMOkJZ4rx8Jx&#xa;fvIuluGV6cClQD0eRCJuFkPYGSsPgS8/Oeto1ZfF1N7YUMYIl4QBGNxeqmsXzsnlXd7wtBkwDn&#xa;MIXRKJVn+4KOuHDBFhqmhjAnVksURBC3Lbk1ECin4opnZVnCeofTFFF/YIEYHQrDwjDJl7Vx3k&#xa;Aqt4qCGbOKt4q9NFFVxzqhSeZwnRNNUX6AMUC/tIC6DtUZImcAP3cyQHOJwSEu0c6jCkCGNv8r&#xa;FplX25znQYfjn9mCQ70DTAl2VZKB3XbhGTl3i1RhLXG1abqB6w/GlZijpzmf/z1YsvcIksxUSg&#xa;TLkFKk8/JnpzVsPTMuQxPQLQ3b0GquVcRi5we3g2JhriciMiTeS2FSOsN71VZt+yhP/IUBXOOD&#xa;davDfTsQWiuPttbjRmlN8g21O7TIg71SNtnoM5kRhhhF5FLBXjHnBE54mBOH+MgMOIsMMa2g9U&#xa;k7T8gmJ+W10qZAXnOPoJeNi89OoHTWPhZf/IsiQK7jirvbvspnKFMRUAQjADhncTiKJR+kpxnV&#xa;ZHE4sC3ZJhMmZ8BJbcTWpNfPp3lYPhK+LHcLTUy3qOg8vZ+wbjGz/s66I0DEObojyWXzXrbIqH&#xa;DaKCLkdXjZGcOgMUACow2xB3YWBLFvLkLwMRzHCdt1zKG3WbBIsR3X8QmQNbS8qNARv59j4bhB&#xa;HDvi92xyPv8ZmxvTOuO0u7Lj85XVM/tIKGB2AbYbtOAjd+DSsR/S4EGtrbRGd9Ic9ga9Rfn8yz&#xa;C33JEVR9WFdQst+dd3ePvL9B0JluiNlmPWdJ3/xkGoN+58yisgYTaa2oW/wdXeQ53P4xB8/fi9&#xa;1UD8nujoBU/oz3115J5IaTpfud92AT8j6Gi8xuNtNBYmm2kZJRu6ZuosqXYtpa+PvTDeaNGfju&#xa;31beTccSmuB1iRJpaE+d2xSbVvYI3YXZY5hbK7AzM/gtThsgNXErZ9Ici+8EcKF77hu4Nhes5l&#xa;pJUYKdzeASPsHF+ZcjKWR0Ve/dbgDC0ulLlK08NbY/4+IgnX21h796/Q73DYwEGsYqrYd2P5MN&#xa;CmHqrZz6OXlhnM/WPd+L2x8MDGiILnzm9O6jg+oc44Tom74yWw6n55ZNSFe28MES/CdT9YfTNh&#xa;IlQKzcKZ8rvjMTDih1N9v+dM267kH8duwbQAp2v6Q8lk0hyo20K91j6dpf3/3q7CNvt7XQAOBK&#xa;QA9//F//+7/xmW/0n715qokmi/8ig7jXVYGIYrNVXKoijxErb0NOjHpWlB9cp0WzkM02AmAIfu&#xa;zaqXf8319W337+cBkvbI15fHqvyVgWqK9zMMyFL/By3vFJ1pu63rVipJxbZt54tt207FtlkVfT&#xa;Eqtm3bX2y7YttOav3/mGPOucbeu42118Fs7Tl6j9929avfT3/6/ZdMFwv3QwH/J+6Xp56tPxC1&#xa;eIIA28moO5mDRpBXefO40zKDjkmS5Sb9alI5aB4WW/Qt1WQ9hVKVAoQra9aJBykMLLyIKpLzSY&#xa;zFW5QZO3IuT9bN3C5D29iN2bmdTRdDA63x6PLyswDdYr8UEk/M6IkO9lJiL5ke7fIMwm3sJI8i&#xa;MYvlYyw7RpoXm6rR+mn0mYdZ4BkfhKBy/s63K7LuJK/Zvys0IhZ1n2Kh59VqjLBHElWk95ltNf&#xa;V8VIjRIx8FR1DALTjFNbaMjHHiNEmUacsf9yEYJm6Zr6u+i657cWIL7xF5L9PuA8ddq1MR/1KB&#xa;3cwEq7ocB+SoVEbp10FgmEmXfmUBxvEaVMbFn+dHBJDOp7dUMHq80sMyew3mLuOZWI7CdW1SDT&#xa;osYM7gNLP3rqn/QC9EDSGWi/siWtvQAYiyg+dNRqeCZLmdSSx+YmKUe5DE3ZVqzIWTBqOklgoz&#xa;Ugfh062If6cZhKczQXArqpMselyna7TH1HlSroXol1skwSD35OKo8VcY+Zj7cjWsKuLGKZorhS&#xa;sKYSkEorTFpBA122AsZ6bCM/3ZAaT3BSKK8C07X8jcz4vQwcYwB4uz+PRf3G08DLDhD7Jg4OBb&#xa;rHyUDhzIlWi5x8q16znex+CalTNDTjPTY0VzQpnkG4GxS1TtaN9XHItqgJwbIwKJTMMY3GGpPW&#xa;OEMx5mMkhCjd0U3Bn8Ky25QjIjjpzWVPWCyo2gu3Z3K4/x0/lSop1zKFSwosLLZnHZj2KjHly+&#xa;x5WpTTG2In2LBt55Kre+oRYd52rHg2RBzFPh7z0TtTzWPJnf7jqFE7fkseruXNiO9ELXDKcYiu&#xa;R0W0xDWGQe1BjV6YzQsdNHIg04o5y+qScnXmCb8EVFqv2JtmU+j+Qn/450ZkRDRSUy38l630tT&#xa;yx7Vix7TJVPgelKOoYY5ocRUgwBOYm6pHhIpe6/DTwoJW12aiq5v0B/c+8gjHyVRRMfeTeO5lW&#xa;+JaxDlzvDB7Ql1xYFW+WS5lP7VPzH7SQsc6XTDVKtuW6ovNPEq8AIeF00PNNxavkumZ7Jy/dNp&#xa;JrlS0munVb9JIpY7Rv7jlUb06KtZUPOZkx6Ll3ZjUOB0pw5OriTQ2mwn9z7A+hnfsLQ1gAkLwt&#xa;6AtlvDiWBLSdicWm2Xop6GQxSoyiYh895IvG/QbHnTdzoA7fGOxm6hSZBAxBSBVDWdT0SDSleT&#xa;m6CC8RUSJU9KqDNeSAwDFLRkoxUQ9l58me9sS9LNcSzWU1ADuDdgKGgy+VbRIXojdovI4+7K6c&#xa;Y2eNdjpC85v5qxyw16Etsz/aoVOVxn0OnSuP4z2pXKPasRbiSLmbBQNX2tGwYrwhcdKSE8oLCb&#xa;gkDxdNZVZStd4Xj9ylgSWdqPyq9k7sawzh5XcWMwAYx8P1qxNLZ4JdFTlSJ+cU5DEUEaCVGGXH&#xa;DGH6eK5JzEW0olgFi6Is6SAkJ7K6xk+k4uwcCyWyDAT4NVwVlEJSHeFldxebwsW488GHT8cPD4&#xa;7Ly+N8+VB+UvzCUQFFCmy5UmvzEM68QTBACtrnOlpQ7BiVCQThovvMBqzNImcibs+LvjYdnLKI&#xa;JGlrVIrz9FAMz7DEWpEhE/MuK0v3AMPTDwTA8+lApIuFYU8j6QziZ+ythrxL3+xtogpwtHPl4i&#xa;on5Csz8i3DDiR+4JGlcV4P2Iult9enU3bnHcIWpEyRqy+ZEg9MfvGOBZ8IeQMlT63u42QORPdw&#xa;lJFJLj4nJtNFuY1onpaULZOb8eUXGqrxvU1icFO+fsH4S0NyIK9euEqPYRK0DVM9HfgJ9dXiMM&#xa;+wvwBP8C+GrwfwU85/8J8C5mrkrODo5mzq5e/wl7wH/C3koTTx3b3x6TUq6EXtqqT6YqXQS6ka&#xa;ZoCbYR9gQTRimDUWSRS86+/3tqOABNp1LH4wLphrdZxuXc6cV0+kbSy/dqIk4k3pk6E/A01XV1&#xa;2zndIff5cfUkCBa1Cway9E5bf3SLvFPzS9mLKcCj4M1uaXNZZKXbcF6601ltrMAkSujFNqYYZ1&#xa;teUjVbpC6a24wOJgaFWSWppGtvj1svKryoaCw63qtnt08g2JchMi2w98N3yfsrelrDh3qAUZH0&#xa;1zrgCQEbws8j2ou9cw9TNFoP5dhy4NmJaOLqYgOqWPDH7GPPcZmcI/Fwc74fR6zHnB7rtFeuuQ&#xa;9Rp8OP2o5betXJabjNSy2aSRuOHY3226a/07M2yp8CLzMtuHqoZqaF2V0T8ngNdhV0GFJc2kEl&#xa;9LIUlAoUQPuWoUMLkb8FX1U3YkAYCXEMehsZtL0Z1llGDBTAIeks/C7Isyb9ZgaMa6hchzdZxW&#xa;JkMC4jc9AgsDeDJ80gNQ3j4C3uPApBukpqpU8lhQcGYLbqFmbklVBkocawQITLA8HDk81Yw4Kj&#xa;wOCVt86H7BUa7iMAXZd/ibu6Eh16fLDRNy91t8YDm86Bq8u0Q3HIYSeRIWiVxAuLp/li7cNyEq&#xa;PECBt5Bs0X3187342deF0Nw2pjdxqjVD2DSHJVg0kiElCfeXZJTxyUZSN5xtooBMYJFhn0gQKk&#xa;xrzaD3SzKNFaFJkmYWHO94kmvFr3C+id0R6mmcPoIP9Z8PVMhJYJQ5sn2LlWYqm20lw0/fxHRg&#xa;D541ocKiv8GKZaTdY0RfoM4kUXCGOCmG5Pf8IbeKaEMWGioqeHESIruh2jM4pNCtUXbLkd09rc&#xa;4PPW0kesWZap7Zr90Bl41krST7E4UqjhfhQWaDMSLsaodDHEHjmfaJcKY4E6DXPoRda3mAE9l/&#xa;KV1znLhd7aCIZoNtPLKQhVwL7UN/ZkfVUC6fOndnyeSEFsH2Oh1DZrBLaKIx4RNG5y2bAuRoKN&#xa;k/iIfz+yBr+5QvdzpV7IrEJtqeUaG5jglCP9LGlgMTMOD14MudKBrPh8uqpmWyAtPQ7isarrft&#xa;p25kmEwfagrPkitV4jfcIhTHRcAcLQodxwQmvFTQS1EkzO7ILT+GzzIqoDvp2AEmTOHhzO07UZ&#xa;uBOvyk1SlJuvfAOZvFr4rC0qJ6e6rGbK2Hu7p5Kn9u9tl8VFCvsXKuepSh3cnsKOZSwElotRyo&#xa;fheu1cg1Hs+4pe8Wk7/KL9kNLNNeRT2LBY2BmKyG8lD2DtKG5bZeCltGbxkTtf+HuKWvCg4zFn&#xa;NEWvPKm5+W6xQ2NjQ9/6R98djq/gtl4HGfavjtPIsYSYYrYxlH838kZoniicGxTo9/6GORLmKU&#xa;I56RiZiT4OJXRmyXjH+MiQQlx2rAcC8GyDGL9WvwRVB2j99oV3aD/sKfHDqyKJmr+jR+1eRdEJ&#xa;kYBKm3w15/ch1BsMKX5+hMhlmCQ/gZEfXDTNwHZYSuDvqkamZD45i37xDhqVl5MEFySLr9yZGx&#xa;LVG0UUFC/hqjKyJ3mD1gRy3mQz00jQT2JvCSFV9XvycmcbxW7Hw4ld++sXwm0algLFn5JvJX6f&#xa;bD12aH9rLyD6DHifQCuFmxW6ZYHF66b+wL0RV+zQ/oKK5HRG5DrvglbUI210SJPPflyop0e8yN&#xa;pH/EibHQItEHKgi00MR7pBLe5lQfYGcQaHvvQx/HzItOyc+nk1izuAZI9K8U79syCL+n2UqfEn&#xa;1uQ/9DqdDZMT5y/68sH9u+sCkn9P339eEmjBaOEvEvzh10o1SiOvzbBBK2BB/QpnihaFdUMdAM&#xa;GC/4tim7KZ6xyx1nyVpKEhPLzpwdLuwurCbM36Iq+5CQpMvnehIHRtzZpJt+mx/rH7Qj8j/XNz&#xa;whEybOBq3WHzT9dTz+YfXweiHy+fUGCZNFOoWgbLFqasF8lGYkN5pUbro64OEgHI1O0qWwWSKt&#xa;7tnHNrfkUoLRj7sPQXTXIu0wIeXX0Bw+53rbzRizpYhsTYv7vtdG103w5fq4vXkoEXTQgZBV8D&#xa;iveKbNGvlzmXmjibmxeaB4tnmmwdNhvbquqKhL9vFi6uAWm03KoYGDLO1nTXIQ4VK5uXliVLcu&#xa;2sq+wqYjkuV+TMP157Ocbxmel5rUzDkkYR4VOT7cgpazCTTG1/KwydqXhTzqdeskD2yxcv4oVn&#xa;wBQoTpuTZlvRF1ANBpFPuprip5SotLeP5LUpCJ0jUx9z2v5exdSaY1stnTTBKxwVFExTWMOCpa&#xa;fNsC+9RQzYjTcAVc+rllnOcVgzyJYUVYyPeUxVanHYUb1FS2U+4+xKDkFzWmsBD/z3t9EDNupv&#xa;ERFkncqJBDIlbKRQlI+OJ9F4QsfGLGZ1QCdaFF5ZeUYsyejIOlnjpUFCi9JWRblyvVQpkDIWPH&#xa;/uKRCM1NDz8ZNwI5SIzWqS6kOAxh7tBt8fYEh7CumyWQHa41o1zPK15t/qANwia2f0ghzbtgEu&#xa;RxKAhtsjmYPpvbqLbvKqzvwTiHZWATHBD/GnEcAhdCm4feeYa8b3rU2LNJ+HS3QEnfH9MezHYj&#xa;8Cb1obKdpi1xuIU8p5ORxvHbAGkVUyJx0fCMyUi9TK6lAxPzzHOiLdGWol6t9qKU30ZHZw5GPp&#xa;5nRogNRd9QwbuvTCtnTIW3x9qy9HjrrRfreWAmvmKcK6+87q2/HcL2YK+WmxCdPL5vfYfJ6Z3z&#xa;YZyUj2JaF4imC9bhOYak/EAhyu8La9eX7lq5I9SMRmy69e6Nm03LsWDze+umnLop+jz7Trrzso&#xa;emRoTqpguFt6MhgcDR8cx89hvChDjiliPzTOaO1r0oXB2eZkNJmzgWzH7bOx/cl7S3V+kGaI7W&#xa;k4/6xuRAhXzpiBsgWpzFDVEts/Ih0nzxqvZXhYPCxkJiS6t6F2vEuRUsir9FrSrGqsb3a3VYlD&#xa;RrYdsri3Wq9c7Op8hRs3j+qGM5IVtKAA9Ez8dseJ0hy1ynu3VGWtYLHD67qFrkl5WeBKK2g52J&#xa;/He2/95sDXTSGXGjcZkZeNbyMHf+lGpXuGsSGEYSqfs3lQuHlnib2qtsFDlOn8XAf7B7NT3T00&#xa;ozTGVinhVWQwKsS7WeHGvVMU9yUL9yv02O27fUB926Ma5FXe8pCaG+8tpNl8I0OOT8LStUHndK&#xa;zutX/KTWs5rgC1zxpDq/p2Yt38iskLjhXzHLBoPv5++vZkfa5PQ0eRwJBzaJXuGRrSPGoUqKfB&#xa;Eblour4cf8J/yBgU6We+25qM1sRweL8Bm2Y739JtbMWHE4N72UsF64QnMFoshKYAYX0CLzOlpW&#xa;uYFzClUL7D6Csz9slmZkE5bgDgBJ+tP+rSUa1t/h00LX2SY/E1i0iRm5MzTekOB4A2mOI2Xnak&#xa;4KZ40jyazkw+jnvXYCRigfDUzpn2xlZ6uXhQa9osFLSVtTmtK7Imh0fbLVU6GEBoSrexPkyvec&#xa;Nc06MrZ1ME0LcqVn1T800L+138u2S3YkH5sr1B0osoWvcbWas2ETI1zTp3RU2DOysGCWb0B7uv&#xa;PuXVHi6sfnS39KPfKESIoPSxMdQrR55cTpvmoAeMOMExDUK67A14W8UT2hVO25mQIPmCCU6H+n&#xa;uY/YaI5cWYPb8Judq7GIgv5doC97BjZtprX04wumQXC6KA8ZluM+stWox1vWaXMziD/9lDTPpE&#xa;g+ngPeB7AtynNOhryrrhM3m4rOHqvXoK3w+NFOwfZhSZWooWbx0IONC0n1OoXHV9LWERP+rN5O&#xa;jdMtqTjsfInxLGe0rOByZd05PZq6IiUo6rwgkAv7bXlKuTBko2LzTlnOFltcitH1cSOkC7qMux&#xa;qtkQ+mdm06vcoogs2x9TF5uN+yyQV3ECorFPZYEpJXyXC2vlI5p9JQkybnb8aVOlgVWAHCy6TU&#xa;I1ZequJDkqtb7uX4qwBt1qdT8XwLVD27VCyvunE6YL03tXzRrQj1dxU0VblA9FZhMly30oxenN&#xa;9jACk+Tp93SP97XpdhP3YIG6HhaNRExsu2o9WiQK89esMSzBAyfnYFSO8aRT15Gopux1UvTJOs&#xa;ljVlQIxbIn6dTDCJCm2OYKMYIS2Kaq1ZZs3gRIg/WziXJ4DApczeN03b7KGXyaofYUBxu6mcNP&#xa;ur5Y80sZoWt6aK7kAGnGheJ5A3XjvVlcnORkF/OX8wfJyUoMzmZy1W9E7tznr/eA+b9+KtQs5P&#xa;iHERy4LuW7Ia9Nri08LC6TGN9UJz1KQ9P7PMNm/xhOIxJMp04DAdwstzVVnrRbz6Ji2WXn5pz6&#xa;Oy573L6Iw2ujSngiEWlZ9dYzgUQNN41vS2qaUfm0UOzdcYqMEiIC1dUVhCIPKLZhIdLOU9TWzr&#xa;NeM16s4vsH0TwM+ROwwQM8U1guiAvGZFMp0xoiWEqq3zBqfDGyCXl/weEERhYSJgVEloOeSFV2&#xa;HAkHRKc6rLs6wUXwE0qClGpHUZIVOQQqs8mpuRipw5Y9A08dq6lKU4YfnPREhBnUA15PHcWLHC&#xa;BSovIpHNpLxefFk3jyNdrXYiJ19sPjlehMD9BWODJmZItmNhJQ2g8xQpq5RVyQxTvo1Damft66&#xa;XLWNkR2vzLphpyw+lw/18ZWrJBCNIQ2Uv6ySEJxyrTW9QFdz/dRtyxv/bd92Zo8vHKiA9CLiFT&#xa;p7VrlATVIEKAxDuSfqPRhQ0AxFD1X//h0iDVwL45agPxs3SddHvwW4oHx+lwcodN+MVqm+IiIr&#xa;o9k+t0aq6AXREmsIz9ah6PFSB6RQxNEJJsB7ICaaPFOrQXLD+pr0IB49UYrj/lBX2JQd4Y7gm4&#xa;rh3sRucaKxa9H7VOyVlMwkSROhqBbHeBG/hi6/IZ/qV+UavukbVHr2c9+Amo4ZXgG4vrsxmjBB&#xa;sPH1jXRMSTNHK4F9eEC673iLwNZtwq/DxWkMe0RpeReVkTrutfIWQ0re3G9zTSvLuXzNW1GvHK&#xa;H6w3ab6nCbWmNk38MQ50K1cA29yc4VnJFBSwj62sYTiDSQDnRyGSTBx05ExQ/gA70XQNO2hmQF&#xa;YLkftuxjOeVnzMpxJg0RhjjUAvBNVr+PxtGh3avVKPfZ5a/RwRLtPhuVTG4orLdPfM12ftmBnS&#xa;Ny/VxOj/kBJXC4E+r5/UhdvElwig13MEsAfkrEHevycSQ5XipiVq9e2ZfSQ6Pc53pVO8SvLxTH&#xa;zbQaYVeN6Y6RLG2sLnwTHr8SET52VwmxGRjKgnqZaFNgYiOPAeJSmdVO/PPFt26jF3w2lelaiS&#xa;0Z61mFLZnoWYatGIIwfGih12QWxbegzRlbUc2dlvGyhfzSg/zy6a9DISG7yJxdjQvy1DDmo2Lx&#xa;p2fxp2UxJSAauqvcpfqumoA1hjcEl9fpNOhPU+fPUOdPV+fPhPFWoHY+jShwNsJsAH/ggWnF+L&#xa;kVJhiMIn2NhAq/AyN9w6QCv3NiWUkteE3kn0TSOSKM8J6yFUjCN91H9EzUEyLq2bczscsKrwFV&#xa;0lUbPloRhrW0PMPOCu8RCm4TSMqJi1gJF8GHiAUZ0p8nQK2GmNIuSk/9ju8OETIkjBTxgt+uP+&#xa;GqhO60gocOhvj2e3Xx8lwiZfu7EgR31LfB/uNU2k4Hz/JK53YuPCUlei+h4Gag5MAtmbE4fRya&#xa;AL0GYvvzLZMRUs+UapetVKU3+uA7IWoFEWXf0jAyNopNMyEKBUt8MkKk+o6P+GBiop4n+h1GXS&#xa;CJd3GKIB60JusD2kC5SN3Kth5c4n/M/XCZNeV7/yXx2dj/Lidn+v8Ro/x/xCfrGshd03CsEf3G&#xa;oeRsFPK6UJ1xXLrz6FI6jhxY4AyUhUK6miPTEmW/SskTZly37kRfsygZbqwUUhQnuT+U+bOoaB&#xa;BXKEN7uecSNif8PMwvo96vfvT8gdlmu2Qhb6DbaD6inwJEqwfwxtirnXvOHiooV6S7T+5aUDAD&#xa;tQZZJx+i5dTZadMqW8hIRphtdZKizJOfI3QaAN1J6gB8vySLaqcg3XKQLEIsM2gn+U7B2x5eMl&#xa;tYRiSYRGoAm5H8tmXBbZEM0OAbaTNleZZhekYHyfrIUusGFH25QJm8ZW1pzbtRBma3XpTGVJtV&#xa;lNsdRdWPxo21RMenVASXZ0gUG8l+qtRJQatq81j8yjOR43Q9QgUV8f/aDFF3zs7jNNhR0KjSgG&#xa;sHDTPIFgVnSZOnrLnc0eX+6pJ/TKOKSQwSwE9E6SUB5nVROBsIw3+wingK9/m7usU/RcKTWIi3&#xa;4My98MuG18+rs9kgtjh/o0gjNQlrJhypraGu7ZIcMxpFv8f5tn5tp2oO7G62SnTMJFdDQeWJs6&#xa;SLJSE3hScddXzV1mawTO4+lLPl0tOKSllgh5UWSRc2UCewM0vWfM7iL/FQ7oPJTGSJgld/OfkM&#xa;ttJos5biks/X0axgF1A150rV2lD4zUl6aeGkMITTOYQ8Q9OPPCgd4oPhpHzOWRoS4g9b3VjSWt&#xa;Aeb3ZcImarqGEi6yoC0ITBwiEVAWa72Epi8nNCOuwy4KQwT9UaWv5YNzppfrD50RlIzxhZqKc8&#xa;E02Y12YDH97FkR+MH3QbXL48hIXGYJvgc2ULmTAy7omnSugYVB6IExUe7RHsWPbiUGHDLbpAnI&#xa;ocvY6x7O5+0cuB66pW/D05q6Sr+jsip1jrPi7OfPnluxJzZCD1/lcrzmrtzGLreXqunBWK1N8S&#xa;AWecuIVMX90X2re1FtpRBQpfbt9/ogpYq3SnnBT53sF8ftdOzhMp2PkT9XduMiZFq9X/RopAt7&#xa;B3MbBPuonaTAQIVmcClGT/kKjuPybXIU9HlJ+JBeArNobnUsgBL4s1UaVeVFYbixfVq3O/yQLB&#xa;XyEI/Ky57NqLU7xeyrUBMpr044VeImT7WmgrjSeemB5s3ZQQtDuq6TzV+Ha6VdeHs4do6tc4Ai&#xa;lOWIZsFPaSNN3xdQE1Vu6mNOrGbBmJGV6Lc4sHtDloWLBMNXi+7c3tEwx/ovWYbZKHak4vHzFE&#xa;5Xz6Cz+1WGQX6LiD/CFbz9uiTdQ6kU+qwPOyfz6nfuGvt3Rs3xJlyr8EuH0pU6HswEacedD1bg&#xa;8g9gL7cMMnhCmaAyE57Q9ItQpm0n4CAz6vJw31SH5ILqMTgOEPKXeSL8hXmHimPQ6cYuhAbiRx&#xa;8Uk5WIm9Su5bSt6LEhGwJL1igOtKFZ1xqQ+/yDdL44FhfebCIdv0Dl+3w/3hr+I9JuyH1mci3g&#xa;Ehzut7uqLYboY+XPO1R8jK39xA5FFl09yiZUecjTYzz51S+fjzk0QZTzzxnr0hFDUzoyC8R0mV&#xa;x1RkPDnx5/hH2d80x5yEvIPrKTrs6IP9IzYhyo29/NqZgJhtirRNiRW23QWURursUSKIvGRcjG&#xa;6f3yJwrIC/lxB8Bh8clVTCyg9YEE3k8FN9xdjNyHap+EJ+uXcoeFx0hkn7IwG0byJ2NjPa1ilU&#xa;rZ4vvKp7h0z6DJEcyywF/Y/YxAfwBxoPDn0pBelm0pDx79hkjj+MaINU5lkZWZKq6JrK0BKMKf&#xa;3PP8ZScLTVIFAhv3wh/5fcRNkj819Wjvxfj6X8b8xF08T2t4dWwJYI7ovWwbAZQA6G1rERtyMh&#xa;LRJrFGv8vu6auhFsmSptQVla9Zvzwvyi+0m1p6A57MH1RW36JPb0xMcCiE3sLcIld7nx1j3dIc&#xa;j55/PpLedL+w1AVNM3Yv1ROvJOyyppPyYBUO/OVXQk32F5cxkySAgTlcdtk3Y4MahlAKiva/Ug&#xa;zQMapViZmbSnHarqzMa8qGjMOjrP83GMINhbISqmsFnjcDAC1g7KWM5LxwAwJEB1K0D1wR38G1&#xa;l4w1rUoZe77y39ctbmAe/FeAv6SKkFNAZ9Qy9D6ISDVKIk9xhgYxc45YODC2ou4Obmz1629RkZ&#xa;SYWfFRsc8aJU3OaeD0sylTaUKYLe0coMkI+7gnKRmOKecGyl3braU3+jARY7JvOSIo1mgt7oZQ&#xa;uovUkvLGjfDjXFqbwy9k3gIhIj3LSYyH4iwPNWjB/RQE5a/kIZEIXVKMiLaSQyh+ZR5c4w8jA2&#xa;45egsZZKEw/VFf1mlt5vopSia1aqCAO+aYPAzjYQ9NrgIg4mu9JXK22L1B5PuEnsoZDonVclgk&#xa;vLMasgdjoLdAe6YZyR5wXlAccGajlUUPLQ9FndSSRW0Rhp2IoevtaH5r0JG1G40Wk6vjLx6End&#xa;FzV9PVDsN/jmpeNyX6acfYBVzngcHOjnKTdUsKLo53bVucV2pwcgx8/lyJ69FffnA9UKsCoTRj&#xa;KJ9eEPkOB05R6aHx3/kFigEnJD+zUYiVkUjMqCq70wfyBeuvBnEYM0hozUBtyUXtdg1JyFTNrD&#xa;N9ZJ0mU4Pi/EWvlS9ERK7k3FFUYRTTlM+S4xAwtjTlU1rpcFB4RtpMVw2DGhJTloXm5r0AfDRz&#xa;bGXP4dAXdQL8s0TE2WAzUMMxFSk7+cB1370M7n4bxoWztqnCsaBql1vzzwiJkcMRvLRRrCw4AO&#xa;Xnl74RJFWAHByI8FYMfoEiQ3GG8+1DZsAcsmF+HoNvYgzH/lXBiIboA+Qe7NWKmbaZ8g7ptyij&#xa;npWQzPfaI1wMrIvxTf4acAbVFGPq/TdxWO3yI6Eko8L6YRaLqC1abofylJXW1Qc/yQLn6x90La&#xa;p8IckhkWVD/f4GwJA5D9tkpnMtgKCTCMcyJEHy2GMtXrp2NlJCnuFRN+fsR10ipScEPZQq53UF&#xa;FgZ5Ls0PQf7Yz2OB2p8jj5thDyZtR+Q4ZBqoVJCUqn0EWtRiYwk7MRyziEFRgwwyHaJgMyPEFI&#xa;ymneQ0/js0dKePfWy+UPK2LrpPyMTo2hchI+gpz9QBWgQHXz+d3cRG8o87u74B8TK9U7kRThum&#xa;oRNaZ6g8til04ySa1LcmOTNJNjVgle/ip81J1iU9tkgyfS9i+8znP0OjyC6S6xUPBOqqiUCFuJ&#xa;acXC+KzHJUln/C2zMoNwgXMR302ENoaECuhXgrprcmHK3xT2xBF0FJ0ntWSnHU7sohhn1O9/s8&#xa;ZGQwXOxui31JbdCdnJ2rE94HG0LGR3M15q+kpOU6d94TCGa46ITNGoWpGwMH6Arvp6KYNdk6e/&#xa;yk4uZ3qsbykxMiBV0t5VoorwJOZAhit0r2mbDbpcX1ENivHiE4ilMl+tbGXRi6y6vNjUqF8BUv&#xa;lF2h27MPgrnqk3ohW+JYT7zLdwC/H2mzdYNPSEknZEFwh7XlfCd5dBbKkFOtzu4HybPRCFBScd&#xa;+BYo9xyTUkBTXbybx/7tBh3oO8lfSMXmIXHkqIfwHqjkSji6ioct67oxiFvHGwvYC8/APksFwX&#xa;1VuRZAyUGqjemG9CRIIzTn/NV9+Yr3lSmcrf8N4uiXm2LZ5gDX54lGC3liTGm7Pn9KVLmRW3r2&#xa;R/kvPWRK2OuQlrYqMY3FlM+f/HLdmFfb7624YZv94w3dXB8G94NPryu/8KT+BFF6T+0s9kgbPT&#xa;MueHUK+EKlDEk/MNxmzD1mhyL3v7WekzWiBI7EyhQLZMtv9C06jYFSWq7/LhkMH/ouP04/tpuB&#xa;wUTihaUFtn/E6FZr4P0+of6uGf7U3Ltzf9WMI/h/l7X/3yj6P8dZijTePNDE0T8ppTvMtF+lxs&#xa;huay0LvRqDMcVswexAoDn0RpoqSBb7hFHwud/tHTRqar5wAp9f/nyJ6dGYQT14fpaeunHY1bo6&#xa;ZyTJs1L05ivJSstqc7nyuPK9k/98eWoR/II/9AT/Sywg4zCxz6uTR8ZpnNbaC5DI0ZY0lejaYH&#xa;stDBNFEsfp6udEY6DS5Mu3Uyl1zXp/IiGQPdvQmZs82WpjlshewTW9Z9E2hLC4u3oagwnUt9kl&#xa;cG1mOd/8khjM8Y0JzIQLS8FAHUsdaiKkrYLPBIETgKbNWyQ0pAFMFm9SO4TnTWjyUrjF52xN3g&#xa;HBs4oT6qe7T/CIFhfpDMrlF6YfpibP4+SPAkO221BDaE51Oq1lpwpd0/nkyLFXKIBLe+JVllmm&#xa;rSt6BtEk1QCCNPNj2IO2JCXZIrXZXTJgnkoZFOjXeDRJh0UKiU/C+Z4ih0qV+/cSeCR3lnsOSH&#xa;bWqly86dFro5ZAO8stkY4n2mNHiWnAc6XIrGkYRUYxWVINf1UKg32UlStsIlnQDztLYJXVzvpL&#xa;IamF2y9oUN1hHOdta5dROEVweKqX8MSlo2iEOEoCijAR6FgCoyUZ09JgPJn65JkmW3WcwibisB&#xa;heHeDSzlIDSyrNNZI7ceIdXrEmbqfQI9yLu4/eVriN/M10gGWEuVZ5W22ImhG5g4GRXqL+9Ku6&#xa;Zj+KMf/gBDqlV/aW5esEzaVyJ+meGT7ZKb8+kRuxLHY+3PetFjhuIMGObBO7S3Sp5d8XqszHOr&#xa;U29z1SLZerWqgSOIh2yUOoCr+y+R/Y1Znvz071whFv4VFUbK/jZQLzfqjGUGSSzYWfiK0SmyMT&#xa;UYLcWm4r+T97ApMGBjSi9vhE8X5NqRfascktUqsJ6b0kMqigbajY3RhBowragKmnAAksqrVzY4&#xa;ZiAgJp9BJ/fTkZ5cjTZLc3iT5uUSCGdDDRiAuynAtnJAG/Yg7OwFCEuUJ9yxFyK3wS80RYk7qz&#xa;rtzmL2WdS3XB18yjHSGlwCzNvMiT6/K9rIKRtt+j4bdYFMDiFcEJmh/XLGk/Aet7GmfXVU0WTs&#xa;lyrUeAkhLAtTPmwjWgynpItbzCwyQ3d2sZCqcU1lQaUM/bv5oXrfVaRp2wWOgt8wZNDMApJRsZ&#xa;KQsTQjptF1J0cFLnBCOZbojlBKIeQo7FLilzrT8xGL3B8O+U/yzeBmSuicwKUKUvdeG5NqElFn&#xa;nSu8rY6LBH7M4phgNtT6pNq+VL4S49JOtLb+4OXrjtWwFjqRKC5udi3EVbTjpo2TSSpHLC0/Ea&#xa;xff1v3YsIihiwEQuyCCtxGVLJPl8vzwQuDPBbar+gPKHOHeghctaxKy/GnK37smv8fKclfBzgO&#xa;zLS7asvAJ7vEdq+qZbcGJYy7TCg3aPIC0s7fsAUZSWY9v3mr5GZpn3+OVxDzLPmM0bhUQHrSDF&#xa;cr9O8mv8MiGM0tdTsPv2vKu1batokZzYzyg/uuOS6tB2WMQ/X8quJJ+NMTp1+mzGnxPou1rlL5&#xa;g7K1bAcyBig4M/PHCjXtV1KnPcQivUiKETGlpFgzS+bhcsqxTOmoDg1Oehd9w4o5ElztmwN0tF&#xa;svP8vjoLCV0+xSKo9PkPQhLh+xLi5XxtpqW9gvDFLaz459mXH9ggpirDWrQpIZZuYbR5p2v6xF&#xa;hP2X218LTRN+TPuFs8AZGrVNcor5H5PkhoMu89bYjrNgaOjz85UuD4BCOy6Aqbc3gRaRrTjTCs&#xa;K9mvR901CkoIiaRLSUVsv8IpqYvR05wS3RnKwljDJM+ZuSI8rgeDNb81bdUxK8xGhdaaf2Qfg+&#xa;sZuk+etOTbZDt+hFwZnTi4KncEIv3JR9iL3a7Z3rsJbeWW1RXsiqWgHcRy+9JBVKCf/3Y+yMlG&#xa;0mH2Fo94rNtHy6p8naXPcSL4N+5F29mv4//C/da/4J4YwvdfcM/1r7h3sLc3M3F1cNawMvMgN3&#xa;RzNDVyNfuvjy7/r72E/5xeJ+diifoJym9t1FEWRY0q1KiiVidVkRGy0YJdKk7YD4kKxuFJy13x&#xa;q9Gv/F3RdMbN/yHTJF5Z0pRzyv2Rwdf0NAkBj8t3fTA54efx8dvu8+MqtucLX0QONuks/fTRm/&#xa;wUSFl02WuMdUI4OsdeBp1yrnzwKPxFjNZiH47SIakX21pSHpSaCXuk5seG72ZP3oojAuTGVcCx&#xa;ylaHe3H8NU5/nMwxBdLXO6K0kp+WVWNeYGDuBKEYaTWEWaB2wrM/eQ/XThLxFimUx0hKJpSEbS&#xa;75CkoDkZLgVUimY1PfIevR6BAOuKYdE85oNiUk0m+Tra3KLBUmjzoeovqQw5IQYi2cC3UB99d8&#xa;TKOy4RBWx9GstShAjDd2/YY1nLVxLh2gymbFoTBwUb5gI6K8TU+v4ZlkXg2mKqznRcxrK2KmJE&#xa;xQ8X2HW1gknxBBoLUWaPQW72tNmKgcKUHEp0VlglGuEX//7Vts0iI1eIfxOBNlYBmtETq9vftZ&#xa;MEfISO6GQ1oeK0kUVw6E+RqyU2tZFAli+UiymTiTEZ5oE7GH01mqlZzjfHr8jqQZRXNBmjHq4o&#xa;543CYEFmizSFitelenVtQSAeDKNyJtYx147M1T8uvaKFsZjrsix/KjuPwIAOSujkBNmBkjpkIg&#xa;G1b3E1LEtcA+HV/8DJNj6B4PhSZEQ24Lq7KVl14Z3y6Oz9e4T3n4QbTm64n/RgP3NdKyj1zYWP&#xa;DSUKlI//FtF6OLrXbtJvjLWe512qH0gVLyXJPVRuq+F1N+4CmJtaSCfPSkcqyS4sbiwo4Q2Y60&#xa;dZ80u+a2JAAe4fOXios4Zf0TurfvsYScZbHVPhrK0EW3xYpqRMXvNdnoXeqYcOps81KlN+ot+I&#xa;p6627NZ7yWYuf7Lpe2D1qjn4eX+rof2vNcVZQuib0kuBpPPCRGqfl5jYgT8u06LJyZM95tRWs3&#xa;zGwqU7INXD/E5Y8wgoaMKvSVcBGDoo7iro0gpgGNAtSpnmMLlJUxNJFwMaJWboG4BiLxSiiidQ&#xa;MZ31dpDDYFcawciVRGRkolorEltL/9UaFqDFZdkHJB4bn76P2AcTB4HUn5BWpFMpkhGLyrHkvt&#xa;lXYS1i61lmHA/40nKxe/5rgxolVkU5pHY+bMwi87iFqVX6iYGDbEkHAI7CKmVQXal6VnX+2oGm&#xa;QWsyoxtMvPpRbZkyQIWBB6FEu2YTGpZJdxXNTf75rJNLnQjbn7G/vc0EaHOmcznz8yBc4aF9mO&#xa;N4UDdetyHbOQyTspCn5K16Vv5k02+y6ibnZYFHGX0cOlaFldvTkiEo2MgFDV71FAr1D7Yv3DAn&#xa;q9/jg1ewg7ByWRct91n44Cn+BYoIJtWLv7e2XqH9lB7YPLpHZZpfzsianCLIjlxZQ8XYb4C2wL&#xa;A2V1Bm75z/oE866bmtiKzg1Svzqki6wkJ8sqynnd8tK+FsdP4FqV/2xVZlZ9D0vesyxC5sstgl&#xa;WMlq10yx2i4onIPqrFjfiQX1HqPz6KNS4vuMN7xc096AjMjm7Q6phGgwZWG/mNd0cMRQjtetja&#xa;VmK/qp+b6xUDhCh/NnlCI0UWyTtk1KZdDqyT3R/WbwU7cSq35M6x9G2QU5EbkqJ1kRTRoKo0Sw&#xa;QuozgKw+gPK3Ca172R4oqMZUsRYz8j4Fk4bvMgejGjq/CQCh9c489TLIQmKuS7/sZI4Ovp3csW&#xa;dzAcV4qUL0Og8UMxo9Dmuhxic0yQ3yv+SLmp+pim/y0h1r+N+STsDhVNygczvYECLeMojZ3HG7&#xa;4Ec7lSFy7rK8mEUJrLfEr97K0zcpZrzF+/8l20YfQzhJsXaVJ7wM4SdWBe0eFrHJolnfGmgiKY&#xa;BgYYKt3QWetxvX6icMyoSzMTL/pb48Oy5zW9AqabW1zUTBM/M7i60we8w3fMgnnN3MHAFiWG0g&#xa;ZmoIlmHqTFd4X1VXSJUtly+wKNfmz1bw/WyoYVF3S17LlsNBa7YGYVzslT/GOyru7UNTOrVjl+&#xa;YzZOynj5taXhEbsZF6wQp0mcfwbW+ffHOzgd7bWcIKt3QCekvB+NmKsF4jafdFx/kDTmuYMUPy&#xa;kDsnWVzG+0pxH0sClnmWp2+cDcnALe3FqUKZSJ2m/4UXzFlZiU2/4Q+7OEiQ/FcpT+xyrIqV0D&#xa;Ar5vX74wI/y7CsX7f65QCg6m/12l/h/NSZaG7t9F6lMBWg5foldYuby5KRr1K2o0Vjk1Q6H1r9&#xa;yl7+i2GYgJ4FHANE/WgLmMR3MbJsGCKzXdgXZvr3KbB862tUsAQChuNsSPG9Aw3e1rceVwBfjx&#xa;5+7s6gviDhSQLM3KoCwKdkoVZ7i57YSH1OGmzTNPhxGXUfAI/WVMoo+eO6l82woyKs9Nhmvq3L&#xa;fcdEW1LKqnIDcmbx1FlSYBviTamgLDMrz8QgfA5wZc14vb240Q5wctsdf5+KIBLxTBSogldkS/&#xa;sJ7LmtbgNACRTt8H2FGf3KqxrJRmR5QcpFxgE6v4x8UFRiFb5DeHZ1BrWoE2aWnxymXwqwmIoq&#xa;x43gIC2qTTySYlGq6jBjToIyApYEA0gC2z1nb8wuIYKQCHFEZyMc1iBTVn136IOsk5eRwqmJla&#xa;/0TsaNHRVvhSfq4mzt96Ne62FsGOlnRlaqaORC7LC6HKUhNlEA6Xo8AKTfvKOKx9XiMkj/OtB1&#xa;o8zZqWSz0lkiQDVaHEdGYZysKSfoTrk+qg4XikYAElgwTL+ODzSOZnoB+EfgQ7+cxKGKIrK5ts&#xa;H86lAbJCGpyHgWhKzzJDkNi+CNsWpg4BJBT2aSnXwKkY9d0cV+EuMSIA3xdzKZOmsp6X68q5jE&#xa;WJbSyRAFISh20+jQYvMKddmV0Gr3q9FbjsKCfOFIPmp/EERVAygKDbB2N8VqlcfnuXAG8XfqNz&#xa;HYCadzV8RquwiwAME7ew1V/EycKcymRRzkdH/m2SGJjb4c5wt4IB1E9zHZg4RSeOrclXZr2G50&#xa;4onPL64BBZMiBiaVTFtVHtqqdYvxt1ocV+NIEaqrKx3s6wwu7jxtDOtFihx6un1NI8fodGqtmx&#xa;00uEmbSylIi0DZaFD49WgIJMKUseV/pYdWatQ7Q7GhqOBrJEVbQGVnTvYZTibg5qt90QPmhv6P&#xa;FyuC8Hk7eUZQJOlmJ6m1tpuBatJxtp8BPx23RM0l1CzBS9QDTGGCbUrLbxB67l/fssyCW45FZ2&#xa;nECr02jmEnhJNEXuy3nclYazBAIcfdA3ouhAHAQ0Zooe6o6TI4+q7SE0gkNNivt9Z1YNNehW3M&#xa;1QEhiW8do7nBP164AIL/wlR4RlirFYy+pg5Zm7j/CFDzUDXf9mRL4/rT0h0xwovdNl59P4I2wY&#xa;AIO7U+3Q930Eo9ElwiQ4NwT2Mi+/AWqorUnt8cOjcgCaHkT8Y6RAWKd6nRTz9/WYc5vhYsJ5IH&#xa;X69e3IScNfnVqBCmx4zTzijcSDtMsarRNuIkq7dRhfWLPYvh94Y2n972MvKN1cn61Eu3yhqHud&#xa;uqSlmuMzVH0YhHtbw/6YvVlTzSe/840fnd1dAtrPkB3rZ0x/yB3gN4rZpUl+EniiMI1WBG8aDB&#xa;GuJTjUzOgO+CT0nUnJgNNBOyWckz/FKIf9sufPvlx6Ku4gJMbpAz+PzdW9IlGmzXrH6cByGkjw&#xa;Gkd9TWau/SnYGXn2V2tV+8MqEZkU0mEXz9sql1j53vPLOh90F90XH5ZjMFMu8T9OAqn+3jJVlF&#xa;8TEEhfUUgrUBoPoFv8wlteDQ76EH9V37sFZs+lHL4YR3raZFG5dVGxX7tSCf1It0YbRJ76Bg0F&#xa;XkMwKq43QyZImqzXf9yvv9+gHztDXyTraUHvg/RSLY6OyafESuymMm/SSNsq0lTsj/h+8TAmjK&#xa;Fw6pR1FP9q4BexRHjFX6TLrW0kjWRd3WsaK0n5PcPgFeGReZBJMBh7nmz0rZQR4vReEb3UIhA6&#xa;vCP1DU7XUn8g9Ed83zXZseyz5zPJ4fDI/SH/hPJYjxa415kJG82CrdvzkmyMYTZTeOPWqJc4LW&#xa;73U3z5+z8ypXx56mOdv5qMBLj/CYQD/hvhf+8/R5TG4ZELIBeqkrLDGEdmpPnOJFMW0ihO/hNV&#xa;BnLBlZUbRjQUJ1Mut/RHb07uFaNhndusZUoKVUdyT3jRXwgPVvoK5zuSBjg67+pxMKT6D4IDbx&#xa;BATfuwTJhHBFNo0uv1rZdrU4F9nB2sRQ+Zh7c4vMN0WDi/GyMpQpFkv8PXBZqs4+nCqDbAhhf+&#xa;ICMZmLHgDQlWiKDTKUuFLsyMP8C14WPpY7iM29ET34MXPQM7BzMM2XlH2SdnQ/ZFCITXXFgob8&#xa;57KTRvqHDlm3N5lgqIkgAmV+dXtAGz2ZqMnebG1uFv1OQf+Rzis410wyPOoYMSR+NCTsjBdY1L&#xa;e8y0gD4ZeR3fwnEbMbFJ9SEvKdnn5fAYiVzwozsJVXySbRKgRUoTfH/to/lE7CvAV7GezhQTB5&#xa;ZGMU8Bgn9jFIw4kj30OMtdspudx49nSUfmm55kknivwAGHonpvDGmguXVnjFu96okX6rn8M58u&#xa;l3iydLnniZM6+GqS5Dyypw4JJmkP7Szk0aziHcOFR9eaR9nPApKacpgbF8ujKSAdduxwUmbFT1&#xa;Z6iJ7UKfTy2BwszcOnD3HWFoushwKQBw3FY6PsB8pQ2V7NcKqzOcJRv5WWP0VP13A9Fiezl4lX&#xa;q7CGiIStYcJ/lLDS7+jLxHMpJOOH6iYWcrOr/+5E2/wcwc+qLajekyCr3qHkJinnuXBbYvNgrz&#xa;HBZizlh1Ki00y8Sda8kG4dnCFOB2nGlC2mdqcHrj8LDVFfMsMTYsU3XmKfXT4nj4cMaCnolpQn&#xa;M085KrjaYgxvpu8VcNhAejgpSqA+YWSKzmtb9yDhLCTEIMEQKYdceh0j5Sg/xCXwU+VIwqqkJr&#xa;OE4Gw5hpQHxrKQMgrkZV/OIcVkTNFKsWZIrXt5xBxxq0dM0bBf6LeDrGTwU1XShGfhxtXLrZbz&#xa;gIV5Sz8j2WZsaFj0NGMdj0rXHu4lxFYbwMV3C6S1NK6/wBnf+ikE3d0XU5ga4Cz7L9h4U5pXUO&#xa;6h1MPOpWLBTLO44qMJwLABRBJhI8J0Gqw0vo9Qf1fvK9FC90+VnKBB+o1ar0ZlwSZs0JeCzSXr&#xa;e9yx7HVOX3LzqxCOpdcOdiDwENu4diIyJP2njvoPvqoqqKtJGtAuoKiJ3iMQzSyensfAkstN+o&#xa;5fVqu4VCm8agUdgtsuBT9ri1MuRviWVE61nDAPU9v128wtQ/qsiKI2REy99A/igdCIJdSuaFIx&#xa;XCETnAvAzWb3kecFlcOM3Yw3DOkHK+O2G8uH5XIA57HCOY+VpuRbpCeAuUlY0ahcNfWUYS/riu&#xa;Rpdo9XaocIBTFptiNaUIo4WF5nHXlTXE2E1DX04wyMJRzfUyTDe3pOCCM0BjYU8R4Sn2eGyBG7&#xa;3NFTyjtQVM7xOBYR6Zdsz3YXs+8+D5I2GJjE45cnYVKMOClI8t2gxuAbAYmvcU71qpLTl8+IQ/&#xa;lugrkkBkMDj6pyxd6G+dqZySwdqd7A0U2CCTufG/RetWb5jjDp1HxbpTuIR+NgxtpCT1euV2aG&#xa;XaY5cXUcaL3HeBmSSMYP4HQx9EUklmcjdlWkYGg3Qdj8VpwQH86Kak7gnxDoKl7PdyoauS6xxq&#xa;imMixq+vjTV8D18zQ1IfFKeyRlOCxvMAPT9ITLYpGQr/g0czj18xpc0f0/HiEBI+mqNiG+fJmE&#xa;/Z/AKNt/Y3RBA/1zijmORYzxHyZM4IY9o9ypJG5lVI6Os8DDBduYBZwAyxdlzR4VOpH3aWhKyZ&#xa;n1KGcw1u/iW2x6zdCze5L+Co+qP5OSYJrj9zK1ubX5T47G7EIB906sDBhjoadUrf7DhC3+MuFu&#xa;FVpsxp5t9OcxiU16noOI7WF0ZmAyzQ5Xw11ZvpFi0dxnTCAuUEFSrkiONZOD9kAtl4K22Wbyeu&#xa;FLSxvxcAhGpA7QzsaY6FYe250PPDMQOwQJbKRW8Feb/QSuQGkk2rL0xny3QaGwOL9oFckkjVLx&#xa;K33KCznWBocXkqhq5zlutVlxpEQbn6UiD/yo3PHLs+kvPt2YLJ1ZCh+KHCokkNU3jiElj7V6hp&#xa;aUPE4I8zByfHWfmDxugcHfjcr05gwpTzBGSu3tqBd7OyuBGxmFhpQfC/UkB0a8OupitUE7vUDm&#xa;piO2xlx5cXQmy5UIIINpVwbJqYKuGfBy4g8pulk5yZWaHuM3OxmurHhhQ6LMPAGmveecxOlAsl&#xa;gVUVugXlgSFGfSF8g3mHZ0G6ncbkKomakZakjwjS7yTFSsy04g4o8a1W/hIyGW3fyNPLCIgAUl&#xa;p7DFcKVDt53SCDKuIcd9L62G4loZ+z+d40UShn3Uyu7omd9n5CyKTaH9H80Hqe1b7U1wDUDSGL&#xa;+5xO+1f195ZJJy2kKWhFc1SNT1MymwNlIOlfdByQR3Y9VUcAVxYpNiZtWZqVuY6nC5DIn9UhFy&#xa;jVWGDbxc65ow0cR295pDAVSo/uTrjvAe7QVzppTOeni1S63sEjC2LGDTKPE2k20+mj9SY94fRo&#xa;zSXVro5ZxnjoKjZW0dqVXnMFWvjZl5QSE0AK230qOlL86EUa5Ca2Kj4mUhwlarMKTkvTYcyBkT&#xa;rD1Gx+IhFGCrOiHs/dOEvf7LhB/VQv4y4UrAiUZs79I/TXiU6Bc+Tg3rZHt/fUnnDnodLAs6dv&#xa;OIMw+G0S12mKpbfGMzHojtQSJVFYgWboH/pI1wvvowEhNVbRQUK9EXBYRJjTdM/F092aHheFeG&#xa;eFeB6u3MjTNOC6GHcAWKC041W3nIvKd9Fhrki7FqjcFDPZBk0+ynPn75FDv1p61hENQN5RS8dN&#xa;hrYIC4dqF9c4FilR9sXO70HiIR5BbVqm+S3BfRF5W33sTmkOnzMBmqfwkZm4DACii8qEcitUhi&#xa;QL1fbSZ7W6srG24UjqDs5HN+teWzGS9NFNk9axTtVPaby2yIyPxmFlyNS4qUL4/itfVFvtyW03&#xa;tTHOB6lVEvjx72ywCuefYVw08/jy4vJttOdsWLNv382PenPpTiYvMi5V3Pd0Xdi8Wc/egA3kZK&#xa;GohaNKZdCq+kmfXxFVmf2wsM70hPB1ZPBGmr75Ak9r+y9jelYVk2yoY7eB789AmQfkVtkyBKzJ&#xa;QRkSqX070AHul3W6nukinu6fMcwH54Yi0vN1p//zNHTSIGuznAea8iKZzPdQJm+0DsWvPlXKIH&#xa;Km6H/mP45bv3CU0TLrQcZdixZFilxEwy2cYNxeapTxIUr0z73LKVt4xh+lEkw26VW/bCQ/ZC7/&#xa;zvLx/c5fLoQVxExOdInYRSjLvxhC8odfuoEpiXJCknnlESNPr9vAVpbyNu9KQ92wHxYGUJuNm5&#xa;4n3s5ewPLtsOOZqI5Y4qsWd8GQtPJ6qNhLebqu1JSRjJ97mHsHKP3qZfm88Gt74jKb/PkYUp88&#xa;f7/hwTyVX4IxbgzRMW1xra1jMjd0Yq8J4ADyQUNewfFo1lFpQpbrk0iVH5HMQdWc/OFc4zr+hr&#xa;MXB+v/WVLvxQmKJTmb3uSlE7+Efc/pWDIeh/zoTZ/xPhNn+b8G9OGHiCYj5UqT7MJlxZwhn0RI&#xa;Gf+cjrERDlwcUqjU5S9vF5Rt8sKIk/wX+EbdWpR7j/Rb7lW063sqMp+IDEAEj/Nheio0y/y+63&#xa;zP2rH/4fBL1vzzFG9KoHyU2mztlT2O1Tkc1Gh+zdGHQLnDLlk1hRqA746BHsoPIMX7mvJmFqcq&#xa;CVDYVlta74qVYq1EB4UaC2NNZoXflSVaOF2ZKbru7RiY/eESUkIzufDrZ3em1NOyM8Voy0gghe&#xa;3xv5iCNFtr4qpzpn2VuFTSP/L672IiEJXtFI2g0Yap9nxsjOCflqrBcIUc2JenVdOnPrcrPJU7&#xa;MgkrSHLiKmZep68+MTIMOLbMhX8dRp5lpJ+KqE9OpVVXhVAavX82eLpBGA6zDtxlRpk45Cw0uj&#xa;VbnYsiVf3W5OxrDfr3OGesUrXlSkrrAx6O2voO0yZ5l9DLEZJrJgTvRMyWHu2+4B5PqK9EFHsr&#xa;ceCHE5N/So9slJ7SzoEl3W4NhAQCMWREwHuYAssFUmbgEeaGDYTt45jEzeLGXuZEgDT8q4B4sK&#xa;D7IwVhSJuGRoxrHPjuETfDbSsxtGnoMHi46Pwk+lV5c3kdWvQpmjFsX73Td/VuRntlJcrmsG0h&#xa;MspYt4ZlwbzDAo+S5CyS3Zd7d/QZ2Ql+PJNaG+JwX9+QBPEdWxku1SGC62LN9Hbj+e+kXaZ58c&#xa;0UVcdb3WotmOkb5Y9vQbf1twLPZU5BhXoslYS9xHgwZzUFSUlW9lLpq+yC8PnN0SBlWYHGbqN0&#xa;7XyHf39xEKtJIaH8gcY4Uh+nr7bYlyWExHWfwNqr7hiMkHXkfo+P5iF4lVgY3I/Lr80ZPwjLFu&#xa;ZhGomyTRau71hfuIeQoe+W57W8IFXTxCJYznEKNWQsHDwOHRrZsM5KbhdNO9XVnPQuJQCpIBpj&#xa;LOLP7G4OEadoonAt8r2vS5ZVZYJQzfGHGSAFLQIBp0Uq9Z4i+la2TDMPqKBeF3saMBA7RmxQEm&#xa;4PhSU4PHmtvxEbUw6nJveFect8xQ2a3jUi6X1+KCGJIWKvgijLrLzWhn+04Vb0P6FNbpWcXGvf&#xa;sr1m/y2/Si2aHGarx8MGwe9SRWWctiEFmJ2RGBfi5qSOFMubJxnIvEb/rbDp1ok2ApGGVDO/FS&#xa;OmId/hmKyK8FV0/HEivaaOvkARz1kbmhEgkaSMjkTLk/kPz28kytj7kZEWNb7lvI4QRNcnsOdm&#xa;IVQM2WcqgQM6GcN8nHu2w+eCknchObedq9aTDXxBcqFnfEhPM6ljWxxIeh/XWz+4rYK+L/i7Z7&#xa;/LL7e9MHX07hlG3btm3bts1Uyq5K2VbKtq2Ubdt25pPk2z3dPb/uNbPW9LPzF+z79b7Ote/N9A&#xa;BTBV4byH9MA5khBn6uLwKeK/LL85TFsgiDMIr7WfEL4WpP7GwjOF//lzBvDeV7VDXcoKQHB52g&#xa;HuCAuliDVu7JYzFUz+FRtYH0wuqwIo7aZTo7nHAS/GgS7+9snefDYa8IdrvJKTtR6K4MrZHw/d&#xa;/wp5PX+7OySlpSZDtFSpY3+t+dHjEvi9xuVmISEoEKhU48gsOCNL2kqNTp9QYMsePidzQ4cpCn&#xa;SDfTqQaZW84pQI9h6X+FJHEKvZ2CQ4/vCNxyqrnzOL/a76SZd3jclFB8BNthuSu+JOAc6hF1fL&#xa;G9BB8b39fyDkFC7JhJNJiidpFQ4RS04VRpib2BpbzWfg0ZEeltEs77K98hBJbTyX/ku/a/Il+2&#xa;/z4DxgLBAg6mkoL5oUVSyooBvlbcvw8UaEiWLZN7X9y5sjo+dcy9gFZbpZd9qvUhW9X0NgFAMH&#xa;Ex1J+cOK+n31p5W3ub2Pr1/srtb/fe40DD+3P8QLHXk+pimY1dV3yfhg9/Sl0KvP/gKAtEf2Mk&#xa;Q7REB7FDHNjYIhsphrk5jgrrUYXq4oqi1PDYYUBljKTfskBJDlwr36h9kUY+64ANfb+lxkpxvM&#xa;ZX97y/C6p/ssRfGaHgmhAIE46EiXkocyewjYFReLerKZoIluoU0wrWUu4b04J56wB563bT6BtG&#xa;+q7pkgMtsy7L2AGh96yhhJnQ1DB55P6K0/l8Gd0K9QuPJ4Ykc41jSFtCsm3rB+CDkEGYZKd01Q&#xa;mwtqu8Los9aLTo9OKPAFFUTj3jRoujHeedcD9emKPFWMhzLhAZAenGhLOOUtyUGWLWUBa2Cw6r&#xa;PVMTXPHEILJhWT4xnfGiH5Qvw7qfFTE+GCcLVaLMdIwdyDx/ZIrzK+FW02Ff0SrsZxxM7e20M6&#xa;lAL3AA3SAWUmn1sGADI4tUr+alHopcOIy7oHB79xLh3wwYUQsXXBzD6l8ZcNt0ZT6yOCZXTjCr&#xa;NXT5Phxdi44VACUKyVRcED7QjKueVPh6jp1KzHHOFXvpGium/HgQKn9q9TN3D6XVkJpD0iaLOQ&#xa;LVzzA+j5RRD5ZPgej+w0N3kLKjF6H2OOqnNVfBXF8aO1lEIki+d5QSgstSNipee1/NeEJMqm4G&#xa;yP6N6rw0RDapefy8ZvWW2MjqGXGImpSxa5l6s4k3n6cceL/feU+Lpy6sDzMsMUc1USAMQNtUWA&#xa;3cGj4Lf2eHtSNamilPEzbaIj7aIY2wduUkdxt6wQm8jF9bjpQt13btvWWGIcQRVd3xp3sHtGp/&#xa;Owc5+2YBX2TG2fDQZlncPluSK9nGKeIyEjt4iVZlBtuL3Oh3a9ViTXWNx0T2TCI1whCQfjRNuR&#xa;IiGTxQxzK5+EU349TiTUjnsekEjzHHnMWebN2c85FjLrZnC5QJq1R/yhfRlQsvvyVoO54ZQz9V&#xa;IXk6cmPNYP/yHV+MeARnQHvOdz1w/FKNHkVY5hY6RT8RZ9KogOwr+cLLktvV23rX/ZfhD1qfpm&#xa;AgPznTr4cCxT9SH9PVpzj2yc0hpZseS3VKrUslf54Ri1E+201osPHrp2VtE8U16N0K7lfUiQYA&#xa;r7mZ6HOzPaSyicwEpYjL5USX2GImKUn4ZLmFsZfJpzOrfZ/LjZpWFd4XbKAkusLOlUy6EJviXo&#xa;bYeCu2QQY3KlyKumjwE9VPOZEqLTA/Y3LLCiNb4740fspDbqxsHH2nX17T8j4g9zTeZquUhAY+&#xa;74v0kNQjvX9kepzJ9vEO3iTazADoCSthaQiGZZiQt7pnCkW5HN9Uwfl+VX8DJSH28BdGdDkOlU&#xa;w8lfqM6pTmOBztMMX0HcfQGMDfHHxgrcRa7maRgvwewH4D2zmvGEeRJQ1ic0NwXwVyPpj7j3xZ&#xa;fsv39T/KV3RajWj98a98z8h0T85IeIvof94NJl8vQsifislbbZ/I+X8CFsgiCDNhEOAg9ODJUh&#xa;wUY9/DNJwwCyLdv4838AsVJNLtZdVO8O6vpsTp3wuM+s9LwsbOVGxTLaS/cl43b1F/UeX4Meya&#xa;LXv69kCpBe99RbkxNgYt7aXgDE72xsMEzH2/a18TSul3QjiQiie5KW7KqFDyNV+AF1dEYn3wXX&#xa;9Z7Azpj3zxBfWHhvvhaxnEitmvDLP/kS/XyBp+wf8oX16m49X/Pfmy/8/ybSgC1wpeJkIqRZIq&#xa;sthjaIUS7gdMygi8f/lE6DYuR7m4vRmtOrA/VZrKwiSgBIV5dzrim+R8W/d94hz9e34/3eD2P6&#xa;xTNV+AR97ZTLIAqjiLG0vvKkVqmxSVcPnMk597Bf/eByJGwhCuMEo7PHRrKsNKspnk/o5ghsFQ&#xa;KaVGPKzaaGbuS11uxvHKNSXnGKiN0uKyPTMwveDvu+Bs2OIg44SkBclHIBhCPfqe3vbDS3JDX7&#xa;PgonZ+hhacSQszXWVHTuDltX3i7s9lIMaQmKDfl4EOysps5bFNEwiz4Dvw6dUp6+ywVkC1b1Mi&#xa;RCMYMowNYjHSh12F3S8Z1qEkmA3IOcrniYTN8/uyMrUq0VxC5TWSpVxgyZXHe1tf1q1N7BN83b&#xa;a+exyL6YhBomO8yicpWykKAjqZiDyEez0bsoivpAGI5qrNmGK3v6QVBlS0Zyo419PZwhzaSIXv&#xa;KTiErRW3PaR3600iyoMkfxocwxVK93kDDI0iTZIBiUL88UxVBIMMHmSPJCbHm0YZO4cnIzAB+A&#xa;MLagCCcYRZytHlvNG+MlO7H9SqQlhmFnncz16dDdWAYSXYdhuts1BXUcQt0XKPOWwUmZHCbSqP&#xa;5A5dU6Z7JPgHHVwcqN7u7LwgRfg19xjWuONWSoxhW0xjAkv4rAFDwfp7WHOntZ0+o/xCu+kE6e&#xa;ewnY7SqDYc5m/BOJmNAZL7JjLbxuAXxwgRHcNxPLZpUs9Bgivdeer7zQnidGlcvhvUzyjMTMXf&#xa;n0DwC8sM4JoHen2RfISsK7a6uCSgM2hTTUu60AeR0wdPwrHHujhEvowecC0FGJ+IDV4gXaDps7&#xa;PDn1WCw5dCB/QxrEvgOffu7V+9RoevGsPW3VyT8igp9AQg7KbMZ0ziafXtLaXHP8F9c0eVPbHG&#xa;FC2F5hvuiPMfcrgBEyJ1wDQtROEZQCcaVz0lEMx3Nq6GWiPfRe83Pltd4b7ginJOJAgvvxrQk+&#xa;AlPVLzZLFXyhRdmBWF10D4Ld/6RxO1jeulC8+NbefGB1S7F+7OOz2kyLbKuaEgw9R84FSIf+Qr&#xa;a5E8/o9833SF/8hXtX6AAH0ivejG2yvJOEwiXEHfVqyQmOQf+RL+la/IvO5v+aLVReZFikX+I1&#xa;8y+lx3eN6C7y5m2//IN4btga0okr+guvlkJ9auv8lSBhlsOvC/yHckC+qa4bd8Cf/IN5TA7Et+&#xa;+M69/PGaKNcdTFXwH/kCQn/Ld+CPfK1YLIsxECtanh3RCf388UusYXxC4OPuay+n1TUaEdU2h2&#xa;8QhEIhx/gCLi5aCtBV97NItBGtM7uIkneHjNoxOJEk+bAkH4ltX1f0yU+JW8K1/UIS/OY/7+n4&#xa;okL8BKS94N3ds42ocjzD3WrbQ1eK3pllTH/LN+O3fC29g1ODLH/Ll19vwhQ7bnZGxKWWIFu6g1&#xa;U1wt5hRRViGlf3FXacOehxAQYlJT/v3rni/PnwfquPferlJl5e8RUmi+Uy/5acc6JDxAX+dQIm&#xa;MWWk8RVASuRRQNhbpW6RUOrUt+z04xpvD1tpu/k+Oi48wDZF6G8/T8iCUv5/T74c/wf50gXmq9&#xa;haY7OAsUSgqySiKTVKKFgzQDfJho5++7f2Q+fq/3v5Cj9/25FoG6FOYvyP8kWfUh//l3xXRjJI&#xa;S5RQ31NBhqbZaHHM3fhUmc5PVFa3FBWGp/fCThIlQ0QLtCT/ka9V+yLg3+RrpDhVYyp7/vGPfJ&#xa;v+Xb6PJExL0Zr9X1wNb7nC39oXI1lKLUxK2Qs5wcfmsw+QcnYD1siuzC3C1XX6GydcRktVQi4o&#xa;QwnToHjxc6i+m4/XKlO3mVTv3+0bsvzsIcPAktNqOoBjAAT1AL4HFZyOMTYMlbRmsEkVVRzcCh&#xa;ICpNTt88+0OJoInshO1CX4G20kPJcj3FARbYyX2wlldDlhbY8V/u/2g0lYm2h533TKX/keZJWN&#xa;D9b8le9ZIDPL4b/L9/SPfJ22fssX7498LWwG9FwYWaT/yvdP+6G5e4n4r3yx/lP7wctRYlAQx4&#xa;zjmaZCU1nD1N1i80DJuMYgkZIbOobJophZmQ2M37feKpFNpxkKdthBRxRfDsFX7SkU50/7QfJv&#xa;+wFGGXARHv6n/YDfY00lt+P6p/2gvYBJDW0+mUqjCB12ySglOK3LneJ5Dt1fJcNpZOYKHTesPk&#xa;OB6ZGcKalk3umHTWpdHYvBRRHd+ENvJf7iZZ8TNeq5FnSviZX1+idL1G5HBICOwSYZVhO5gtvF&#xa;Lyh06RqNbjTIjJWlQJStzzRkQKwkMIBaZdy09NOGM0kjtMl6b0+sn4NMRWeQdesGWgX2ajtz3S&#xa;PllcauChe73Uoofk1lMc3JWtzAex0l06rRbHUfXipGp5zxT+bb+a/Ml23UiUv1T+YL+zvzFf7u&#xa;RTxB2T8zoBzz1gDxeP5qKi62VNMrXmAg1k8iM0o/Znd19zvzDf+3zJf6T+bb+yfzvYm6p/LQH+&#xa;SBs/6T+Yb+K/PVOPUj+p35fsn+uv414j+2H+b07k4xQ9/3Ab/bDwl/2w/G87/bD5jjh0flzAk6&#xa;YPEx0nxhmb/bDxb/3n6g/Ff7oeFv+0E01KPgtZDTOIkDdgxSl1UET0Sb6LYLWEtlxe6+I1DteJ&#xa;PdNIMCgbiTzSbvgfq1TUZdCJSXO7nmQ4RlZcMZn/sxq/SqVP7wa29VzCs1/yg2aLOlrBKkAbfe&#xa;gPQtVV5zSm3G4/4a9T3azabJNVf8bA+00DoR92jnHopRg3js0+NxVucGfFzUNvCj6HTBFbliGf&#xa;sLsxvtbtifzJfe0OG/Zr497PezAoL5FF5Aa7yQvtRAbwz7wCYcsr/bD8B/2w9Q/+f2Q/y/tR+c&#xa;/0P7IcQKeZBhEhwyFKTaOyGypVTcT4SmNag2uH3EtA0/T1Mq5frR4xDPaSNyhN4j10TgtLB42E&#xa;LZIclK9gPn+ez+X+0H8wSvEj7ZM7/f7QfNf2s/NIuTGZT/bj9A/mk/LP2H9kNJ4N/2Q2UD3W4g&#xa;/6jBPuI9qQ/LLcLdnonXGd4hxYF+xbeOA8Z0FKsmLp8z0mH6qRSR1av9DiJU2C1vSdXPP5feLf&#xa;fW/xczX87/3H6QQ+JikAElEYiktWItIvxWnGtra6koQT9L0sCWKKW4x8BJ+Je+px8z5l8Dr5ap&#xa;RNvL+FYa32V1T/mY+0lNDRT1J11zPnzfuO6e+Ls/4LZpfYYd2LQPmnhNHbNH00N6WYcbil274i&#xa;kWUsbK+sl/Mm21UViyzlVpvweADSHkNMs4e7IqK0e/yCy2/5XvS5QYfLnVxuSzktqGw71odusk&#xa;rN333dvFSLKQSYjzuU3kEGLvuIRpmWtgMMzX+BdwV80HiY1M7dy9758b4tAmDUw4WnRqDxHCEi&#xa;9ZQ+uHqHaOwnvEgAuoNUVc3fFFlbVsBioyYSp8C4LqeYlGO6w0Wk0v+iSpwrw4U4MnyOt4u+NJ&#xa;in4LoCn/BAO1jzkAbrjnpcmCVmUpt89EncrtkkPdV7bUjCuf6H3b+CkbPhJxlzxtMUhxDDncMO&#xa;VfDQEcXiYi1xEB/WFN02d7AMSSsjXA0d0v6oIR5Zl4TfcWVsO4/lGpkGU7h5DF+J6bpv2pOkoZ&#xa;KGWuQKOH/I6gBIDuN7lEhwhCGb7Cc2kIMwl+JaZ4CWbAxdFcvtmJ9ORzWX/wgIamLhExCYBpJH&#xa;1wdLvDDnlkdP88O03T/V5LLAzRCsLcJHMIgbcau6xRazq6rVKhtilirxkTQp+qB2lS0WKAsT86&#xa;8GC99/QIV8di0FPHBPLERM9H26TMKo36VCe6hp65IS6Svfz82YyPO9lqGXVOa93uS+GtrKExpH&#xa;GhLIn7TGU7iLtKczaGF4Uct3Grq6jlDE1ZL3Ike9AcsoID6pLJ/Q5Xv6FiAPd8Mai2GENcANQ6&#xa;wrcRSgvhdokPEOHb3A+BPlkI04SyJVk6cvfaC36PQMVrYLvxluD8Eo/IsgDuFiK6UnURZC3jgu&#xa;MNYEkrZtH63XMbrw0oelfsV+lwp7p2wsjImCLsOzvuiNX1NIaGdLvSAENmvvw26Nk+B7rWUF/v&#xa;g5o3O5F5DutSR3i9gLJtPDPRU4t5UH29RrBPobu7PgSLMgu/OyaqUqpnBGYiUDSMmIs9eShWzE&#xa;gJ6mcw0t74gE3UROeqy6kgGt+RdJUpbXO9rgLu0maEXtOIuy7eFCzhZDqRAlbJqQark3ybkgEB&#xa;U6GHkg36UunPLtpqbJ+6Lo5h2l+FR03iRlrNrlwYzIA5xwJ50SIZhPSD1+9zTRdlhAqjwYm5qv&#xa;UyG5UWi7TR+nPWOML7iZAPV8JhDaED5OAWKaK+M++8XAjOT/u2Ut/M4iMLEoZUVzcEU/WAebE5&#xa;vBjjpeB5hmp7I2V5ZX/M0h9fWLa9JbwZeggYRxD4F3igVodXg1fqDUO1IZezW6A6qYPwyJTMR/&#xa;qE4Qvws7KgQ+YzIEgDSjKy8+3JMl8xO88wKCZF2NSxMexaVntWLrRrCb/pMyL1Yn0SBBv6CBaA&#xa;PNI7BRQFKfpIRgqD4Xy7jL90szxokjhyGCX9eU2HuY+IU6QpIRpusCl+hyC0BjlG1gd6NYDLW9&#xa;m3jDIKrZtigdaGoo6uPfxMJ3trJ1tXfUKd8+GNUg1Z17LLjPPUmC1VufehcSzOUsIWp+8dNurz&#xa;irk6cAJRbHYby5CmN7zBmvKPpE8j+MR1+mgj+BdaqukvQyDjlGpFzvfyw2olEKjo9beDMuQE1M&#xa;/nSlLHEbVeoKiYaxVOGe9Z9TP9fHxuKqrpXxCefgl9iT5j+Cz80moeZmtA+QQWyXw/7xf0tr+d&#xa;BBGQNYWYVLre97zqGoweNUVp253HKUQE3eWqS/Hxp4XmeSFZi//POez5P57DuP/9Ofyvk1YLyi&#xa;dxoZHfPHnCJNVmKwUMQlERNEhSyGAZVEIIDWk0gAQhMIljwkdSjIzZ0QxkVynl1PrCSDdbbVqt&#xa;3aJhNSIXISqixbpy6rGz6XHlkXervLGxsXKjgvoj5+qNLC0IE2Q/5SqzPdN7qvUp0/uSk93zZW&#xa;44myQ/+B1pbn6VjxbvKsxSy9SWBWkGJNzCRllibYfAbKx7pHtDH/NR3It6rUkviO+LZlrxw1D+&#xa;zAV39GOjF+eKtTkVDvtPnsDk0RUlZz1zZV1x4oRZHsdVVJnLoceh4pCYy8Pi5GK4YhpatMihXR&#xa;nm03ZrK+uztbV27VNurLXTtqVF9/mmxqbFJbcGW4M6Wwtr0NZ6EoToAWTSu7SI6JW3j/CuMda8&#xa;TS5ahNOn0F7CbpLsa3Khb6s1/Hj2EfciaR0/ZzTsTQmw5l/fA2+knHUZK8kBeUIzEgcUtEPcbe&#xa;2MwtK0yPZmY5dLSH6d2N7LmW3EtKNwUaNamBFBSObMqEl4ncetGanQUl6NIpX8OHbwpA3pGhOx&#xa;lbdJk7z8nQaB30VK9csB/nxwr2P7Pah26WJ46JoWXAmNLpdk7KhzAPSVYxUyVY2GM2l7zIQVZS&#xa;72wHk7riyzMR3zlh9xEXWKXOPQzoTFEcjxY4L1abeFnpXJGviRcBa1YMns3BtqOBv7xUrp3MGH&#xa;cUuynIm0RonCW+FdcRJbmb02tUeLfr+AGng5EO7JG2bkAFRSulcQleKRlt+BCu9H7WRdZ4S0SM&#xa;5MgNFqkEY3GibijDjv47+ZSz6J6G18c2Dhw5hD44AEycoy67XUmpVq7ps+oEKvJEmdqdtLp7qw&#xa;oyuw0hSHBXgyVLEONESSY11iKGP8XAbg+tYew/1aZHAryx41rWjkWy7v9RouTSeCqlSP5IT8sl&#xa;67gY83v+rlgCGdoRTMGE7wk7NhUlR2fsJkCxGa7DVznmtyo4HcKE+iOnCRmZYjeabxi1Het4H0&#xa;LChZCquAz29BkMBTDKxVpEpZc6nAdhyPZFgluZwJCdKkrIXzrvOC2Lrzchyz1jGk9kZHQKvEvQ&#xa;xDqouWvJ+9DvmgtriMX0k2kaN7bXuvOI55PAYqZyw07sTZxJrE6Ee3BdnaLZmzrvLpXqM0KlUn&#xa;tRu+9uDPaRWEv0Z++TAs5hw2Z04ty6BLZH02pcoAavenAYYDlsOBZsQhf2gdtcwcjVxPlPZUgo&#xa;aRbAJK8acEWZcpOYYjMAVVzvyWYTR00nfS8KZday5zJz//xGnBfb7AIJ1mdI8RAcQJ4gS+38vc&#xa;g7gbQCXrzUdXQj0A7pNseUNy5IOTsK/4xHlMha5LG8pyoFLBqHKcOzWquZw5tnw+O9XnSteW/H&#xa;lBwknvMo0eoz3exv6SH1lVQs+Y5ewTc+LxMa4uksA+oncEQ4GQC6ngqPsYHKDVDFG9U/g11DZD&#xa;rSyjNMOOGXBlLaRzTJZiqNU+XNGq2QR+NCTrjlWojz5LBDzYAvv6fjNjaxkm+rZkLEHCWG9VnN&#xa;AFlULKZqzjLyMtHct3OtzcYz/nbvLtCXLuB0gxo+yXoyEFhlLRAUI5A99uBE+wbTU6MNPyRRjC&#xa;JuvoC988vMBDb5m7GNNLySmybObFPXiLcZx7BB4bik00mAe7RXvvzPVQy+rIx2k+dsrCsU3eCF&#xa;2okN3dpkANL5LjWHDxag92XIbjUNEWZbAJBIdTSa1toi+8O/nkg4/yVu9GX3gP8vtdmiAd0/3n&#xa;wCdM0pXaHWWVbd0vhmAzTrPuOxqyCbdlgL1UlIgMkv1XQA4JShM+zr+BgU7nqK0UvCBvI1YHjW&#xa;+wkanAgEFxH/O73IWRc+XvBpOnihe3E1Z6vof50YS85BCJ/vBvBekAGQNLjG1XOaOHsgANKf9l&#xa;f1KJwCAfFC6oV8mJElqSrurlJ7aGIxPUlyQEsdid/wtx8Rd1s/MA/toKUgRAaPSXuHPRyy/TUy&#xa;ngO3AahG3kGgV/vFsatBqRHiXgcTAadAVSg2D/JBA1qOnGBi2BRn8sYGuweehSZAX6XMEeLWBI&#xa;KAddnO9GCf7OJDH9btyY6IuJHlYOHOHSYy4Gc5ujNkc0NkBn7ktcwD9BtORmpVI4li92MxOabo&#xa;vgJp0du2q/VoKsglWgO1T5w4KsgrtALlMYzEkyaR9uK+vw7BUG615uz+n4tEXRy13pIhqaOvi1&#xa;AMc6uSHJGcPpgAXc9w+rbPq8i6MyUu75mNmylzhLbZoUMp22wGzIGHnQeX8HcsRUjtk3oPwhr7&#xa;kKRiLMNIDKIx9VOiv7ogK0NAaTKhXLbutyLaTjJqkYXei8MMM+vb43JbzRkZrS4oFIz0qG53za&#xa;gWOJzVUWx0KuniARkpRk3RiGFtgUuDyiHHO5eJUSlk2OXrQB9aUfZd2R1pW4JMVsmXXUZiNv5P&#xa;GYDTbad2Y7aGKQp2DY9YYIOYlUdhdDzkSMvXrnlbIjHXvb14u5uFhSPP6y0Sieh+ZOgZ39lrPP&#xa;eyMojvYOpCZlXN7tpg3ZBtXPVqOcx+D8Gp5lh4PhIBlsiJ87M50Jr1h9Be9CMqooyG6z58LoEz&#xa;fMdLazhgMjYBV9IoffvithKiOuupBEarBjZTDLhy/mekxA4yue413rrZbhDq2d01ktvv5xMaWY&#xa;JTWPQrgjdYw3+YkeAeHDy0lqz0oPDbKcGITV3Ps3PvKnXsqHIKLedIcWOHR7fWEKtC+9otcUoG&#xa;1zTkw4Sm5EVsWlciHVdRDCa1k8QJJv34uDIfq4s3CEr5PC2IIK/AC9bKuGAqwURF8cd11cTkdp&#xa;9ImiSJcPpAWR5M8BBR6cqcFE+RjkxD8dwPJ3avRapeDDEmK/yCKS6wfeIH7lh9CFEao5nq6WLo&#xa;SEpoqe0TietSDZgT+bnB4N+4ULquFDFFWrP7D87dpgfVRfrL7VgnwLKOktsFexehXR9TY6ZPrC&#xa;1y/tw6xADRtWvNZP5OTRX7EDlo+lqptwEGn57RiOfMtOZ/0hdd1i2fa1df9ermsutYqMZ/rI/Z&#xa;Y9brPgKzKcFgUD1fMGAjSLLGItGO+D620zgStP6+5Vz+qsZY6lpCVEdRql4vzwSa1MSUZgRXjv&#xa;xtQ+940kzntP0Jx1S2fDEAXaL150/pGt0D3eISjnazx0fpkc17tOHpK6i4RTIsmo4JKMp7lHGx&#xa;lnID/2u0DkmBvG+nnJV3S52W6L+M/BhHv6tMKvJyQf42Qn+nBr1Qs5iLfpwoiVrjVfy9HO4mgk&#xa;srMKFI7IvtKQuNYzfhHDXV7cxWc4y4YNOWQP3iVkmRchmgmyS2m5XJfdRptTrcw7tYqFGwLREq&#xa;aomMGUaLUJuoted23jiZaYJfes6AgJI587s6vPJubYIoUn5xIzAPbp3LfrWRopL2+IHE4KhZnQ&#xa;llEOf7Gcb/JP0EWKNOQqGvT2l7u7LGHWpu7YiFWSFDVvZRpXd4sbo1ExvVt+VAweXnyp+cx8ie&#xa;rYNygmGjswJ7Ud4hlRtMBTHVujk7ojRA2g0fKv6z2jcjJQHcEeE7PYObwEbWgB19GmTiTtgjb9&#xa;YU+vilNIBRM9PUZX3fwOVMlHEd6Dx1XIL8pLfsU/IN4TEIY7z0AlTEfZBmCWnPKSwUylKk0+dW&#xa;nFIP0+JGT9YzUuRFUiIbjriwjEGZL2d9tULZRIdUvviEnc4kkibfMXBt2ayGJVCu0J3W3D1bZI&#xa;nCbCOk33mTZoUqDRwGcWH95nL19TKQl0bf0xvdVi9UelXxrGSRvG8jt7te5qFIhR0bvYDJgnuU&#xa;Kty0e8ElA/5JbDLE3egpI5LL6o34m7TCKmZ7VRQjetiJn3ikiVRpjNsI4YD7MdfyqSbsgHvjZJ&#xa;SLKNBFzFF7bVwfdfFxuF9m8WtqUPSowlZXU5HSj5pLyMPc4ltZUSu7imGCnSmH45xtLVOGPw9Q&#xa;uqWsKGn06Bn1W3naeCcCWG2Ay6MvNpjpI1CKCqL1znkmk2hmbkBqyaIp1qew0z+Aq31UQft42X&#xa;aIwltfuONVNN0HYtSVngz65d3VFuPSwPufLkuvMcK3dd1Za4AOaI2yVWpN/cE7xT4S6LKwj95o&#xa;yXaA2yvzQ59top37RL/pD4cZke5lmq4wkox+598jhF401bzxfm2kLkyrTx0LL3d5gymKg3No4C&#xa;aSur49E89ps8GlXSk0DqDtNqvUUK6Yi6+iJua5ZmyUHgC16YH2/yEbp3qnNwzTH9SqUFi+zqlT&#xa;lm3X+vLz9jfezs5oUTcmJPoe63e8cxlpQTsDd13ZkdY62u2tRlLyf/iOAGfkQ1+nSEoSMgLqYd&#xa;QtE+JipcM07opCZ7I8OpUvVuJLOiaheLXeAH1XouH1c5furY7L4CFHLy06Sf4UPLHjnKbGOW4Z&#xa;AW8gnbx14eQaF1YX+im8vy4hPt7hNui5u8dGPLeAJ/1pJ9OCHw0t03O5Px4hOx0elAHuPW3OcK&#xa;V7r9K7BlmdsvrqpJ1dZsnYZP2MqhqkPPW7HGjLPRs/v9GKunKz55u9ZbeAcf/C3+OWv2rXm7T7&#xa;ALP/9e5EZthjLdwQKBdvxiC/WHUowHxH2mpB8RZAsoF2XFbgtQqx8Yfb4BV3OAVVnn9BM53S3j&#xa;CN6f8+3lQvqTIr76hUyqqF7QrTqmj8AaZNdKK2R4mVnZfXIu5jDR0j2JKPXbOHPQHEsMMJPybC&#xa;gk7JZLkpBq+5RIvSg7JWYoFRJg1Cjp/xCKnCTVk8dpWNoR+DCNq7h/f0FB9ZwSzWwuKFa8517F&#xa;jDneOceKiVvX/hoFfzvt8EAsVMOuhcZvrW6wLnhz2hHfKJoWrdvgzLkpqSnpPiQGOwxIHYbNTg&#xa;QvD1X8WHhMKGwnN7gF86Gv8ZlUqZyzJJ120Wqy7JA4U76q4Md9nzVXw/dBQWcFbpDxrKh5q7j8&#xa;Z0JZ3gDq+TRL//Up+2VrR8k1vly9cUUh1EJk3V+jJGuOMRxSAx2SQ0USXkFec1eWO4lWdAxBv8&#xa;KEkh1ZwWHy6ZiJEEMszTnyxfEKBMcTIKWcENMrQLugZ/Zw9wt8G+L08kTv0Wj3wBsyhRsiugXK&#xa;X9jKDvtV+vnzWd/JFm7WVGKre42KGtHYWbXSS0dn5W2TqX/M1cWyaeuVmC7yaNnpSpdX8Daspu&#xa;danemqGPtCFruHnVZMKfJ2QZxlNCy+wrGuHiok2OI2rtDlyq3JNmB+v0Jbe3PJ+6C5XftoGPQj&#xa;HosteOez1GydT2BNeb0HOoOo8K8Xgiw/jRo8AUZTVF7E9IGQUmvr+6TLCY+Ptmv+lTolNDq5dO&#xa;NFJ0gZ+VX26oYmWxZuPBiy7zD3p2lrZlsLCmkzq8HsgUYO24mTrXmGC3jTT7KsdFZsbhVoqIg7&#xa;29tudLP7TgivOA2PGHf+FOpk75ET3MMX78e66tZz8LGERUO9xYWOWEcHz0E8RP1YVkT0Qz+Zsk&#xa;D0g3oeaKLXlBcqxowKx7InRKoTr2wbb65OXQm8OA6J8WWPoGNZOL2fU2ejEcHq+caoSEhi51rG&#xa;csWpfaae4wx6SgAp4e4Qa1mv2FRWB7iBqrvkJPz9RrYbQstQVqcEThssCCjsZsZzAnZt5pg6Z2&#xa;kxszPbRL0hG08vJnafplEbrvxD145Y9hgH85Qx3S/PzD9N30q7ZeSL9qe20aNiLHuTpSIaPFLb&#xa;bakZ6kzx30rcD7sj4gFtBRXM/PYLAMsSW2auyhZSR+omtfM9gWA+3Fgz0XpKbE79OFZjq3G5MF&#xa;BfzdfOMZok77XOMaQkYQFp1U2IBtEDv1z/McXc3DF0UEuq4W9eKnhgp6qeXxREDrIEFJPoQbEU&#xa;XqBzI5PYerKo9KFcfoypg+oW3x7526m8cOVmqHzyTP8cqtGOMmxX6cI7pkvqBnNpHtMHxmKyes&#xa;Js/BK1Gih2wSh8jJjUDX3f0ruDmWQP4rWo0edMtQVynz/WDNJZeLvkr8e2/Nlj8BYx1u7vV3qL&#xa;K1Bd9u6am4Nx9vqjKz4H874a+55f/YUuV7/0XTZXv+zdNrdZpevLMTvEwRrEgT3si5/5yFMM4d&#xa;YV7MunwchTFeEW/j+/TEaezI2Tn6I0P41GntSFu7oxbz824q7w23yusO9/sRzzM+y/TcddEQt3&#xa;xcK+8DFS8C9QIo4fqwYxm/Fqo2PkRdIx5qPrmgShkWVZzaKmu4iS6dZKsqsehWdsnT+lfswV6T&#xa;c7pO508phoPae99kMghmw9gWW1w8kdtxO/E/QBXwH7WcQK0v/yM5tdwjKTLvL23LtTAWrJeeIL&#xa;Bj7TIzBNxddk74N3Nzwu4DDYFPfwyNyiek91wn0ngDuGuXUXYhkV5JUAd2G9Nu5ZOssTBrbD3x&#xa;3+Bg/KLwieCfpO4sB3TbiN2SMPnAPng/Es6glOONwN9Dubwm8ECVVEAgJ6o/iP2ZRLuNx/2tRI&#xa;9J+yKXkTE+e/fw/814Ur/1q0Zbvi0i6gIYUKDE4bVxw8fTsfoAWdON0gqlROa7ViR3Zi1IbNlg&#xa;HShYq//RYeQNSFoB+q3KMcgIPPP8r5SfqJepq1YSu5qiDt7eTudjjp6+N8xf62xN/9DpGLyc9I&#xa;Y4t/2KpT/dOzgTxt4gHz3eEjN7vWyTODXdoAADPXZBqNF23Gwoxr+6RGosLAounGVaYtyVdx4K&#xa;yoPz6ZEcPYV4C7vt90eL2/H0MV8oJMt+i1Cjh1eUIKACwkMDIEnTrHHGJ4eYuNHxiZjRmFDYy/&#xa;Hv4ALOH2MxUktFUCZrcJNI+tzA1AAc5NWMU761M1XDj8pdFWenq8wl8szc/u00L4QsAfLC8brN&#xa;Nk+hw8MmytUTykWwy/vhD4ALnMTn33czEyLg8AVzAFq1Ho9QkyUTFCFC5ittnHuIyackFIHOwQ&#xa;pL5y4DZDwiiehGo76WWaB0A7b1IfpDcEuYeomjrZUjR/vZChtOU/dahFY6aMSyy+o0W6JPEZzb&#xa;MthFqLcOj3DzjQINyjW680oDtUVe56AEQmiMlhj12bBOTLW7nVRXKne0tAq3m+lkMdYyNC4Vva&#xa;SVsQfCnQIpvyVgK47mg4LnchEa6FkWEiVhhaZFMGBtlha5oTxTYVJrsGxVIkFdtFm7BmuGtPTg&#xa;p70jKfveYGZcwQGeMuqisoC0KSifgb/qRFDQuiBUgPuISWn3geb0/qrY05rXGWbfPRlPd2WqDe&#xa;QHfuNtpuYqm6Rds5W3X6opAtjB5qHjBu76W7R8mw2O3jgDwINoR3NCl/P7XDtE3DJZkrQTnvkU&#xa;PcoPsmE4yQJKQCxSgOKRmWi7AAAA6MaGbTWZxWokHmvUdATLAYD5KGTVgQSRJbi8C0dgoXgJFt&#xa;JN8xDMk9trO/60PK2WQDj91WxPQ9Nk+lbikY0TRe6aK60uv14yG79tERhEWZwQgE7KwgpYFFC6&#xa;ZBLhT02u5YzrBNZGOiHkuMYYA8AdAbTbA6jQw1EKC/HxnSYjMPpikEIuNPli9JjzpoKmLsU6XX&#xa;KE3yZe+ykRcT8WNGhbnI9nmVZzu+qPcK8lDC3SK4unaq15CicC/TrPp+/X4QZIxttmq6TwXd/B&#xa;OKSL7I0oqYJ6xfBJlYi83U5DhYqIzWPMFQ+ZkMaKOCcsO3Mp/uIP71JuD7dWYADs73ERgXyvU2&#xa;Syh62TysK5xxMrrL6BRTnH5qERRmAbodVi7qPoleqPMkR5xqag+sqTCGLRMNlSor3T17mA13SP&#xa;2fgdYblVuOVzsfVhHXoG2+Lt+hvv8ac0gzKTaVyWQzleobdimjHL8sJlZzgCY39QmYc9HcVDhv&#xa;0lnA5WkcH8sYzWqyRcz7OlTjE8FI5Ca/FzZZn49M4jNJ0O6aM24ZQCmNOQyv0ov+rDSk6cMK3h&#xa;Kv/CI2hJlZYGVDXjqwYYPI5ptuGyZdrQ4pRW+X2sHNzzRg+1VMTsNT+6gdcJM/IPNq4mR8wNkm&#xa;AnrvK0CQH9CFEkbvPw3lmCfkw6kgHB5R6PoaR+CZvdk0s6AsOZUOYtVOHC2rruCuuC76HLPv9K&#xa;QX74hth56CEo22B6eFXEDKAj2dmrrA/sBepvPByLSg2sNbkqvXNzanAA2ZM5R5d2wJ+NDuWQVh&#xa;yxRSTmirLZLcEOn+Sfu9fBmrR5UHQQCckqUMG8aiOyIGuk57qfCSrEijdnbZc0Da9oIwSe518N&#xa;eUGjqla8qykfHuqutdZQG5gyHTFsyx493H5k8NAWwQ9zztiE6/RcR09HaK8VWPoGjjHPMZYYWb&#xa;GSfaEKrvAtXd9p3d9q4mOKBW2zgB30GyMdqDQG+GzlLpzWAkHobp9wT2OACGSHlWvV+7voneow&#xa;yVjzqStwPO8rGdEVYkkxA6usdAbNyTIvw9hvWjZyyhQNeITsVcWRAV2X+IS9ip5RC1ruEOr9/g&#xa;uTfOZYW3M+tetmQMIZuFk/vUU69DFz7Pm38dvMtKXIhccqjQhxWp2l5g1M/qsvR9gPVD2ZGu+R&#xa;wAid/z2INfnfbEtQK2d9Xrv/FbfaUzxXjBxPdCC3iGJPeFKR8JEFAiVc+JGazekeEnfHxA9Xlr&#xa;t26N+JxqM38PpCZ9P24WBFq4H/j6e9QMShjlYUMAAa0C/qdRQ//fjJp/LfuyMHRycf5/vFdq/c&#xa;/cwfAjg7Vp0yWwydP6Xg4+W4ighTDjZGtRy2b7fd4qEqs5Q7It9TJkQ9aycwdVFLyDuhSf14d2&#xa;m1IxJkXeKYZ/bI+7fS2+6Zty+tzK6CT3FM/VnR7Z353AqzfMwtZWmdyTcT89nRhSnENg/apIte&#xa;kOWFJKhljXXOu8ZpzG2K7iejCwYJpMZeXII9M1JYrfUaFcAbbJuhKnajGx1qbkmBorpnOsZB63&#xa;YOytsmGtL7jUGIsTWc1rzWYKKU7fEQwVyl4YzsOKpiwS0qcMHc4BSxuTi0XVKCMWBmFNHFWHWF&#xa;5lpZxy1WnNGLsn6SaeXRJvgHGZyTU3JokVGsL7Eoxliv6xwBDLllBMt0UCxcBFhv7VZBB3Za3a&#xa;VEYdv4km1tsG4kWvNrZwAcasc9w6+UlbEnesWjkxyDPUimAq4ihxjL7LFsF4ktlxOOLWBi7rJF&#xa;27p/TCqB/OSH6UziEhFT2P3fF7nNIKhssfBKu6c3To1p1kO0esWfhxNWksJDhrFHF+rrWLiuDa&#xa;tbJDaDx5BrD5D/tzbiGHmTsWxqLZ4wg/Ms2OXlvLPb8p1Mw1xy4oLgoBEsPb8aT4oGwTHXcfoC&#xa;6zGyqRmjcswdtnpv11JeKbN5RJb/WRb2Jzs/I+BJ8xN9ikLjObh520wt+TatQzDWUTWTLgNeye&#xa;VurUdNyK42jkjbqjfD0inA43vVJMUVvNpDzSXTLnI0z5Us0tIqLVSnwMRCRnwwOZsnsJ85QkAC&#xa;oZhIEgLXRq9WJseYIkqEXuBSNzUerUd7PKGhbarj+n6BVDRND3JDl6ERBPLu3tdByKu2UF6bMT&#xa;bmheMdTCjcq4aBTr66zxq3PxQYWqBMHLa7RMZu4AtQdqTUEA1mTOMj99DhTtvibXl0qhXhiMZM&#xa;YgdN/tsndcwVgNDFRR0Y39TLVTVlGZUqxSwQq7GXS30GhVluNSk6Gx9hKP7LXMsqRJT1TNnUvr&#xa;wgfBzmNWEnD6PVREiSynAtHmVop3q3mbdon0OdURzCW2iYCl/L5itl5iCoYKh/UTIllYqVQtBs&#xa;Cb8dPMvl/R0cUZyg8MvTimzxckGXAcz95OkeibnTzS5ciICXhdWX3RKxdTDgpmGw//MaRJRQ+K&#xa;COjiGVJjaHsKD1xRwTvakIdGpAXQr+LL2eSErPpVvPBbR1v9bw8D16BWbW3XhcGG3hUhzNI8xZ&#xa;f1x0lBsT+s92m9/UEqtonoRp7Bcphs2sw5DDyLhz27hqkyWu3WmkqTfCdrTBExGlm2jKSOSL+/&#xa;I9Exj+iVcceobUdmyAj8HRmoPo0SLeCK/4wMUh/p1lSiHwNJJt/Z+n+PDEMJwL7eKsOLgKdR1F&#xa;ovNqdxkm3WE8amUzOlHWdf4Sp2s5NKaCfZx+31snOoXRzCRjoJ9Wl+nQWWwH1+S8AxZWRZPk6S&#xa;ZVaVOlZ3iX3ocRPUXH1eQPE3j/wLNrxOwir8d4E9tCuq+Jmo4YFOkXpYj8zFARvin0IsJY9YAr&#xa;pk1ob8MgofqA06wV7I3FWCP3IfsNT0hpvYWDdnism4kLoN5SE3c91UHHID+pmXaltleYXGxa3p&#xa;6jFnLnnVZO/BWDM41YQ5DmvbTm+QQFj2gD5g7HSBmzk60dvDpJW5Js0c18XvP1RAcngGLDA2jq&#xa;EeL2AfL6KmiCpD/ARJ9HpH0zI4kuTWB7FumgJSxGabHagYI+dAlNaf5stA/B/uUbYfXBzw28Ev&#xa;QoY5A2o9Eyjeux3AOe2ThEQ/iDQ25NKh/Q9bsNSHmR1Z87LzbsLY+aXuWmlV2nuTK/XgpldOB/&#xa;BrXsNuVrgdxOYV3tnIzEGcXytRU69g5MI2gh7hF2c5Itl/FcP6uuepXbtt4cpETy+6h/u+q/sc&#xa;E4tcI9KBQXJDCpYWzirm/Cy82p6F/HHzYOvzlBLaEcCn3oHPttRBIfWs+BzppfRZQkAq3AX59z&#xa;WOckBjSSU4EFAbzP9fk+DfVrGoe3qoqKP+2jCJZ5fBQ9DT4CpSmQZKGA1K/IaGlYsmBEJISABl&#xa;4M/WNdEhiZc1kdHlCQplpWstWtlol9Smaj3YCawlgdXeglqpdqb0VFnVqPV0Ac/P//WpS1Kirw&#xa;c9iN78kvvJ5ilzi/uoi/zzbZoYSG13C4Q12leNbulES+0jxoSpebgJTt39qF5yrh7rTWZp3JV8&#xa;Vo7uSqucBfJbmd6SIxzsYslPGXvfgu6CPBWCw5bOByhyy4e0Fx1fwbGf5jztW2VbRqY0KWgJe1&#xa;imIPXD75XXReBRd8YzCCjT5EPENTSzbtM8Jq+M58ecFqQdrqxH9S5BCoQIIw+coeBoDbJRPilJ&#xa;dTrUCTWLUCpqRzxz9cjRlswp1qOFON8stGfmNH6wwK7JFfvpJL9qubPT2tijILyBjS2tYa61y2&#xa;23ESmi7aDElpnF9mSe6o1bs8ydwK3Vs7VVjQIGiVnfIofVRlwCbjnHlmIpmWDvGPiDkGgQNPgq&#xa;U60ej0uFOIKA6JYYkevNFN6gzWbP6tM+V5sshUNW0hYu9nnHbUcZRnkwI326hL9F2FmufTWBS4&#xa;gBdCdiBJMM6G6Q4mr1M+1K1zVrbMotjWpVsZcSB0RA04jDxhKBwucnU1OS1rh5pVGG1HFVxKmd&#xa;gbPp0kjYM0j7kaU1/ehYkUp7aViS1CuxNnOiHL5gJ61jqSDZ9MYht01L20jDMxcw0GPsuJqrhS&#xa;4XDtuzSstHkpQihZLoW6KuackzdEQ42zdujVLKyuqpiCO3m2gXwXL29TVBAmsufSgi3faySSxm&#xa;l5RPJxGUNEOonIMYWzZqDKEFYYZ6n4TySMWmPG0GXyMR0xZejhj/hW+vbm0BbxiqAjdW6JJKKT&#xa;0s/e51GR8KKdlHxnSU+ZYcZf6gVQXRlb9KyJzV7FYIdiiuRTakgWAURy+qDuldK481S5pGWXNr&#xa;xHEi0eK2uMZyrKlkZDw74TW7Fo00Lfd10aXSbdi6jdO+uOSDD5maPhBTiN3LBKyeJI22xtYL16&#xa;rNXlDKrFJ9tSrRJIYEwtHiMP4HwfyaDumojlCNJYG0a/AzQV08t71SPPsLvX9IpsxFVzgejDZV&#xa;4wsCD0786R2pJsGoqY9hBJsqLD06BWmDS4cS0RFqi2juhI15MhRnaJwiw00O6G0aeLFHaDq+ah&#xa;22e6lg7catDCsQWJ/IoYj5nrZTlczP+BB2BIu6H29jqgkGF+UnHsQxIQ7YmwOp+yRp2xVNx+vU&#xa;l3rD2g7tFc/arhNiRefb9shhMu4Vlh7ca9MapZ8K6wic9KvpJ1OSuFcD7UIeXzYvsPHgVYe9Hc&#xa;rXOciGgcRPDJnX+gLr1RA5IcxVycmmekSR+3LLX+HID7IyMrk2Y+FH9vziWvVyJMotK/Y6PXIy&#xa;v+GTZZYhV5F694mUb1CTTj7K16zvtNrMWyGok2RGma+m6ZSzYgyIgwsVD2/gTbJOxsUikmqOeV&#xa;kKvSCLyLFlkb8pg5C6MYVNIUDyXJpxiw/Aa43KWffAGIVJUXInrKfKfXFUasrh487ahwrwENDT&#xa;PCdWQyiBki+zK3xnSFnp0OIbQDx1Z105cFv1c4bZrWdS+GUyq4YQOy0+ebv602/VKwrCadMgfX&#xa;zq7d2MbYygawTszrA8q4GtnsgtPY9/MkabRhJkSYRO4QYG1qioREzBYxZmx1y9X93VB+xpdIxn&#xa;FMLvpJjVx1gK/f6bZkP8rdrdT4TsvmYwND0wYawu5L65FtHhlBtUzLUnOobApEF8iRX8Mbndo+&#xa;My6e7cDwz+tN4av7EMeaEQfdoaFqV9sCPcBGZDaOl+epIGHPVk3eHqaxnI7oFq8Coe8uVLCsVN&#xa;wfQsH7KV/Ta4LxP24GjyjEOCe9IAkoqKr9wvuDPVm5s6k+eNxTGHQrlcfrH8Qdc42TnxLZJFz8&#xa;qQU7tTIt4Fpy1iGf3r54y6a+eS2lnx1x62bkNWU09PGnbfkE8dbu36rJoW3JTFYpxWTbhPnONt&#xa;aGkx/axKjytx0Oo9gBkqIVWSRzJozJUlHoU/8QZxME7TYIVjvMZUDelO9F8aMtCnnKDWDHUWEc&#xa;IWhyYNDHWFNVtoVj8I0ILHH7PjnpTeo1mk0HG4W5Do49DVqtCMoZ72T4N1kkqTXPSkLiMVdtop&#xa;0mBhmS324dqW8ZjL9hiNLTvcwGaQMGoRdVQjDHWcZTgYjWV5sJgXnX5pfbJGjVaoMzEaB5p0tI&#xa;CdOoJFFy1jM7Mp14V//Ql+omhzESEmX3ABaKLuVTzHMD7HERSnXD0rXcSsVt6dZVZiNHbvqHLB&#xa;eEsSEybAsYD/QuFKoKcexmC2jlCNG8vmCHhgJOactKSIxExOhE2JzqX375zQnqjZm+Hin9jb3o&#xa;HLRqaHT3H+Rcb06huCtrjaj+WJiTdIOWC2XsE26rrn+s0Q5xG//wC2N5Uxdx0c5jIABQvHHZ05&#xa;ZuAsH95gxrIj4ksHttY2R/W4MVpIzN0qD0nIvu2rjuHghXHwwelCWU3zjfc+q05SBILdgHUr1f&#xa;AWpQPud9QeISn9b7rzXGMLjAE7fn3bkmifnip7/Bp0ZkREydfUJrD5+WlbBF8QkH01BMer+5tA&#xa;Po3ek3rSRB0aUI0eje8ES6j9T/xskoA78JrRWNQV5a3ozB23bBLXQw1cMNwBWQNZto3mjNpOoY&#xa;7q6muU65reWO7SCbd+PcCaDAyx3bPPgDY71BKHKSjwMwI+FjolqF/49V+rVw+0B/j0ljvVgXFb&#xa;qK1UsIe584eU9vYKraPk46tY+WS9KvNhhz4KsaOQCzOilQtlI9iw4ePdsMwl3LGJC7+gdArOFO&#xa;YnM0pZYcMn4KlkZkSJSzIPHUng7sEUVt2QzgKTcpaSxGKYcw+BmDnTg3WIsEJlr3vsGvpUJr28&#xa;vlJknzJJ5ZtfX+QFcHTnw+yWwxxFZg7wxhrDnVj6PDFSNWQHM0ZdNcfsntCVfYa1Gp/4HWpD7h&#xa;55FBsYYtKOYGG6PGTkNSnyrA1qvd8APm9L63SGfk39iN36SsFi9VwywbYWHPMV1Us1XD/g7zs6&#xa;zzst9BOQQEATiP8TlDj+v0Dpv2xdSlI7U0dWR/i1gbBRU4GlXtS4aK6Y4C8Wp6Xtg0KsJQVkTU&#xa;G7zKbrZt+3WoPtzk7hy3/er3Xxlvexvqc+jydzdrKnzFvyVUX+6JIOg8ALCM6d3tv88NPskJ35&#xa;7c8jZrm4/MwuJkOtZ3CcmSVfYPtx2V5ekn2KbCzwpqKsY44OH+Iv1HC6vrrNUX5jrKDmauLlTK&#xa;KzVGPMgpIjYWFoWJFjrFyDwF+isuNKdKJKNpe7vpe0cwyVwXbG+v35rNfBHmcmQYeZGITRL9U/&#xa;aVGE1F8l8ljB9gM8F2J40mnjTIrOr0hADFm4Y/CBZWqemfSnq3dlwM+4sUXRKRjSWWZbal7ytU&#xa;GCgzuTPP7+HjGoAcI5pk5iQPuZfymodaqhrfR3bxDPyXuP5j2LfS9xIs9ivjCGIK7RdpKcbFUS&#xa;90XDzihINgoNGFUxlFgGkU7HOdPjCTr+3v210w7dm5Y5a8Uwmizm0khdA4uxSOmAr5iPfIDHWs&#xa;rYyHq9yAk0liz8xJpgI4nTGM3CZ1aS+ALoJsP2qMrlf76dd6P3lWH6xfpdGmuR2J2CBqdxCnK8&#xa;03MgwdtBXjZgB8zDgktbzTV3EqalUFCq5Z2uEo1TWvdkKZcDi8kaDOk5V5zzZOysiX4xnhtbfE&#xa;39yLxMNbVfXLMTpk7oRuLCQNnIprCGu+JUn5GSLoYaLESWH1uOBRVJfTsatmkfYJXuE4TeLVQr&#xa;u+4FEXY2aki+ykNg3Md0GfXAChUJIzLKk4pOTWx4COcCJxopVIiG8Tt8x0qD4SwKZLGK/HoZBo&#xa;mobyElBC8sM82joMd+1SYg2yvJQ74H5oWpFk5U1lrRaCe61K0niF9HpPQBrWbYaDBFIGz0A5V2&#xa;B1xqlmY+Fx9HjkYoQ8crUiGuPy5qzoORQad/LcVBB6eDxiqsbcSzct063EUBVcFYYyN/6go6w9&#xa;pgWvUkU/da7g7EnQOVfOMOWg/1skuslq8w5V2s0ADFXISINV808tJB8bpR7e4igN7ciuaIZ7gh&#xa;ws86QmsVLPYb9NfgM9kkC22SqnnmfgeCG/9UntJ9n0663r5jnjGwJ2kKymlDyHM01oGDjGQFPQ&#xa;V9wdPTVyqvYuI9nDDbDDwkUyhUKXhTxV5Pl/HUAXBwsknoVHsmm1Jxla3nNaFHXOhCtCDrrdu3&#xa;N2+P7u8IfgLKYujZCsrraaV7E0SxP+ppPUh3jK0wwNcwc8Gon1HQTX0CpjCa1tFxanxn9joc+q&#xa;o0xGL3luf7+MyXm3qW/S/AkdBd9ND2U67BA8+VN1wbifSX9YVyoat2pTHVrxcCen6Oj7Ez0e1p&#xa;7xqFCJGSxcnWYi7iKAMCCWvjvDXndkGTwhkvg+z3M3UdXfz67mO9aRjnR8gWNltsFXAfte6hdg&#xa;uO6KIzIGWloamxdn9/Nr/HY/DeJ4qqIoqbcpXUSp093W8ZpjMperGpzvDEWdm2B4rbR9QG4lts&#xa;HMYSYGLfpKaKN6wFDZ/InLPN0Ql5v95DyuqSWhLyyxS/lnvsYs1rL3viSqGGn2l4gnKvzpuIZ6&#xa;SfWnzAnkC+i9pW7/6ggpPf6llke4DExa/0nigWLXlSZJ1DxkgXZg0y91Xhf20RAWraJviAstkg&#xa;bELpRNcKKuLMMGLmQNMAvKsI5fhE3lAwceCdXsA/uJWYXXdgvYDXqqCCzv3zpbzmBW89sEYVIl&#xa;7X7FjmCkHcV5h6N18mBIp9TBnFPjvoe852y+47wdjBR44kfo1caTTBX6Si2A0p764kE/wtmpL1&#xa;B5oTJWtRzJzXwBZ+0UcF9IJdad3GEdBGZdfNF7JXyFpf9COxeYlTuI4ThcyuWqGbyeuQAdr9X7&#xa;1aWuYMD+yU9xuBWoPavu6MnEJlV0iv89XPDDUI/eItGFrL/xdn7xiky9ptaa+ybdu2q1bZtm3b&#xa;rnrKWmXbtm3btrXKXL33e/rtPrtPx+kvvoiMjPyRPzOue8yZc44hii6SpNJxseDyTE8fp8Da0x&#xa;N8+/2brjZvl+YbYlreD51MB+W7IIHYn6/IhBRy4F+G1Idi3rxlf5XNU/9t2fz/6zRg+1/Jasqb&#xa;aqh8s5wJSMSYSBaNSAvcBrARIKSWWnl0jgFK0flMxWRNjqGfNknY4wkmKS6SL8dhjzyS3D8nXN&#xa;6Wph7FXb1ySSmjEoHSEvC9XnLcb5xuDnP9/T9AfiL4GZ3J0jmMprdwycudPMxE96cat0tx1bbz&#xa;Nuet1yQuSqco13vuPh9kgI7MqTTRWVuyaS5MGTEf30qUGZ61XBkptf72EazkHO+bqEmrqR9LLN&#xa;w6Yhc8deeNZWK1IfBZbzU742WlgkICHHrSFCdLwV7fP/LZSj5Iys7sHnZs7nreJQJjucLOpx1a&#xa;1eSXSmUcRqeDRREl1EzkYEgdmWuYOY225ApOHEMaEg/33SBGAA2ybnFgcVfElwlZA/KZ1I5qDH&#xa;LYdPhNNrFDd3BusyrliCXy5Z7h1yla8aiyyLOSkIQag8TKmAc8Ioiu6DHhB5cf52Fk6rPHNNFS&#xa;N43Ji8eWuIK9GEEBHVmcQ38aAdzQB4LTjucSQBIWheSIueLtPKbapnadldB6grp49Huq0KKIcX&#xa;vE1S61MxzwqQdWybc/dfLcmENgU/dNuiKTx4qF6OgnEp+0TII6M9S9AMpH9Z0v7i2UBPNfCsg1&#xa;jCIiyb6nJXyjb3bQXvMUidi1zI9dlI6a2+wTN9OqqTBR+V1qJdCSbTMKDFr2GKM1FdxlM1r9cF&#xa;30h2xd+Xn4FFZUz0CAV0NXwkAtvfXYOfV5g8+f8dlhGClBrUykh3Rbj4HuZdRtoUVrmOjZ4hva&#xa;KxPGJWVGsjpj5yIyu5XFzp0Wc4rjVaoO9g/ArVzNrNksAHfRtkOVAqDuo3H1fsodpKdZxqYhl0&#xa;yY9Cux6ac5MR87DKeVZrjGM6gOuVYZdRYZ86xaMYdMwRWdjWwKKsU/csqdqsEmbfj+cn45FFiz&#xa;tfpldE2llz70yGZoMvt8SKO4MUmFwtKvHruED5MabHZMrk7MNwcoABaGsbYQT2o0VRVB/G1mFw&#xa;cwltefc7TMrOrWWghbiC0vmLGWfh01uL5CKXUa0rCyGYsd4aQjDkx6ZGkgSIsmGy+SQbKNvQbr&#xa;WLYJwA6O+oBgaOHLPwCsSZbuYRgSteEphM0WUSldM4tNiJR6nV0j0VNTIlAo1Lyr5u5DC9Eefx&#xa;EwETQfwKwpbx/GB3JrKTWCadUeDXYmlVRy2j76sZlYI5xtz1DpcPCANA75rAr6aTueT0Kj2vDK&#xa;W/i+LULmgRahzMJ+UDKFbGy6S4T3VXswO7UeZpLakogp08+As1mLn0k7DQqYT2UyHy5M8w8479&#xa;bxdhGM3Zfs878kXVzt947FDzb6Wh9tHmoQsUodtLYomriDG5so1E4t0ArYdHeAllA1YT4aQdnm&#xa;q1ue3SpPvTtziNGDNr5RI7Cr6tmIkBE6Q3cIt2yvFs9+1/UWPjl6hc1f5LtDnEE1YOBD55ei2O&#xa;Cl+rDmliPX/Z4rMNQRY767hPnkRr5sK/m7V1kf8d08iinjzicc/NoRsWTzDgXeucJETIhUjRZM&#xa;8cOipPVHbXHw6DpKEYGnD0naGlPEwB8oe6OFzWKTxIPgbeUkNCCFXAXtZRv2/Bz13Vm7zIQD4E&#xa;YYveMz3qfBXUfzLA2/ptDORivKeiBbOsbSP3TAD5VAVp9MC/6FCTmXlJ+i8IezeXZGhj4w77Tt&#xa;flLRKL0Dv5GIKQ/9AubkIIlZqPGam1J2BiZoTfcm4Xy+SsN8ov0IPP6I+dyqyg4gEIstKbX4w2&#xa;JTHUF8/8v5SUKdSwTiL9gOQf93sMX8v8L2f+aOaUJ54C4n1PwSy1hps13n6xnBtImuK57XIImh&#xa;O5QG126IscVrMdEew5WyXvoFLrY4KBNHi5IICizJOZCAg0yIgYgMjxNMZlxDCm5vQBQC+qsOZr&#xa;Khc53E25SjM3PbJPGrstOcNUWspQvL9+viqbJC/elCdbly1ev4ZZZXXsT1kz1xhdOgaLFTGYBk&#xa;d3ktexuD9dE9JMNSuxL26KAj/xi26VXDXpCSGpl+8lIq43wWwNKzfGNeTyZzvI5lhctMTmb4jD&#xa;1d3wQmOH1orjN6ZGlvvTl9hLeU6Fvf1s86fX29VB1Y36rmi8ipb1Pnbyy/ITgu3YnkrpcUWZYu&#xa;oY3WLOOMxxSMiWAf+cSBNb+Wh6/PIaYc1qxaRLcdKYpz6MXdTTdvzgyWOa3izwltC/Eow31Fz2&#xa;L6OJxvMSUT4tyUNrG5HYOlhZ3uQaC8nmd4zp5hqefcE6jVAHknc3nTYhQsFlaMQN7fml1ObV/U&#xa;ydNgJOs+gMmslHoxXpRQVqlfX8LfYCZrq3sNXVXh4kuL1MjOOF2eZTFS0S0znKzqraolcfo2Jh&#xa;yVZqb6iKNWiB/nPkRrbExdbMxCnKyaiqFnRk6UEVKYJx/Mn2WqU7rw1jQkLuoClKhfclUHt8rc&#xa;cvDTdJnUWu1cSIu6a1IlQ/xhcq6SGrCJtPi7cWFAmug1BdaerSqbisWyiJbW3JJIWQZXqRwwsG&#xa;jBtVxxVMisSEJsVSe1mLXq5Un3Cxx/Rp2yCZywKv61VMJ0Q+/nkooYdMXiTxyR7ChVJbw3HNEm&#xa;8QxkSymibrF8OpnKUlI3ZKLUyHhbGRgKcA9Rd1a7EhaqwhlpnrQUWdnoa306fqsSteQSnopb1N&#xa;DuBUoZMsMhk1ahTtWM/bwX6BLYG+3Dgg4VaneFVJiJ0aKNICMzD5iDLWn1dp5tyvqMCRE6luKF&#xa;sKzhswFm2RWzW3OGxZLFtwRXwoh7EXtegCgrlq8Xud31yNpNUo7ESzpVESRoS+p7nkic5QgcXz&#xa;3FvDG8PLLJhwp2Xlrc+7nVvHCoswYIk0jf1UkEOuASlcQ9/zqmmNGffL1SW+wwIKehj4lCwGAj&#xa;hp/ElLRAw0eK1qcmbsEkIvx8YSq+BHe9YI79RD5zezE8Ff71jNuKDyYHTY97rMnQSk9PwXOVj/&#xa;+g8PK8kFHWq29LgB8vFumQ1WEJsdltBNfWJJ+lOB3MT5DyESpESCJffryMPEY/Yx2Tr2yutFhA&#xa;PKN9YUp4AUfZTXuA+T0mKZU/2IWvaJRFDOfZ0+645dPCMQKRPrdw9uOs8RGspGOxXUWcFU1aKx&#xa;NeA6Bgc7WcmDL2irzgzWpqwHedhk6xLKrccMSvnhqNFhV2HB9C/LKQ6uuC4Cuqxqqf8WMxmmkG&#xa;Hdda7506tldGSB7PIoKM2TK5R87Q8B0wxxAgjM4N1P2I2FXfUqKXbx/zcAdPE4ro6H63ye+V1k&#xa;PCkk0yLWQ5I2qzuryyskTtIrEzm2iWwBpVzKWfQbagQygLtvgLaFKqZBUwqLi+luG3eCXuQWZ8&#xa;nlHGdQZL7QKL4+boQritgFGOV1Ori41Xh/0LGk9ciHsb38Z1aZs9bSgjh6dYwZFRzwvIO/bcC6&#xa;eqGdo3NSHr7CMcMDFJcdN/nLi+T0bAJ89gvJ9GuZM3l8tI95PDin1psze4+fnWIPFL+QwtjBVq&#xa;QWB4YA5vCcdK+HlXkBe6m36kHXGc0WagPQHWH1SgVpL8He29Pi9FqlEmQ8ryqpGZUtaVXZoclq&#xa;artHtd2p98kMgyhYVOS8AAboSj6pbJG8Hmjs7N/zLBAaNUeR5ABv0FFntO5llWJ9vBb/NA9Zgq&#xa;syhKxgOtbeh2RnZLaXtVbbVAp8ur8z7tFYcEYdbxtWKn5YYs6mraK8yFCF1r4rxk5WlPucJYq3&#xa;xs+YuLxmv/N1r9ULxnDJHq+gUwP1fxYqzlddJsYCwQi2kucGoHid67eRpHRWn1dgnJ41RyaGWW&#xa;1B+p3t/zvXO9hgA9kmwR6DPXyG0Ay5uWm4W2aqBisp/sHyKkr1wJzdhABTW4tG7biBEZaKolIa&#xa;fbafWF8rYMisqZVVmVnoC1oNAh+7Ne0cQ//TtkV9Q6mZwYDl4VBJm6/C21loP0zamytsqK/TMg&#xa;4j0zxqF6H+eN5+u1eEgzU6IaGIUHNPVxYcpJt+5J+lqU0ui/ez2/Es97LuM2i4W0B6BTIy4oc1&#xa;Cpfmdzb+lrsgn+mqCWHw0NMCc0OAZOUG9Vx3i8l6T2zBlvFCkq+ZVrVuhjnNWfrNzN5OlJD0xa&#xa;WeG8a5VmkVpRrt+vkjMLRDB7CDYzxKWqqhfOA4HI2bDUlNC7B5acWCWXJT8dx7ylGeIvJ+jEoO&#xa;8w8tG3TsqQPHsKU+oIxiBaczXbu5uV/y6QHabilCyDNZR0/km1+un/JNYX4tE+pWmsb0qz8PF0&#xa;xO6BWpEYeVa+OuX88FrvvQ/fOItN86VScxjuMQedbLZAe75cWcTVHbW3cFno+FFT6VS9ZRblcU&#xa;2FptAYkTV9ObzfelqrO1IcfwjHb7cX5eg2zNSwCmW7Fdta2ZXAAVWjWOxsERi+qRNkbaDvJXnP&#xa;oALNKdzGOC1hblAT2REZYjn8XpenVFro1OjbfYKOiqeZAcTHN2dBkB4PZEbGk/ebfodq6dpzSe&#xa;0mPF1Xc+8nkHeK0HF3l/gaD1KHppvKJZQxrz09VPKaRTLDqe+AR6hIwGSbfmr2b0iF9k3N4bA+&#xa;xXbfTBtbjpcxCVRSxgo+g7Ef1CeapdjGhVuASSffZOMZE/XT9Ok29kLpCIULFxX8JOvEMBRPwF&#xa;kU2aPHFTet2Libas9KOk2yOEfK7okaJ9oz1S5rx2VRCYPGoCEdpL70/hf0F/KTwYTEyFNZ/p3r&#xa;HG35JFHFnSCT1BS2wiuJgzVkQwuZV8x+C3+oQMncbYDsCItlqEDsomH3w9dYe6KajcKrmeYBYy&#xa;wMog/yCG4XuDtfqD1Qar4406ktYtTy04ACtD92i4t+RnQRWx1ZipRwME9/mtyI8dlODP1KJ9L2&#xa;rFFs5bSG0P7sZgUCVjmryh/iKbZwbRtaLIG8Oz4ZUZ5Wqk/TjxSuojvfvOYpOkflUVSEHziXqq&#xa;/WCnyGV/aTGuPRYJeY73kDu/F3jO9VsYEaBBYEQ77AVMQJogJXnInhPqCURfHkRb0auDBf8Fu1&#xa;c3KM1RVZpIHyz5qjJ9oUojYxE1j4vzQEhlC5PiS7Po/apAbHrxLRXj6T4uLuFmVOs8iVPT1BAc&#xa;OAMh9YpOHCz+iJuPvDgpNGDzIRlYibqu7nqt7Ke5hPI6ykvusiVuqJgxWXfayJmKvSod+Ownp+&#xa;krzTMuPmSsnyv6EIeqfa6rI4xNasNopkxXbRWRLPtrOk0qkYDhcaPLZMqkuOFWDF90t+B4Y45t&#xa;6vh9lwV78I912OyXxi/5kbrUX+7D88EqheH+J+uShP20HhcJMGUc00hipkY1kzLtpC0g9LlxSF&#xa;a0eae1MRwQ8CK8PlC5044snyKWrcZ8WooM+6GcCip8XgdA7MImZfsjlLhAa7Q88QdgayT7KPCz&#xa;D9tW/rEQvn6wQ/vo3+G0Nq0v6AERNAv/gDA1Tc4p5StQk0Tsn08rfByyKqzg7WQgXJ8mhZTfiK&#xa;FzA+lg7SnYGLqVsTqQJxYSUwGWY3JfKCmniQ/Dw1Tnn18gpBoTRvUwurArVKJnBxnhWoKkrOtG&#xa;eSdtz8sxG33LSu4Nm8WW/1E3jXQDPNHpg6Dyd3iHFiy6hYYedkvjJw5JwrOOqcLvr8c0z+BLBp&#xa;UAexAvhSMlI1TtmM8RJIEsPeoAYr8h0eSWG42HmG9/ilZxrv8IuCp0SUOVJ22PDzp3H7hzJTwx&#xa;MudlGIT6/I7FAs41ckNVVETpw/cavW44nBbUW9PU69+dda7UedMoNh786o3leG2YOLAqOutKE5&#xa;xhn47wGGcOzKOGUv/RdIU606jOrJ5vwxJ1uBHEPNd2jt/EOXbNtihE72Tnz7fKT3tC+vcITsAn&#xa;pBMHHdEmnCE7G2hEd7xGFbV+l7dpCagcf7Ku5hGCbgUsoNOnikBbuga/tYFevcJlGL1rU81a5D&#xa;NQO7KNrWJ6fRYcWAdr6CbaSFG9Bvel73TtYcxXcjKHzbY8rt0ym3MDjcFeTNmBuIQRCka+sW6+&#xa;gFDuGN4ITDR4fU5zFIPuwFfJB3x7/0ecqkCn2nLeYcLvj0WvRMU3HLLh9UDolHzsADa06hh9hd&#xa;tFiTeZO5rjH/7rFnLK/uMJC8+Ljzo5F6/XN3LH2cW4FxiFwsBdX4r889FeTr5fukYs2J1RHF7z&#xa;kgCif4XSodMvbUNuox4Q0cuzrXJO7ErHjJnasz6nk/YpaIP7kTbqHTzytYaxNXeR446K9UwCR5&#xa;a4aGOAsxMblEoEIbs4J3ciIfDwHu0X1qGKi3J0GkRd0Y5TPajppuw7dRSwhONDMvs/yk/NRW7l&#xa;/KXv6mYYsDBaqPq2doyr7z7Y8cZ56U4wRzDHM0+Yk+OF90XsU2Qd+3cw+/hR8pv/i8oHulsd4h&#xa;HideOZri/NJhJq4h+RGqSx4s6DaekkrgHqGJD9A2pGoXzbwSM85srYrcLVC6w9LeAuj3Ua/3xM&#xa;vSd0vRv+mahVJbCqg32BLPCc5zt/rwWppJNoj3K9DARmUUspv7IrZy4hZ6eyUY0EGu40O4eWff&#xa;OyKjNsXOe8XOW2NtORncMhtaBG/dH3vrYh79ENJF5w4QZGrQQepIqb21yLRCSIFLSyYopevw8S&#xa;ma+f915UjjlutM6KlfmD7jIy1LpaRV9Fm+VWZZmxdmZHVhi+/IxH2STCc3ALMKNdN6JE02F0BI&#xa;QsU2/JlL5C1tfydNnjyjzF1c9gk5VSE4fjBxCsqAcUbR+eGmOcArIlZ3afob9wLWbT9+EIiCRB&#xa;Mg2rVmOqcTUdxvNYfrdn96+swbgNf6RxtoXTpoOd+4a0p43ZLa+SQdgThdzHUs1tHVMZY6abMj&#xa;IjGU72iMNvEjT1oNgfgDh8qmG0R1aUJHyKaGf6Cygsd5vJbMJUQ97Eo2+Y9i9bis4iG99ThlLQ&#xa;3OsbTbT6NFpB3kq6xp7fsdHdte+9qbKXpP8Vh3dFpKdlqoWAdr9O0RHpg8HnzX+U5PeaBHU00U&#xa;l/se4DOaxrNK6ImVxobaA3yM6zAgMuDuftHTWIdbzMCETblRl+J+UZKt3GEE1Kw/GbTccvURO4&#xa;wDZm6O40FX57SdoSh+xB1bmlnyVv6tn1bBVgcwMYLVG7ODeIK2xbkIP3SOThFAqp4fnn7E+H1T&#xa;/kzMtf+xdnWKA7Tx5YPyMwyE3rkv2e8b9OfSbC5w+MebWgCRwC583e6s+w/Yjzf6gMzPT6yAzK&#xa;9PrgDtr0+wgM3PT7KAzezxGxfwWyeJGzeHl483vQCIz0+0AAi8idFPH4G+Q79v6j4U+MFE+Jtw&#xa;kBynvkV4zosAJIho7j04AX+8PTqIrutTe+DPJc352c9PxL7Zr0+6APesfvevT9uAl89Pi1HD1b&#xa;a2+rYWfaPVDQkWPz/gNwsI5NH9Q58imHarkLiOTKI/t+7n6tyZgn8dNBOplugbhT6fooxXnJIb&#xa;lAKth5xxboFPnkP6d1TfOSzBA7unKDew0ttpq4QXEGEZcQ+VuuEVHGKv4gycej/JPjOyv3d+oc&#xa;R1/fmXtYgjnE65AeKPH+nE/7lLQaPB/Q9rEa5/dCkU7J0tXSzt7STtXEydHJxM/7qT6pubugjZ&#xa;GzqZiInK/R9bHdlq1too4qh+FFA2kDR7QRsewylCdpj90nQFdEUGCQEroJQb7Lq/gNQG7To671&#xa;c+VK+vMR6te5VtkS4XJ0vfeb9k+W1nr+gxTe4D/bhYeJzpb7M8Z9O/PnL1/SEcQHdZcMennCcn&#xa;MrNKZ3FSzKwB/AWbW1VpWSbihrGbwQCrFEDYCMxwg6Gq7A5JIFPTTDrA8Umso+rC+Ty6k4RoLJ&#xa;55qt1lnvLes9mqmI+usWJzA1g+d5+bQzUzVY3uAtPtQ4T/CJv5ypv8J5QhYAQ7Hta23uO5wUvV&#xa;NSE7s30q6lkSC4mVOcRcbdnN1BrBIXDWKfFS1O9XoCUsHV5K9YYWk7IanbVILhsmsuZu8P06Mx&#xa;ihyrmq7m8iNOgjQ1rhHXrmpRfrDrNcs7Tw6rCTxoM4m+DjV9LBZ3gpQTG6VOeMaQgZ5eKhp5GD&#xa;1E8ib3dFUl8pSvlaTKUUNyN1UCDe0blmqrJ7SSzbNTxBSG8TG2FlEM3bxPmrGXjGkCvPaSPOlC&#xa;8CkUIRdrRo6uu4MxcCFy1wUz5Io5+CIo4CVNtkwrgR+YunsPxHkEpMPyELnuB3SaUlGEGhCqJR&#xa;sUkkCjLzvaXHk+NLTFDxdCjYU7UFsF/yWpHCHEX64CCRUK11ja7JAI2Zh6tmwt20W88RlESAAL&#xa;FyW9+C1FyOGOsLmXQ5sSl4RScxzOea+CV21e0MtqlQCjJ5ep55sjM2iVhQY2e5mBhHbVerMCKp&#xa;Zm1voEptl1E6eeEkRhk0uvBb7NYaKp9VmZFLzIg92BnmR97LHidR5cq1YA4belZwKavhc3pNgG&#xa;2BmzUjua/kcZzWCOeMKCPggVmrTjdpCAywZoYTEcIb3OUk1AqXHVnNY+LzkC05QlpCnNaXWXOo&#xa;WsZMbyRho1OQcUlZY0v28bcLn8tMWrM1z8lMbMH4eeSqS54Qgu0Q/XLaiY3y4mkWgCyzS0ktyk&#xa;eDhY4HNjk/dg52rknC3QqnxgpT5Y5IunN8MI0kWWpZMf976wQjYd/DJljHRiU5Nnvxx8UK41QM&#xa;g2CqYl9nUCPaRZm2O12/T0Vyh/pJJvq81DUkrYppV4w7qHYN05Wn2A3ZVvgeeYepjqBm3mcAdx&#xa;qBAN4uAdR2HFVcRWb1oLY/Af+wORzonTP04Wb9eQfzkVyTZfAVhaoyCh0xA2gyMprP/USa1n1P&#xa;ZmPGzGglDMvWo1oBxtZeYkbx/EBADU6BOCY3Wg5vgTKF4+/R80ZPCQxFKleRA8/CIcRxLFVlh4&#xa;qpck+wM9mC1h+udED3jECs7DzGIkvEMe55ectvf/tSY0v0wvFI+InqwzyShlheaYk11dInyGyP&#xa;7tz0vFv4FtzBPItflhbk81NRR9Q+l7E+JXoIOEQdKS4lXA0J8jLgo2d0B8BvoDRiWKI7mAErza&#xa;VDKQBTs4kzPCKA8ogckobiS1PV7yQh38p+Rn9Jc4oI88AhOLCGm0hxiXmPeiciOBD/kM+CNeQt&#xa;fhQwnbu2kXFlOEA4be6UVQL/wPAE0hmgaRNO9BJCHKhzjs2GX/i84PrNeZwVHOFPhXBuiR2qhk&#xa;I07QW0DRlIgXSUDNm6hSbeoYeltz2n/pHi6/qrNuCwMldsX9rNp57MZMUzsuoF9Z7X99rUKGAM&#xa;acAa8zcivJdeJ7I0piqwAHGWxgjO357V5AT5mlX0xl7c3gjtR8g7Wi4/t93S0Cy8otWgUETYrS&#xa;hzekm3g8O9CfOHktJ1hCJoyH6NJmn+Gk32/PU1cZyVl2JAtdxm7jFHBFsnrPkKN0KZ73FLVGVJ&#xa;Ft8WVxmVw/016XmBxSB3RV/zJ/SaNPXuO9eE8R1ygpkf1zc8c9HkfZxPp3TIvx7cY9OYVVLlQd&#xa;DnsGisu4ihPKgHTQC8iPiQh6J54V8rE4EbAageYD9+aP5jZSJbjkThP+Od5P+F9/8AebMmjIfK&#xa;qmNOoe9W5XJyUwcNEEZ0AlPcMr8GIngwaAsZEb5ZM2S1AR1jinolTZNZM42buoHQJmnNh4TOZs&#xa;x1E9k9yKajQ9bQsIEx0mbEZpNbJntzIjvC6dcZie1iyQ2JLS72+yxf5epFZEBvbV82l/lMOheL&#xa;88lUeqPPPkbuGy1SNdpXELo7bGaokP0OK8l2u1BH2oypu0mUmR+rPTA1KajnrQS+pBjz+FX/WE&#xa;0gz5SKIlFYHhjEQ/tWgvGvnmkr+egOULompBYpJ8iKrQ2sy9uri5trlCLxyeJW6AUPoa7W6lJ3&#xa;cZtMQogOwpJfoUYjV7InCBmiFqZmnYmhQkTpdHLxFWGJ6fk1W0iNJInSeMhHUsfM7V2Es5AW9f&#xa;UJQCjZE/NT9REt1oSpUwhCKw1CTJoypdzM8W0kPEkoqOEnvyFIyrfyuLJwaUSkRk6m82FVQnQT&#xa;xtvn1M9vw0Jq4AWNCNQwmaIkrTXmPs9cOFxlYQNGu6myZTHsEZf2cq+DSrqDLlL6y2JNyFHkMa&#xa;ZbfPihZtk+Mp83adhT6ErEpySgH/Y9WJj71yrmiTsmhNGaMGMfOa6Xx/LI8J2UCvPg3q769oVB&#xa;1n1Mmh4pGvIfWzsfKRZQrHe7G/lWFj2aHE9vhMNwBmMqcVbLmlQKqSuqQrZMg7J4CxagY1glHw&#xa;ZRDJOBsVWlhSCfZTTHBR3jC63RfNxJ07FY3OGgMk5351Gz2aDAq0rY8CMVGsXYlDZcEf1Vip+w&#xa;l6UGwGO6GpYLFLNtbJ0IRyQVrlVCWh/caFwK8+7QuBTz2ccMncTptSlPRpVEYyvR3Hg4MosUIW&#xa;zLC9wuliRSO4jKfLu6HWmuOkoOhu84ppGYsK/zMj0J3K1Yc9HrkuhbECGaJhZsaHM5GjnBON4K&#xa;nfGmVyaXWjPdGnv41tYPHLCt6CL0mGUJs/CEzVKWy3829oUlqAzc6zlTCYwqvz1a1H9pzB9h2Q&#xa;aPK9IcX5nrn4qJJXqypNC44eNLm4FWN903x7B9sHL/bPU8UxOyW3yphbJvEvJZijy4ARFM/hXv&#xa;SlXcMhz15vK8F5swHy1UjrUuH0tpQvz5SY0HGlmWBG6lBPVWMt7r3yK1KKn0s5I3hAQfu4gWOd&#xa;D/z3wgSDxjpMzxrv/Z3cz2PojgI5Kh6vfX+N3dxtOvH7Udn63wTg+Q8LF/RhIGNBZtqbeh4LBV&#xa;vRCUZhW4edaCjUEWYlJPmSSxaUpYxuwMol3IosoNL7e+oL+ovX+veugn3GfjmmF364M/6GYlHN&#xa;NrahfNby/c9/abSSyrgeWt2Ac2zlv5BoBxsYkAXCH9wjrpwe2KCmjm3cyaenL9UtHeEaWVMMvW&#xa;muESsPzr38PyV1Wglc9fPK3IQBCCqcGxg63A2WCtsDywlpjmsF4xl1gsDBjj+n3AYTAxYdGZNY&#xa;b2qMGjsHRiYm5ubi2jrodmXF9ab60u140SjLJbH6GVOj94Ng665+WuPN39zas66fDtowzzWjr9&#xa;vbVdrFdrurPx5nXx9lY6PtoxNheXdyJQLk7oTidlCBHV9c+v8+Y46cu5hH7mzxLKy3p2uXPm8m&#xa;TgjhES9ESHQjj7rB501cLXqp07Q8qxtr2J29whYybjSsBlCEOEqb6jkO+PWPYmeQ0bF+aZQ7Bw&#xa;kibQnSg40SpfgVVz5E6hA5zeEkhP8UL1wlDAndqj06duxuGPbrIO4UXpX53fg8K+o7+Bd7BUz6&#xa;OqhthgU5jbUoDsaiMLQai/2NxTWDT6DchABILJwYHABcGJwA3BKzFFMKvM6gCCjYMVlWNcRp4j&#xa;bBnsyn3Uu0fM/R+fi8YexM1/+L5A9McFhOAGVfubYIgsvEenXEU/Ub5YCPoJrI8KvfiN/1CP+b&#xa;eHRgv9AR+VK6OezJv+1vxLJPuZFs33Lvp7nNm+y1N5KKnG+E2krm8+7gbVZNSVcNZPJ9iarUxR&#xa;RJ0Q0qeINoZVZ1JkThk09a+gQH/hwqBPncfqnOUOWutYW55fJWwRoQztbxloMlOTXU9KifkIDB&#xa;ZlMmRP1YgUiGGIiqLpIkr0qToYuvNzWJ1EjU5UxEVkDtdkfJOVu9qpybaFDFiT5KuhldR2//6N&#xa;Czpr59Nas1YJFTfn8WSFmydbHq1Kb31UT4+wL7qXdPqKhVYxl1Cwx3h5rXDb+hTdqYBd2yx1fT&#xa;4btSHENQyxxnU5vU+zptgdsGnOL9YVqklKQzdGEamVZqP2IJj+bFBOP3X1IHiR4zXokCZ/2TDl&#xa;9lZhmF5sNt2wNBU2dGB50zcfM+QsPIzvPCYClc68n+45qeSJQuEw8lHoD4dx3gIGh9tiqWlVwa&#xa;nnFjwhOk8nERr66C2juge0F2RlK6qad+ZuNs0zrxUTWZxGg/ZeYTGSleDiVpUHrfJ6Abngj13L&#xa;ploljjAQNe6CboyDGDO8laM4ROwG2aBNK8Tq7hJUB0UTbaYBv1Q2+rypSWLR7R+rw77qannf7B&#xa;TbK4dCE0owqruHbt/jRBS5puUWacKcUamFuslnlLmWH3FsBBYmcBEgmromKOqyrwfoZauXZvUQ&#xa;kXGxLpBtahzg0/GhN8GegFH/1Tw/pIddOwQMxVkDAjDgKTy3oTryeps4TfWCb/nrhFrcYkCqvA&#xa;+SxLuQik15F4tj9bbviAfPp8ucRqvWxsFaQ5mNOVY+WXEZKbKOp8z2yGq/L2JpIzzaiJhlFyB6&#xa;NbU0rA6plG4rCbGWXtMecCWrYnn2ev0N8v2DbY53r/O1e8jFDT/VSAMDv2+yHKG7dSzQNRyfoL&#xa;SyE5hhge29ud4h7w+YFr7cGY12FiCRRxbAkg+hrQOI8jYcTHaocudoG7Wke1lla0N5f6KLzHew&#xa;L8wnzbpcBm9m3djIK9BfV9C8sLcrkwl5xMl4ypxZVOvS4AOEjW/CyRM7xBbQqYqhvRiLoZVcW8&#xa;GDzipvCUacVq0u89eoG15ANs8JN0lenWKj+hYkLkl7v45HrehxCmmY0VOlvzUcqxVAGJipZKyj&#xa;NUzB9stYOiqn2dJq4gKGY59qwFeLYuhb5m3bimPs1opYKRPZZ5o8WWzgLyIkcWhipCyNi5vqTZ&#xa;xh2eXXjwEj7gpRpokA9vkwKXaojtAWCWkdghDbh3tCz2AO2rJbnNJNeQVXB6tF8LWQIWnWtVNV&#xa;fSLz3MG/vrwsWB3YLVhUcGqQ2uUX5n7tN2i4J65HQ5nV2z4XcDtwaJDkwNULb7og9WWWewyqUc&#xa;OEOYRGe2SvwEHC/LjmMkDGXFzDcTRvV+fsopM0XavK5LBVuyZd6LKSZrWU2iTKC7VSsnHVhKPa&#xa;MWelU5Yq10wFbqvK+uhk3KI3lxki7a01e8XMYq16PMgmo1yvp1AIxYrLONl2VxHFTcqCf2axf3&#xa;yxPPQCLNwAK2RnqQ4mW1a+t3ZFjNXkvJjrASpeBjLewq01/PlLcMRpbikE7lGWhUF6/DchgCCD&#xa;/yoDl778wbtqhkCmYlHJeGms2OpbQFfdemngQEvDpwBr0gbhnCCwhKCZ7a+P9abFA45BA39kSb&#xa;xEnq2L6Gv+xG/S0ZdOL2pFyXxpXFgZImW0z6kh6/jeCX17znRnvv83qEYOrfmbBlfU7N148CXI&#xa;pLLBG2eP8rGNfGq9ZnaKV+EO95EYn4cAUI/5nW9D1otySxecWHAycDT4nR+2z2wDgTZFK0Z2zP&#xa;uTGijVjPJRFuo682yaORmM8Y7le9YTyWB1gH28U+AJjct3wZhCsxAaNNc8SSgAFbtp79GfYZ9g&#xa;fvZ8j4fVQRF2sUt/pl9yIYP5kKCxGUT/KOm9JpSzCNERqRUROVWoVqP9mv2IlsL1h10/2JLkyz&#xa;z7O6Ntadi5mdevgkdY13lnVBS9C/TJcnHcvLYx5dq2TOSD0SX1+ih4FdzC78jOs+dIDErNexJs&#xa;B9qCJBLB4FiI8SanE0pzj1EMihugpiO+ujFHwDciHcX2oUXpokX73rdalXpElveAI162oHR+Yi&#xa;xjtqh0sXIs2iOvVvJjlTFU948rpGW02gWupgrqHRqjR2ItvbHvKxG9Go+c11Q8ZAYNT00Ny7eb&#xa;vO+K5vsbZRdzhT+HEW5mxPalQu+nmU8CcOe1bBB4LHLrnF/HUEpPvdyirkRfMZaF9Q5GWiJE1L&#xa;s28NqBHpEVwu+pUng9IEZt4ELvqZlPvYbgWE7FOD4kzG4SfyLRypxHzHPRVtJeVEGfVuk5yqQ5&#xa;jsx0wIm+LqeaZ7iED7jndoOG7Pc+yHvs9z/Ye273Puh7bvc/+HsI9j7yk3/RRj0eJsJox5T7KW&#xa;sK6Kzoq6/YJ0emTCQfA5i/HvkkNsC0AvpqoV2JYhnmiPvwXneIjonZEr0vTBTW86kIMrihrXfx&#xa;NicX5eeoRTiIMRXdGCbaPyyx+H4alvEEcJ/peYXklIify3rJeJwVaUjJa1AUIA3jRTSiUABX9z&#xa;bLDV3vffI04epR/KnSq0jYUCRxJGtGJpsQuECTT8DGLPXn8gX4IcP1yDXL4JX+uYjKKc4FnZ3/&#xa;k9Xi52uem09c2/6TP3RnpPGxNF7dcDzqJ7Y608P+g8au9RFvNuRj/rvg9mASlR8q/90dGK6X5t&#xa;YX7CueSlXQd6qfInJJapIzRNCe/wyz+fNnVJDUA9wz6Z8MLE4KEUJMboYsOW7bWYB7T+dQyw+Z&#xa;rmjy9ZkoqdEsHXxFtlMjNrmG5QQVRR7NJPYBvi6Nbr/rmT5NRQyJ1xAGbF7pF/DqhvgvZQZsqa&#xa;glTTI66p/04CUuBxX35itLnpQXtlnNn1yZ7Q+2w+zrEboGDC3jclWGNOw2FG753Wt12WuiLUar&#xa;6xHdE3pX3Dz1UbbDdk0o3s3dazFuRqlrkbbNKJsWDC3LcldsLUYcmxG6Vgxujdlr1n+91orSOa&#xa;V39axpdL+iQ/XJPDHMhAsXjkYC9AWeCzkE8k6fCwlMZnLry48E3iFe8OFDDOzSK4Ig9RgvQkG6&#xa;K25yW4jMRztPgsx3gWIdgJ/YnYjMRx8hP7aTiOwrg5z7O6L5J0HqkDIyH90oP9FoTsKQvNQjFd&#xa;ezZa4GxGOVvA7Co2fuGuRjRtZvgIj9uwjNXKqPEctcKtmgus+BWF7txM4q6ccq2T1dRA/RPAfZ&#xa;e4rIbsoZD7KvesGt5KNvhB/hPILvQUlbM9naX5zXk2KXribAVdh4E4HQg+QBOSx4IKuvlq+F7K&#xa;K046c7ffBPST1xH7Ml+YOF5Btz8WM2Yrs2yPD0sigu6nUmVaQKocp7JtJiz9NxMvoy7xt4mdII&#xa;B7IV6Q9z/ue/xsF8wuAOuRB+/HAh+s+V+E1XoPx/rsTJ/1GJy9m7GP5diZPqO5u6/BevnL+TTz&#xa;C3KUDBByE5PSwrVqQVhX+QNC2nWNCUSFEBJSvQbmTA7/8gMSTPTvc4n97w9pfYLXcjWlleKe3Y&#xa;2D2y6pyVCRApWA7L4nI+6byy909N7P3z9uT+o3YPIrA73fPcE6UmqZxplMN3sp7nIefxIbTgMF&#xa;l3vVQQ0mWqPdb5SazCYsO5XOZVVDj4Z9zhTDH0THQWx6ReBfFxiu2uVlI5kaX06uPxVIZY4c/N&#xa;iszB/KaAeqQggFkg+AAiZ9qYHlNtRv5l1q3Ws05H5cXZ1SOa5t0it5EFksXtY1KoUImF104d3y&#xa;UkaaMr08Q68dMZTTN5Jvrcb08tzGnI8Chg2VG6zd+7qJxJa2eOh5KrRX0pM1zn5lNGTOZvTnOu&#xa;suBruWcdKgQioWXAx3wTpWpoWHIQLSOI/ex42gZDiMPwgWUC9p7AH41/UlnFFjLcJ3pcwmyRjT&#xa;BILXcgNfLIamUAtdHuI4qQ+CS+bB1e752rCVnOmMAJsJsu2k5k6nDeYO856J41e1pkf5bg9Kkj&#xa;+rEaUcuuMcLRZGZzHcjtksK/1hbfEJg1eqm5HQkBqY4Kee0qQGvRoDDH9wUL8ahrgshhwCH5gc&#xa;41yr9qZnFjBWCCbFwzVTYlV8v3JfH4zlT34DnqcPLRW7RundEiAX6B2RdtG9vxOsI1h6pXloa1&#xa;vSO/FZ24Y0MhamnCkJrr4kjQFxlqGhdXA+WmOmfYnDskKGwCqyM6wOqs2cx22WztVxwxVjdzHn&#xa;tD+Coi5efrrKJ15rIKFzhABkAPmrRkNzZKXWQjhdyxZxhjKnqFjmOxJfIzYt0ZcQcRd9DWqjpa&#xa;JzTdtytqbvXE0QupuYy52QtdUYI5KeI9VhQLDHV+6odiwxegRHCTfUw1So6C7kQRhY3P3WGr4N&#xa;0eNr0zDpfc0i7F5myr0luyJzubfTly0eiOp/+MbXVH1xnXWZap8iEQIKVfrtSUO/6lbCWWQ2jj&#xa;uW2+yFIaGmqWhnu9TBEs2osFtiLLhwAsjiIf/iWZjH9WrNou5uoTPllRdcKlnbsbDqCJk31kxH&#xa;IFUTtsxRwERnfVGYCogE+byJY3VB0cNYnAWtjfN4Glb0tMUw2ohbapVA8JzLyUSllizSASFc/5&#xa;s/CKmmtLvDKr+cH2AuQtIMxygexQxmHZkWJ1BdWswC6xVqZZ0dVqSqcdm4xRWqzNFREXJkdBN3&#xa;vQn2erXoPnlsxv07gLAk2mvym3OUGzbhw6w8OSdcRVeoV+hFVJOS+OXLAnGwx4TrOizfsSb8rP&#xa;nk0jTns7FoB3PXX8+mVPwYlZ6NNSZfCh0dB5Sq/3qikrtXXQwZGWwTR0X4Cdv3U9RO+n3Lm9Jd&#xa;p2ClmR9h4FYOXHsLRSiX7C/lBzOAN6xkoomn/6sU0j8aR3xhT7+ILp+zXuzYndz9eF1P+TFb+a&#xa;BCdOySNg4Bx7f8TjEIxpDtX+oMYSyh+08IumhnuoVwa+3toDRt/ZGFEhSXJ3WAoLgIByXFGHvj&#xa;Kg1XdPWDVpcgXqHiOoQYGVA33JmYtkmmtommiElT5nbbJtbbN8WX1XFNlk/2p9ME7Igji8yalL&#xa;dKkyfJF/xCwWPSZvIVezd7VgmzXrJiCSya3bH1p+hZd1qzcyXExIMUGkXfSExM16lKbIbjW8Az&#xa;RS9DmSOIJ0WKizcMZS0g4P+tHElKisqSrap1ZedgUjBbZmNvUFuEF6b70xNoykaoPxLiee+SOJ&#xa;di8zLHzALuVvBLNqmkSgYHhEFI2mg9OO4B5ZkbslSPUG01MW2PWEpMWGvB1gD+Ikgvgpi37gbn&#xa;WkIDL6AlS+8a/+qCCxKpsQ2I8fAv/YiCBT/+fvr/8PVP63k4yqtfqmGGK3NQ8S0gEZfigvtsS2&#xa;AehQv+UiBClcG1QxphBTMdgGt5DeJrGYE1l6Uu4cwcIt6zlREZevj9XMuf2EJQ/NeEB9IoCBxt&#xa;L9eWYqm6fwP6jMcRduyKh7UNN54JCj08S3zWJLk+Pcnsoy0aLt6iEFbHxGz93S3ZhJe6nGlA4v&#xa;RyqCNWJTmsZ6xctwrsqBpcWlOsnS6umUor01z5cj0OUIyC88OdEymM5jBxDmhxJJGTLqyJq0PO&#xa;LxOWQ/4S5Sy8Xibnb0tg/D2SsFRqsBZtpoEKNd/uIAV6UBi0V6CdNvofSbhNqj/GvS4KRJpAGh&#xa;jMBqlqxsZrrFzmnGLIvHtTaWhok5NAYnhurUSc3Fw8XYQuWg8qExsQdCoQLYBvdxfs1OiXOXQn&#xa;Ex0G7ojryJ8H06QJo6sy6AJv0PDbbpQk5jJb77CS3xEDPn/BYmo7C13E/w3CT7HXSkLMLuFN1D&#xa;tSQV0Pp4kRH55LwQGliMoecqe6wfM0724/U0W/duaEOO7Wi3e7pS2mtUmPDsyLBIiUHX/NDmxU&#xa;drcY/TzP2xzI+kGSETDkwo4MdcHcfoNuYfEnlDL5tttK9yyHWUhiup88AvLvr4sCAhXl0w8HGQ&#xa;HQ9FPFAcmFohyEGT265EYKuoXXGZzDuDELAotSQM1pxmw5nrT211aTOXaBWVIXGYGyG8ccOcG0&#xa;0204VqjBFUWASHKUHsTbmFWwKGEl2WtRJpZgpWWODZbjTz8UdjmRy5Qaz8yUzBnUB3hmXQZgnI&#xa;ELkJFYdivva63Ce/DBI1O/fo/t5Oi8iRWsTgwJUjq7Ee3wLFI2XPgEW/2LMYrmkySNBaPxDwkG&#xa;Y/TwEm48NE0K4T+W0FGHNguY/U0V8G/ubrDSV2hYYWSrgrDoJFDyHvLUBy8rKAsqYAV1f4VWIZ&#xa;RdVIZIy3S/mK+yAEt6sY3APQhkIIp6lIDJKNnpwzpNQQUwOVWSxpTUf15RA11DbiLIQY0hX4st&#xa;kaGHRGpYGraOmoFy8klmU0Wll3sVd1l2FCUxsSavGDw3iUet1OYKLr0djeOZJrY6nD5dRl001k&#xa;L6GjyapZ0p7IEh0cKI1fNB/VlfYge5YoJeOZJTS/rjC+8zZLNw6SCA8Epy7IbrBgyHsQd8lLzG&#xa;kgTKuQE1Bj2rBsPr9En57H5NNGmGsti4nlE/0za1RXIHSZJ2BiCrvXldb26AaEcS7TpVvQCtm9&#xa;+Amdjx/fXCcgrwBjfGFgJYMnZTnrwBZkjhlhgOD/avzhrYVW5z/PgCuJGSzMYA5FBj75sik+ln&#xa;eYsetn0aO/b5s1E9JK5QVNE9plytoSdwnkdwSpX7OvHpRt3N6WP2otIhNtIR3KNRVSNrjBz69C&#xa;IpAvytN33T3alojlGwhf7x3gbZ1O0cbSEdfOl0u9H5+0+Y28jWwWbnGRi2gf8BvNb5PVVaE7d3&#xa;mJ6CmqilBjKVgFJwPuTRXEazl5t45bnr/XL/aJja2Ab7jVO5/rK134wSU8wyN6S/+swJXgTeB8&#xa;4BOmDIJySiCsR0x9mmLMstegk34qJ9UiVWJY0YOfaEp+jVhW5RyLBAWMhz/hP34Ikd/evGSD/v&#xa;hRD/WfgRfXwfkP4LH9M0rk30/Kpi4ulnbmzv/bt5H0//BPSf53Hh9yFmf0T/IdSqVmMUjBaAPr&#xa;ako6keKkHyl5qDaZ8INEWFAs5yYDxS/e1pu98+4VdEa63bzLze+ZOrYv6VjC8WfQCH+p0qmdj8&#xa;2PzdRE/++va4Qf5vckwszJp8ULSdNvK/SDeKOMzsUaagwaxQ3T3jSdjciYwqzm2iu/tRry0ttN&#xa;Jj6IicYcJhqcJbczTj2rdaTeldzWXaLJcnBPyFvZwmbVWbEx4W9/8l2XM2VVTbJBGQL4HtSkaF&#xa;AxZ0YXW5tMpx9sjG7QV7O/syl0eeJQxyxMIDFsK8dsw/YQiisLs45gtk5KZj6wtIzIxJ1h+VTn&#xa;pIqRnPuNJIqsxWYwoE226qZMRFMei21SaKOLMddo3/zmGeHMAwzz6HdzD1RX4QAStKN4/cIjDq&#xa;95ttaoovpdl2a2u59VZ6T6xG9HxqIFBz/gJyD3EIXNfX12FBBFK6MRc5TrEGS9JT8ghcfGccgA&#xa;O4/0UdGcVhNapmGbJOSKsvdMZTyGWNiNwP3ecEqSwrQqeXydkRoDkgB2R94rKa9nQLtztRIsHp&#xa;tHmaZodjhHAYguLIQVuZQQh3D876E6Ab1FIQS5Sc5Q0nkKHaW5KDHDhrhwHzUNrG32yJm5jMHQ&#xa;ob0uNdJv0q4xQgbL2JzcI64eLXcxc7SswUlmvQFP6qrqW+EU1b0Mqn3g5fsGNcqHCDBA8P36hY&#xa;YPEfQJMf34GYQqh3bRLvN0LF19eZdttYUzGLGpBCn9Tyg0otIJdkdRWNmRVlVvVzcrVzFfrI6g&#xa;yqAZQ+BJ1VJO6g6KQ/ZnTHfWVkMsLSrJZX4V/giuuyJXKEtsogIovuOzFlhvK+gRJiJj2FXM54&#xa;iZWuDLGk3T5n00GWKS3yzFeVh0BYcWoEOXeMLIO0YK+J0XcPXS93g7bssCq6hTByXRWF3XWDVt&#xa;FXu60ZEImlaXaT2+/M3qgr/WTUa0HCrMr/vT7Jw7WFtimm1qKdszVSuwRksMD+T6wQfwXQby0u&#xa;vtJWneodg9qKJ1MJmfdOkSYU8P5KGeLY0Hly8xQnG21GByGJBTUM/SMIKT2q43uy2hbgXma/Tk&#xa;rEbowB0kAXDigQAuRfglG9tZQvWBimg2UrStgYK738IZms3Qc81f9fFfIWvLvC0zV99qb7C5t2&#xa;QQvQZr2umPrEdKJkLR7lEudhYtROADSRqU/kux7wdpao+7mYuA8dFJaeetZ/kkpMRvlbYuB6u8&#xa;E5qSOpkkhafjas8MX6xKm8vPCsU9VgkQF+H5mCgF6Z86yj+jaDPCclqRAi96ULyTFhjHRetzV2&#xa;rPr7l1ab3P1jsiBjGEIm6UX+ZWnPPzm4kSvtCuq+EWBaK8IXbnMggh9xhzRhUdieZvMGMXOeq9&#xa;A92A3Cn6gl2k/Ll9wlW9MDIcgzBvFeUfn8rqe4Z8SYElPoOe4bLa4xoFXewPkmW7OmIFtjdvtP&#xa;+C8B+LvAQQZKXXWHbvMTNIcR3/2HZ3I/HhXPiuk4/FQMFVAnI7zN0oywUUPRE+BvoXxaqXey9I&#xa;fAMDGMbfmA4wpEpAESo/idHikbKeBcHPqCwsiOObCLbgP6SafYebiz2etYU8QAp7qokWkFq4UX&#xa;A8lOE+QxyMUFZXbw24t78Qpw9cUG6nim6NOrxBbqs7PZEJl4hk4xCTGYW5SvmfrvFcF4VASZdQ&#xa;LoTI80eWeKtTVUlInGihQzaGMfhvUlAcftJ9wjsnxUchGMyWBQ7xJa36Or6zHEeV+mze82i84S&#xa;Bpcdz16xcxviNekPNj+wY0Yyl9PdKrhacwtHJ1/kHKILXKJbRbDLxSfkVD+uTjEyYt2INIFTr/&#xa;F69H3lajZP8SqHv/EKho3d7/TQTfvwWqipOhnbONoYu9E6m+y/98NlWwNDU2/S8TWv+O4MPk/j&#xa;uCLwKsWUqafg61iSOPcihIIi9ZgVoUJ2xcEhPbzMFMaNh/D+EeT7vYIjWVojOlt1x629wsoAiK&#xa;9u54qv2qu7e711fz7wS+b/g9EJ9RB77GGVvv8QPebgPuisLMkV/F2G6arjKVArev3n76p9iz1q&#xa;aLNRo+GsDG4Sm0i1s7kqmqhUkzHgzIQbDBJapS1maBtZVoPNfSmmiD8xyeXgCcLeLgUOEYcoAG&#xa;37OqfFz+CykCWRNjiHW3SRvarF3ZZsXpenczXA2X8RNHxDvN3/nTWpEp7enF3gCY9QtKDM8E7a&#xa;25V0xh7166rnlm0+UW85iC8fgp9ugsjEmTrE85golfPUmziaFvsCDeQ3O8NTgdLP2MjtS7cffU&#xa;9VNz8/oHcn8PZnUMUtBJk8GLH0Qsj/S8ac5L7JC/PQYSK86H2mEB6RhgcuLlTkIXhI9D7tOBnS&#xa;Lxi290wxKZ67Zi2Zn9US9HUt7v0nRsY7NG3AeM2RfhZ+WzMTh0kdxrMopSwqpjv+4QPghaQTK6&#xa;sB2pDqABCOcn5rDsNdgdSU1gCccZXcgzyGCRBQ+0+lWbWowgLQEBchLzJGnFrpM+FTXJkj4hwG&#xa;TiJQgwTS95qDrfkSXNnktGR2sfZxiSXYLPIrpHW7+yT2MvUohd8YeV8R72E8vuOECSGaWmiSYm&#xa;lWNX4vfLqTBH8bCM87Tw+SOisszOtWeWYv/iv4ngdgGu9GvafpdFKDWBMpzy2po1mPLYWNoQBf&#xa;TGHL2UQwaR30ZP0h1VsBNi/uqy+4GrILnc7hk0/2BWtKYJ32BYDbVGn+29Qxx1l36l7VoPtQRz&#xa;5ky6aKnXq8uLNXop6uqjp18a/kGlagXX6ELMLx70DEjvBct+kIp9sQlYjoPREFed+w4vu9O6DK&#xa;N7BTJepfjBX5S9DJag2dtNIaP2U/hxXwCkyPWH5mheFbBcY0VSPeM2D+AY5LZo4l/Q+Acw+8fc&#xa;T/6FSs629pDrFEOFF/Wu11cgrigjXE7xUhWnbZbig4TC6MPhLONDDVbnBbepQ0IxgteVfOnqrZ&#xa;/O2mocr0KmzjHa37I284P6K7bZ9ORwg7lNS2ITVYLO/cXxi/XXNUQKEXzU466NfYSnU5HF95bd&#xa;U0wyPiEWhOwkS/iIg7gWqaLi8y/eLoQHOREWE34w46LzkpWipRCQv9ARN8VnLSjTsX0Co4QLZe&#xa;tLTL7NH4cz8L/P5LQyV0gFf/B54NyG30t3ujtG7Azd8G2AbWX/QFigi2EmOGDKFl1/Qhz6NDj6&#xa;LUH9hvL+HP8Othq0NkzwiB4iXAn8zNDxd/o0D9oGa2IMoiTkpx1G/gdib+YA+issAfG+seycuk&#xa;QoFM3loAdkIAno8Y/+Z7ut5UbqT7n4qjo2OX1DaUfber6tqkbSVe1fvtKbPS+rEe+Idvstt/tJ&#xa;9q6E7WFxxIEEc7+2Rre3zdPGS/TyZbdujP3IPnBZyvm2dl2zkQOWSPZXw6XSilWUSt+fC+g3A5&#xa;KidWJpT0U6RGrKJX0Cpe1Mf+gm/C1zxS30u0X8yJAlevo2ahjk/BF6PEZaMfwBA/pnea4IxQKS&#xa;hjdoxB9zp3oFbUIVx6eUiP3abPBuPWIaBSVQB+XSoanR9mXAvcX24SKoV22oUv9hfMOD7rY6+5&#xa;fOXf3H9i2qTfg/2q0c/++5VqO/h1qZ/+tUa/L/mmqlDUFzELTt2lQagyPxKBdtClWhRZ7LwIxs&#xa;kU1l7LNak+XAodtY2ans/g70u/5b6vp6vanklvaOl16nr5MF0fL/xc2rqfYu5xM+8+d/eR30GX&#xa;72zSXmHCdLzZzwuu5UYMYapg+WDF43TEu6oZLTbedc4HHzqVGmVEktn/BBYwpvRttqrp4ok21n&#xa;SRZv44EJAopMZ4siV1BzlyuTk0pN1WVH0w7LWbaOWm7uyjNE8QblctsgdIUBfLMhpXmB+fXgCf&#xa;l82JM687Xn9DXOieoe81z5xNHkAPByimU3E7WB3r7S9ulpYoH+PljASmxkIY8Yk+4CTbKh84ZR&#xa;uLlP3HCpNGoAY7FVx5EwFerYoEVGl65R2S2HzCDXsANTB3rGbKRAg2uKsSegGo9lS/KyWGnF4T&#xa;XA9jKpZcfiqkHA5JY8skj+/KjcVHhiwe0K8n+Q9o5BkoBbtnaXuiqz0GXbtm3btm0bWbZt267u&#xa;cpdtdNl2l/r2OWcmvjgz30zciPs//2RE5rPW2nvFfkkCjzG72CHZ0jTm4nKNQhtkhtFZOZIe8d&#xa;HormwJRH5mslHDhbNkk2OVNnYaqll5rJZsFDQzW9oQMbKiicI9JyfxmUVCMLm+5vwIxxaihoAR&#xa;Stk+yjaGcgIRmmmKIcsZkc5OzfZWLlJLKlFHIa/cxpotxw/xndgNEOGiO0IIQw5rp2v6RO5ejK&#xa;y2zikywLb7EUtHEBkqWm/knRya25138WsVJSPVZ1NyhbTOA+dWGAevzAa42+zVy+h8rqRuVQLl&#xa;XQFVSpEtgCdzs95YZ4l0tyHEQm59L7xWuq7b5XIwGk6RJbqoH2z2OkuQuixog5w4I+eYhWnPNR&#xa;sT6HbFF3DTPLqWcLKnZmsW4lhtEdz6QUy7MkwBi9TTu76YJp4iYjRtUXc/mUU51lVRdU0V0xVO&#xa;2kqS59jCY+x6ZCoxR7ONDph2ueuE1JywRIz36ap+xO2dtTVZiEk6Z49rL0yPX3X2Flu6dO2pbV&#xa;XMiuDMTdDINsfZZbA0eVWyM6Q/EBMwX0QtBEqBuIVZBBeoulRGndVwGOUmqzA5PCHMpUp1U6k1&#xa;KnbfxEw50fUoMM6XKlqSLwvs0QY3X4C0aNfCGDl+8V3nR3o0FbxL6ls093LRltVLjLi6KrcIwG&#xa;C6a5YLb/ErtE2YffIutRRGCkV/yY/J+Pz5Z7rCN6ZDJY9mN8t7h+Hyl5rEL/7yS0cLvadN8wey&#xa;LbbRNfdddhHuiSjBwMjxXk83VQafX3RYgwcmS51S9j40ibD2Jz1KTJZGP1jp5ohok5MqELIXJU&#xa;yfOP3actjFVKVxlTyXiZdDm9WX0GOonaxNwbxzT/QE9WwEeZW+xNI5w0VLl9wisLaMOYyzIRUk&#xa;Pmw0xh5oPLBJzIhAxOrJRDwsDaOMva1ubWkQVMZj+A9vS354ki6Wi6LetgoUxfyh3UbeJPeCdC&#xa;PlcfoyEy0BMmcoCHkauhDLgjqQFQSOZ34hK1C2eRD+I9kgwnpE9WCpHP1E3qrp8I5xoTckhP20&#xa;cPNFIliStLW4xaOG4/bLKMTNUCTiSJL2H5WvW84mPT5gAePp1whSaBcCB5COUPU7NlmLKMGISP&#xa;o5Jt2iWdW5JOHJd7hw9UVjIt5R4oVLspIs+oIcwjtSkG5cA3YeYtIrNIM/uvqeHNY1KH4DJQ0+&#xa;WIEGVQ/D6Lfr2Aq7rXkDeeUOPbJwyFzCnLFE33YLjltp+iJi0F8A8Ldkupod0brktzB0xm6AdH&#xa;Lm5wQZ2r1LKMBZnKl6wW+mddSDSNtFed4AQBc0koeBbrT1sK1utFXOgZId6IBpinCtXm8KaA1I&#xa;Uw7zAUGTGgXaZf3mGScJHfCHsRCGHbrefw0ulw9wy/Nej0bpjf79vTH1gJj/JRpOHF9IZ0CC5J&#xa;uTS7CsQGe4l/Q7RnVgu4B4szAawVA7s9gVmZ8U2kPuixQhGtqviUXqf12BhbRf7w74640N/q3c&#xa;WhHI82/emPl/GN4ambob2ZuY/Sf0/9tJcL1/DDK2OEShB2E4KenUaNoqiADiDWo6rXRl0omBy4&#xa;q06+x45BymjJMlyYA0/7WVz4Q+lUvhmmoCBbfaT3KNDT8LchhkvRtni6Ntl6e14/tpgT+fT9CB&#xa;Cy9KhMnVP7391pOZeQ5fyxy6pwXnaOky48jqu9107FBrq3QcPJ1FQxBPMp91Pay4dNhyf9vS88&#xa;7NilOuZM9o20upT4rz4Uh5wY+2Y5i5y3LPs/hpaa+sks0usXoxp6Azts3PzcqPHVMCLhQQjjAm&#xa;yVgOnOzshbQ/vfAArjCu3xZT61Krsx5fO1TcoZR/p12YdkrzgZuvmM3AWg4TI5G7gO+l/biCbT&#xa;N5uwbkSNq3drhZOIob/vrR8+Bi3qrd4Md15kWuhyOFsG0vRwxMFPPypmiWE+taCPkADDkKjvJj&#xa;AoZuowQ361fdgpJ/55bE6buhb4EYep3C+wthQnpTewQllPrD8x96D6jZwUd1XraJwexqaCrCwp&#xa;hbSCzYeogcFe3ioZKIdjIe6n3s5bw/m+LAcE9/ZHOOIGqCVbpsyEhWc3MFlQxgq+qaWBuBGWyh&#xa;b7bBw1FBUEAZs0Os3cuadu11ekx1Uuvho3OmxBPv+5SpMHRv7zXrE02ecxYBd+iIK7KoId34qP&#xa;xYKjSC+Nv6R0C6AsbU3fnlpbs5gt3UU4qdFirfwqy5t4d/Q273QwXtpps1GHq5T31vuZAhY9Jm&#xa;tqGlh79I7q0yYHeUba/JXa5x8w2cg9weJcPzmesM7wugTNi0v7fuIC7g4IPT+WPsHJ0cspH/lZ&#xa;t/wBPcpAMbvF5lKXFUy41xbBm7gZ3jbReeHJBN12H2B0Qro9B0n5G1DTaRLHtbhqVkyvVA7uCg&#xa;SPeSdzkJTWKGYRf/eknp2LVYdIVPx3KQfJVkO0qRUsEGHpk96aRShNeMm1obA8iR6iOEY7CeE2&#xa;SwvH0p2wNqWb8Ij452FI4/ysR154rYZPjY/wStWWMhsSHJADQTuOt2u6hTvBAS0kP1QuhmRxjP&#xa;OkLiINEVl5xw8qkGehQRWqrmf8jKjfkPf8k22pG/9I1b2b0mWvmK8xRGkmVCJyHJlq5nPJmRV1&#xa;s21KK9qmrrdz5dohXd133XRlKOHe0yH+3+ah8KaX7RNRWrNBppD9VWwH/lWAa5m/J+0XVBWR1D&#xa;OtG5lwaJDNW+q3UXpZeKaS64t3MjoeMh7EY0+4HSNTtlIQyVjfbDAMyNzOkjywCD637f172m0I&#xa;M6dZp3qPp7hcyXCd23EFiiIP6eMnvoPrwhorzK9kHf6NtcE/pgbfKEYG65irGYOYEkpri4Evxd&#xa;T7hTCclWI2qTks5MK3sEPmH2uGwRmheWDp++3SqRdwmOn4KDMH2HE/YDo3MwMI/zpJ6bpKwxKm&#xa;BEYsUhFlEjUPypKfLYv1M0hzeI/C+w/Isiv+Ne2Tredf/csxKnjWPhxOHyoBLmS9QeFiN5YllX&#xa;sflZuzl66PsK6Fq8wiY3v//myNUbVZlKCBonnOi+p/JmjWGCsG2Cucb8UHN/Uxb/zqQniSURi1&#xa;Vnta9Sh7WvLmQmRBZrhl+JC68Mi8vI/wdvGLDOQTCYxWZcGU5ZL7r3fhkx5JIYduCn+jnCX1et&#xa;+R4NRFEwrOnP9YwJ06ry/qYo9RFVKpfyLCBWPtLkMPgs5Ci6866HPv3NOkJRdLSXsGL9n/fAcP&#xa;sWM3b/muSUfzPJaVb/DlDu/wGg/7oH9p/8FDL/a5flHNzN/utF7f/sKfwLpGlVatqLCZAkhkvq&#xa;dtGVyqQFbKjRbXLhYwAsOJZT0+BSjrd1gnmPKr0It8c71ZUzB+fWLQtzwQTLRgaL6UOet41fj5&#xa;MGAX/ucAKNfBkcqTUSH19TKMzc5x/lfrnn9hkXqzP7eU3VbljzKT+VcuzSjxepuZ3DKyDYIILr&#xa;ueSd09ObVZexpE+FUWBrQzLXcaS3bibVZMR6syfdYcc5MPy8qHAtkbiZf43FA8ezqVIInQcfUd&#xa;fG1oZ6EgjP+rFtGuC/rcsqwq9hcVx6mL+QKJgtaGGgZ6TZWaVVH89lpkGY6jCunFbdI3Hw9xfO&#xa;BVarSTogKi+4ibrqte1u+wcvaH+sFrv96kEB9uI0O9l/ukYdto1BgnemJFJk7FNnSkq0rolSgc&#xa;XM/ZJ46nRgG9J4tdzkWwzk3ioD4jONu96O6+ef0KTlVoytr+2juNxjjSfSJtVI4HZipeS689Bk&#xa;Go3InMtD0HLgcwO+IdgZnBAMZi2gFSiEiss5QWZI3NRPtplaqRmD+bnwQTtPCIlTIA2hm7tPkF&#xa;Uaw2iiquZHlI0svOwJzUbwRlswWOlOqOBkGUl3XpSsGu9zHJdO6VgIOPR9ooXvjOuZ2YqOpzZP&#xa;qBd8uBpxDnHweK1wwi+UeY6QHrQTIy5b2tlHElDTvZY29jSwpQoVnsHDrqr0Jiuu3Yk+qN1R3/&#xa;BGDIlWM0/vnoH+t7JUTMokdrIMxLlZe1U2PO6CnEs5lw3etRFpkIeT0qh9y3XR5TUsabvOEDY9&#xa;7IkNOohuR9g5OvFj4xrIzf9DE7y4A/lfQMVyY+yfP2tmx/gohKf+F1C7/gHUO8ysK/6JZLjbMn&#xa;0lU25XCge7Du0bvo1MWO0JhDP8Wx0lQ0gbpcz2PRL8Rez+fvi2/PXmx19RWG2T5uOrkkkzToP3&#xa;0qwdGCmevirOYbRsvmX7Iroap69cG9sTf1nqV7YGmrM+Q1rC+hdL97KkU7jYEzA6/sFSYY6zjt&#xa;g2yCOlJSfYfMqBuB995lrYFZVUawwnViyum2Pp18duL90/W4lm3/Jrsy7pJCyX8vWM5bLzaruG&#xa;U7A1dW3Bli8Bzei1PH9ZSoED2/yXpd514aJll39ZijQaqQ9IK+I/amiHtE/Vddd1TlH3TrHSc5&#xa;IBjwzeuKH1WquThptncrpBEpSxEFYjmf0NwT075iDMlZv5wwDyUdTpPaka9uLDyX9DfY4vU9oC&#xa;fyc1f9EkkCxOIjicKAi/p0ofMI2wQzizeIFowTS9dkVcQQZOVWEkLGcaQyKCVexB+Yg4aiwpIF&#xa;oFlYxFMjU1uX70Q8R0v4OpIeZXCMcJTRz3kABrCBwr3K6NvDsyvzxUlCKHWvCoTehXJ2bCEsuW&#xa;W9k5zpn6pHkpknxkGk+WoXi+YYWaXYYwHpyYd/J5Ttn4YSdsC+J9evGKURWaDsMhf1Eba7TOQ5&#xa;+OFAUB8fB1veEX2U9++lINxk7cF0Uq06x2AaF0kJJ44DD6Ll5pr7SDwjinsSyasng90xSTne8k&#xa;k8kmbQVlRQHTVjFNr5BlkN9I+fciTvmPIxJNFnHaxy+Hh5I534kSPennE3rCx/NXB52gYANuBl&#xa;5MMKsdRwmM/EEavW8VJf4je+TjPvkFeiav7TsbP7iIGT8RUI55lmQpi/btd1QvDf7B0oWyRK2D&#xa;vyxtAf5v/S66/4GlJg6OXgrG1mYm/61Q8P+NZjFBOh2Lq9GqSMLCWcKN6pbVRL2SAEMAFJU1Lj&#xa;k0Jrb53mRo1PryRrTCJ/BXo5r05d2d6codh1vl2yRcO7lrWLpLdu/3j1y/vt7/WKgd3/CJOHiH&#xa;bTzFDHs5z7uqSnDEXuWYo3OUoWt0Hh20BFul0/JTBjG10OmUdfYl0laMODNf+iUimp5w1B6WmB&#xa;/9jtJuSu5LVWPG9YulqHcJ0akavO/GZ4Ob4pmb9lyG23UmRz7DPOBjh8MoylRz03vE9AwnOaTw&#xa;O5QAmrIyQt6zF+JOXHz/yWqwh87Byi/8y07GxPK0DQqMTk/RzmdSkxnLODNK40AGSpiiakxPRz&#xa;jRmUs4Q5KlYQOuFcNNxIOeZbMq6p1oE4HrKtvM8lL/SF6bDrWpa1AlrVSZHbrYDzaV6q2+KLFX&#xa;7mkMT0JaiSJuDGYHLUnMzStPbTZOwyzUUVeIJOts7K0k2NzhEVvkp9acHahPNpW5+IDtcDJpsJ&#xa;YpZDvQXnKA8tvkbALKT56miqnsPWw4PjRPDUWRhINvoLgortRZCeGCFOYWCRppqjh/LCZSTGQJ&#xa;6cZQ0lJRXBpMQRGIaWNFxcL5LqVc9qrk1y/byKvHWODcW0V2M6bmw8zXVdFQRXcIpbH0XmKooZ&#xa;qmYXcKFz8nG1UH9ZlrW3vvyHbwH4BBCWkboUdN9qmyjhJuSzOIhb6XM6dXFN6NaRiR0phmFSjz&#xa;jzkbCKQbLiqOUBpmJU6xRjtmndPWafqu4hy49LTKXq2S2Ek3/CLFFX1+uPtoZMqZrcE4mOlMoJ&#xa;hg9BagkgKzaLUdFDK/oaK7/Qlbksxck8yT2i8dVFkSmn1yc94dvap/tBEIjiqCu1pDpnYO+hIg&#xa;syezZKY/61bWarVy8l4Ev43Bz4afDPCv1JicjjRtOFtTuo9XDo620KZtmsWNlyIjDP4+IeLgrZ&#xa;HXFWiXhIB23UdKSNBoCIwPRU6vWMDD0x4Yh6Wb9omISkejs1cDxfEAj5x0LA1jd19kmKn7U5RE&#xa;hYOixPrni9RVpNzo20hsZVIkliaW14qfL7tfevJgklx8Ssuk+SjkLIuSsw74q7W7LMFYjAteC6&#xa;iXr2QrxAJ+5czB82tp6xykBSBnPhnPnLXJQ1MN3uhwqiUzmyv6OC6MWm34LiEqUbmUTKKxKAj8&#xa;0mo2tXrP0t9ZTAd/UBG6/MpGB3brAza7eTHdRMmYFSCIaXeVlyQHrKB4c3edfUG7XEYUxZvq3Y&#xa;iAWxna+4h3ImbSxamMPfQfrpS81CVlpRUjbTyPknQR6Lb7xI8VqShshC6/7Tr5aPGG2HqQq9ku&#xa;UfuhB5AW8iCTBFQt3r7Psl+KsFJQPogGcHJjvkHp6XCiBAS7CMk+hYcPjVE5JXkGt4tkyNjuKT&#xa;jD7PHHAlcDHgaFfEnh9sHorAGcoQR63rn0QS/0vZz0HQ+Y4rPXKB2yzQ3WxOBYAikYRA0YQmuR&#xa;jjM8ThLfUnf3CjX1JEbOiGoCo90SzYNKOzRtYa/TiMYOJZviH1rzI2Uejoh6wlNmHBclLmPtdr&#xa;05b1DOjDcyVn0jKmXfsbKGT9ntpyzwjaj7wr5x6Ck/6/VDZuUVyw3IzSO2AggYhK8J99hHBuZu&#xa;KNY0PSnfrdRPRCRjzxY5eC77uGeRlv2hCcozJhQKZ8IhGkcpbV+PHgTGOBTeKubCGT/FaWJ1Xi&#xa;4YnDEDQDfsF7fllNPJ568kmClHDAiztgFx5JFn7BEOm6GeCndkqf3trOE/Rfs97IlL/zXuBeL6&#xa;KJNAffnS/G9rMif93H+jL96/0VfI2MXV2cjE9Z8bsf98/iVSB9cC6w98N+PEleDPL1JtpK1Kyk&#xa;+Sq8JZsOvUBVIAGeTmn0Alp1U8wySzrxbmlUzLxW3WPWdK9Za9Nrw6SS2uVrI69aLVy/vXpyZ+&#xa;vzK1VsPWUl54b6Ym33pXnn3ir7dWPt/mJ7487QuAt32bqkxjM6+ytjZcb5Ijs8ifX8yhFkacdV&#xa;bXUlWGEsuXy83hrz6yRQID4zGXG9TkvZ6P57o+3PIGk4vrWLpkBsDQhA1kGE9XtZEJytevrCog&#xa;w4LMrBag3BY1VSMrS9/5SmhXxZKlkIbbUje5bEQXLKBCI4Sa2UQwFPNZgCAp5ty02lVt+4oCze&#xa;UGfhMYyRJ4F/ZUlruzHOUW5byFMm4VwmbSHO1DMoKhSqp5Rm5SwQzUWc769ahmuS+lNPE82tuE&#xa;mSBoVr1mAuRZtA3PmtiUl47A2tzQQUSipDlbtx+saOAVHOgC+9fWSu2tXmypJP7c9VnUsE8yq3&#xa;F4RotE1ISI0fEylhISmEIXqLMuPGqZOZV0qyHHdqlcX+8gG6yjOrIHUljUhtUXssxgV1F49ve/&#xa;y1CvaxMN2x4M863ijWzcuAOIWNmTBHKRB642epGJr3Ri4nrLbGcZgVVF0ZKIJ9HShRV5OUgNdO&#xa;xYCg6GxLA+jQwxpF1kknVtb5AtzBFYFJvFNk5RI3tsxGSFGG9YtW9kLUWxrbgpsxdnPLSFY37n&#xa;KLN+PBfjFfDnoWsxSSrfoj0DL47YZApNp5IlvPWZ7tH4lWzJyXhDPUC3hNtoBVkhgX4eqDZIKc&#xa;lI5N/Q5FSWqLi3Gl1rgRfxDjHZoc87lpDXI0zUbML2BUX4G8Z94IOc056xMDDrLtgh2XVz5BVw&#xa;V90LF2hOyoIubsyRnvWB7r9eIn/epFnn31X5/2Sc7ClTaWMuAmdwW0RNOdXVz83Mhd39kAWqlu&#xa;JB26WpfMBRbDgeVvbSUazxY45A3xBxs/vQ7dwcATe+DXwTMZosX0sl9FpZ6P7zCQH9DQ+h/zYL&#xa;2+w8a3E1x4p3QIrUOI5b3ixhGcGmUTckkIRNeI5LTcSeWoOR9qyYjxi4SdUWxvTtLHfjJKHTOE&#xa;hTXo1jx8cv7tJFkhsNx1mlt5U6eTzMYmCvTVRqY6i3qYg1qY/dGu2GGH9X/F4JoDM7MPzKBNY4&#xa;1eaBRIBBmKrnxhAObYLTE+vw2ZdwA/BljpG4pdK4rapGxt9Xv6fkJzG0+M2KSryVxTT5e5FJTU&#xa;NugEdh1c120507ug7VUqNpUbrlKmopEMSAJrWAEetCjXQc895VMrVKrpeZLaNN73X39nKZ/CnP&#xa;Kt0RwSDGCGJQ+bYPZI+FWmqZqZdhUih1iOoVAyyjp96Q9o20fZdvq5Xe0MuGiEjgu/sjLMRxp/&#xa;KCrvOHvbRPbct140M5v6a1g6/OGrWJPUGbpmP5a4n6RPz6JF6hs7N12zISMZrf0qDV40SlvUcP&#xa;UKu6fiq38+y3mcawVYW2MpbJCH/tdIWrFtfzYJu8R0sFtk+Zd8e3/NvIA0+YwcVADKAYTajBXO&#xa;hxDlHor9kewUF8DBOYmfmlw3L1H/2asdx1bnhczh+bOsNVQSuPEkNsgPRb2LpYDEv1bpclYn3d&#xa;dGf7w9e83I17aUyyHtJdrPccnq3rCrXNr4ZIDAs5QphSnqkOlxo3PgCZjgGEP4lLesbr+QCJsN&#xa;5ER1gKnLG/GeDCfwI2ZI9RNLwUddpxOoYa1sRXBrCatOz6Nxz4a7PxReWwn7zvR1XetkvE5LkX&#xa;Yq3kDOHOuoWMsouUb6aA3KxBCOg5VbsxSqwuZ0q1BV89kq+FslKwf5QXzCU5eOLT5loM+UhvN4&#xa;/5sN83k01yQPIxGNOYevOPkOSLUPBGMkh7nwJLHh1YeXAdD4KOpTvORffELoCbgg2hHg9Qxf1D&#xa;i3//7vDmEyWvlnzJXUWP1SUgS4jkvTmQ7U7BKn1awt51njtTtuZIUJ8i69Cv8KJC26Z6pvWfBB&#xa;JFsWu9fruWGQKvxbu2AIj0WUcsnuexkN5INF7ZYktSbKcpiab0OfRh5nk/ZVVnK+Un4AzHC08t&#xa;AHJ7aD8iogIFyfVTPpLz8hNAPKJL3VAM9Yfws5sIuYDIFVFzC7JS2PEUchUq+NzqNSDX8wpMY7&#xa;AZcxiQp3kaW4iWw/G1O277V/g+fahpju3CvVEwY27KqE+yc5tGnuR4cm/k8RwBpZE1VOeXHDKq&#xa;Y5/DzBLe8wuo6qccs8ikVl92wEA25zhJHszUbV+Q7Veqgvru7hb8xx5UR/elYsCeSbx7J36uiY&#xa;5PnYk/sRAS+/uUqy3rgrpR2SCbSAhu7Mi0CxhBYQ3wTgF25oIQy6xZD/W1SPcZTjgSeZpBbzjM&#xa;9Q69jbE1VEGhpH5X2BkrnoFLvxki1PIexxLNyhbR05+Qrobh8Au8LcXzN7lNUUeq7IyCmiJf4/&#xa;Es3k4e2cQRgdNc2COAt//y2gcu/zVVMt8xNrJU0ve9ITeSP2K+/fvxyF9yoOQOnjBQxnppXqQR&#xa;ZdiG8oY0+BrxSIfMSTVsoX7BLKZ4A3/VWF3wCC3e3XZ3HHiU8dm84/ZR4G5fKzXobtc+DBsuo7&#xa;jqyfDX/HrW2Dgsf7IyaHUSaBW40cB5VnkTMWjl87cOOKhvG1W4jPdbenqr/Ij8vu7/9wOPaj5D&#xa;Cpcz70v4awVpXaxbrfp8eEU5hq1jobyUf5iTE0YPDRayUgNkzkuaj3LdlrVmxmbMcMNKQq8EFM&#xa;bsj4nB1g+rOW7eYdQO7txSyA+4raFW0nmfLlPa6d8SLFjc0TjsjWlqJ14Gq0kZnWGdAQHYnXEa&#xa;5JIPR2ybBQufrVURG9uCzZIaNnifh6a1ggLNgSsw+QEhDJS3/6zsbFTNvgnBfPniifK/eZF/r1&#xa;gKW7lYOjj+84qSooOLi5Wxrdk/Zmku4s4Odv9l8VyrruOB8o9EmMR8amqZjRqFFBRcWGIlI1kV&#xa;SFdgB1kjByZlSxfhlJXDDmFVNi0LVENCc/Bc8SB47AxOI4Z9lFq+42hc9DMvIyqkqtabCL9oPp&#xa;7k8gl4e5L7/Dxu/wX2sO8D8qz6Kcdi44hPsDxZxI8xNuV4HmOfta4aGX96v8lrdNLc6SvFQfNV&#xa;QdIQ7pIFVDfDMCRj7UWe57wtecP8cDYiy1uP4alUm+H0nKJEpbNOG59/YGZfgc6g6sDKZMtffM&#xa;vL8cxjgbWOP0zSP9NQikQOqrN8LeKu5+aUV9A78LJp8HlMA8cC+zojHGyk04X+psU/Ba8/fS90&#xa;y00l+h1xBjEhwqoyLU0hVXUBl0rhHK7RdfDmxTWyx9KbS59P5qhEN+6fpUsukJxES5M5nknH9h&#xa;fnkNwRwj/pl1dOIMNQ5CxlmdIY81uiQUWq+zHL598jYF2PEwteydOjGvTKxvmCmiBoBeYLHQ3D&#xa;rX0g900KHIE75WpMmnlXr4xQdfGl+uyRpQINDPe6/td8tUVZkKh3yJS0meXYKVo0DolZFbnYDK&#xa;I2fBRRAgp+jgS1uhAGETOuvoFsLG0bXxeF0fd0EIIwIxGv8OykrZ0mOWAxRD8qLktgvaH8215C&#xa;jIVTRqGDiFoyoyAW2gYwroAhUAi3dJN/WpzcwdJl+SZ4eDiyMJhbgir1hjckh4Mz1lWbBXCyff&#xa;KbrVmlsUVZF5fkQAQz7RbckpUXW+/eOoxmiOqbg3k0yF+rNEqakyrpoBgc0FMZJdRZiGNR7Nbr&#xa;N7+8gl/26DQ0gYnWKcnCqrROgXKV5bri71Ha1BJ9OrZ6wThCt5TnDWJMrURXe0RzCzGIyXap6a&#xa;3LmgaD0uqhJkHAnpoKprSefGI96BiJQ+0BSSWuuwCFLTEW7rlFXHtryHbhv5pBVQ16SRRXz7rX&#xa;539F6wGoiSOoxO1Sq0JBmQ7BZv1Mk+zLi3Rf7CBtvo3ht1tidpMYOu3iBp9Q6uc+w2Y0wdL2Gj&#xa;niUeokmoiXWfztUhp1OlpD0MuqHUvLhBtTh7SvzWL2Cwe1d12V4xUBEoBaD4oOpqIRbcHhoNu9&#xa;I4E7Tyky6gg2wjDV7d8Amiui6t3QDz6NHqgO+DDX7TYEc/WQKfoLtixWXNturAyvxVNWViXXQu&#xa;D8sfUNVsgG7FjA8RDM7KjWo66htdQmFzotzUIymYYVaBUSTRpgqxxvHi+3qB+VUzerbDp6pCQy&#xa;f5w2JA9bZWjHp4eZjaO4GSsxIAaZPUQlHlO0IEsEEz8HvRAoZ0v45nzR1tlqndILeaKOBit+/N&#xa;pmWP0hW1n2Cn3iD92W+B6c50/YpWEpR2fyFoh6ftobm+sH8dkgkPaGlmv0R3SVYxbXHl3BZ2AK&#xa;ZbcMjIs2ulxSMw/GARsmFGKvkgY340XLl+OGbCydMBF3hF90GDqsxX7oJHfWW/J+NSvwupUNKX&#xa;BmWRRGro08eFXUw3vuWPgDMPVU6RTsXXWKv5e8nTdZUs/gSriGIT3LIPX90/QCw5V+l0v7adYZ&#xa;erSHkE+52KP2pLdtknZ/WOzdKOB3H3Fl4IeMq0S/JOrYSgkMLn+RAZJOeSyXTixd9L69rVZOg4&#xa;nJXvGhcV6BD7hL949NDGwpZdC14ST0aOFx4eBO1GC4fLAaRX9VsuHSGBWucy5usVpJS1hOydaN&#xa;xpqG9SVNG91w64yjt5yOD7vt+WRWGzFO2+N4VlsXu3n1VHjzz4420GlcQytDW2hkwrHEi8kE53&#xa;dPFIx5vuc5avf0xHzZXwNheWSyDOuKoSjEVWnQlukJxVbEXa6Xj4qtofV6jbNBilQosGTCZklS&#xa;Ok8bzqQlFkO+EUykX10YrtrCsVaxma/6sclQ7z2czJgPIrdGeKKvnF4hzvEVOv2LOJweGSCl6H&#xa;c/BE4HTvxC0253T/R0s0uqCX4NqEnPxXLv6OAXiBGL3+/hrCdsufrLwz/WvkCISKD6WpSrvH77&#xa;h0BMqcLZ9/0Nq/7w/5tAoP//CMR/KICGlSvKCtpnnvsEicmIYQYiDClCmllQA+NXW0kmckSTNc&#xa;6fTEzZLGmjbYJpk5aQZTrrZThWC2VveWWwVustVDJA8hTSLeGsFiqpZ7KteZfX7uOWP85Z228t&#xa;mm2QGS6vIr96Oq+nP666n3t98vXfrxdmvmhGB8CoesRgnbrmW2EW1t4+aFoPwBM1WGqv86e0yf&#xa;KZP47EZuyC9H5QhJ8uFZtTuz1wZlbI6HShxbuRPrh2sXAlIcOIKh9ZUqZhs488yHKnLMFljkgO&#xa;RGjdqjKrztqhOH5DSAq7QgBr1PjRSpUXo+MBs/hGEv5Q7E1ZSCEh0g1CmEu3K00C+Qf9disGLR&#xa;VSIM91mLVkl8nLh33Av43zJEpp3zqRoJJ8sJ6G3xG0USnu3A+AqKH0Vb13BVsDB7Gjy6EWf14I&#xa;Jh5Pa1InMns1DTGAzYhGXSwYW4UdGMTz28PQ3nCkLLiZyXkXABZlZ55jMytNXhWD9/pC+8hoei&#xa;tdueWDrxaVSHq3ZGNha2hRyptIl5rN7DeJZ11rCcVMzH0H1r03mTWL/TTzG+AWYtHAtzOsTtKQ&#xa;IsvpgjY+3urOREaiKIRrxG974d30N6M2LlveBL2yP8tYrLCKbdcV5rirKJhH6pCCtAMsbqWdpU&#xa;0pA8UZsBFRNd1EuNxN2MxShsFxjtq+S4sBlwsqkYlCvfCC+0cEJYqZcVK3SuTG9AUoQL1m4K34&#xa;OJyKOGs1If1jO8ZHZpO+0N+7sHjh0OD0QdJBYZ2EknFbIxFG2FL8nR7zqp218zPdfuEYG04YOo&#xa;qYvnBqcPeYVVhHLBVwbHCwmOjMi8y0xpqTBUybQw2hu+agUrgJTHsjzemG4F110AbmGebBtOaY&#xa;4syOhaUhDCMrMySWOlONOQxTjZGlcQKV1sTsZENcYZhRr6DlE6AOh9aj6KtJpCq3CbacPS6ap6&#xa;E8V0xK7O8/EjlysyUYo4JuU6n8SXNy67p9kcajle7y8/GotslykKMAdL1hwvNQrXAjZ7p4TPJs&#xa;L9Gd4ooWCmS/LqkQVmgHiEHxIDJfZ3fJ4rWw64KXzErAYEsczYuiu4N/RjzYqZup7F7xWcOwwG&#xa;Di3vWx9w5/cHzTaXglacKpJrlQeI3H0atNB0DUjOSMnVaPHRMs9syOycsoCpbVI7ZGeyqmKUdN&#xa;8YbKdz368AUuLNRHOXFtpImtnTcxeGb33jfre8EPKA8otgwGwMvxOuHWS1Ngkgfbhj7Hm0yPXY&#xa;bPqNoNmu9StMRta81ucDVQfi+Z9xazlDu3sGU57Hw8VK2fQnMmyAGoujRszr5dKlaH5EeZhd0Y&#xa;9axvp9cmPn2yEiKnexGdLbnIvD+mtLad20NA961vYkpTwNbTMUt8kPx5opk1S9J0Ht83HnV0Xw&#xa;o/D6Mh/jwZX7fAXJguS2SnXywoysTJpoaFy3Z2k4xbRj3qvBZ6xrthMUTbuvEwB8Xy1oCsR+Oc&#xa;5a6bnZ+tluXV3l3Nnrd+h8cz6RqbYVbtcESu+3avBlbZHSMlljA9Pt/rFtm/bgfgm82xw0DZvy&#xa;KZjFOvCEN1AfSPHNbviTKgekHyn0T4AzK4LjI8X1ut6by1Wb6+DQc6H8eDT9TpBVF14plqGOqT&#xa;5rF6M++LgNZGn4n6nEt/un63H/nNR/EwJx6Ld7VM4XwtbcFslcHMqkvcM6c6EoO1sQ+AoLGkQr&#xa;BfX9LnT13cl/8RAvT25pLcVDgFCa8IDggs6FBcKH93Bt57g8f232cEZOEIfA7EZqbgWo4YdLYL&#xa;sZtUVOzqIMSiGxJN3VekibNjMwzs5azxnFrtI8ibk5zJld/QvoV+dyIBeSbjhTjuHxFnoUsVSy&#xa;Zf4cLj8dBOZLm+J/vmja58ZV6z+x56qKK51mytoFj7jSPJdgnqKr4WYUqo6MixuJjQ2VoeuRYW&#xa;eimNkUa9G7B4RNXydamt4YjSUhqmKntAmaTCHoEn0vxHHVcRBMIUFtkArGc0/MJ4Lf2UWFt7wu&#xa;UT8obOYJZL22Vcz6XdSqsf0sYzQp6ERbWOC8qo/N4J9W5Eyu13npk5lUkkVQ+zwyyVs1SdWIl7&#xa;RBUGpq3cpVYFlksEDZ+y79NKYveqfiyVV534akZOaNpQSk8oh3nI4z4uKXHG40G8h9u4Zopb6S&#xa;YTZ3psGvpTMqpvkWeCUrjf0saWDPNO+8CT+SnKBvaoW6WNcYlHNMf2QBN00z9V4lApJSxUvi41&#xa;npMrz6ESx6HcFiLvDR4iZ/5EiceISC4dquQqXyr//TMI4LwD8yH7WnpqMceAsqybJWFts30hMo&#xa;aVUAZDv7cqSFjQ2QqsVb7PHdVpjq6ar/JuqeKrNsdACaekJ6e7UWJaC6RuUWayLT5rxfq2j/CO&#xa;ozMk1BKtMWu0EWrXRtG4pR+P9zTauPBJ3mV668XgB8ucXu3E6p1d4xT1IeDJE3vhuhKAd12QGF&#xa;J3qHEjj811m7A18MHqvGvwZN0Dew3SuWjmAz0nTJLot9UOQ5BWN9ihMiAOCnvaKUT498Sbpj5x&#xa;94Cek2Ub84f8fQNN+ffeDAvjrojI64plOuLYqygGgsQf+x13wPH3NP0m45LGq1LVl7eLxqvQqM&#xa;9H71PR+B5S/nR2NEUhR9cpR3eXDmufZlXPIus2IUVYQ/8qdm5rT0KwWYKe3m2uuiTlDaLyvV3E&#xa;4kW26onxos0dWIEmtriV3Ofy3U9xja2szNXoDcLmwK9F9+wxdODn88Kb/uHlG93a2TiXS8JDt3&#xa;fAKRcNAfY34aLBV0whr1RawOgslsNsLLqEZi9SDUydLYTqHNh252xRW/AcXLBzdatMu4+tReRc&#xa;pjXzObun4z5L53aXTttTRUpfJHM//3T6vrhG4naVmgQW6VM6zc+1zeCGIJkbkmSjOH6dzN2F+0&#xa;0qN2MRKw1ZZC9iESt1nynSqdJL0ho/LSl0yKkyM2U/ZQjw+BYqsWgBI/fINdBi2k5qTpqnGCD4&#xa;UvA6eHKqu3p6lDIxDlxHyUkNO1Og33XGKH0px7idD7Qupu3NmUkifmav9jBthvyDpeuFfw+Y2V&#xa;2ZmYPWSy+U323Xw7g9++L32t3cgewJDMhqpEHvCaLm0Gu2ffG5YneJyaufm/bU09fN+Vf5j8YT&#xa;OQQM8OULNOr/ZqJY/s1EyVjZW/xfZexU9XMVFA3UP1uQWrrqP6Bu6daV4YmwhWxqLWFFW1ICFw&#xa;npZtn12DmM2C72rr7a6GxYXw722eRzLsTjfVe+NNQub80/k/1DPvq0uRUYKRqaeWD6vO0ys+8x&#xa;/Xvr3edP/PcvF4Nwg1erkB45RNn3lvlG5lnJWFcI2nEmMRZe39mmck3a2DIXm9OSm72yIUcU8x&#xa;vpbF59WaszMy0nfyUimkZoupNX6VDxFx7mWApNTGfWMY0Vj3aO2U0dVoahVGMuw2HrHk/jG6QX&#xa;lrFiA9Tg4A+JjVexovKXy9gEolD2yzuv3Fto9ZUJi7MK69ac2FZmTbSmnLynWoYR49Lh08ubXa&#xa;cbJk+C7aFDUmSTwj4xIXDMKnhtM0BvuIN1zEIpgH+8a8pSirTQtBa6e0e/sUy58aQ4ofmbEJhx&#xa;WnKd4O/6SViqEv8VC6xGpQG9KgZYY1HhSAEXToRtoMREVZtVkurSuWWDzF02jbU4PMeiShHm9y&#xa;c1SUGLGBfEJxO27bd9aFy/QvpmJXcMTcbKVEPO05ZYqAYyrDBT7UfgJTLhySON+eDT9hk32Kgs&#xa;QHerptpAHBxJ2bVMkaAW+vt1eZZm9KZoEoMb6n9hl9R9NfoghN7lH7QD+Pz8bEmbukWxAo0oOj&#xa;hVo6bAbPZaJiOJ8UwNR50RGwmoCT0bcnX05FGuVEHfyLLljQiB2ko3KVw3MpyPka6krVTqJG8R&#xa;B723snLmbf03j1itn2ZDzZ9ypqzWzDyogwIwJUxdd7jAyOV87PpNdV3R11RmD2lcYcMCEfuRf3&#xa;bT0UywqQwwgT1YOhWF0X07wTDFlajn1CcaoiaiDkvABP/aOrqdOg0KFSIuh94Gkdue51hiASgi&#xa;wfDl1QcQE2UqZIkw24Zgt3V1WHJbzBT4dxii/HGqhuH6hK+GNCl4rbVOJM7UmrRlk2B1TLukbw&#xa;Lr1Q32NjUUb6j1k52A9Sg8wDQq5g3ttLtxHuWbr6xKZU5QNookIMphRG36Q6kCJqUjkUfAvaSl&#xa;UgvdxLEiFAqjqanjOocua59WTCQ88WOWeW8KcTt6J2nzXGiqu8IdazvXHFrhX633qdUfqBljn/&#xa;MyEZNAqZPzPUG6pb7bOlQPurGl9MjYFTxBsuKruu9xwSvyqJZ+nXym3pWDsjCKjvOKlgw4LCPr&#xa;uZ/98naSPqW4CXs93hH4jKqZgRz2/WeDFwCTzFfQVLaB8gVxkJl+nwSKSzY6UMBIU6PunJcjH7&#xa;g1A6MsJ1q5AwtXRz5qwGyr83pEVBeDBL7X1Uh5aDTFPpSDABCyU7gvyT9dKQNetzoNHkB0jjkR&#xa;swaY7UsR1BsNusyaZaVhCk2UFFH3ksNXQSOWr6zjq3iS2VbsktNmgXEZHdrmErA04dqlGENtYa&#xa;bCLI8Zywd20ezNFxpo/aB4kdykVJTyF3GQQCxBEXTDj4XYXf5JZ/uy1O1al7SJMAfJzG6c3BF5&#xa;YsXSNpvnuS6tAOZNfnUj11hdIvdqi5J5NlPs9RXnbpUN4vGrdp3QGIkzfOqKE1PRlb0D/FHjtQ&#xa;evDMUJUfyxRQNfkTt67YqaF04jliTaSqSKxSyqUnxbuzotN+d3ha/eUU8E7Amj0c0/ciPWn2Gu&#xa;b0e9rgNinoNGvb6T0GP4ytwhnl0VSg3IvPGstckvL4593jeYIyM/IyUMHav+tvM93mUA+uEILG&#xa;ioViVu97NPakTlyXumIj9ilfEpnQ0+yGgXIcfeMmYPRhAo/YiWBPudcOyn+6gRVfWnt2PG8tDM&#xa;uhQYY1wzK7gFVd094CJZFWSgiDYtkt8Lhu/QG63dmDWamfgid7PMldGs7wIIZx1je1ZkIBKplf&#xa;JVXkwYcNDR3KrtimxYPx0rzru4Nc2n2M+7eD74IjXXVjRhNQ9b5u7Z/KVGZeYj8t4PdWWj3clI&#xa;FD7UYfdjLZj74w9txSgwT4TD8ZSghowrPP5PGYSfR+GRU+k1O3387NyMw57yC4evWpL0IN+ipC&#xa;i60PtO0AivYl+Z1JvSOxkhGpSAl6HMv7SjVeY8f+NvAK//t+K4ZUDO/5N2/NfGTpL7vBHQtYDy&#xa;SdjGBCC1LngiZ2VD1MZGRiWJKLbIKSufVGj01YJ8cVnmUS4g4nqVWqy7h3et9V1O74yfBYKUzC&#xa;w1PTfT5enzqb3+Pwo7xS9xu7JtI3gWy0e8fFYZS5qV41tWE04xw9wMmtWbnUY6E2S99lzw2Rak&#xa;jKC8Kjut6ud5t6masubP2FBGkfGmaqst6vusZcf5oLQtRj2TzHIH5+SNrIkJHfQ3TAR5nL+iof&#xa;VXNJpTY0MpRRx4xOHK93+T2anda8nS0Ttt4eGse5UIikOLeEz+QzOa3aacnM2HjSUPNuYPU7nX&#xa;sNIyt+fxTBKkyYQpTbFWJeDeGHDKdvXNMG1FiuBruUAiTECS6qVzscHD/bZapZbMl1lhH2Shad&#xa;d5D0mBXivJ3YcCDXGYcDTcYGqSYA1MYvspR8z533xoyQNntFrw6RtcyU0mZzlCW2N5hcWkNx8a&#xa;wD5bALfRGSGMEB7SEvojc72qjVIOqgRRlAcOhUVXz7gdgGl8v0rd4aYSKGLAu6JbJxgJzhsrhO&#xa;VAKN/bWb4pKalIPsQ0WJpeLdPtLrUrC53ESbNXkBcXZyo+k/vd8VYZlWSPcgCRmRKWb6OsmW2j&#xa;q1opiiyn3D22PciMM+vbS3ebOTfahP52HsydNy5eUZUDcoNlStFKDdSVtT4K8wOK9f2qnR6S6/&#xa;P9Faku0V7RL9/9PHTpvszgdie5EbUYlpiLtOMiexyaqyG+dNjY26a2vSjteVJcVJHZIaY1d+KN&#xa;ZnVHPA7TnpBsIELR/ZfhPJOI7xei0hmmiuwkD8e/pX0lEkQYBPaAwA46kngqAs/oquBnRy3dyd&#xa;mOoYdlAP/yQZLhglj13vQNsJ1LDiW1jKFsI0d6k/mlFGnuA1auTGylzOnxSdS0dNux6CXBiKAR&#xa;06O4wG9hAwG0K/wOBdZnKcrbzTQ38qa9PvLMUFhiiEAQIb5oyXOJpx38uSn/cD7Lrt74oyOGmR&#xa;pofttnGYQ9mKiHTG0USSRrpaQ4Kobl0VCzY+JLDKMCgWu/EpCXPRNWJ0e19D4Ef+132WWJS1hX&#xa;DTfq8atKdYB2N0rNGmk2xxzHmGMSKMQiklz7i8qSpt9HY5vx9+XIHXF7SPInVv5wzi4XJoecDC&#xa;3ERAlAxZm8Fo6hPEe/uy57gKY0uavVPBXroGipwc1/sMIlRlGduMAv1rGdFgR38gmmd1JmoGWa&#xa;sx7Yd7zHInyH36tX6Idf+CsO/mFLnlQl/vZMwbh/n38MZbspfS5+ZeiovJyEU9pj7xSTL+wks0&#xa;3zyyOfEOwHIJi6ZDFIVpovUclAobKceezmK8hfjBtOoWRxN0Z6pTjTtORwAMXmZeFt0ldKGezt&#xa;2wokEQDjBo3vgsIB6X3v9pzka8G5nP+K4/Q+haZeCU//GfMHkC5M8xDFFs/h90uhna8Xyp++gH&#xa;nU+5WgUZmUHzAjMFPxbsSCeLI1JsLwHxGWxhDXdXxDtb53VF1Dp1/Lju/jHWk64/ay0pV3E7T7&#xa;7rG8SQ8qCVk9wfST9tD8oZHPArkNZCsoFqGSynm5LsaUkopYi5JYvwTtStVv/zB6XPh1u0baqO&#xa;kbfNeDLc0r7kanWP7nW5A3+w1KAMy+Ay5xJ8I9A3OGL9ANgiZZwdEiTzZXghFZYN8e9nbb4iTF&#xa;knDgZUQG6V75BsptAeI2lRQN6pd3ZernP18SeeIFR3mA/PLFAfi/GXLU/wbV/6Cmxn9stVwyE+&#xa;RleMKsRZFaBLNahsQP1O3JwJfLoOSgaKxzQQvujFMpmVJg1x5Q1xw9Al1pE9BigpSEZ3dCK3cC&#xa;Lwq6J9sUGMjImjcJfBQWffeXfk9rbzxjv9IZ3oE7+r4ks1lZaXU8Z5KZmE13KtihP+g0jr6S68&#xa;4wNW/jy5iXfs0XjMbuqi7H3cjjoZ5dPvQuszBT4Vpwg75PbhOkteNRiazxE5TPhuJQEiXH5cpM&#xa;1pppuo8EthkI4hBQgHZTAj1lCTvGxnW20YPU5h6EXKZlDybfVY2fh4S01wwEFno1CnptpL2pWN&#xa;InNPNwHXGTg6XFu585EIoSnmuwMn8ib5P5FvU0GITHpTFmzVaRxBwxvlui3PgspMlky66URe4h&#xa;mF7mXMJgPioBQs3tjMtr5z8pu5BcxIG0Ue4cA6+ZjKERgqOp7cULcX6rOT+VptNnpfdWTbrrxF&#xa;AGn3JcPbifYn6Mf+WyPim6POOC9wA+6DEIZdaYTHlvxHsnIUFAT2opcGOnwYY2x7HyZbbpKhiK&#xa;uf5hM6H0VKfvZxy/3DoB7tPX3ChtBU1fjGf191CUZ3BLd2axuEB1+igXsHBr9iYjR0QYR4TPxe&#xa;IHbWdzG8BXUy3x0jV8jlhX+0uP8p3YiINLbYcbLgyNjI7MkP8g/ylugmLcHCiXIceCkysHm62+&#xa;Lmqn5xbLwX16azvtDht3sdDAF4O6YjbLp8qIR12VtmbNyjaH9KoI3YI4J0jPYc3N6ri2Icze4g&#xa;qgMEqX1nDS6f5ZajIjPcpTRRJb2tNvFGQ+UgqMI7l3nd0oOlWOUhOuWvlleeVu8k1FQLRcZnFN&#xa;OK7KUsHuAW9zAquUYnCeJVUeRrTCqSpXQ9+p3OkewwiP7UMN8mQ12s+IdrA4BTktjXrdc/DJ6k&#xa;Jy1GR1Bu29I46wBaoERQEo6qB6zMpLVpAuQld1cGSp17LFQZ/DTZ4APzgUROxEpoqX7BlqIDun&#xa;1A3FvVxnqhHScoZplkMAfYp8Mr58doynVpj4JjqS94CflpxkTURDdZ6rJ4ZUkbh1y3+1Yc330x&#xa;MhmqzaNfB8DtYorct3fpygYB0u6ICF0eQQ1h5G1fhzDTf+SLiDJFReuVdcHnJZvD6xzKa1T3tl&#xa;ZumXPknY8Akrbz3Jt+zSP2JdXPZ52oMTGlsawwu2GYA+XX34fbSeMpJwLPoSjpOCumR7eAfAC6&#xa;Ufd9z+MmPcrh3ezI4Wwote0HBslWanV34jgWLUlPHeVedvmlsS355A4w9Rw9PH1Eh5BrEecNgF&#xa;df04VHPyEpbxZwyDBHalaza86O/p5DoV2M0K37KbS69fDfkZ8FI5loMcR+g5tToXxqVoy/1etU&#xa;w3Bja9S4xGEQfAvUFcITW1rsWzqXJPLK/sMPkDHDMmu5K02y4IlwKNivsuaebgv2/5+gpumSmN&#xa;QEEIfamWLTDRp3zx3FaLovs6jjaR7tB82ZpTkex2m+7I351kX5LQ8PYEEOCEBy/V7PtU7F3FKl&#xa;M3FR2MrBKbKsNx55hvuZQQ3uiN1njV4x6uzpnUyfb7vB7yRnv5bR8k3llbybGeNcrAE7/IbaXb&#xa;ws4VMRkIruGb2DHv1Qcym3zim+gxI3cwizyw6ojXfwfiAVDBgpgNRfC2Rry7DJHwbmkEA/gEq8&#xa;Fsq6BDxz/ZV35vKMfbw6bt6tQjBWSri9tWk+BWkJTMiJWMGDe6dHzP2DQk5UQGXJ33voYOR56h&#xa;6Eejc+8SzEYRVAorGMPLG9HIq/Dl9fu8YH3fof3s59Id6TkZ9mrEwRii6CihNoYHH3It0vVkXS&#xa;8EKmCMNiaL89OiSTREi/s/ACKhLVELnkNSjTclHDow0x2ZRmKhkxs7mFJickclUab3jQjOxlmU&#xa;DfK+a6RalCjnZTp7GYfmnUnApZdXmMAts3wWYvKoWfZLG0CpcUSyC/ziJLu6DDVarFrVisGS+0&#xa;WMmj2KQqFgxIv3BxbWyx3fmdYPe/+2OYO/UthkhTSj9k+RSIiUgFkN0ICHz4sAjHu0HGvqTLBK&#xa;3/tSeefdm9q8hhnBzHgE2+yaRbfJJhZ8zW28TsM9pAkndtD0bckzGdtB3T06a61qZCMFT/FJaB&#xa;9mjWjf8qhc+UvJfOmXNBV3zsDhEZf0mwFEu6fSaM8wd/nbPv249M/AlJ1K5Z45Fc97hZZkvmgP&#xa;/3IokYD+jFEfEQwn25g0f09sh5HpnYWsd9pXjFrsSneUPupIk6g8CkoJAxo8uPd/7uY6d0chQr&#xa;/+FSmE//vyhoy9lYWl6//bYKkCilhbWtA6Ad0ymz5bpgnb3ckjpLW2Vfut4XqdYvrBZLRelSdj&#xa;2eqynHvh+1gjnweHYWAEY3LOxbbPldf7NNf37ACCz1uMQL8M44gR5k2nr7bTxXxlidMdsWOsHm&#xa;90o0zizT0rWQfTThvYCmdaE2NrPWLgJhVyG2lsXkRZS5OurEfXkjDMorQ8eEu1qDOWXBTas00u&#xa;ZTYx9ycAe2cdFy/rqyFqENvH15XO5tEVswotzPhQIKhLmYnpAm54xjI5i2B0bI5F12MjC52BKk&#xa;FJqgwHT8MFni9tCbd8A7cZc+A2Cey+kTaXhZaFu3xjhJAs2bSQY+QHCGv829+UgG+2qkYcgWwE&#xa;z1xjV8JqrM2ezai7bbSBfbiBbY1NhScKxpb7gDcfP41f4mqtREES6AZcFk5VAj3CmdmPOGJq79&#xa;HQUpKpp7Y407d3yw2MLnKFdHH6g8ZLbna+K79SyUAONVhU7vAwdOheuGWbBsgu/BYCwMNVj8XZ&#xa;lVilEmFaY6s3QCiMrcaVA8wC4pfzblfcqSvEp6zHOYYamMw4sQ8TpRUrqKbkH5017qNKCC/OOa&#xa;Ar24UsBcaFOhRcdAbwmwQqzVzeDzBF/Cq6O7SA0pDX+i0/I4pSjZ6jqEmMBJb+NVmqo1yqgb7R&#xa;JcsbFqI+Ur5C6bKT7WiG8ShpAWiUeEYY9drHKliyCxi5YHP4EBZn6h07a7uv9UrvEIwgYdlxUv&#xa;8oiaynz4iJ3ib2AXL7hskXIiISc367k58Yd55KcdT9wqebY2k0AfEqhkUxSxeXDmiUjnAmIgUF&#xa;Cl02epQuEBXmw5wltgfF2OVi0JHsojr9GDAlg0PsDZVGDTaS6dmZamVbwGq+uJXAFZ9zECnNGN&#xa;AYy8W8CJWgd/mQ7JVWj450to+W1YAhv1myPuZ6RkPtAa2Y5YzgDCUEW0RNsqeT9s7HofYA5FKs&#xa;VPuxVSOJpJlC02S8kS1lU9YU/cZ5kbVR7RbutFSFvoJiWKdfQNEjHNFIjUIt+ksVMxRjtWL0Y7&#xa;asRrGd5S+Y/5wsaf2q8Knlj9dJpiu6F4+KI9fdYFzAR6sn/oVnDwUz06UcjoUQip+8vM89w7NC&#xa;7t1urJ//W5+sp3QH13aOyQHlsn6zJdQDA64h3n8MbnjqJi8muqPkx0Ao5bsZaErmB+UuBLFJsF&#xa;h/OGaKExoB1U8jZch3wGCXst5x52/VE3/xBGtiaSiDggA2rs8ko415jm9OZjGIiCuxYlTfrNuI&#xa;jlwFYax9sig+bOvZlTzr43DIrydi45ELf9PgKPz2hMfOC0FYaBmC0SZHUztlt1LkC+TsVffIHK&#xa;AxEoFPb7T8ehCa2uzmv/nTuUUxyszVJIVEkySaC8y6LlIm3N8MLH+HxKlYkOw3fC+eUIL8l1Sv&#xa;xeewbBKPhl2N6/lOeWceUZSfqxFye+RF5VOrwj57VjR8UCeZHYMcw3XJ7KfNcqZVHPEjVLY/TV&#xa;ZQF3Usu8DI4n/Cp/waOozo6m7lyvg/rL0FV53rlq0bCM4kuLu7u7tM3N0J7u4QJjBxd3eXENwd&#xa;ggTXYEGCu0uQm6y1965dp+rWbXXb+Q9f66N/z+ijv1+7f1wK5OSHCRim99+Frxg2Gqpt2Q+Wkq&#xa;SsUyjmiIlLCC6u6DcfbJ4I4R7QrRhZkcSllQb5ojbts27sKF1t/II691e6ClDSZ3pI/Uk6LyAS&#xa;HJJ239Jgf1pdkPOybzJBQUFERhIxdTi7+jA5YISxMjh1g5lSWeZZh9SQUliWZFgi4Q9jrZT8xP&#xa;KSmFou4S/wzYLlpzTGBZmqiNBPHeKll5TCo0DmM3Zd71DdCsAADi2HsmXfUe0FINFmE1s95Hq6&#xa;zDHoa9Z5kW71nrMHTQB+pzfMXuOSfj+pgsvC+3lZGTVbtDwMzuKLVTRNzyoHsupm36t06g6B7z&#xa;ujrdS+gt+lVRtrDlwyb0AVhBsM747nrwO3xZCHbicN9AlU32/xewW25yu+iSAefQHtTzPqP8La&#xa;Aic3d3oORab8y731j9uiqsTdbq5XW9FekYwm5ErOICopyKJIAi5EzIhojOaKX2he0eIjQXkCdf&#xa;+4Q1DvSvRag373rul/JEv/+/HxX67B+A5Z9Pn0G+8c/kJLVhAlNaHLmrKqdaIYKjssvMDSENzs&#xa;DGW9c8cncb+vi5IzTMxKHoyBamntU9/ewRcb7Jpb7mV39bycHv/8u3EGrttSxrJqzXnPfnKOvV&#xa;Slov2LaWiHa+oOzjhnbstim+tAs2aUz4TLEdeUjDFAEHO1fvG8zDZTB2j5gg9vAk4215pt19jW&#xa;qDkrfs/Y4dA+TKf04ydVC2damgfDCg7fHqDWdR/0eXy6Ky3uD1uiVwTsb7d1rLTvXacbdI+7e5&#xa;o6vSVA4p5CEbrqT3De2Cm4Zls32LFSuDDCX7vEnADG5c8PFFlkhshIfzYATsjB4mlIc06f2QCN&#xa;JDOgRciBBJzQhAWbJtDWFXB1kWZD3s+pgjOCxJbvkL84b4Or2Mlnmp48RAhaOn8sfBMTHK7HSQ&#xa;DeWoNAlA1yx6ppHz+1Trr6iy1N5RV00Qg8fMYIGEUL6Z+XRgG1k1UyHlMa1qoX8ZDHimFcMk02&#xa;Hl4htFAO0iQd69ZMWo4DXi4Ph0HQshjbvIARr/fO4GvYsdgQqF0xAvboHn1zXU55hP3VhEFoVN&#xa;hbdzcedpfL2YNlL4yBf7KljtJrjdX2MpVISv1CcEzLJ3OeXMS/2JL5uOF6DsKVD9ppYe0ftpQC&#xa;Wqr1PrMxxGcjoJwfnlltIzs46/qbLe347eRS/Ystyavud9JMQa9zLa5V/GLCxkuitJ/AbCrWOU&#xa;Axm+5l/e5CpfcfbIlv2jvdNM8ivOdEXjbdRLmZ/Ib6SdbPKD6YWfgnwlUrI3mYDrFX2N9saa3A&#xa;OeJwgt2vsI+yrxRR83vXwPjaHoeCeuZruoMrnfPcAXaY5D0zZzrWb72m3ygNr144UsQgZmtEjQ&#xa;JyI6zwdNUY40jtTMFfeJNvf1cI53KwtcH/0RNSCIL2I8FTKXpxc7KCf8qtOVgqMK82DXXGpUzG&#xa;/LbjPwOpATZjlikP6QCYyEaB8IY/Vhtr9H19kEAphTmwXfh3tkTod9leTkxVewygNurUqAjR6c&#xa;esmifLh57gGnRIxwZZgKn0jEZtbft8tSZZHk+fjthagpOKPP2wEMH7xrMcjF8ADElU8hlc1uZe&#xa;vLs3K+7rGIa0OfM1GlWDJNjV7TXX+FIxZun1aBCntiEd5qwfRe7jDsS4X8bIduZhbhSwidES7w&#xa;9PEU6v4V6aHQvePMgyfKK1ArEQiZBlcu9Su6KLvBTsAnz4wDtu1LmK02rhudZR0MrCKI3TeWTl&#xa;frKCKcCKMvajY9pbOyrcjf7NzzJhWxHJfMkqhz4USdEcBl6m7wN98jKYgXTGb1uZJBQmGEYzA6&#xa;RXWEFbl8fUMPnH9gFLTjM71NoxMznG7hkBoali1S7wzREtfs/TTN2dMW+9wtbhj8e9OzyULCB4&#xa;sWuzHARlWLSsdFVxYdLM5f4OfGRn+jS/SCbn9tC2oTXyNVmHwrqtEnWe4tRzPzARPC8dHJLhp7&#xa;Rir9AfavC3ye3aMuVlC5SJloK8P0dR/8WWcD9viOQ9HZ4/2IG1GYRFrVWQKImK6lHL54TDRQTx&#xa;HyKEQy65Y+PXQh6xcb8JhLaHNmVQa+tQqO2jRg8yty5JdN7j8lHihbN0X6oOdmL4ia7f1DzIJk&#xa;aCzjvnZf8G9g3G4V//sCX3/5EtYf03svovuuSLP4QbIF2m8bOJ/DN6MFwx8BhFxwUFizSEh1qa&#xa;YrjppHhEgaUg/daCwVHbduJsjEPQmU45c/a94KxL54EBM+QNvOK1UyuIS+lNydFrJeDHAcr3qp&#xa;9ApmcbjutJ7h9+15P8V01vrzvs75A33we5WQOfXqupzU0qLbTSIJHENmOPu3YQAzYzNJ3GUlPn&#xa;UTAPNBTeuiv326uwaQbjidOD7FMI5u6pbaNqRWpPfBZAu7lJchbrzBzp0EpMfLMIdi2aVq5foR&#xa;ofvSNZDNBQlOAoPqxw8vMw1PHrCTnWZkJ/rdZApMaenPv2xWnqwjrotaASIFu6o34iEuubCwRi&#xa;NgxYdlCrfIa+q2fQHryPMLJSIJgrKOIOhXtyK55OEgNYB2nXffwFKeVtVkBz3brLV/s1uKATKp&#xa;GeaahsYvYDbQ+uqw6C3egHzx0qPNKkETiAPnGewdXa/jfosKPumD3VZLXa89V51tNa2beQfSbE&#xa;tdUSRQNsoOPJ3AVS0EwWZoWp952s04kYSQZrwKQ+fHGZSZnI2FUx7kj9KSxkR72lY7q4YF0O5F&#xa;x5949+ZYQfg7U0FchuDkv78ouQOrvTOpWLlYfzu6OSQX0nH/cVMykQksWFQk2i4U7aatgXnYhz&#xa;aDwRT3o4/UM73NbiZogwlH/6w4HhxJNJh1EsZVisAECwAoAWTASTU5BWEGfCLp5ZkNeHQmM3vz&#xa;rt13Kd10Kw9NnXRX0gAoNK+wv82/f2w4RlHy2+725d3UqBbtw+tNOtO98yiTj9DB0/mUT1cjFN&#xa;hNCZmjWgNxbv18owt+bvYDRfN/eQTw90qq5ff4yJfbNqXmPopFPbf9arsYJuIHjqcNvDWKnkL6&#xa;5RO24g3tQzVFFkZ3yvxhsuAmZS398+Je0OskNEWult910iOfCCtFRbDqKuoLDjIzS5NmDWuA91&#xa;Ewj1Xryd40Ob5koIZoD76LgAwZmNPq1XwfV8rcyVfHpRo1cZK6muFq9tA+VQVrkjsOe1ictn06&#xa;P4lU+d4EhVkzCOnRnmqrab1LarYWMuAY/RqLw1qs/MRSURiwGoQUxgoz3AJ55LvLu6doiW0ttg&#xa;q7H7w3mRPIMYCNRrtN2XyQJWq77VG1T9AsbbmdF/aAmIHxQEAhKxPfQkjI3uYMzbE0jLvc2qX2&#xa;uOAfUJOWBsd6+LRxWvjI3kVeSarRQkZp0djg5NUF7OkqoXpvDcF5CljoxwWXA7sI3zWYxEdnfu&#xa;Um4tox//ISU2b9Nb8YEbUq+jQpvxWm/vNVbWjgvB8+1UODWwl5hbpTYQbTnA1bJwjl5FP2jCvI&#xa;PK8mgccTZrVyuGWDFNLI9LMKuHm98XGLPIPrcne90hpFMFVFqI8SfRcD7OpVRajh1UXLGMruHO&#xa;2a6SxnriS1yWyKOtJeFn6mK/SUd/De1WIKt8ELRdFkgaj/MDvSJ/777kwudKMPVCO1f2hU02GO&#xa;h916MxvwKq4ZisEbWRLPeHPbMDCyrmod55IehxnbWHTPFSd44LIV8KKwLEBtYJxwVKUmc0ZGra&#xa;AOuMdo4h0QIKiDMcl44IvIQvGPyLTuffctnJh89MhdrBgloXIhiwphk47qeMe2antV5UigbIWH&#xa;PATA7sGHoC1jtM9i9eUeoZUTE4yJjsl3eNCKFlG1i+geEvTumEjl+QUfibYwWlTh58PAqHhHBM&#xa;iREamrB+OdEkkW/JJzLezaD4CnxTbFHjxZItwVCkXJ/cTUB58QpXDNRiZU0b9wdJ48MmjlBYsE&#xa;Ww+3JViukfqw8J3STSyd+YBKnbmzC33aBeXZqrA5HlHrDtnmH3h5iuznR4ts0ZogITh3UkfVHL&#xa;ZJZ0TUsWi9GqmIQGWiowhzwuueVV6MEql1hj85FzD256vZZWIdCdMdDZ3BaRbZ3O9ekdoK9kra&#xa;A5lRCKHHi5lfN4t1LGQ3ZGoBlYaGGKNLURTlI+hHxRY1A0RbfQHxv9CCbSLdqowuLEbNBk8WzN&#xa;3G8q/BlzdA3vmxxxH91+T7/FmUGwoNYrjuYrW7YcHadhpnzzuS3AKv5m3LqN8HOekDexM5902v&#xa;cTmhs0jjBm1W2BZ7/JZft5el6zz/2wMftw97jYcMSqrUZbA8PI8Mjld+k2xOpeMlsmodIYRBo8&#xa;telf1TuKV+JoBGqdhh9Qt4A7X1OQsyISdrjRV4EaO4PNeMx+kWml5XDCXZFa+9Fwpzu3i0IHP7&#xa;KpuubXpO/I9Z/RXkLSLo+ZrfrntVgWL/bmNTpZpdUC31iZfn/dLYsL9uNLB3MH0OGbXaUzitP7&#xa;eRUe5/RKMW9/vRSERxEwVQHz7p3V/4igmP/TsFM28XT4r38Q/wU+2f+BTwEOIAYm+k3QA9OyKh&#xa;L8v+AT6J+pplGb5aGJv1NNUf6f/YcyAk4eUmxg5/hqXtQtn+ifxAlWXT3fw8BFsjvV+5637e/y&#xa;TvF6vrW9/cp7d2eaWcCZuNW2Fj/h7aXMb9lMMbuG2+jCayYwbraIMUV5U50yvtppAGlWrrSayu&#xa;kulL3wzY1n+1Tmgr1Rx4OvWg+YO3PV5qQyPpkVy9o38FeoaWv08Z+hprb1XCbxiX4ZCnXWecZY&#xa;sIk0iY9u1mwnnGJ03l773Pd2N2BQtA3bdKIrx9dpch3GtGN2NSxxFl0u9dyxWd4BtoHr9hyAKp&#xa;kolikqDNeYsvcIC9I+3MDkP0NNiCUoM/XfW7cuHH7/RczFihxrP5JEeh0W55G/XKyJypYRIbH5&#xa;aZcZM6rjYmpPKW99BIAoMAycUWlLMkNSPFvXLdHY/oSaShLY1alD7M9T0JR0yTDA68iIHfudA0&#xa;OGecA7tcxJZBkrU20FDztyhSrAq8hxOejUS0yKPZfCr+tPqElvteCvUNPcu4Hh4oQ5mrCP2WIK&#xa;Nh5sw4QTjHGg/DLiK/QkUR7hkb/Rk0O9cIn59bNEZAHrtJZsUiEaRAfsKVv/gfHyrTZnQl0cXX&#xa;5HHYE2LvHYjJtwbsXwHE/v9CvLvfM6F1UOb0hH0koxuarASJ1hCxUVZxZxC29TumDyzLeNBm/G&#xa;DtNUtIcwJ20p6lg4lopx2yiqIpDGRyXRlrJpcgw/sQdskQ0zHZ1alSkidJG4VCrdNZegAMNh55&#xa;uIHUyxarRCVbiIPksUwTsBByMZnOKCm95V5eHmSfgxGR7geg+PDrw4ACmILdR4GY3Rx9Vu4lsJ&#xa;g+9231rhQUuB7s2P8Z+KjW5rhPTXfhS1iQuzWzw9kqVVg4CL+SNsnnsMjE6Qlnl2vy0H5lAILS&#xa;s+Hf/Zn1AT3z9DTZk0oyjah61JIvaF30KPkMYHgihnmmv9AuhGeuMThq2nnIC/LFipuKisiJoO&#xa;EL/uLKKlfeQiaFGdBOZuc5U5S1pxNR8wLWDLL0h0GG9oj860muFbrBD2V414tqhB9zcUrJmAX4&#xa;LMZ3Vjvc/aFPvWK6EFrjtlvcT7dJZBrI6zvYF+c2gbhvO9RE/m7Bie/fxsTJsG0FhUklvMbHYB&#xa;cNFoG2Umf1JN7/6kmsShveUjPglbaGvFutdmKYWclUFVUBWqX/DCaCXtMONwMQYeT2dHK99tV3&#xa;6hWTeZ4JKI+wAvmlxmODs12Di67Ws/z/IoEmCaDc5oqb8sDluo28I751KQa8wzVxVNEUrKnIeW&#xa;9iOav8vsp98S+ziuPRjI67Br/1eq6TTZEHodK+ViabRQ+k+qqb/ASEeE2iKhVSE/8Tlz48OAEv&#xa;WnI0g8WFBBs97yRZTvlj7ld4DoO1z8L8A1sZtGXD0rJQH7Empiwbm1C/l/ppoiMafZYpCgT7LB&#xa;Pu9rlvIxpj3+pJq+KKwvoF5h191z/0k1FXzaL51ZK/VIqV7SaMNPsJbBXLLOVSyqUBBcQa3Udn&#xa;FyyAPcpJ4wcyn3IrL35nA1BeKez0h7xwn2/+ot6vyBio3YTeqN4n4/TbE15G9gp4dte2T61qbN&#xa;Dn/56wK4ff4n1XS8zYzwwhxQGKhSIeUDu8qiRevDt6UpO2+ZfidRgTzDbB0hyyEVbIdFbighxE&#xa;0G/VM899p5QY+24tVzm6koJS1cFhNnSDtBRFCyij+4Qaa8O08Fk0Ekrw2CCGldskabcfObzA2V&#xa;lxXWXrQc01Z8e+se0RFlcUQmh5wsHO1zM+yCQSU6cqVBrcDRmKHWXQfb0Vg6PawMwgpCqloato&#xa;K9py+Edlnur/f7v2hrWxx2+sOPEDf6fdkl3Z/OGCqlI3PfczsdOlZT8kbFvRa+f/EswHIqefs7&#xa;1OSwrXqh5ddGkgL2LU+wUn647ELEcxV9jOQ7hb3kFaFDCHDrS/17/x77tYZ1Bfrdu7z/ET39b8&#xa;bGf0Cnv1fzaOksORulJWMKImQKSSIrGCs2ENbkxlZi9BULkXhlSUkfZfnULKlqNqH954i3faG1&#xa;Kuo7BUZ1X6ECEf9UxK9QoWj/G3c6Dwx8Ieyl6TbDGVv87bJXs8v2G93ZNStdPCddCMwqJhEX8T&#xa;xlfdZd8P5CTv4aq/WLZ8XHmToK/0JOc+0ae5w1W3+Qk0n7MIKS0c5fyMmT4Y7VbRL3H3GmqpSI&#xa;EBrxqTk7HMWv1+MrmXvs6Qa6e+38vDcnCZC4hFAofyMnA9fsbJ0vOGiPzereJYoeYPNSTzdq3G&#xa;LVCBQEHZg71IFXRLB1axoOzGq8lbhtUAG3FOnHJp8uq1a/sWbOSA504vaFXIl45j97CiVHfFUe&#xa;/4M01H5R6C5lc4kLBPHBGtzkxI8BU5LF8e2ymgO7HpPF39L5LJXzzCenVdCWX+mhDZuhUljckU&#xa;LyFcNt5HwytCqbaBQji1CG2qOS2A0Md5tDcHadFKq4H+xCTUhybZk08iX6cobzo7lRLHmuVb0T&#xa;4vMZws3AEV0LxQZVxU6l74HZmM7KzNLSbEX7k3ExShKsZLFkANLg+ukWWz6jhhr3mFn6LQHxwE&#xa;4khoEZv94fTZxzFdp3Y2cU8UtL06R0T1QQUVS0PjG6m7V7nCQDpGL2RC059KAz75WckCgJ/ZtM&#xa;x7UlsVFutQsupvHWEFpwAvZuW/nqcCW//9ddMbPK6pr2wlQO6BzTd5k8VKuKZr6LCLWbldGeTg&#xa;qi1O0flE94wQ+GZSr9gOB6wgLhceydKSjexvtLTeVeJFzvb0+9/OqYnWGI29tUMXLyjjkbZgpM&#xa;8FwGjXRnCoZbXGXWhbOAQbcstQg9cDcHWfubZpL1TBNSw9Fp+IhN15bEJemAkCnrrpRoR2kPIW&#xa;BA+5kXQshRQqAD+G9xJoi/4kzsXQKNUC8V/gdLBfbVpt7OuObqGH8hJ04w+R/kZA5mKZEUJdxh&#xa;czCT/Ady4lmufRPgzkM0yFKtfIzAD3hMOS50/tRay0oQ8CpVcmUOr1atEiWCxbGK4mtiCJeJnW&#xa;nz4iGqh7TRcQ0edeTQTG0lzCZoP2TXZhG4oJ1rHCSrk89korScbb+4ohXyX9eS30pRBeboNowB&#xa;XGZslvl6bOZ5pWjIUadrpVqlsd7D3Dx/criZ/sxQr8Ao8sPp8pHEO2yDafa3RDh+xYJxoEisCP&#xa;O6pf6y5pz2E95xZpwnZMD0eG4OlaCE/9ItOlfsRh6f4dNTbn7oK4copurR5b/nmbDAAaL/Z54J&#xa;/2Hg1+DfeaY0aFJ4s4dIorukFrjXywcklPfTt1w94zz7l+jVw4eKde0iPWJypJqPUKuDekIBVt&#xa;hGG8M9x3kcQ8/um84gNJw+ioLHL4qw5cERCvJVBcSoCnZb6zG/WnOVhKRaeNb710xfIWqpuVXW&#xa;LlTpCFQ7PAVF80IEMEPATL1yqp3955chPvoGDFTz6EeM/55nmn/+O88kejv34+I74Iu2T8hVIZ&#xa;6sgIQ7uXLZG9JfeaYe5B3mm8S1kEdq3G8C4PbQhQzp1i6Z0sn3OBF5XzbEOt/g2ynwwP/BnNyU&#xa;/EiBkn0thjb/QPlVYkXvrqHevTP6T8ypIj7k/7eesv+fO2ADfc3eT/OWM6k2MvFwuraSjCjEJV&#xa;DFMNZBzYeJ+okLdXLc+NX29lVNyL9q/bflhT2eZZuCrXMWAyrZX7J+m3CPfzPhl/z7z2evvud/&#xa;jgv6GkVcOchd20T1xkY+BSzayRaXsBvvugxra97pqLGlyVjU6G+k+mLABbU32uuo7ZPprMtLF2&#xa;7EQvaIRJmXkQPpKdl9hLBpbb57z7FSffzZylFSw8/GGWia0rsCIU5lXrswh1luiBMBkg1aGZqB&#xa;O0EeVjxWa8fui/gyx3boxmBgbdheLCqJmWE3xttuRlGkI5h2zPqVMUi52u7CRUBuHzAe/e3YA4&#xa;4mAkrnIAohHDVoARZpzukD4om+jrY45HEmTUV57sQwkrTH92bFthbYLOlxWBUJFuAT72zcN8Ji&#xa;tyPlz/1ht3iLpPmFkHHw6jy4wSIIXzX1NWUr+Ex2Ca3v00OiM5Ihg0oSENUpl5vvZSPKGD5IGk&#xa;tnDI7nM08/5T+3T/Em3vvII3zUVxp7QWiGryYNa04o1YAIrPOWGED3Uh3y4FAh7RTUXd2qOZ1X&#xa;Dl7hhAI29A4nJ8zRflfPdpE99KhU4mvXk0YyUeoZUhJ/RzfyYvzdX3cFgexjoOzU3m6EcxDYWM&#xa;laSpKyUgR/ReNkmCjIIE5dAFpJrcJLZ4C9vLJf6ATbyjc+xmv2jw9Pb1d9Kh5wJso3payJAK6n&#xa;frUHklsgW7i5Dp3KbBIOkmIS8nwznv60hFEz1Oo/kgxmUirIwvRjeEYkOW6urp631o9jVSYvEc&#xa;Fs0c/P1XImEPTrBA3RYVXp0EAKBY91/FKBFel7dznj7xiMu8o3TqnllDjs51yPAAN9FGyu5ypX&#xa;fTDxxZ2d2+E7+j1tVGEgQYyAFXMSf+566zjx9YtEl5SmnLdzQJS81lWdr407YrYvAp5hXxWd4h&#xa;YnmURpIlrDVn2SxkYCeKnANWOYo1qSE1lUlqRV1VBNxL52IvToy3bBZqJVlpZiMh4bi3qx8wq7&#xa;PluATvTVMBSqkpoLKbIDozPQgtzZdo2X9msJY0Qa3AS4tHh1F/GAfWY4h1vXheNsGZzh8d0D8/&#xa;HMhU7UazGNn6GOuVVed9w917c22LfFRTTP2xCzs2ILaXmN1RG1QbjdGvqcAc8Y+aUel+2xp2pb&#xa;YGPO2CQRMVDU+Pq9sfoFRAJtX+GWOKCiNSSO4yfrEEQgWV23/lKbg5D5n6OCnKL5C2iYxfgdZu&#xa;jf9rsLZUqS1rdbjUHWU6YFKXdGFGv+ikNulN3/6eNlF5VFer2wMKuUwF6NncChCefH1uEO+bnt&#xa;ywZ5uvJFs9n49s2LNNEJlaQuNKZ5O9yoJ6MYPW9+2jhcHSDGzyL6RCamB1uNXNT8OzYjnJsqNr&#xa;dvkn74JCJX+D78UMI57yoRrA6QQ/UcTAc+n4U6h/7kcnpfvhyu4Bc1PWdhVyAYsCKrJORDtXEh&#xa;H0H/232bomcc0W9WWNvRkPDE9LqH1IrRGy9pVHeDERmDFu/qej519ezo8IkiQwtwx9gzBk0m3q&#xa;7IepLzIZVs410ecuDpQUqvDGDKfZg8TQoqovwVhYRx0Q9w6qCc7oi+Xx7ovBcc9H0b6PyxFwX9&#xa;I1Hg00qHlfrF9obipVeZ1QnGb/uNCH3pe0H77Fn5zNXterkv9mN46mYqxSbfMxzJNaWwDN2hpF&#xa;VIvPFriZBMT/FQilV46CADuCvcz0ECbySMb38nskVV9eX88Y/7Lk+hYwHNmL53x645A0yQoV68&#xa;gMaUIUYzjuO/XBDOX9hAWILNuEkGGlgs1/ZMwziGFjxVykgUaoD6qrPxJy2MGFZIPJfK+XMp0v&#xa;re8yldtdFt9VMpLxRt9m3j1mNRpc0dDe+qkbNf0Pd9fttvx61np17s9oh7y8ijmyAd9TgsQdjP&#xa;O9vC2tIuWMRvCrA+5yTKvbsbeq0c8tLCPUFRBT8uFkDqR+eFuqSFFzuw2BxboCtOhZW459/2Gy&#xa;/ApU/zb/s9ucRyMfvbfmcC/m+NC47/5p6g1a2Vpku78gsScCV5GlJXF/FLTXKxJIimcNjEJVEe&#xa;np2HvUCVeYH7hbTb7Ljw3x9oaoUSw+48+ZbdMOXZ/XI6/o+1L0m35cGUZtvOt+XssrJGWItq7a&#xa;2z5F2eYbGY/RrMM4zbzN15+wAdSLOD6uXUpvrMWmsLypxbT4oQXNVUA+CxZoRWU3vSh86T9kM8&#xa;OQH/rKy1RX3DFT7nkAL3sU0+T6anboB9jDyFBC6fR4MJTsT+mS195tTmRr9/bYfWfe3NuYEqSV&#xa;EoiVlsVRs4t8Y6lt0klREsUUvrbVg7wzvANqfXrYVbbJqAcvXbgbMOzKgMcKwdA/aRpWxTt7yi&#xa;QWM2Tbp9To/p9rYYvlQbwj+yJfLzFV8/PJZxI6vy5Bwkooq1gHb+6b/xKFTZPDcbVWXsJavOXH&#xa;z7Kczlc9jLfTPYGzGgm99kg9IYREO39JN6s8qJS0HBLOoSKvaizJcuJXhDx6a0EoV2xOksBoZb&#xa;zSHcwBPMGs39+zGA4GVETnkQeoUTkTPu/vSU05YypKxMor6pTh90YyNJaBQIsODiRsLu9Tg2fS&#xa;GD8d6U9s/Kd2/y9JdlZfOtCDkrpb7JQSR3RPqWOhPJ1krmYTKjr3UHevijLQ/51T0WRFQijZd5&#xa;xn7tXgq+OHPBmV1LDSPobNk/J8RWQl89NbC1ISgxUL6Pv5V0h28YB8aQSlO0Jcbc029ht9+sup&#xa;ixg4xU/bqmcM3TSZ5rIsB1EcFhOzXa01lPlH4lVuUEHXAZfJcbAoQxZxfrcf08dA/1PfDCQjP+&#xa;qwEu79p1UEs5nRdxkalZZiZ5Kffd0SGhFppdu3HKurXhHlfZRsH8zR8DHomv28lDIusV8HUGZI&#xa;tvMZQFl7Crux6xTQ4mHzT9FgOiktNixwEXPAhBnGntb/B+fonlSI4J/LPy1fGjQVAp4nXzsoJ/&#xa;qj3c3y+wrjZV/3vlu/leBVIDnMSMqt7vD2YZLcwHm+BGaatewAthhlS8a89ayPOcwO5fogJyGr&#xa;XKhRHXMR19DT9GGIh42acuYZZLN7XShWKr+g5OR2TvV+5R1jqO8rbn9XKcwqXq0TPS3fSom+U/&#xa;ZU/nFLhg/W2/Serkj5jM+4udtw5/2+9TbgVneiAwRbdJFuDSV7nK12M+zwMjkwBnxUa+RhoF85&#xa;4vQIKf70ALy0YNfppb349hpHZ2lRNvBPXJ/rvI1LoE2y3G51cGKg6ixNPr0qZow2yUoqxcxW2M&#xa;04iyuRuMQstMY4h5ZCjG56/wdHmqv9hob+2k/MlLhv9cE6D1kBGCLVWPSqJlV4N/u2+TAfY/1w&#xa;SKfpKav903NxQpvPhDJlHsrD3qFcqzTziElW/SDyT9uwd4zYFGau2Y2c8XquEaTH2Ll81xxCvD&#xa;adyXxE/0/KavVK3OIVDRm3S/3XcsbPk++jGO1l8b315f2zhn6jS/WI8v7UEVbWvoa8Daoro9IB&#xa;1TsYujb5AiPK8sHKfBn43vUJclmk0en5ZMueWCdz3rlOHVCYlOAl4CkO51c1OH+YdIy9P38we/&#xa;RG0GAXFrRSTK3MJ6rNa5npBeQfw19EDAjiMBdceHa2Y+lkeCI5hU6jwT59hYPiVjioC+YJhtA+&#xa;ZpKhX2kMsaatRriofEysOEB7HEKNC5gPU/3PdQZb3v1X9x3//zNcEfOf1bM5u09JzwtXBfYx3o&#xa;Py/FdiquVRb0QbQkUHZULnBAdSA1p8jFmA/FEOBTYzSkLt1R2da0d7gkQu7q5ovo6TooFOjLyu&#xa;WvzVLwIGTMCs3g4hC1Xr8DDACQAZ8FPFjeeBMxRxPR9wvYrz4Xub6Oe76+vJ0bvR0FCr9Bf/J1&#xa;yijgbCvnnwypOb50PlVXhDRr3V3ZmK7eWdFdJOS+qWbqG58mS500QGw2Z8wzgXPnrd3D+15cwT&#xa;sp47BhGl7K4Eua27R3I1mzOSiX6ayXx31bbavd5iXp+Uk0M4MU2QwI4xFN6pSXwL7mD+ggq0Bf&#xa;qcfibloTe744ga8nKP9xmPvR6lh3er3YIhN3YCHMTo9cOULm/nKYBIF3SXt2R+fPtVW3BU++iG&#xa;gUAFkXc8QqdUs8vG+fCe+DAZtGFlX/6ZRuqTl7+W05Dsg7qnNO4zAghKmG8RCgR74e4+a/ZoJi&#xa;Ar6zLUOPanaXzeKk3V+lFXjEaSH4mh/DaqtDLeHJNaIkfl9w64u2MTnt2fXzY31zgmfYVCvfEk&#xa;7m3FWtg9zyKImlvYHrbfJWK8BTItYxvGATzyK7SsXwRwQT7nkvoWEl7/R1uwV7oust9BmfmLfu&#xa;4jdQgFduATmbqn9SPRpvJBlVEb4goIv71o5yTdJ6bxXgy62ldauHcCZlxL4tc+HLwiQAWG1bEi&#xa;cLAJ6jCNKujh03+0r1EZ1sYp0XrghhDnbgJlc3JS/ZvfQOQE+suSUQq7F8+uX14fwz8EedeUa7&#xa;lOAvotxGs4X8cWkya3E2GNZvEL5tF6wAI2b/swyB0/09+eDnk6X9JtCh4vRGSM1utve44ayXiR&#xa;yPzFIGYyhvZlaTIrudrXoS1CtE9AhPyP3VQQATpL7M/Ck4aZ7AoG9r9nb4MSA+iorpI/hspfs4&#xa;U+cHPLvOnAtC8wb1Vnk0cKMBIqzeVm2g6aetLxhVSupk2oFnp1A47fYFbLBNAe5wTGWlEJB41t&#xa;E7Q7MYCQzujs9HfV8tHTjdnPqgkIWb6f3pY1/zLcHtojGFRixztrrWssW4xlcB5m7osfehhGwT&#xa;8BOloQM7tPqNygvK03Z9xamG0syn2ersoOWvblroIRMoVDBVYA3e7eSvOq3Fi4bibpTQ0FhXbH&#xa;yXLFtbBEa7XIvx43iwqpu9u02qyiif5iVC/CNJ678HkQfl9tTDNHHUnsXNF5xuPEOpXZD6aQ+T&#xa;P8iMOkNXguLIviILSXFsYYSjtaMZIM1WGkccP14AK0tr7U5JOroQ8ELjLKu978OFPqulfHQf85&#xa;HWikiw3fshT7wffET2rZXLvQEnLcAQ4IASB/slJYARtw2EPogdTnJNZSQIVBdw/LlXbgx6MEVp&#xa;gU1AKgyObFGhAQsmICU2qfyA64Aw/FTDOVcRotLfgCAUPHUFfCZAusryZNzCP05vupHH3wueen&#xa;Ic8yL6oXqBIzQxfsh/01qb5Ab/w/xCFQ2zM0TPvDP8nPYBoXsMIjDw/QcME8O9duHiZFuCEhDx&#xa;TgEVwjM6eJXLgtOHAdguOJD6+w9xLrREZz138xz6eWigEEreprkvMI1br7y1nvpro99jC1vi+G&#xa;GzzDtHW14zzJPqgGkW9xOKXiEhDDG2cwqSGx6QVaFjRhmoAU3BVmdE62AJrlOspy2c8dCqep9t&#xa;5aEZFpunKCkRuadPUtdTLJ5bvfE6QqmqZllq329BlB65xrGvxrwF9mB1ADdvrXR+dXKHMxY+jU&#xa;cuqMbF2BhtQxNzb4ksmkxfdpdlnm5ZxeXwhXldrLSGrI3gujtykuxM/l7xtrwD7fdvVJeWUxz2&#xa;S3ddXLMHtWn3WKrwSVmNL/oM/fJx0IrRYDdZ4kuQkzGdiENpVwCp7/xLRN1n09SMu9tyWDSTQB&#xa;7lwQOdkeefBKCChUgYCJKaRPdlaoAqN9fF51D8KsS07gLOl1s5E1rC1NL+11djnpGFSK8LBpgx&#xa;cJfgUYLE589HppB4hHe13ihnpXNq+ywfOrE+gCFtFWFCk/ZJHif79jEn2ZCygUg5MylUaF1arL&#xa;yEMYbD6rSPClulbq3WlS2VkMvjy/WR0qTAC5mD5AsIeGIMxCcAGY1JqlD1FWZZsAZdPNJNFt6h&#xa;3IGh5EkN8pf7GmTW0Sk6qhzMpETeOjq8GG50I05Ot57SKg5k1evbtd4iyxS8hkrh+/zQT29YNQ&#xa;+El+PnX/ADe2lew2EvqQVChXfcn0Pd3sYyL7k9cAItLS+RPeDfMF4649rx7cxjuKxuhUTxETT6&#xa;OGo6l/tyh1h1H6e/Eg046z5evhvfemnc/hZvYPau/gYBTZX3/U25a4TVCQJWV7lZmrJgx7Nc/i&#xa;FKG4KGDIO61ICxerltZGPbooeiAestlKSKUupokXOrk39roFaCTquYhcUunfUT1uehZ7rqSbP8&#xa;jZ3ASiaUcn0Skta0UL9n96IT33S31sXaAwS7hWs00AxZ6pRR76H6CZLdVoekAF9Oe/jcF0y/58&#xa;5Pw+Jz2Xb+6KdoRAX3p0rqz00RUDNyQu63ZZNRjaN+6WlxnJCTcXFSCwZH+2wq7i3x95V51G1G&#xa;/qCfELe0ibSkX0PkEb0lRqLj0Y/mKPbnLWVylXskroqfdr/R7zpxRI5veagyebXaHy0ZDn1XaV&#xa;9Z+rz9aL0gftDdBY59PWSuoh4/IMO+6GeekXKB3jekDp7h9iJ8Mb6hM8ymmiM2GESckXuwVuBq&#xa;7o7QjChtgxVGd41VYQflBuJrDkbf/L001y/j3TuDfffODfV/8gsc/8kvqLibm/83/1//befmqi&#xa;u6Bs5bDoX53MQsFy0GOSS0ODAplaMCsvlTM2od127qCh7KDpegPfas3fo6RiUZ3cZFLbvQU/kU&#xa;ZiMG7jx1xqWj6fz5iYO4mFppziXpj8e7E8+eZ67At+vV83c+l4QDrzcA7gmV4OvBDLb9EpmATL&#xa;0y97l5qkg/ibz9PWfxvAnsyHYdLi9VSDOrHC43/wBSFXW5uYjGaylQWoEcdyk6tH/iVLk5+5Ys&#xa;7m5iycTVILzhNtjmcjRS6v3A3hwes5NrD/n49LMMD9ozQO8odHAadUJffV+DOloNHdu77+hc37&#xa;9EROpTX0P8x+XUig8vDHnbMMyYXj1eOWjFWvGWOLpkpSW6uqQG6gqu5Rwl7INs7g07apJXhYcl&#xa;EpKp34CPAjo4QPY6V0DWB1vKCb4xpy7FEXeHI9jHHn3PWFYocvXpRl0GC84oZBywbKiSJP/Ukt&#xa;K0vVHQT4VEpWoaVZP/qNw0zTFDWPln5Wap1OxGSf73LQ96K+fWMkwoQgfm4KnMGXlw7rdhqZT2&#xa;6eSlcSxusOy8vGwuaSMfFVjEkMeJqEIrqX0kfmv6SbXS8svuDD/8r65GZ5QQ+G3UEC4L23UmYD&#xa;7qjaoHx6+ZdnL/d7DmAlHigHV8m8wQIbryVk0nnHWImx048Stnrnpo8awGGGwGJgoYqgVeuoqQ&#xa;fdyfoD7rAvZMYNBZTK5RA5+5HD1VCI6k0CdRXOZPXANFCZlaWZ1i4VfKrm7D08xV8yrw1BIJfv&#xa;MkqI7tdsr2Mjt2jRaNSsvPKx2NQuFeuAOFWLhgGDpfpsNc2vsTdyUbuSrt3GqkD+RrqqcllnBq&#xa;WZVFlZ2F1hdR9q6Durbth3A0OEP0bGj5E2sMToVjdp1MgwuexZsaPyWsp2jhCjQYpmwBM7eg1J&#xa;Al3OQUZcIRfjQDTPv9JxXlPnxl85+sWzi1IZXGaDqXIK56WtVy6EJCDaZRO7IqJZ0FkXUs59Ja&#xa;mJ6r+brmTIhvumDNzOYtRTeH3qsdNIVX/S92T6zH0tg1moJyANhC25+ti4rffV5MNfFtNH/Ai0&#xa;LuVm0Vvhtj2zoZVpBrfYbr5aspz6p9twyNq3WRCrL+Fk7rFWbyy8yGbssAd8lJpo9gA0OlW6lO&#xa;3fHMbnUp9CRMXX2hQnNquAePeCdJCuFCDZwTJ+10pJV5grC8ODqdbmMFiSMFXWBQQMmgj6eyv7&#xa;a/F625TT3egL7m5JhcgPayWxc1ZJ2RGZcSYl6JrrAdLQR8l7owLhVEvBRJABxbg+0PlGEkurSH&#xa;PLDzmMK6B6yUMWBFT+Ivg2ru2FMyn4hJXrjsyJ94BV9EnD5PZxgO3wnRYp23x+Ss+//p3HzDPD&#xa;V581peWsJxwFDy7Y/Z2QIL/d25SYTseIT4p3OTnADn7U/nJvRMGgkq4eBfnZutioMHOZvbg952&#xa;iiHnTbwJn6b2JBCQuKgTlyX4DA48xF/gY5rncUJ96reI0HgdBbKu3cN8VNcLKF5Ub44VhgJEf6&#xa;HlFpkhE3o6zSNuk2v4fUX4YT53wmaoP0h8l3YuV4iw3APlmRwtkeEnGR0+EHZ+urZymi5N3xaz&#xa;nZ61ShO72sZ6OeNiRkQtiOpaFd7Gz5FciPCjLxw5VnxKPKwPMww5B4peEYRJ3ReZlMRzwMcrW0&#xa;Zjjc472nr4uf6z+qqWnV6kbd7WfGbznd3y4iGnveTf1Zt8XBZVQ2ENI+3NMEDp5RVsvX6vkWvy&#xa;5y/m2UadEYgZD/4cUavmGC4Zeq0oRv3zhYSRTmIiCzfvatCuGhWg0mq7eNzlHlYwEW9DIr9r0+&#xa;DSoSp8b1wqFScVpL8TryYlTa9qXTW0MLYdaYW1TS9M74mib4un9sB3ZG7fvnlbwFTq+EflZgTT&#xa;Vpcw0ORBSGz8wfiBqXZX5rZIr1WWsl0F/SEV1ioRbqbzIZPpY0t23oyIP/lrb3w4yPHU5R/PAf&#xa;va5kN0Qb975/s/Vm7+r8fDv51loGv9/UiPVLzTl4o0mygUNI5Pi7qdjTjMkiAyUat5LkJwEsuf&#xa;99NBJc1Nnk0tYd032Dc5NlGNTKtCC01PWfr29xm4JL2boLDsY6Efr5NCv1b/1H68IL8LuxAc6L&#xa;vBaDlVibqeL2Hbl9LrHskxmWu+jUAjZrNs819kK7vWHW0cxzpP6cXJjEy1npwska1UkS/pIoQ3&#xa;ATPN0ZVyuCYqVZjz7+rpmA/MlHkfEXC3lvD5uTxKYA40m+TYrgkdfGfjqC4gLwAX8IajifsKuB&#xa;rkaAjiYVPXuk7wLrYFAIOi+a441CJ668jVvKNQDTexuDkCogtWunU0GSfruiY81KWXZikXmmGj&#xa;QaPxI1CGCdiyP2W5Y+brGSF+DwdSQAnuMiZIsBa/3TVxy+Xd+acUYx98ht+jgaNZJXvWpiJ5gX&#xa;DDUYduqIF7w5szvf6NDu/76sc8XT6ZS5uhD7iknb3TX2grf4+GzMvCaDgPumXwky5fl55oMLdP&#xa;BOm2/CHG9dm3xfoYU+087vEPLTAAH4R2GnG3rkBwe6fTpgLtbFJpq0K6CwGAMQg1CcUSLslT9r&#xa;OX8SJFfPJMBNNYcFMH2gcEp0SxnbHFT1sXZC0UN9PjU5UlbD3axlYxyOqFv6SgAuHCzG+2NcDv&#xa;9XyI4T+rCAyxDcxMCCpNnxpKGxHGgkyXrgXudSZmLbPVXD9gY70kHUWT13qBRBcZFG0mD7hCnQ&#xa;Kfj8AB47GGsvDsV08wG8nOaC8YPnoh3ZQy/ckK1tlYX4QHUGZHq62HrNzG2BwrkhnRNgrTdLKE&#xa;AE2NybfQnbZAxtgSPI++xlKtSpQv1tI5I9ekLiTFSe5DQoOEC5is4tFoRWzeqS00Npxitrk6c5&#xa;XPlwAM/f7waIx6de+QM3rjpCB3+uUE0DgOOim+Vh1hjJgiL/jBIio+pAowhqbxOSQn/LPZattj&#xa;ZekmYSf9Dt4V0QWbBjQdeGgYKqJZQc8A7KHVSrGsvsjAk0LZ0jQxXqqxQP+D/KdahrbO19mYQr&#xa;0TMvaSeoNgWjCd6cz5/CYfLS8ceEvGLxjRoZj1fo2V9HKa7tb3lTIdAYEmcq0NSOlxPI12wtm0&#xa;4BvW2xG5opu6ZazZR9EqE3SP6yFEnY8mFO+Mb4Agm47FIIyGUza0QhiZdiRZ4ntMDFa61GFEfc&#xa;w2mbpG5O5SynSSbOKCt5Jvciv4rjITTyJjvRJD6j6cx/3RLdiIRknJadwoIsaLYdhtSbTHJF0s&#xa;u1TUWQ0GkFiHz1JwD2YHX8h+KVTPZqOuYDOfqC+5bPCJKApzIC6IE+GsbA4bLIPP7+47NS+gOT&#xa;onj6TyVNwq4f5M+cuiUfkX5kQpqhTSLWFU+K0GZaJBXN2xiJF7NV/CG6av6cLOF5k8jKRBO0d5&#xa;vLfvL3trJXcsleX2X4U6GYQkOHyg7RuppX5ZY7hIg1SXCeFVQXQalD9ukTnQfHFdBOcxTw8Unk&#xa;GCiDwo3iB1Jv3d5lE7plnMUyw936FFsthn8I7JR2xn2ec1oCLBN+bNE4FXik6WM5WqTy9h16Da&#xa;EIi1MlHOx5hN6TT/qvHzZ7Zf1zz79ZYcsk/PiqrM1UcRRsP7e95wNV7KqQJrt5pri+LmOGsotu&#xa;epX1bg6X+aEpYZGtMyYen1hrrLXPlQfJd+WomTAKuSgaJw7nBzr1T40RBxYsABYgqmqI5Twr0p&#xa;8le0eINHZBvj5kTbsi4QK51yR7lZSgVPllaJTjGq0UfgOOwiT5SAFspCQhXBrHAPacePkk/h8h&#xa;RbTxa/1orf6RYOo38DJCods2brcyR7hehdd/O+mF1PzAnZPEPsvUqRNyE+XDDzsTxgzEj6CTzg&#xa;tLi63SSFpRexBH6JtLhmn5ejuGDpdn6/LTiaVpzoWBEXHwE6XxP5x61IWcr2c8RvqZcA/F+V+n&#xa;8t7w3++ew7A73MQ12F7BdJOHg8ZVtGOsbhODLRGRIumyymcYpqsMHaunGF/WnLyucow1vkm9zf&#xa;Ui/U3FU5Nffj59zdtzNICCzi1pFvJ98y7jtd9zotr6Z6et4gNkm6LZfzcrebBS2cc9uV99YORr&#xa;Db2G1WmoVUtsn3GFqU9PbcDOkzPL5vw1KygEsLzTMbXCsSbTDUrB0lxdILvjZG0k5k/1Sz+a74&#xa;qKn53enGOpdvAMmh4kOe/obKUJ29+j5ey71vMwDJ9kCm3MTqQ+HgNO6UvpalRtzwY8Sxvmusx+&#xa;c8VZKiWIEJdTKWkxH13G0yZqcofDzhMWX7HwxVWJbLGyb8lUW2h4k2q+JSfR9lPkLGjSBSupRk&#xa;Sdl8T/1U7JeLIjULOEHoI5pDWsc1bsXo5TemSt+AmVvfAcQQYpQ16tKZu4ch66bKXgqgnHfjyX&#xa;/vwYw5sa9XYrQv9moyDYtGMTQ+WMFYOHOGnvBSkYLix7QT92c83ajJ78PvGkRxLnWL9Ha0sP0u&#xa;xVo9lWUepicOYwBNmEzaviEsbmDIcyH0R+x5/l/EPobot9hXod0h/iX2s/F/i/3MxB+xFzb6I/&#xa;Yaf4k9SthHgt4qwK9mN2E0wyKvSGsweVZHbv5cV+wrHwHEUO2591lDZskUD/UeARMDDPUCrjTB&#xa;JU9wtU72fPaMPcLWxsMC0ksqYVcymsXPW6ROWrN3wf8u9hhfhIf+IfZ2/xL7rL/EniPlv4j9oc&#xa;RvsUf9h9j3/5vYp/1nse+VxKX9WHEFt67VS/X+WLOOHDqNhUnMQ6fPgwOBdxdnO4tRDK2WjUZO&#xa;vQvNQ6A71v5+ryoT5HlRG2074ts7ro5ZjoOJiE6x8sHeHXfFYCvRWE2nYVM9dW3xA3OWpsZnv7&#xa;x4JXNTc0I57kiHL1Hfksc8kEpxKsOH8tWCj4t/kuCABy6RPrQmDK/5S4cOilfNnz+mGdPR5NO4&#xa;7FOlLNeIy9UtzWueE0FO0dnY6oCDdaCTNsmgNyyXH7M/yT6IDNvf0NCY6NY9yxhnY7h60hhWYq&#xa;ds1AgD8rYbdMmueMVXf4v9+j/FXv+P2LP+Q+xR3YffHEYOYIS1cnM3U4XROw6+4CwZwAaDTRCc&#xa;M2GGFHDZZPodekM28BVx++mHIlWdx7KLx5I5x1OHlY4pY4X4/EOIgmzU7ZEj/rPY32f1y3kayt&#xa;1NWBXc0T9lSuFwznsyki0apcjcCfTX+r8sfDmSeNVqHKpk/kr2oiqPZnTKeng1dZblmrYiXl7Y&#xa;jO57Ue8VbnWDwGelEH03S/MzFqqkjh+tGEqjUrb7mNiKYpHtp08x9Yo7ySXiClYd8xVUhX7rmL&#xa;1vYZdpe07pQBTPM35saMKEZOJ3yWwUYU8yaq49bCcfokA0Q5z7co3e1wEdUa1+lLO5/MxnqYui&#xa;8e6FXU+PjBedbOfv7HiU/gHv5xGrfLbTLtu8icToiZIpkT27cFtulXHB3IM2P9g0qU1C9avN5h&#xa;EZhoZMEXlaPgAN4yh+yRj9ShhRlpVwIioSGkAXstEyhTCbmVYqBzJsnz7CtiYChSSD0w0Gfdu+&#xa;iesDmUSyPIHrrte06m8ABbRalUiV9YtLUzfk/vNmiUb6Skv0mY2DmGoZ4oQICv0fdnFZGCJy81&#xa;6gDJMra0FwUhQYLc7JdoO7LNCu23tFOka4d+2HVbEHBPGrJD44j6w9PC6MeMcjtjngCsUVY49Z&#xa;c8YuAOwTAUU0zO0g0kn/mKh+xXiLyqZykYMvc/jXWysKUAJsUf+fYo/5X8X+H3sibW8/9QXM1z&#xa;OGjNGP9ReQQdT1eCQZ8SGAKoYEFAgzLEh0SAjObnnDxKBRea9rKqiVSrjycOOmplndxgVVvY4v&#xa;nFBqySt0i2e/HGxtGWvW7+/2P5/yelIlAS0+XfxqCvzp6zn5cvY4aTAVpPX6cuL6bm/HCLJtwc&#xa;CHYvbjgc/jU3ltGAEKJHpYjIY96tz0s4WZyP3xB23oenN21UXrkIGuDqgrBPJSC5jnBVFGtAp4&#xa;9xBoAXeTooY1YoeljkarYoFhBu6b2Pwz7vdbyt6gDvnemRVZoqMq6EGsoOjdIOXeaox0NfUWhe&#xa;OFsWDd8gY/g1UuvDaGBdU1BpbaOjXuqibjaWyWW7qBaRoaR5XLxRtRCXGLfD3me3RhseergqDx&#xa;NSfyVWhElzUn0nFo/CsoOwstEjE896LFCMiWXwN9daT5xWDKzRP4JN9MeoX4ftvpdvegS8mhw1&#xa;aPwxl4DZLA1o6Kcbjz+RVQ41GSNQ2vNUCaDIJtPsz3dgSPfI2RhX+CrmQhHSWvp9Fhmt9NHPkS&#xa;rFhU6yaU6Y1q0cpCyG4dJX3Pr0yj7Nx2e/sYIxLXZpNWwV5UaXDM6j4Q9B2SqafAttQQOzwdsi&#xa;Gy2dAFUoUdhcESz14BNdIg/X1cyiQjVHUjnkOyKRqsttQq+0kR1cejHAbOOM1uLUSpW3dCSGhJ&#xa;ztFxNOoEM+a9DuUgaMgSLXd9Am2JsOAJSLlhD3U1BQeGvlsd7egSAeY+Y5N8vVRMvRKkwdLgBi&#xa;95BL1ZhjUk7VFErSEHe4AHGKCZOzZm+1AW3DcaP7ppOmLqxP6R/SfLT7afrNFmyjhXuMPs8sY0&#xa;xukjLBGi5q1gE7aBJoAaTimbvFn6JEuwCdWAOyAU0IBjwf7NhMaUxiK+LD/EhEmcVhxXnHdAAI&#xa;wAwzzgB4YGIOJisTJg0eC75yHqzRnUaQayEETg+YS+vyk/IZxjmi/psn7Ddz3R7Z4IXffiXwfB&#xa;/QDxmy7dKOYuo4GPcVMNTzG6PpygLz8EppsyHPjqL8f58jaaA8ZxNfXt468JvXpDxVvT0CQ/Sq&#xa;uzHzjId4YwmFfmfhRONno6iLubmdUSrYsqmBpnBHc/rpke6PUyguwQSuhw7GYBNhI8m7JgfCiq&#xa;6yEjenMzufpUEFe/YLvJmctOxPLC07sfptsa0kiR4UQdKZLkYgpEwov320CBoVphCWa8tjvp4B&#xa;spjthsc6Ey8Tz50dv2ilF1+nzVIyCWkptz7fYzbtFu3IgyKwifeIid6Vv/VysgDz91GyMwK3AW&#xa;se0S3i+RuEipLQFCmqpkBR1S0owRk4CHcpMIgVPTqppGNqLZ66QpDD9PqgexzJlqjwe1Et/yEv&#xa;XMK7WZD63EnvEGq1RHkzvXIhdpH8oF4YVcLp4WWJDg18a8ZkKVNwnqX0YXLnSxrtnUT8lG9y9F&#xa;hXMfE/s6uT/jtu2qn2q16k5tWKzJn8NPzaRcRY0Tw3MJTeYBK7b2TNaFuq6bh25Uqi+zgMAchG&#xa;6EObKGy9JhI3bKd+ufc5aIu+e2Ncg9GlX72JH90Iyulk2T309ukA4ZFcn0ZTpNNt0lu/OJXhoD&#xa;48sj7wU5t1AUduurT8pYS5Xnaa+SNGbMl+t4D8ZH0acMxM9b+w4Ccdd+GIGiev4ZSK6baUz6Eh&#xa;n4P74i84wZXStVxpzo2onuGfh3Peo9MyWZPnT1zo9b5tGjdmqRTTdYVJWOlG98Rgy5AVt5Zjlw&#xa;ODuP7tqmg2wXo9+9xeI3HBb/almyFbz8cZapLMP9M/IKf+cqtAhsZIQOd5QuGmWyU0g5NbSUiR&#xa;Dy3oksqZvJUK+Wuty0KDLzgvmmCkZzdApPxCG47OMZbjR/Xyjy61gofIJdK2LgTv+7epwgkF/t&#xa;UzknEXp5nh70fL2yLxnV0Hpt6edQehwXvTJ91+xGWqrnnCqc8DcnY5QP+lkUrmHJznJpsa2AdT&#xa;35mLZGYSnWfZXvbtUfUeZaGnP73G8JGm4JLJBITPRs1OyzZFPaNtpe1D8BjLd0Jp3kTitzqsdL&#xa;FlLrLMpxPxpsMWrQdX2bcEWhGYetq1SvuKu8g1ITq3Ap0mKTTVkw5B9t1tbo+DxUavFA86lB27&#xa;aPxbtC3D3+PGvEUyHyPKvLZtjqR5N493HtAT+rVtkRRYzPrJXMjHYa1eswacztKF7JGDjdYCK+&#xa;061hVJ0dOCotq8Ba665tXcQ9xSvAx7QgQNFkXTy/Rw+kpNpXNaD4Lpaop0rRMkx5OprYAgBu4K&#xa;UxaDhEVQ15pa1VMXBGFesCj+6S3ednTzRW4xOFC+aFqEoGf65VZmG4q57IZOhbto+6IwFh0BJX&#xa;peRS6VY/tyZ8t+GChwW28kvyJDuQD4j3C8JvEVb0D6e3cEpPFLwjw/gEDFR5+n9oewfnyvtt3b&#xa;fDTtIztm3bSScztm3bto2ObScds2Pbtm076fP2u9Y5d6+9d627z626VbNm/f6Cz3c8z3jGGGdF&#xa;XVn3S0fKuBbFRhXqtbIu6/5OwgxhG7R4sadK2uWaE5yBrv1kSRWH5U13qZursW3zWg5doesbWX&#xa;VJnqJ8MDctj/Wi2LxeT+Jg0XzfC65kMb3t9vcQ8b3NzO53ls0WRApnprIuyvaPqpB+DffwjRci&#xa;eUFfCoBd9jFzEDjYyd3vgNyQwWmm3+QeGPMYVfb2LaJfh1lD4jU27oZdUGyS54z07YPss31KrW&#xa;b3B7qVeNlDND5rZ5ushYYOm/QJakLBJ0zEaKyZtEdqYLqtvqJtStOGDtfh9RD3O0aUNgKuCDWL&#xa;W8ww+wuMHNW9kkVwCDWTD4RvqDYl2ZobFY5RBsBfU47v3HBj42hD7zdz3N7Y48hEmdK2PpEOSp&#xa;cU83kuHzIHvrqjx6rHxcPOz1vZsVBil4ZbXe/kWX2PJDMSzAfL0KRX4DEp9PAS9KD5kWdMMqsW&#xa;IqVDNDU4YLj+RLXLYBlTgo+vSjO0fQ/Yfr5J4FBXdQD5ZYXb/V1ygzKT5mRo2x4TS1LxIP4O7R&#xa;aXI4v8Oi2oy/7+wH2Z1/Qap54TU9Ed9QwtlMLuFM2TZ1Tr4I4vtk5rF+aAtFfiwLjX4gC1FzuJ&#xa;HrFKpVPQLeG8Mq6DfWxTY0WT3PPM2DbwXJvcE9v4ymOlTaDJO36OhBO7qEh9l2xkhWaNNr5e2K&#xa;FJYowWyTYpc82oTdnBJgVH2qJRvE3XYdVYMyUTbuQkMZkuHGRkhWxtjRSStF6TCTiLlLxMnMZt&#xa;tPYDQ75TxIxqiyCKaovoPOmUm/RRfL3AK/TaZmSLWvXBr2GdnvZr0UHprXbvUNLVi0x/c4jF6P&#xa;PkRK5jHze7wMsO53tLckyPLOSNRqRBXpaXtxn5xnDMXIUhd3h+gtseaRTx+VD15Jzf6jc5yGuT&#xa;CwK6punprcxe7Oy5576wBOZP2n2O0i+N2/jvXSz7Fuzev8VKTPm9fwttAe8/mL1/U35jefP929&#xa;h9Y/2Z2An95Qsn2v/8DICCra3l/3Bb23/2dQ0iEZCchCob3cwZdSLAi8Br5decMGR6zVJ70qCT&#xa;Vxc3FzbxXvFfZRqFNVKsc041PqSrmt7GAQhGdj3ASeccW1/TnI+LEf7fn59f/QKf/fVtTSK4J1&#xa;MnfnFZqC9xfyO9jFGLMZRKfKlhHctibmLVnh5LVqx1zwEfnFaoo7V0kaG1NBGfeOZGygd0JGsr&#xa;OFvGy5qjisL+PI84wZrT4h2TtrGky9Hik++rMe7f5nJ9fGkCRFesiJUamsEa9k8njevMmbDmDA&#xa;SHW2q5xj7+/JO+9MeZUCJmsBpT0TVIRP81IZ2Fb1zqbKPEksFsdeH0ZzBKSt0xU6DejLGwLo99&#xa;f4DpFxONonYTKUGZHEHQDgCsTapmCDBnJ8ugBdjBrUOSsc06yLYPOZSJUBShTnEMGftqpVlghy&#xa;f2qAVdgsMTIfMIt1Ih+ZVS52KZjDgAHaOVXajRVEuAWicRsc8FQnNaTbbElcrsVpSesX+dMtCg&#xa;yoQ9yRKldzBA2f4Xr9ms5DQv5q7lBjMLCngnf9F3WY1dJnkJO4aGYEgpwXhCiU3Ktvg88QRBDR&#xa;F4D0rY7I2kGlm/BIR01SZI6ZSUFtq8WDwfFWrV52AioKdDDRYvA9FzIAfJ3hcd0g/rU3eSdpEd&#xa;lDGAKNsjl36zJ+4HLAdohPbW3fqR01qqvezkLy01gJQFc1XLrj2kejOnOaclB0ov7wj12Wtli4&#xa;g66j90/h44JMV9DJS3ZmoAZRoTB6mBbzqhwQ/1sYiZ5UTrjXkKTZJ2Yfo7q1eG+TkFuumrGNLa&#xa;liYTLuGxbJ0ygf7ib7BEE6Ej/nIyk3OvDK6ssn0AaImo0331zfzSBeiyFxPaitshdrlrNhHj0m&#xa;H5HcS66gDp0ORKO1EYOgOtoPP4gEozNItRZhJ2jUASLX255NJX1HM3B9i17Gh0VoirXV5MVflr&#xa;/5QyqmkGIjYysYas11OqhvpR0p5yzopjFdX1Rxn+DBXUasG/dL6zwYHWGoOkTmXkRCK1DG4xhk&#xa;XYgJ9mqGXhPsNfOn/Ema4le7Dd8S+dT/yXzn9L0aOkyCdxOIJUXp4AStplU1Z+cgdtKicuRgDQ&#xa;62HIeoRhvLprPjhBkq7zojSPleUGG/Rears5SBdtFNtZ+Kne2H9rPwNylpDj6DFceLvs5t6MoF&#xa;SVLCP9BlnXENJxkWGhAxKLdfEXTQLcFRcZXl5G78GbA5P6S6cM1q9xAKnFpP3maSjsxtMk0J4g&#xa;yB62XNYw1SjUEgOUlvFUipPly1z8homcr8ePjK9Q8/kmlkJeaV9OM9p10CLyP/F2zW4OUXQ87j&#xa;zqbIWxG3XnrLDk5+W3OsKEfKWpNt4QuB8fl8gsFIN1a6nlPSkRz1KQ4lOdSQol+T23Mrnn8QRh&#xa;G7WXo1MGQsNEqnMTHvvN4KOJNsXkIjyIBSTkispRWj7jRAzoJatCPfc2vip06S2BPg7iASdELd&#xa;vZssaGPPbeBlRClzX6d7bsaCLWiWQicv4qCgODITLThnKC0Ae0LVBrftvJTCcxhHmylJJ2MRpQ&#xa;Lzd7vk/S1vOH1uN5ihQ4dV+BP/SWxz0bg9l0hg5HfDUe6cP1HbD0VgrJc67lYoteEFZDhD/DeA&#xa;CVvKlZBp2sFohfIhoBmWUXIKlLRGLU6hbrvjbyW83S6FbjuUU+VYh0M/3kozOdk50mUUG/8eF7&#xa;+5Iy9236iFfBtcMrgoVPODKoItFAiR20Hbwj8LqNFPUqBvuXkpfvu4dMYeywEJKNXtOaJEwurQ&#xa;3f4DjCSwN+z8QQcVloCyd+6hx+UzcPci7ZleGlLYtim9+f8VagLIJuPzkw1o5aVpTf248T5i6l&#xa;wqyJT7hACDR2V5Oe4DPBS5jqJeYVI43iefNb4T3/H8yL2XTWhfyl8wX+rc7/v8X8/2nfWf4HT7&#xa;dleV6yURgKujXgf7fvFAKWS61baRJq/t7K+Y/2HfwH/McfzOOv+fw/lq4AGv7zj7SVNOYr96Nx&#xa;96k/IfvfYN0C79019MwDuKbjh1q4jT/PcIORXEVphhjJRr2W0w8mMdfS6Y6Nx8qW22VBDc0oV5&#xa;JZuUuSWesLTd5RoeVD8MboylpZR0oaIgogVVwGnKLNq7IP/sy5ytJdleovMxnYZXG/eWuGDC5Y&#xa;kcwzNoQwGhxLmVSb16dP7fb2s1a1ibYtyVD+mPkeY1KOiNFkXAHPOBq5flg8Gcs0z8VOlT6B2e&#xa;TCUXWI5VH8k3MyV70BQ2FlGvnWIE0LM7mMbg3phxIFQq9diL822bJhiHkLOQZdyDVcGnRJ86TT&#xa;EwfQ8esAZUHSGGffAVhTpTzHW/yGai/l15T8hA7g4+msSIQqd9NI2DZESBWs/AWe6nQEunF/jX&#xa;YPGsvi3GUWTPr7jCSA0XU0N7ViRfoAK7imVk9ZywY+3QnZSSbkWeMJAAvhf+WrkEtOa59KQcqB&#xa;sSoIRkY4gkB6lag9Ml0oTkhbgM2bCDlVJbFM3y0ONUEtGVg8JrmePC2Jzl+RRP0uGJfHy6kWjY&#xa;eB+C6AEz8Tqirum9GKB10tzzHA0hcXvSGzfKIj6gsW42ew9MbzxLnBZrKe4EiHjgaWsBpFHeOW&#xa;KbBoLaMxiQUXbGd7O9rqQ10lrxKM6e4NZjvK4Q8C00EsuIVWrCdRDJAJX84xCcMwWqwzYGEz1m&#xa;RnHUWDtp2Z4MngAzywJH27bzMUp6mqTJOZqStRtfhj6AaK3ek7ECQm3DXwjWtPzDEAA5AKuP42&#xa;dJ0FLTrVx8rfb2BR2qPlMakclNyCziv05vKMqdfjAiIx0AnbCvWo04PTbwEj0YsE0KoYiaTlPh&#xa;Dc2Vp9TZ57wtI9bW6yg8ooXtvG5TAsUWHB0EjWoZ2tMBc/HcRrLCapWhdQmzv6poqVByqmqfcV&#xa;s9Q4l9jG41XPDJgPIhRDKUOwDBi3F3ewKDkBITt2DllgVSWMtlvyhDfDVA9vn6RqMBEU4eu/BF&#xa;Bd7qaRMk0lKnzh80xRixqJ+gZ+BojbxYHiM1j5ynwn9aLYQ/NASWSkVfOhYZAJ/7WGQj8RO+o/&#xa;0fUtZ+fOg+gWoq/qCN2mNQewE2FhjTjdYoItWG+YTyjwY/b+rG9V6nojkVXKp5OJt+dCj4zxtB&#xa;6DnecrWLE5tL0G2YA0Jot4r0530GaGTMY/Dd30wtHEeqqmySkM4xgdLu8oPH+NeavosBTo3M6R&#xa;s78NXcIYtKu/DV3Zx0qzgkfL13QRFOc/hu6MboLEE09/jPdHY/iq0o7qucS8jkT/a1EQSacL+R&#xa;/Q207iWsDnhazKnPeM7RLmz1Af57IyrkoWhLEjJeZviv1AUiqjgqjyLYxTG4s/28l2U9U9RT/X&#xa;6O5cNix9MYteeuyHDzvZYMHV/gfltfiSJ2l3C5/dkd1ra2v8mO+eE67zWyQrQR/xJ6FbkSDtYy&#xa;Eb99lFaCDeXGK3fhk/HtktGk6ZJcI9Z+XqqLEidVl1TzwhqN/k0ri37E25VcaOMjTQLV5KGzoj&#xa;qfT3cYl0dCvw0DT53Vn+2G8Uc/C7l0YIpykSAqAzIDHwYOa6FKExoMW+B7XOE22mdcWOrdwjs4&#xa;SvCLfnTPF1H9yD3rvHzmvT5xBFy84Q7VAVYSxEf6EXeCJ4txEfaNsVoUPlR+jKRj4hZooLwk69&#xa;uIkHNYvMiGVkFuK7ELW7uxE7JbSZ/Hp4H0rLMAVeOvKW+oY9MU+3XdBl1jeN3I9+MzJNvD46ty&#xa;iLrxfT+35AlV4pO0MR113wvPgtzJdUN06is4BPhAym8wmU8uPvBcwXKb3R4f+vpEf5L6T/34ve&#xa;zv6q2BF+bxjp99UR0UQonGKzgjMgaTbmV6ZSKYASCdAuo6W0dFsM/7nbtUVvaV3p3aX5lteU43&#xa;1PkGy4JvuQ+Smd3cScgYCMTIMz+cvT9ZLHh9n1kX3nytfnDbeb7Z1CDhWXHce0my3Krss4K5kQ&#xa;XGU9xTmKo6qSfJ1vTgyD6R1Usr2y3ni86WeZI+hCdExFmwlR+jxuCTWrBXSQQTIvmowaebQ970&#xa;UQc7r+GoY0FvRSg8JOpk2bHw+PFJ5HPqiBWK5XcxrTBjkE21fDkntK3sx5RcMdIHHJcF2H2qyT&#xa;Um6x/bhdgQcTJrt2QV+TMygqNBsuPSxRlsMENHEmgXfofZ9jyAWVEo38NjAJBiIJhkTpm9hly4&#xa;lcfG0vE+JlXVBSgxVIJUbSd71ZoqtEqgPRY48HaKCeek1ZYlU/HFgpemmHLxeDjabpQxzJQrs/&#xa;zYhozgEHGbTHT8o+Tj1NZNAMiflSo7CDlXNe8y5Gi2WRiGpHWNykW/tEyRqZHo2fJev4PCkzFN&#xa;OPNaeDyE2cJ5fcR1g/Z+wVcpxgNQfJQEj1sVst+6WGUJcxePhsQc2XpELUo+nIwsggMhBvFecC&#xa;0E9n0t9CtCmXMAx/a5auKnowWeNgoZZ+czlYIqoQ2mzKlxbAQPQfBaT6cJWcrdTmxmBT+V8x8k&#xa;w+NzGz5Pjl2EgOIKuNQKyTTreWiiTWZngEDIByoz8iokQq8YSXUNV+9aT00j9jg0uxKN4RmnWY&#xa;bZohM8zpjoMYiE46L3/pTyv20BBAefsl56NDojOKFs5ItIcJsbEs67STKX7Gpr0Z4Z6PpCt9+J&#xa;bn6rARJwV3zGaNE6M7GUkz3S18db9uxHROgtDEar58yYlq//MwAM5u7YcOi7UiuMVuR0/A9Mvj&#xa;t46KAo7BqpyiYtKlcKf49LpqBGfaBK114lW8vgVeUNRScpER+GxuAxgDlfHSBTQEWRGBgTs3gR&#xa;4RgKJ4quPdOlvKftKsv9Ixxs6lbClFqJYAuMQSotbxlx+MZLmTAhNRsbw9RA3S33IoqKQyFRhi&#xa;5jCHOEupyK5x8BEo2TnMWxcHxQzD68o5Jj2QJqedrKRQ4JKV3acpvDhsoltfNlSWUncSA9xZ1g&#xa;edEqec7ZfYFA03n+MBvIx43erpFMgmVBfg3/VHW8Q3vujA6Sl/cWYBkXhBXcbLLGG6q400XZqE&#xa;xafQewQQYNqWiRlGDG1zswijX2kMtsGPX45DJEtlQ+/wQqDbyQeDpXgegbVmhCqpDYbC0BmmRC&#xa;zdQBa8p+qaiyWdpAVYab8v/wbkqCKE0IOr8Gdi/Zb1J4tAKeoGlTQ0GT2Wlo3CePwCb/+ZpCd/&#xa;XtBqfeup0hLERW/fKpoz3lmhXZao7wmxZ6sTrmnOrY/DkAC5KF+FVG/S2JuDKeeNCKI0rbgzOx&#xa;MO2tOlafYRstlqJlPncwBIfgxJ17TJO+SSJfcaCxKVQFLZ4V6tfoAsB4Vt5NE2bwaMnWS6Ojfc&#xa;zfhAqJhsXJaUxGaj7rMV8zrA+rohv3hqKIf5YmIERYne9bK46StNFWXCArcQVUy1YJJuKYhX6C&#xa;fq1bhZvL5he2DU/4ZjmyQgXyNdkBzSaEwWq1jEupnS02yUilzkCsStXJ0UG2NZVffAxvVxG6PJ&#xa;D8yT6xBKw78GN9oQX/wa+bONx/IE5OyS80xtsFWHqCjfq/rwqEK+SdlJ8ezkCpxtG6aW+gjv1m&#xa;bXgu4pZzpQpzoqwEXrnJUjFkiSYLaVQv3I6GFaCUnnUu/CgWSx+Eqct8axS5wY6IPSU0ZP58tQ&#xa;/f7ACQV0PCjJ7T3z+wJxgiiMNxbJG8IT64zXcKu1lei5QVROajL188q7sE8jAzjHkffiI0LAEp&#xa;iwZKPHsuiFLqnOFbivd04mklGir32Xa29mEFDuWZrEKMPfQ+74aXE84p4YbNNjYn3pk19xfoMH&#xa;OjlkTVgp7MmIN6vRmGK2UdYhaFlCznks3sozon+hrPHWuLS7VF8VplhXteiuCkKztNke2NwG/f&#xa;iiroUx74Xy8vFr+P63oApvejROu7+kb17IornXPTmm01YwW6Bsq6m9+w8p/o5wyTzdG2OB4rHL&#xa;PAky0Nudr9XhXvtwzxF1F8VHS/ftu96/jP8RDLTXvASnhfzypflfgoEoVmH/8twA/3XOzNbR3M&#xa;nc1kbcxsnYwc7B+K9/El1HY30HQzM5c2ND4/8jL0j+U3ikSPmfC9iQtNRUdZC+F8yusiX9yJU3&#xa;qzyYEIxAgxaENgBZc1pZJ4nUZ7+0sXsHyzqBP3EtpzVZrf2z+H9rv4HX1RXaH/zrGr2r6xXvEc&#xa;8R3xGn6e/Xt5StL1G70H1Grf3WngO7PI1Gq60FGYOZO3YVBvYahpwZFckqGrO/Bh01Vhoq0PDD&#xa;L7qiJfQAcfnG6dyyisYLFMWzm+FBBH015qiK6WlHpI0WJV7UFRYcr2yyGzuQzUqhR2d41oAjzX&#xa;27BUcjjA/4MgkzU44k9jmLX+N2zNkrCq5K9HMDE7RVnHsT3MAJTRijTBOzirBtgClztKrOIYSN&#xa;PXBvD7DBuCaPqy2ZoryWzQxDBiSai4fUoVA0agWW20h+KtCJIqLNAqyykHKmYTfSDFK55HeHjF&#xa;gbRqeRqR1Ef/xYwOWzVqe64UTCXzXLytAlij4PN81edSXBe52mJ/arBwSSEzsqC4DLYxJmqtpB&#xa;ZuHue8cR7ic6ZeyoHPqexGKcjacp12Uyh7kBUcjXM8H7TjK77/gw6ZrFOoQXMF81mKgIBxFIBD&#xa;E99mgXHDADmfiEMndeM6AmLZJ17E2yubTUpI4WYDaEBAMEZsYvIixuVoaUG70MqpZQAXsRUSRV&#xa;CiPwk6ZS9ePKwF5WheUYjarbAVCgr1cHo/tWWB1+T2nU2XMYYe4cLvFXNmrSMa98m+TwAFmM1f&#xa;AA0mpiukvLqVqlPrrUxUeBwLaNO385WEYsRMHxVt66btyFBT5goplVYasPicbpMS/p+m2N99Fw&#xa;HpabDUwxI/Eesxx5FqL0/JdkK/WPxWsYE3tNBA9RAfTWYLcjjF3yCzPoO6WxD6UOdwZM21GX43&#xa;1iwR7Qy5FhvZlvWrLKPSmpSF/H5pEZL+wq4Fm+K/wd74s2rGAvVs+0cDYSXA/DT1ixB+t9wIaf&#xa;nYIIhUlxptmgkFArKLt7BCG1wjEHiW2KHpcH9133ot0j7JSvCXjLN9hi0nLr+yC1Gp1GUK2J+C&#xa;pYXHjUqYJlb4gebB3+CVE+NNPYnJOn6TYvAK2g6zpPjindzxKMsDdGkqO8MCucUxkWTCKFW8Cr&#xa;IUf96aoqwv7ccfpI1vyedVz3taV8jctaCjuEMn2cRex6NFOg8thh8KTechGhVAg9vMToEHP/p3&#xa;oji48mvePp25cJi9cngnlcBDDs4+Tgx5MXXg8El65w9XLGj8/wOB0N6dfWWAJ3kBmsyehgpJEd&#xa;9BY745+0q8nDH1H+ZmuB+NrqSmbSCOB2cFfb2nmoHm1BT8dS7R2ytiBP0n5fzVOKQ+FrBcgFtb&#xa;3Ba39IvQf58wIWfpTv7Gm/y3wV4ClWBnkLRSJmgWbXnxmjhEHodaVz68LmU/gaux3ybfKaEtI7&#xa;l9IDpkIGdPSZA09w+4vAimipG/flqTCqOHx8ZRirgCyipL1hLa8Ui3B8BvGID8nalE+UG7z+7I&#xa;SUUNZNARzZ47U7xzXYKjKrV+0bwJV5RPUYqY2VptI4e8/GAX5Fm50SRAx35gULERqznJhyM5Z9&#xa;WwX3GNr3Aensrmt3R4Pjh5t/5jUKaQl/l226SwVof47ABzJvwyXh76+c412CLSGgnJaW++X8oR&#xa;Lr1vi9l97RMuHz+EF7m7N7KwTGyieYRMgQ3HTcs11/sPl0Lpg7CP7lSynM/5/Y/OcGhCIVyz82&#xa;/AY7CGQIop3b8nOTNCHJDIWGJWJh6qsYtAR0gNmaEwbdiFmquClZqXezhuYb/+ufaHUV3z+j1V&#xa;NZmARidgJvB52H696PG0dx7w9P9F0gHDFXGJBzwpccyGxHZYxjjFp9TMzFYxd1E+ZRh7hVKx72&#xa;49tcU2ekf7wZ+tY6LkJ/xgZ0qzGNlgQqcxPCpMcuMShmEtq2H7OV6jrzVDJUNXXUxZbjd/MQf0&#xa;6mvJyfRnuEbLBy4NzQM+H8hlciZWFiGdcwr1Qy4EAd25xGY8k5OUjD1nKVteU52XAr/C7CDFTk&#xa;vD5jOB9V4ffMnLLPyODil760OlMxeWQDas7/ubo4Rzphz3SYOYAwtTgfNJU0DAtSomINLTZ6BK&#xa;3PMtFdhXjup491iRlCrekxQHbPxnmZZbSMSWunCpXErMVntYZlvol+1qGT4YAgknUujpyt8UtM&#xa;w1k/JQpBx+B4JX07AYarRlME95Fi2T+ZrLVDVqCii6tb7ggNdtaL4q2rLonEekQTtW48FQXTgz&#xa;2wNQ4O6KjzfNcM2GDFkycW7VVS0Dv+SVkThAFMvTc+DluQquFAYvKIQ2GQAhBGDKdnuZn4ryHF&#xa;KOjQmBXBdPEMTaOOKQVCiAQthu4xxeyA9+1YC8v2iito4lBzBB+atMewh7UQh7kuzvoLumKBBb&#xa;wQAIcJ6h9ZC8KJkgLYFImW2TFRPD6XNUBYZ1x4ShM7qM1PVtNPxtUf3zV8ryOqNUnmOUHROdPv&#xa;yi0S29JVaQGI8Q0ajwuyKGNNR5ySwwwsEUpP9M3VkaG+0j1QdUybgxR9tejQqXPWBefZHXsO+o&#xa;w8FUnaiIVjAG6hRhV7qfnx/NWfqO2B9piGw5RmfTLy4KoYBprWuEjFXo0VWFN6Vn3Ens2bkShS&#xa;e+lRFS2XYNUKytd4dBHwV4rWwg8PE4a6SZIB0gc/OZtb5V2EnTMUw5YeMt8Z4xaXKqoOtdYYvu&#xa;lEllOnUMkQm2CeHsEq0pRBcVn0MGRGWd92TzhstR0l2btprz5/kq4rMYBpk+zysA5eACVrss/C&#xa;fHAsOpWd+uGNE/Wpn7+ki4GUV/LSIyj1BkRpilFR9CLQXEFFgdg/Mp4UvZTjbPhw/0bJYUWMmy&#xa;ozUtWkDCaSRsj31XAyVaiHlT9CNshdL4FZsI2xONDbSmeV8ilj4u+72CZhuuTOZMEJhAuRnkMS&#xa;vmCFJDVUOPFctVttymYOVo0Prqsykz8/yFSudfbZpLA/tSd8XcnVFZ1vDu63/frdsYJ9LN/NzO&#xa;cL6sVmdmLhNVuc91cu8/cIlzuogrjDbGOh17O98H3Dc971LQTzsCPf3k+xPqXCKt0IMQNXBiLp&#xa;j23nlzaW7O+80RscQSnCZyUL1GGz7LUeSSqEtqQUwR1JBKSlCuzftHxhR97YhKpEEyxkdd9Fz3&#xa;V7dwo9CunjlBS9raPH3KLh4Gd3po7hDa1T0ZpeSDPV+6+IjO1jRSDO8QEwIUgh0HiF34Jhnnh7&#xa;tfGKepR7AzFuoZgzhYlynUJM9BcEE+tAcLeAZhOBdbs7Vb670XxUQA/Fn4Frg/HQ1Pv6sNM0NS&#xa;jwkbQ775Ak7sTxOAQb8IlukXW5cOh2jHpubN8vwul34rFe8aJvjKVo+PqN2G5QKnedMK9kTPH1&#xa;mWqD3vNFT7NTBPOSTc1S7JLqIloF/Vz9dgnem4YW8JKOdk8RbaXKgjOHseMClDL9bwjpsf1kHg&#xa;arKaJ/mN5Bj85ZUHxiTBroyfwuAr1z8sP1DBvNWRbfQ7L5LYAuki2oPShKLGtnmV7lcwuFivQW&#xa;6WzEnZ0nnE8Et4cti8bPoKvg7iXpiJtG4bY9Qvnx7Q/PBbryF3UhvnzBA/w7nnP+f+P5/6b4my&#xa;qyKMonGThbf5Le9YxZpRni7Rdi+ErhooF5UZJS0jDhteIxE4IKffYNK697fXwVzTebizP842pe&#xa;Jc1uh9fnsuy5rpG5x0kTaAE0+GNOTuZ6Zserj0t2184/HdXHr342793TWcM3BvbL+zw+oxQWyS&#xa;bH4hu7Jj37801GEVqMC+uU0RU8BYfRBiP72kgYwLkgcwz06v67CD5E2URVknmGBuxDIS3WOp6S&#xa;xAh70xT1WVrr+KFYh6yMiIF61EiNkAm6ONckWMwmPpRccPy+dKofgMqdefeDfAVIF4dzHtXKj7&#xa;giRaZ3tT45TQpNawnlI+b+oV8jzklXpqX0HPqRgGhaYclaFtY41YiBQj4bBiHFqpfbGx5hwgo3&#xa;Y/qXeCbMW4ZUPT1TzFM4s1aTB8ZMF/9zpr0Yu7STYai+1mRoG9JEL75K9fYtFtTdemocziO4FU&#xa;6ipEfFXh4+WzEl634yfh63gDxrYTliYqZFw3p8Hau4WjTYB6MOZZFcntXB7UYHLMRW8geoB1Eh&#xa;NqMopEpyZy547UxdO0ooqqioMIVPktb6ELFw/a1RB7u7lp4kK2h9DYcK7ozQUnzEfovjUQEWJ3&#xa;ev0dT0gz1kTvxdg9E+u2vEMLM0fGfJYwM1yRJeraTr1xrLjSe9WI7UDoB3rKLrwfrji7hotvGx&#xa;mrK4OAFdh4HGoEBDZQ/IPS8ZBC9SNrof2/NMLBDAWmwfPpm5avTINLIgqNHHma40eBu0G0aQw1&#xa;IRkpoQh9IvZJcJI/pdMlFqNNENB4Y+f7uUVye7KqlMFiaQ6AJZCYCyPkOnDkDfLxZf32qo5Ahc&#xa;V7Ai1YeaqVXZK6NBLImGF4ln0IrZxmCnLQ+vS4tCzLzZY/nrvfNa5ixWVqRWC61S0zo/nqKC0A&#xa;wQH12EIa3oxXBE1XedZ9IZpPbJ7KtgwqqVgeq3BOwkjZYH1TLZK+d7MbSTjAyPOmuIoK3Do+4Z&#xa;D6GWMjmIRUJEo5QKa9P81KwQjF9zW8VoLt+Ki6YtHzk50SwcSpPRgMqpYJLWLC6WXb69OIiQgB&#xa;F4mUeK8BkLXcIE3UvPlj5V93EXGklxm/n62jhr7Oo4VcPeLrU7pi29ZtPVgr4pfKA0SLoTESV+&#xa;vMvqloCXsNCWfP0IVi324qXFiYD+istftauNif4DveiGry85FIF2B4y/aq8lKrKFRM6Hgs9QKE&#xa;+BzOjpVLcr9kacV/858fObEnizxTpw9apc2ikAGoYYjzzwPYaimMzIVI3FyfjYoAIdMingDlfM&#xa;nItfPh1nr5iZmNz5tdloru9EBgLurJeZEQiRxlwH+GyQZ1L2ERpzdFKo0vmxm9c0Q5yt5ffqt/&#xa;E20JH/SRZgVtcVLsW147EqGyF+oXrPKl6dEPvapB7kYVlQ+4jJszKjiV4eaeIzoJjXykxoW40S&#xa;36/qKMZ1V+82es3ayFta1IS6Vgtst2fxwKJtIBPhNt+vFQVViOZFygWfV2ngzPPN5zfsHbJ7wy&#xa;EyZWY24yf87gbc1BNFZ21rDWgrOzuPmMjzZMHKGmSe0b2eB3hc7f7CWp7AeaWmnsBlFluuV3ye&#xa;83GxlacO/AglBNHslfcCBnJF4HfDckdS6IPSTpkyBqGf02Do9Ot/5S6IGw4NVx3r0SHg9vceUj&#xa;gfas2vjTEHrA+IVwf21/sVuuONCN4fSvz5WdPNyOrHInfEevTYgg1IQctQrMeLOTiTrPBhroST&#xa;1GlOqt6derF6hNc37J0hrEDpWjsRFQhMxV4Lm8altcKSoraF+qVmDfSbncIlLrNMyq7I2aywnp&#xa;i3xJJBUyVRUkbv2ZIzEhgE5/fE6BHiwl7CpM+7QNJaxEJImsvH5NedrHKTrV0QgbGB0/+OYYek&#xa;+NR0bJHQy2d2sx1dkfltlXUBTS74zFb1Ee08L7M3qGvEYAffo+7FwhB6VmDkcQdXhciZQxvQ/s&#xa;mHRTIbhuUliZxRdlX86djq/DHvK9BBsCd52oU8KkHG1Nkc/s+bv1KOo53Tfz0bMf92rJL/X54N&#xa;AQNHJwd9Q6e/34i/+7MCVlZK+g5/fQBtbR2MzG30nf7L6vqs/5PEyeKI8usbUGiUyJAQy2cEsR&#xa;Wu/FEuDKomaE5pPafvEA8AMDuZBCxsbq3iz7qWa4udnR6UVS1s7Vu0TY3bJegV0XMzH52PNXd5&#xa;p/1DAmB0NwNSvjlfts7BHa3suC85smy0GdplkY+yXsJmHDYcTgN7mrIi9M3xXMdazdtgQ49IGE&#xa;Ji0g3XqJ/qik0W6oK3RQQTCQ25G3/aqLppW7asyI2Zq2XX9tc3twzgOqisNHB02y3HnmXDOmHG&#xa;XPpLCWbSPX0fmk47p6czo9b4Yu7g43+2+QMUkxZwAb00xwOkT00/i9FQziBUtoJJVJWuY7aibi&#xa;vj7idIGtvXb+/u5tPjcBuoAVxhAXUdXPs3yD+YAaJIoFUm6aR9e30xBfLZL0a/tRwRCDW5TtoK&#xa;czYYCp24pimJA+j+vn21QwEcr8AW6pa78U1JVLCiXYON5S5AYzQ+yRTYyIIGSqr3w+iEh0XQ5j&#xa;Jm2ggKJVgIlb0QgLPKaWUsUbdrVAzdlHNEIIhrQhYkD1mux11zxXXlp8HyqRsfy8TYPGFRIVJ7&#xa;i41yRPuEML8RKQmmH8994NB1qDFmPCxjZloLQKrHfY3+zpOCj8Hju7NbxHG7SzGIwBhWFUM7d9&#xa;JquLVwKC1o57/jxgguwVq/Xn5BYy0N88sXglx4gj7h64wIaVfS0K+SF9rRaWBWlzcOe3Wp3sVU&#xa;b5JdEkIEH1QUt0uUtF7xtrRWij1sH+DXEaLGLK7hCvavI/s8Rq2ZZF55lvSEPgOhJn0p9osfh6&#xa;Wo693SmLY7yQF9ZrxCv2L/EptOOqRRjBTYmJBzPqy/qEc+0XW/wAwyEhaEjXTfkClBXG1HtKTm&#xa;g0gccx+99Tf92GfTrKvYRKl2CJ3zkjdvRW7tK+vnXhTkJF/1sskwH3EEVBzaxi3XrdjtueXs+K&#xa;Wa0cOtimRNrDNoiV3GbevUb6+9EHvoia6B3/y98Yx3JgzrouqjLTmXv54xkItlQvknO11BQHmA&#xa;eTu1Ru6k3TlnkISaXhgSLYxUw7Baf3wA/E3cFynY6YWfv98ZcmC0QykWQHcnL3wpPc1wiH5SAz&#xa;p+/7Ioi4BwoH2skO40YRlC8NTTgMLCxrLxttfShNtaiwgZIMeSvFuHlvUoBiVgDrGc7qkxXjHA&#xa;X0aDTWOymFm8NkfV7W/CTg6TiFLoW7yACdSqw46ZtMUiE40JC/dP5si/qEtlzv3wbMjL8jEW4H&#xa;IG9T4dcA3Z5/Vok2jjFumiPTvOFitijr2ejTVI2+MbUfw0SJkJTBlILikx5JBx3T0B5xU+TkNT&#xa;Pz7ldqC9Fx1ecBPhTZoq7XB/aIxKHy4pOBP7iHKUfyYqOLw9/S6CO15iyE3nVRux9SE7ekSCWu&#xa;Nrp/0l3g5Rd7pPIAINWBJbnYHgV8V+rT3kjp/zfUHQFXQB9RVVAyaPqngZaxPqXbTpfQz78+or&#xa;+ZrDJ1OUWzhUlH5YO8SvmCCdNwVLDHlifoJsjaG1Cni7tlSfADb71hju+oHQliwdoPlCiRJ4YZ&#xa;WtdwQctDAV1ITOMb30S0QLueIppXNTooLnAmc8tO6hF6eYQqKIUrwJAcv5wxmsUxn+7wjZQaiB&#xa;d0MlkwWxU0SLijyujx6ohW/6mftgGL67UCOsar4/epaRS8/U8DyjBtSZnPF7xT6C2rj9XPmEK4&#xa;SYEQdU+YTHS7aZT4urB9DjlFC89hSp/1Gfg6HZxr+Df/mS/C9+S5YMsdx/BC3Zv4BW0Fbfwehv&#xa;wIoIy/zXZKMmsiiGDzm0lZZKN2yuW2moyARIFEERLRVtoUXctj8BmnkG3ciXb/rsWRt6jSqe7c&#xa;fwJ7wLaObeHi3/zLtkbBzg0K6Pn497hT55dgFvn/i7PuG2cToNOZKzDmKYyTimAKshFAPfmNc7&#xa;vE408tSassq3tWEwgFYiy4+7HVIrNSZM6r+FBVLz+tCY0/K1d+tFFkbAFfItfh2CTmntoKGHjE&#xa;laYjkDvtoux5ykN7Ea/dJSAi95iKoenm6AiA6gAHbEhuWRxo1PYEaGwO+9zuPQtx6xlprphcmI&#xa;u8ta+doQr8rzTUA0R7zzAB3X7WGXaEzGQvYA6nNsQCpVZlA+bbK9IKZ6MslXibzvaCJ1gHO4nV&#xa;Y9jeK1qemcZbiKQWlrpRH7EG97GEbLxDH3uQMwQQwhYVciTnVszW6buP1w8Wx1ZRIqjZlioqAP&#xa;QIlrECVnFWGICyoiznwNerSn2BsDsD+LFTcE+dfvCjiiolo9VcpQIJq9JAjj8doHAwtKofhvsf&#xa;kkq/D0HSXYVNZ4nGIHCKClNAxqpgEUMgMsNEspR3RhoqkDNKPTZYQQRBZKZ/viD4F2EFO75J3T&#xa;Sab2BLnCFRvzRxx/F464GY1IMIlx7OOknvYRBCZxmiY6Fjbq87ZBpbTpR8RGlNdtjQd8nUpmVY&#xa;xkZuvI4Ac+kqNqYjrqoHI2ski6q4c+KFfY6knM1bIhtrr2R5I1U2opiMB59zoX74PlYsiHBZb2&#xa;UEmqupbx6Ydypf3I3p8tgU9adKSQEiLB5RI9bwBP4xzr7tQqdZZGecuWCH1U4LC5mWD9T1siyt&#xa;q5YlW7QAHN6Gl8THTktQCpS68IMwxhnQHpqJeQpVwLjCE/rxZpXlR6m2xIUbYWkvq0dt4Lm0wr&#xa;65v87cRdaWDhtDB8+Ahsubtq6mIUuyNLD7VxwTB9Rq99wXMY0snqpycKxCnIUPtUAYPZ+WLdxH&#xa;SGm/g8vSWt7JTlwXWxxm0WVeoiQzi8sfPk7PNahzmEo+Zhdk5mOvjwL1UVxlgIWOQW4rMABc9j&#xa;VBrqZ6Xg7wpARNLw2SQ2j4MNImDWTr2DyxPwjXl9Dfj9EplSc4i6iFAyeV+qUdx5HaHY6o3xl5&#xa;yu3BPakWiUhJ3NaBpal4p26i5Rizn+w0dMRow4Oliy8VhIM+0pkfVwfu22fP/JstNIvE44bvmw&#xa;elt/7uFF+Q8IhcPjfDdiFv8zRHO4EXyYXPUkWOG3p+WvG9zIcYkbFCMD04Jn6E6twQzmIBfUHN&#xa;Po4kXc2btyprrantrl18wxDUsbnzPYF/Dm0nHftr/o9MlzXp2cYcTMZbxzCegSXklywc/RStd1&#xa;D4BBRz7qODDO5uWcy3wEEY8R6Hq0tgGvjmV+B1QhBBSRB1hmKeTXRDVzpVyH0ojx5CuDvaHzIs&#xa;UE3D3H852OAIOmxZyss39nszrxuq0Bh+xAYEHifVaLlIgJRyAovODznOFXy0NDP6ObX1WMlWBJ&#xa;qK21c7VXZ3k0rTCvrOoLbZoLIZM7YaZ1C/uFrukgQYMC/Rfmyoy1ZoD8BOkaPcOzhlpTRTkF4p&#xa;tV24tCl9BVJSk3PfFfJbgK4cy9/FMDMhLNTue6N+Xp0b/TFOXM80+W3Dd8QlfivirpkKmoQDRK&#xa;EnitVxDmKh916Zuk8mRMMfDnhSrI6tNC7N7jkyFMQTYhx8q/fHsz0w65I6cE8Id2BpxeM4dBK3&#xa;S8gaMSvd1J62nq5MrnNcHsWcai8TPCl6p05fEKEmF1Phwrff49SH5lEC5P8Fdxi/Dt3zGX6r9j&#xa;rp2DuY3T39//eXxc+Z/LfAW5nZiCf3yRoJdgTf4hp/D9rMgveNmAZFoCIbLUPjWTBNgnxcNcVs&#xa;Hfg7/L3UET4eLuXmf5ktE6720CCcXg1DOW5rji6ft2e8H7+/1tDf8L2TUxkEr3KKaehmNqYrW1&#xa;tHBUWl+jqpkeG3bNHJovz4+RxLK3CZ9vlNWpInnsjR4mH0DcVHoAaOs98xgbgVDIN/51SDY1YR&#xa;/5beMgiTeaGYB+ufKHuso1WnTpAXNcp9RMTvi3YgLkga1XqEBbj5aWPP55b9XLKlu7vo4yAeEo&#xa;wmwHrQ3WaC+ga2aAciMm04DcV/dGAY99IRvZR7JABbqE4GAesLeQnfNC87RLlj65V4rdmYwd1J&#xa;Bspeg2944ZijS6HETBkh+Dc32WOzLg6kxi2Uy9jm0RKDJIHVREx3PTgUERcO090zuL0qE7Fjck&#xa;ygVmraMukQ6aNRSUyT2YSKJZJmFJReq/xRhVrU4g8oL6ceKfKeShAUsyqDkB1EHU1Xe0hC3CLc&#xa;2zAy4hE+5ve4q4g36ucRE7uO1DCIwjBg66Rr/oznPuHyBBSjDpLoh+CTZnltOyPblLmGz2rjHd&#xa;qdcRRKrfQjV2a28Qw/R9uaneWOggHzV+r9GEcQBkxSN3Otx+cfdmhTXEULXHRQYYVo8ZjiCYzG&#xa;V57ztQMirOZChpQ+AzZKYIWd8xYmu021WzeoXFKq13D2FNFpzhDMjEFcqussIUYzRsQH1kZ0jg&#xa;Qzs871uX7iiuKzBGY25dZ1dg3WIkwecgNisO9tC1rUOKmziStp3S3VCRe2Bmgp7KYgYohsOzmL&#xa;pH4c1aWpeTpmiUHT7U7Tor9532o7M4985j2hTGQp9znHp66CzVgDnd2KOuL1xzwsT76c7uc/wF&#xa;xyLg3eiUr1mUQ4tXkQFmQ1sgp/rrGwBdN0EMggW9QAkFdouo2AB2y5zCQIBLy+T4217W1wLJFe&#xa;cQ5taclrMS/HDUa8d9y6QIRLZrM77DkfRMB7ay6uPeRNouGvRThFPDvZ6ATcDkhvDcbmTlhDNd&#xa;QIY/Kb7ngJNUa2otjWZTp7U8vzlEJGRQirjM0OVaslARCRL7GdtH4nz8BhJklyEbh7Nj0CFrtI&#xa;LQXrkVJcEncytiSTXVndRAiW85znlDulO6YCKL3zLcKzrzStyR210tuwq7GW6QUWQEiNaP+mQX&#xa;dPvwzf1LpguihpI01NRW2VkFPoFiNBGkwL208+oWrAG0z8I1Crzpcv8P8g4QRYYoSOvJeJevIj&#xa;ztPnVi2Zc7A4z7O+KJGB3iieKvEpTRchGYTdGIWz5GW52tlr59XeaR+szfx3/cwGn1mW2/Wek5&#xa;U9RHPyHH6U6nrfSQa8oyqI93CjW3b/ScW9xQktWvtXQcFImBItm36RCW6aUjSV0gL0sqtCOpjp&#xa;BAIt8VDemwlBdaEtgNVCBPp6i94z4dQlufQCSrIseNO3p1oIbN5XAgTH19nJWteWX3MNsYfPKN&#xa;632XTLvCP9TVs05Sii5Rm+ABXvgFdlRPFyF4F9S0KzHQz3PVdhfbfg03M/OgVPqHaB/rTMHw+6&#xa;uWzIf+d1xj/e+49j/p1iUp/7NbBw0XRRwLLqf0GoWExBKxqPFdQ2yGSIBCgEYvAy4hw4hhvJ8b&#xa;Wesz6POHT/OqgUrb67PS0qmtQyOvqwkUSMC3zvVf1Y6Pv97OHQ9zfH0/wLpheQzFTEfX7ZMhjk&#xa;7MNdGD3TZ3WhlGI8nY3TZLl2Wkr2eeL8+LQQcRqKHXNn2yq45VKLNuZFGCMEWs5CWwXfxTHtIT&#xa;4GzC0w/SNXm8YzW1junoWWhWMSbpV/8uLy3/Ki8hSm7KbYftTtR6KM1MOZRrmD2Keu244zbmm5&#xa;35m4KjpW1a9kJdQ+BtzeXs0/MqqbKYMyfY+B3C0X9tJ/cMYbbuxVS0FceVHccwW6Jahxg1HfS5&#xa;1wpmn9ifDGrXqd663zLk6OtZojwH/UVAkr79WlB+ovI/BHQLb4sPyjy5pSR0MrBjYWzf5GoioI&#xa;TcKAG/vq8ivJkO9UElzDTG4MJLo8YywJBD7HGHNZ1eEVhExySyWXHCqDKVLWXcLWW2XRKDrkeT&#xa;tx5xEoLvY8qclAT3HbH7JVxDezs+vRQPhLAPYZAfns4wK4sdw1Cwh4b2mG2jmMDs/dk6N6VNZy&#xa;uFek/VISQQL8B8XllO9zw+l67DydZmiSViJywMo0o54nk016S901q0jWVuoVk9/ywYl8dfu4jj&#xa;ZReejz8Ai7pkn0BoNItt6OmaPNbrU2yrFBYgi7kaHiDcBUl3WT6B2nqAYl3bqNqv0+FF4ywYNV&#xa;h476CjPO6o+jQ/yfCdhU1xgyNe2Ok6C4bvqRZsb7kT59kEq5ihcveb3EVmnPEceLJF2sfiNZaJ&#xa;nSqShywQvbVIyxQTaahSH8IxcWxD7gPOjtyeYnVnjx0C9s4tlygSYsueWAlW11ABj0Zeuj/6Y4&#xa;B3GVzcZo6z7ZiNvXyzhZDj4PS7bEsSB1FdgUaAKTtesS7kIyndEcwcFaVaEZ+jQyjMInyin+ya&#xa;xyOB4LRep/INxpa52iAwrfYKk6597wOGTQlDzEyth5hScdZRlzrarVPy1iattevS0eliX9sRWZ&#xa;aL4nv5WYwIeQFeKiF6nfeKUX3+N8XFlTocsV4lxsEE9w6sn211xQP4801sLVAukMle3ahzjOaG&#xa;o3VW6kZNwgFLJrRUwrHMMmNVmJL5SNok2XXaenKOLtIY71XqO0pPhKeT980ChdwkmizTlRIXc0&#xa;9f7wlOK8PVRxk/dsPjdLCsNXiFUn/6+XNNRgvHl8Ut/ck3WOfSpv2GCASzjvW5NZIvYhRH6OZs&#xa;D30qUjF7BOErZOZ8CzMhtCXr6WuQ3CD2UytBLqviC0iVJfUd3IYLORNbuhn59i7+VZ+nSB7sLR&#xa;aUmAWimdDMIQJHqJRW8tpnyvsnCF4fLXzmDjMA4nvCfVIzFzQF9vYzVB4vuDV63umVW8GVMiSv&#xa;kGtRNfSrhG76UeSF3u4P8ocactbrffCZWMQrxPUbogSdErBq4AiuFybsR9ijEa5uh1v428o8tt&#xa;PIBheaan21HX9j4Po3egpoMdSZFzRGCPVRYkq+a/ZjY9zjcJ877sVDn769BTOKFyx3c0pFmd+v&#xa;2xaDYzA/3KA/bO+nWwJ7dY0YniBnuCKMrH7Gl73AcNk3N8K3PdFyoSr4YlQ9SeSYRiYqF9gGVZ&#xa;ktPy7L/4OSjRgGCH1/UdLn3yru/3tKsv7H0UKMDXJoAIBYr2XZjbpJXhA0ZrsIbRpNoTExVwwh&#xa;okE6dIQQE5b5ZFxIaG2V7zH073VxVTrZ/5gr3ErDJEjdDkhx5H9bq5/67PznSQd3r6nc4sh1ex&#xa;PryQV7yfq7m8w+Vk16GWytI84OI07UDPiBZhF0UoaQmABrdfjF+XgTtPmGLmLC8WnbFQjl5tv2&#xa;UmUcVg5jVakltZ1T2D9BBnefNxGwvhnzv+MR5FIpa8YZip6LXcN2Hrr7JCyMLIeVDSpUjFoyRp&#xa;fm8Cw5a5VFnlquohaqrxYpKMNm+mZ0X4NwQojTTuGzdsb+DJ6IUmRaV8rs4zM1DOGqOsLyas/i&#xa;mPZqNWHEp7VSXR8gBRPqOb/RgIj/wiGUKsJc1g7AZZXq6xi1M9XVrf3awZv8dogBN/RtHVXQGD&#xa;YldqVJhAqe9BXtTBEOT6bkrhBatZkuXmWDg4g4qBnD44n8OTNABicJsYcRInR6VapZlsLsTtSW&#xa;WWg9XyAd3gTuWAypltVUeZgdmawDwpsS2JD8BSgpI3RdAjA9na7ai2AghcFoPZWgIuxBIBPG5E&#xa;J2pk0SkhDBf4UAkE52+xsl58bTGKj3EGho2MEBUaYQb1pPZ8ij6bfzodzCCY2ma2OygPXCtz+b&#xa;lIiWnzBRDHg79u5N0ifBk/k6D/CXFqVMV+pUXRSWxuKZdw9GCnF7pdSnPhXXF3g0mfvFwi0am5&#xa;qPoVd1j2j0M/PE3Wa71mslRX6nB8TaSYtgLY3g2iIxVKyJrODqOv7iYExeGjWCgcZnxkEyVx5g&#xa;VH66OatXuYYmM5YiKMjFDQ3WtGUieczYQyr2bqyg6k8SmhB9vOgyo0gVUBm0Hn/tXlNCHdeXsh&#xa;pXlOh/2FD3yaci6SlXt1yprDLbsN84vO9viwDa/GBDilRWra+yToWoThYaLYqYC5oaeX+4ZNKS&#xa;OL9R9sTcbDsq0jJLUX3PRUpGodll3unkSaoMBEqq+VTqvOwufXyXr45ggmFAodmucnt6Awxt5u&#xa;YHoWKSvaLuXxfpqaNhoA+kT0znvpRncrvVOsubkxHBU8g2j+Gd5JBByZ/RtDKXrISIXarP/Nih&#xa;pH14U9TgTG02BiRs/fxJY8+tFj7xDHIEGMoNZpxrECLzXPiexkC5xWvNIb1WlUZENSKoQq1R2J&#xa;HZSNU0WY1NKpNEKSSc5dM2PY2HlISb2zlxZhzHOP/bj4KrnZNSfGpN6oh7RvgCa0IFQQT5oSMj&#xa;DJadRPFjyt5Lr4VxMXX8IyChdvBFzUgtQtxgETnh0PeW6pbYgj7Xf5WZI9hVKK14pi1sLhsjq1&#xa;h+GBtaQt+WRAy6XKk3YLoiiOARkvJeybfBleKFWcZGL5ffw4VCeA8P63fEnb7bRMDyhPV2h/O7&#xa;eEqvm9SfiRClHvFehs5iAWJ/UYqg3OWLOLlmyvKWc3kjDAEqAvskD/vyJDEjUFCfoGkZcGPqXu&#xa;J/jP7N8NZ6wEWRIqsM92EV6ehR4qGtdX9lFXOgjcch8EamsA/e5A2AZ0RjwIGX80zAbkH8i7TF&#xa;+2TFizm7KmQPSNYGzsiuaExTdtSN/rJLvAqxvHNBGrp5wF7rW8QF/y/0IlcEu3gSIp4FukYJM/&#xa;XzMLFQbfJEkEMy7vTwTsKNW3myClKfoMHBfzEY52kxcO++mowjG04OWVb+FTu0bMPvAV071Sv8&#xa;mKwz3QvE0b+Ka0qOKE3VdebcK1glHIktypZX4J3cXazsOugVClf+Oov8n3N/pN61ZMR/afCof6&#xa;vBqf+nFP7XJELIvyYR5H8KFwX/t0mExabHjdUl/mldz9Imv4P7G0XeEt+EkousCaQAGjwOXnJT&#xa;ExeTy46tDscr17u/bVA9/E7T5azxOwXz/n0ePj0Kkypazd2IssMpM60D9Ua9xFEyWTE9AG1Csb&#xa;5WJxo9xasRjzpn3Lb+Mcv4SIvFvpsOZcruJG39T81VlFj8Iy521MijcqQHgOYUBunELIC3SHOd&#xa;Jj1zkBdVIKQb+IPkGWNxodvADL6EniolCSZxbg/9lwVuBM1W/M4QV8irgbCFZOtioD5fj3RVxT&#xa;sC0HCmR9HAzIZaPaKobCRAgaroHjqQMN3l4YcsyjCM+ECFq3hK4kR8SB4JGPfUtJ3aHGtF7M7P&#xa;b0YpuK5B1FaiIphsDdIO1GUoMJgTux/FZXLgyDvDEK7DkwWlTjk4hzcQAjALJlY3BXCxjE4/YS&#xa;yMlAZFrB76Iq2ZFgvK4gqbx6CUVLgx2lV0CvxcClWTDFFai3/KF0uJndyDtrrVbjvUJ8Ko5zXf&#xa;ioNMYvZChwRWAC+K7RMs3UiDToZp56ymCnyEEO7kCAUASgR8xloTN+Ej7fD2tcpDCLpJZ9bfKj&#xa;6QkABnJ8KiFlrrGC4TFx/HiD383dNPvg4VuxMC/Dc9cwBtSwlsaBTe6uVke3DcMzsMb0uXVtHe&#xa;etBeMv5Xxu5txmjq+yqWYgfVcBc0XMyRuWImHYK2ISG/cE8eFGpMSsQIKBkFByiGkTrxTvn9kD&#xa;7JTD6balW46VMO0mjCnWNKDzumS4Z4muRIklmicibDu2GEZpQMfAzB+x+NbuWiKAOHobTiGGVq&#xa;dkGayUYCwlKDFJMv9mj0DE78pwdM5WWolf6WaOjsr44ScadSoIjzHj2yrBiGVfOnMRqDkW4jsd&#xa;/c1EWY2cLqfIMJ2zXqEhl0oLVgF/Cg6R2Z6jwek+LAnoADQsL2qOVRPEy734mTzRVTZg8esRIK&#xa;2bIZyX6uXtb8kmblbKwhpcm4KA68DsaaiTK2eC2UHtWpKu0H3ZflzTtu9nJLel0NKj5S8IjRxV&#xa;WGMda59fe5UNq0OcWEC1K18yoyaDiAC2+9phMvgaGDXjKSEkDH+c3VGNZYkXx9COzIu+WrYkSA&#xa;+EjGX7ppipKkCJt3S9FfIwal3eHlt9ktjBprIZLzIeAzRBEsQvrRYXlljr+zJ9J7De38TDWw+N&#xa;MzbEv7V7gOg7iJEBiT2FWpgUWAi0j/d1JgcKUOlkLEpCtB5cm7krtFZsZkTObsiW4sLp4MKypH&#xa;+bcJFEyJ4fY4w2vTqLqyW0MN/4IMr/9V2nnHU/2+f/yQEY6VkF1SKiN7j6zsIyWrbMfM3jvRIa&#xa;Oyt7JCNiEzK8rMnomOsous+gjf9/n5fL+dc5xK/W7nj3PO4+H1vO7rXtd93vfYuHOCdKPLJT0C&#xa;mw9/afTiQsjHG0fTX+4+MewjEuzzMVahfZFZdH7hkkSi6EeyhYIHrSLmq+5adjI5pxJ3cNUCab&#xa;vv1tZdVThmUHBqfkItXW+ajXYrI7XVdamFs7fNYoNlbE4l37X/abc+gQKj15lLBDnLc/Yqewp+&#xa;JYH3I7o9ZLvNzXs9lG6vwGobC3GIvY411vG5sBqvjQhShXdP5c71uBtT1W2thOFvcj3YXVC0Hm&#xa;aP3PzEt1t8Y9GGFlrsx81uqCx0v8iy99LmkUAZd/IzKo/huBdhq8nLuM1rQguG5s+O7XL1ZtMv&#xa;yUVSjLhxtPkyk4e7dBmuMEK8GFhcQhV0qR+y69oVIF7vpo13wJ70iz58oV8FIrqeBRMk3DBTLC&#xa;xnGb94WjQ20I1t3kovqdDs4kt2+BztSZq0vAB9U3btrSPevcKm2Z8vKbZ9On3SdZZLOLae6IxA&#xa;QGi/QPS4K2SIX/xSKE5MX3R8a29lEvPJW3fTGwsNuSmIPxEk8rnic9Cq4XTQRNxnLstdYohIcY&#xa;3ESrqj5ddsHWC6F+5xk5WrV6eWd/lm9l5e90amySlvfMHdJjxa85XdRyxc7kyNwt5CQg+STFg8&#xa;Fzltr9hL6GF7wI/wKbaQM3rL0N2wnJRfM9dw2eHzg5QdbaXm82OLj5E19TbH1/zn/zYOxm0+7k&#xa;RcwKZA/KuhgvLgUPHvoKBN4E1/nWZPrTRp9FaFjYilbsWzaGmlSq9iZ6KszCsKR+72sXCozkdq&#xa;Ekd1sYy6ltV0QwgpKXHV1WXlGt/7SF2XVfIXOOUYTBiCP8k6ueXPHDIxsLflWjp6lk6B+8VMkq&#xa;Dd5Hb9ntuLuCCD2m19ENszXeIyXfx8aaNQG53VcuH+T4NpljnvjD7xwGl4x5nejZQ1KwmLPOWn&#xa;H7SbdaxxpZ7tuQ4vKdInXhP8QGjJmtJR2CMSm1LJ0UcRKsrn7hVYiZdhwzw7GD2kYa/CmmLVFX&#xa;+36Z9bBhCZ5xzmW23XqvStG+gvtOg1VgzGTVO1B8cNOb6YfKtKslxA+8yG1gqfo03jEX+nNVvQ&#xa;hMSmv5cVRM28v5uWeDANeoO/03ahMlmTN2peRVQz1CapJfkox7g+TeuVIUVS3dXjw9egbBIVDi&#xa;4gPNrvOU3JoAXucVLSj1YrLyeYmO73FX/P0nZ9suQ8qVMzXmIqp1yUkE3p0jk8pTYaO69tM38n&#xa;w0jRYttUhpMNQiw8r3IzlrwLm30dbkFPcZu0vLzFJR+Gp15+jabWZ+Jq45vS87coGxyE9J2tCA&#xa;3PmhHEUfC5J/vzVXbZJpFJ8NmY5GBXFAyChSyCGSKkXGT5B147Lz60uaHz1Fczx+Yp103xLNX2&#xa;bGwh8lWRFvtj4hlNjm+FGcLefH/YL707q3VJMiWBMFIWqqoQ89DqFKMuZKC32ErX8cJ7SeKuOw&#xa;arW4S55On9dPDQMwTbZ5y7jX2XeHhlhloliJ1kFjuEq0NfOXLo7lg0jja9Yj0GoSKY5cng/MAU&#xa;JaXM7djqZktT7BQXL07jmRNeYSJbLlRaqRn8CFZe0DjBmSek07YctgMhrpOfqdW69ZjCIa3BXF&#xa;+Lmv2f9UAlcp1RAyzj8O3ilLvcMXSdSRWDZ1fFDc342VNSOypwV6xqL38pvCHUTcZz7RX7qQ1p&#xa;MyLulm497GcG+nSBneR95wJdZJTX7PBPwyrMClOcMwcV5FPv3q9Xx5Jg5bvbvhZYzMUfW2NWNm&#xa;jOPX3VeYUzF2okyYllkpa4hO3OQPjFNwH2VLslSLB4YTOrrC6JRvWm08eIwIoLWhW3wiqTIFaX&#xa;7sI/uEeNfO66w54zPUIg9yS3JkfD7UIUG3h0yJHBrrfYzDPhhroy1bneLwW+N+9Wqi7RwfPmSM&#xa;3U9Rp5lgcanjyLKcU5lbcWqXi0YyisUWXOPQ5GtMcUf/He7lvfm6FbCucpctcVJ5dfgRn9JiHm&#xa;DHdVTzJxmPrDnig+bxsOb9RPgx/pJ/HFnbksuTkVkI/dpxG6kzVdPEe3yM7UKp8p76vRDLZsg+&#xa;6cu8oNzV64wtTGyqIvQXObyaUvTaLgFN9bisD7Sfw4rY+pepjMA8+m6QnsnFYEPWo03xkJ7aGk&#xa;iXuMt+Ixn+XlkAfDNRkTqkjgWP+w1Pi1SnOodHQmK5RR/FuZiDa0q3OBoErXuAjuSsiu/QGWzJ&#xa;TYZOW4RJBZVuMoygEhmfFkXc+EBEW8kayLZGsLuGFQ4cZI0Ab61GTPsGkS+O0yhW2pk0eHq6va&#xa;uY+cHYRg/YpmSB3/bfWJ06Wfr1fpn/WaXwfLdqRuKqk24lQzkQavX6SmsLBZnVlii4bxJl0Neq&#xa;RBHbtqdKlV1MkH4tGbOK4hJsbo2rCszznrv0zJXjoYFDri8iUh7Q7pu+iy1Kr+L9PjEsXh7p6W&#xa;xEz1i/ANrElpiShX769YQQHz+fl75NbhNh94zdqtXpt6fyVIE61itmbyba1sTAuL6jZ33V45Nw&#xa;otUH49FUe//CqrTOJ74izl+Bh0FDfkO0c2By//VPNnHWbTaBXRI4tldUNZEt8jxAsijWk1YU8U&#xa;hnJ1s8ayE6ebmjkl5UZEdqkahleLZb+Z1FLTC1sz7CWTib2kz7fwyX289wXuIEbeIPM1Mbpsr5&#xa;ixNjDU5fvwg2x7HZBfqwHOB94v7ZAlfjlPUM9pA2XYxStV9wqiyjONi9Id2DawRTJjnq65D8R2&#xa;6zLIBIjH1smR3HGs7FDfLniSEuvm5ohnR5ubsmw26UNqy0lrZV398KOsskBSVF7wgrr/hs6QJJ&#xa;RGWVfT3PYVRGexj4YoNDc6aDiI1l34PRSGf/7FcS+Jossg3q+10oWsVqmaUWXHh9eOtW7fonzH&#xa;CfclfUQNzijh8CZbW/DZaui/boMjWiMmXSttFTgn7S29MOhVpwI2Uffim/ChppKPmj6i3UceFZ&#xa;dVMrPs2KDV9p2WcH01+KIxNv2RJLImHpfP0wTtuKVBXLXe+ionl4vACuqb7+Ox+5YIPI9HP2al&#xa;4We+Z2+K05GnDusoUvkoxWpFWVFFRv+WU4DmjMWVVJtibNaac0z+EJ/bp9KPE7SeJ4iMkYZQll&#xa;4gr496cqJxfjD4HO216EfdDz9bt9evbXTKtvCGOQ0sCllufumvft/+2A1n1uMh2HNrWqKK03Iy&#xa;nYY07STVQK8+Tyk1bzSz0YdeacUI7CE2OVNnCauYRNxbUzmJZQwWrjEdVSXFwe0uLWHh9+JLLC&#xa;MlogzZk482B+gQtpZcicnAMTEiaJWmhsGIlJo4muL0wuWmk+aLc0qgOIqfTSOIo+S6OSlGrxzb&#xa;f3mQV4cwly9WCTbY9Si9smQoyTzLCX12S1k2TCu8qikpX1+nX1tG0IVviMVkQ+I+zGE13P2kVf&#xa;y9x4JW6ywLLpDWdrEc+fBoHj32nBqSgajUmPrLo2+XLNfPBKT+M8YNMRuYU5Ulznsu4xBM6xMW&#xa;Rw7WcIiHnLgxI1fCWvZxLKekGWqwWFp0pq3QzG9gJGFOc7w6Ufz1Y8mqrTep2lpOegOvwrrcWA&#xa;JckvWzYsZdcGuDyPwLM5SC5NusKWMMdD/jJrMGzBbDaTrFM5d0ePZufqgUZucJ126pvMZNulMr&#xa;eE8Uokmz4/yaQa2G5noAK1dOUxHJg1MdEfhEK+eOFMeK8o2Ae4w1Jpq8KSB0WWJy4KD7NFdD2K&#xa;7fZA1/H2nzFr+kRjwxjLFhMVyQBE7oyWt8MyE4/P3TQnshTzI7LeXBO4qrA/qFD9NKDbFieVS0&#xa;pk4kB72Elgx+ulAW2INTaCbLMTvm9rxqvbtkpKmLnaNpb0mBIAXHld+alm1wJDmkMt4h/Krl8W&#xa;HCgcezJydv4NCta0jXVNAvq7Sn3DtLLy+bfVojds9aWa4Cd/h8Jk89RNiQ/H7bthBrHXznjMnW&#xa;G+4vYmkWS4uWS3St4eIh4oFuZExPb+Ilnp01fZY/I0jZO+A1886ssLY8+mxPVv4wE+9T2zsXxc&#xa;LUlscfJI0xkxrFdpLAYwsrRO2vzYDqi9VYzvmrzCT0ZEi1TXqqFpKwzzWxFn5JEnQz1h/bOCm2&#xa;HTnNWYEtgJVA807NfdFladhqgtOe7tF3JTO3KUhcwvSdPAL55wbVeBfyXxDhT2xIXcjfLZIawd&#xa;epuWxfKU91fUIg5GL1+P33Zz3wQsYv2xtsRNd8aot7cnyTkvSCcaZUvRI+dWWX5lvwSsi1tqzg&#xa;SttrykymSxpX/FaXKYa/8DVGPVpsU6fcbrAxOm3sncF7K9nYO9Q5Kz2b9sHDQp56GU/Yqngfv5&#xa;X3k3+qu79KzF/mL1Ps7bIyS1qVuXqta/2E5FnV3G/68OzM2MTPvL6QRAFfqWoZn7eW30P4MnJM&#xa;vsOcX31lmI9pZVIo4t6V9ayjfdfgkXWccnr6zXXTEqWjmyfhRVtTn+lOhO+deAnXu0zZvPtue+&#xa;IDnpeig0denpuFZKo3WZki6dT8dpVRswwXbHUJpi42+LKg560/q+UqNSnRlHCPyZPuZnPKKLx4&#xa;NU2tVY9giWpNscZZRp2u1o9wb8r1/U3QV5Y6ZL8SgkCpJxChMxb2cdB+8Pyp1l+tUtbr2TPge2&#xa;IREOgECAeEmn6E0hA7ZyPEbpD9aHq3HU3JMEXVmVb+/GtAoBkgCaCo7J7ApKThaGTrdMvI2c6R&#xa;xcD53/dQtHVsyAzKOi9IxYjHgwdAjE8GBP3MKAw2xl8zDuo9qBaCqAt0TLnhgUDcJPu/Mv1IhH&#xa;zIev97dw3q7Gxpa+7E8gtDi3H9Vfi69hZTgdkKBLx/F8GPNCZySGG0567ohN7hMcZggMAARjd9&#xa;7NLhCDwHhQuP+Ksk8lEJ0gDCYkQgkCCKcM3l3wg7QZ2vONrZQx2dPdAWxqA7Xghanu5JtF8lT6&#xa;FAhFV+CcHsDBodDZxjgM0sRPt3cP9I2Nq/t/kXtqq7Jav6nhN+j5h5zh4oSwe9PyzLn3hDppp/&#xa;JRIgvAOjm59lcnjzMZTnSRxvSPd7fQYxoI5zARNnIRTxaEsUcTtbW6gJ0FQ0LaFuLAYu9qZAe/&#xa;zfl+gr9tEp6arn5nSBLEQBJSCKQhGw/y0FYmf6g/Sb7MBC2QomgW6mixAd9M3l70AYCgUBwhbg&#xa;CMCco0tefwfC0JIRoFYyvoVuIEfjB3J0xP/vQPyYQeI8c2OYcyQC+zuQAGaQtMV5Ncw52gn9O5&#xa;AgZpAlfOInZcQX8XcgIcwgj2XFEiYA5HEAtBX7dyBhzCCmcuwg9WMg0PY5oGtHAfkl/xR0UMr5&#xa;HkT1pYJxGh3Q8MfA6IMlXRGylJqpqdO+uT9v4gi9PHB5dgHgg+oDnSysHLPev32IhZGjs9Mvmj&#xa;VC/Ov084udR0GgTnJ08Yc1hxfH0JQR4vDLXmI5gOWdROhdYFXLH4j/oh0jKApawrL4AKWFEJ3S&#xa;1v4XFAyNGEFxIL6Za0gGAiUwIwI2lCr/BhPloAqbtgjEf+z2cXfAVh3w/rbfH2ls6rebgM2h+4&#xa;tfD+47QMYgfpr1DiKGC5OCQM7AGH8a1fEff4M5KIgIV6WYr/NLA3ZLEu1vh/iRZDYxBYAoAyQG&#xa;I89oiUDOfv60lQL0ViUE6Jqj27/VxFCdESN667fhUFXAzimi/UUkP1I7COtwMQP66ULosbAole&#xa;twD2D28IFO1hMP67DxNsrzUwz+QWwRx7Edq/ED8mIARg8IS4mwfldXjBEVhefXNSXntiiEvn4g&#xa;fhrITTSQGx4USCw5ptywGBiZuhrZmkD/S/1FgcRaikL6n0TozAD6zwB9ERT9YSrM+vuN87/yUm&#xa;ZAdhAnzP6iVBAVlJDe6yriiXYZUPAcKJzT9Jg5Jnb2HmrGVkBn/ossIPZcjj99sy0FdJHuFOhD&#xa;Q9opZGmUHZiYpbo0wLb1gJW+xOjVk+MCspS0pZOFnf2hDlNHR7C5HwvAAloU/nEQiAoFAeE6iM&#xa;CsUa68+GgcMLMIvH/4748UJYysoQy0nD820sIvWW1TDJtiHagVdoTogB7JPwP8pMyqptuOBAJj&#xa;MIhk/1DLH4lFDh2AWUGjLtJ9AvBBORi9qBaUURRsLc0tnP/KC2WGwW0IL7gQoiPOX/1TxE/8QM&#xa;vi25ML+MGCBL023NY6iMCscb+tgHsM8MSjA7MkG32UfsjIDcNlf7/xQZ50BmgN8IEBIbp4punh&#xa;xTHkPvdhoFr3MNcKYgaZeMDydcvDi2PocRDiL5+Wen3BaPlp+8OLY4hpED5Hvncdtf46uqCLY1&#xa;ZAvpoXdfac7oOscPjb2tEJyDdCohIaA/6Q8JPai3wNGSoh/94fEjAUIoKAfM8FJQoh4cEBAmYJ&#xa;5DPUUfuyxARkiUNfj4EOQD66FxXg/+jPAD9xM/JhjaiVzToLHYA5VEE+t0wGRWEs77ehymGOeE&#xa;QHIh+sgwokL/n/ATE0SAQQ+UgG1MB9uuKvgJiLAnlDsiQK5kTdT2ONw572gD5LQN6JhxqA+zeh&#xa;hAq/2PGMrom8C+YCiuZGGwbNn+7oQ9dFXjeOOlZ2dWLQ/dMiRiCQF0WiItZ6/xSBYRKJQCAvpk&#xa;H98dhj+JAIzMLIjxpQ+7HMtweE/yuBiwiQQLLAXyTwb+/msIBP/wFQSwcIEWTvMGjbAQCHAQIA&#xa;UEsBAhQAFAAICAgAoE4jUBFk7zBo2wEAhwECABEAAAAAAAAAAAAAAAAAAAAAAGxpYi9DaGVzc1&#xa;RyZWUuamFyUEsFBgAAAAABAAEAPwAAAKfbAQAAAA==" ID="ID_181310843" CREATED="1578240963529" MODIFIED="1578240963545"/>
</node>
</node>
<node TEXT="images" POSITION="right" ID="ID_209340361" CREATED="1521562135195" MODIFIED="1578240952945">
<edge COLOR="#7c7c00"/>
<richcontent TYPE="NOTE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      An add-on may define any number of images as child nodes of the images node. The actual image data has to be placed as base64 encoded binary data into the text of a subnode.
    </p>
    <p>
      The images are saved to the <i>${installationbase}/resources/images</i>&#160;directory.
    </p>
    <p>
      
    </p>
    <p>
      The following images should be present:
    </p>
    <ul>
      <li>
        <i>${name}-icon.png</i>, like <i>oldicons-theme-icon.png</i>. This will be used in the app-on overview.
      </li>
      <li>
        <i>${name}-screenshot-1.png</i>, like <i>oldicons-theme-screenshot-1.png</i>. This will be used in the app-on details dialog. Further images can be included but they are not used yet.
      </li>
    </ul>
    <p>
      Images can be added automatically by releaseAddOn.groovy or must be uploaded into the map via the script <i>Tools-&gt;Scripts-&gt;Insert Binary</i>&#160;since they have to be (base64) encoded as simple strings.
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</map>
