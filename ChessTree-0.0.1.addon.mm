<map version="freeplane 1.12.1">
<!--To view this file, download free mind mapping software Freeplane from https://www.freeplane.org -->
<node TEXT="ChessTree" FOLDED="false" ID="ID_1869326925" CREATED="1521562113754" MODIFIED="1727087586505" LINK="https://github.com/eegerly/ChessTree/blob/master/" BACKGROUND_COLOR="#97c7dc" STYLE="oval">
<font SIZE="16" BOLD="true" ITALIC="true"/>
<hook NAME="MapStyle">
    <properties show_icon_for_attributes="true" edgeColorConfiguration="#808080ff,#ff0000ff,#0000ffff,#00ff00ff,#ff00ffff,#00ffffff,#7c0000ff,#00007cff,#007c00ff,#7c007cff,#007c7cff,#7c7c00ff" show_tags="UNDER_NODES" show_note_icons="true" fit_to_viewport="false"/>
    <tags category_separator="::"/>

<map_styles>
<stylenode LOCALIZED_TEXT="styles.root_node" STYLE="oval" UNIFORM_SHAPE="true" VGAP_QUANTITY="24 pt">
<font SIZE="24"/>
<stylenode LOCALIZED_TEXT="styles.predefined" POSITION="bottom_or_right" STYLE="bubble">
<stylenode LOCALIZED_TEXT="default" ID="ID_714095377" ICON_SIZE="12 pt" COLOR="#000000" STYLE="fork">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="200" DASH="" FONT_SIZE="9" FONT_FAMILY="SansSerif" DESTINATION="ID_714095377" STARTARROW="NONE" ENDARROW="DEFAULT"/>
<font NAME="SansSerif" SIZE="10" BOLD="false" ITALIC="false"/>
</stylenode>
<stylenode LOCALIZED_TEXT="defaultstyle.details"/>
<stylenode LOCALIZED_TEXT="defaultstyle.tags">
<font SIZE="10"/>
</stylenode>
<stylenode LOCALIZED_TEXT="defaultstyle.attributes">
<font SIZE="9"/>
</stylenode>
<stylenode LOCALIZED_TEXT="defaultstyle.note" COLOR="#000000" BACKGROUND_COLOR="#ffffff" TEXT_ALIGN="LEFT"/>
<stylenode LOCALIZED_TEXT="defaultstyle.selection" BACKGROUND_COLOR="#4e85f8" BORDER_COLOR_LIKE_EDGE="false" BORDER_COLOR="#4e85f8"/>
<stylenode LOCALIZED_TEXT="defaultstyle.floating">
<edge STYLE="hide_edge"/>
<cloud COLOR="#f0f0f0" SHAPE="ROUND_RECT"/>
</stylenode>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.user-defined" POSITION="bottom_or_right" STYLE="bubble">
<stylenode LOCALIZED_TEXT="styles.topic" COLOR="#18898b" STYLE="fork">
<font NAME="Liberation Sans" SIZE="10" BOLD="true"/>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.subtopic" COLOR="#cc3300" STYLE="fork">
<font NAME="Liberation Sans" SIZE="10" BOLD="true"/>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.subsubtopic" COLOR="#669900">
<font NAME="Liberation Sans" SIZE="10" BOLD="true"/>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.important">
<icon BUILTIN="yes"/>
</stylenode>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.AutomaticLayout" POSITION="bottom_or_right" STYLE="bubble">
<stylenode LOCALIZED_TEXT="AutomaticLayout.level.root" COLOR="#000000" STYLE="oval" SHAPE_HORIZONTAL_MARGIN="10 pt" SHAPE_VERTICAL_MARGIN="10 pt">
<font SIZE="18"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,1" COLOR="#0033ff">
<font SIZE="16"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,2" COLOR="#00b439">
<font SIZE="14"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,3" COLOR="#990000">
<font SIZE="12"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,4" COLOR="#111111">
<font SIZE="10"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,5"/>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,6"/>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,7"/>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,8"/>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,9"/>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,10"/>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,11"/>
</stylenode>
</stylenode>
</map_styles>
</hook>
<hook NAME="AutomaticEdgeColor" COUNTER="11" RULE="ON_BRANCH_CREATION"/>
<attribute_layout NAME_WIDTH="108 pt" VALUE_WIDTH="135 pt"/>
<attribute NAME="name" VALUE="chessTree"/>
<attribute NAME="version" VALUE="0.0.1"/>
<attribute NAME="author" VALUE="Gergely Kiss"/>
<attribute NAME="freeplaneVersionFrom" VALUE="1.12.6"/>
<attribute NAME="freeplaneVersionTo" VALUE=""/>
<attribute NAME="updateUrl" VALUE="https://github.com/eegerly/ChessTree/blob/master/"/>
<richcontent TYPE="NOTE">
<html>
  <head>
    
  </head>
  <body>
    <p>
      The homepage of this add-on should be set as the link of the root node.
    </p>
    <p>
      The basic properties of this add-on. They can be used in script names and other attributes, e.g. &quot;${name}.groovy&quot;.
    </p>
    <ul>
      <li>
        name: The name of the add-on, normally a technically one (no spaces, no special characters except _.-).
      </li>
      <li>
        author: Author's name(s) and (optionally) email adresses.
      </li>
      <li>
        version: Since it's difficult to protect numbers like 1.0 from Freeplane's number parser it's advised to prepend a 'v' to the number, e.g. 'v1.0'.
      </li>
      <li>
        freeplane-version-from: The oldest compatible Freeplane version. The add-on will not be installed if the Freeplane version is too old.
      </li>
      <li>
        freeplane-version-to: Normally empty: The newest compatible Freeplane version. The add-on will not be installed if the Freeplane version is too new.
      </li>
      <li>
        updateUrl: URL of the file containing information (version, download url) on the latest version of this add-on. By default: &quot;${homepage}/version.properties&quot;
      </li>
    </ul>
  </body>
</html></richcontent>
<node TEXT="description" POSITION="top_or_left" ID="ID_752418840" CREATED="1521562135104" MODIFIED="1578504823222">
<edge COLOR="#ff0000"/>
<richcontent TYPE="NOTE">
<html>
  <head>
    
  </head>
  <body>
    <p>
      Description would be awkward to edit as an attribute.
    </p>
    <p>
      So you have to put the add-on description as a child of the <i>'description'</i>&#160;node.
    </p>
    <p>
      To translate the description you have to define a translation for the key 'addons.${name}.description'.
    </p>
  </body>
</html></richcontent>
<node ID="ID_281132702" CREATED="1521563587956" MODIFIED="1521563734014"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      This addon is intended to ease the creation and maintenance of mindmaps containing trees for chess movements.
    </p>
    <p>
      
    </p>
    <p>
      0.) Template is available after addon installation from <i><b>File</b></i>&#160; --&gt; <i><b>New map from template...</b></i>&#160;choosing <i><b>template.ChessTree.mm</b></i>. Any additional information can be found in the template.
    </p>
    <p>
      
    </p>
  </body>
</html>
</richcontent>
<attribute_layout VALUE_WIDTH="135 pt"/>
</node>
</node>
<node TEXT="changes" POSITION="top_or_left" ID="ID_845634758" CREATED="1521562135109" MODIFIED="1578504823227">
<edge COLOR="#0000ff"/>
<richcontent TYPE="NOTE">
<html>
  <head>
    
  </head>
  <body>
    <p>
      Change log of this add-on: append one node for each noteworthy version and put the details for each version into a child node.
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="license" FOLDED="true" POSITION="top_or_left" ID="ID_1331637895" CREATED="1521562135113" MODIFIED="1578504823230">
<edge COLOR="#00ff00"/>
<richcontent TYPE="NOTE">
<html>
  <head>
    
  </head>
  <body>
    <p>
      The add-ons's license that the user has to accept before she can install it.
    </p>
    <p>
      
    </p>
    <p>
      The License text has to be entered as a child of the <i>'license'</i>&#160;node, either as plain text or as HTML.
    </p>
  </body>
</html></richcontent>
<node TEXT="&#xa;This add-on is free software: you can redistribute it and/or modify&#xa;it under the terms of the GNU General Public License as published by&#xa;the Free Software Foundation, either version 2 of the License, or&#xa;(at your option) any later version.&#xa;&#xa;This program is distributed in the hope that it will be useful,&#xa;but WITHOUT ANY WARRANTY; without even the implied warranty of&#xa;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the&#xa;GNU General Public License for more details.&#xa;" ID="ID_1555852289" CREATED="1521562135117" MODIFIED="1521566722845"/>
</node>
<node TEXT="preferences.xml" POSITION="top_or_left" ID="ID_136508631" CREATED="1521562135121" MODIFIED="1578504823234">
<edge COLOR="#ff00ff"/>
<richcontent TYPE="NOTE">
<html>
  <head>
    
  </head>
  <body>
    <p>
      <font color="#000000" face="SansSerif, sans-serif">The child node contains the add-on configuration as an extension to mindmapmodemenu.xml (in Tools-&gt;Preferences-&gt;Add-ons). </font>
    </p>
    <p>
      <font color="#000000" face="SansSerif, sans-serif">Every property in the configuration should receive a default value in <i>default.properties</i>&#160;node.</font>
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="default.properties" POSITION="top_or_left" ID="ID_1494843788" CREATED="1521562135125" MODIFIED="1578504823238">
<edge COLOR="#00ffff"/>
<richcontent TYPE="NOTE">
<html>
  <head>
    
  </head>
  <body>
    <p>
      These properties are used for:
    </p>
    <ul>
      <li>
        Each property defined in the preferences should have a default value in the attributes of this node.
      </li>
      <li>
        For each menu item with an icon add an attribute with the icon key (use developer tool menuItemInfo) as key and the icon path as value. Example: '${name}.icon': '/images/${name}-icon.png'
      </li>
    </ul>
  </body>
</html></richcontent>
<attribute_layout VALUE_WIDTH="250 pt"/>
</node>
<node TEXT="translations" POSITION="top_or_left" ID="ID_461099033" CREATED="1521562135130" MODIFIED="1578504823241">
<edge COLOR="#7c0000"/>
<richcontent TYPE="NOTE">
<html>
  <head>
    
  </head>
  <body>
    <p>
      The translation keys that this script uses. Define one child node per supported locale. The attributes contain the translations. Define at least
    </p>
    <ul>
      <li>
        'addons.${name}' for the add-on's name
      </li>
      <li>
        'addons.${name}.description' for the description, e.g. in the add-on overview dialog (not necessary for English)
      </li>
      <li>
        'addons.${name}.&lt;scriptname&gt;' for each script since it will be the menu title.
      </li>
    </ul>
  </body>
</html></richcontent>
<attribute_layout VALUE_WIDTH="250 pt"/>
<node TEXT="en" ID="ID_1779268052" CREATED="1521562135133" MODIFIED="1578239400182" MAX_WIDTH="322.49999 pt" MIN_WIDTH="322.49999 pt">
<attribute_layout NAME_WIDTH="156 pt" VALUE_WIDTH="123.75 pt"/>
<attribute NAME="addons.${name}" VALUE="ChessTree"/>
<attribute NAME="addons.${name}.updateChessTree" VALUE="Update ChessTree..."/>
<attribute NAME="addons.${name}.pasteBranch" VALUE="Paste branch..."/>
<attribute NAME="addons.${name}.copyPGN" VALUE="Copy PGN..."/>
<attribute NAME="addons.${name}.compareTrees" VALUE="Compare trees"/>
</node>
</node>
<node TEXT="deinstall" POSITION="top_or_left" ID="ID_1510539068" CREATED="1521562135137" MODIFIED="1578504823243">
<edge COLOR="#00007c"/>
<richcontent TYPE="NOTE">
<html>
  <head>
    
  </head>
  <body>
    <p>
      List of files and/or directories to remove on uninstall
    </p>
  </body>
</html></richcontent>
<attribute_layout NAME_WIDTH="52.5 pt" VALUE_WIDTH="271.49999 pt"/>
<attribute NAME="delete" VALUE="${installationbase}/addons/${name}.script.xml"/>
<attribute NAME="delete" VALUE="${installationbase}/templates/template.ChessTree.mm"/>
<attribute NAME="delete" VALUE="${installationbase}/lib/ChessTree.jar"/>
<attribute NAME="delete" VALUE="${installationbase}/addons/${name}/scripts/pasteBranch.groovy"/>
<attribute NAME="delete" VALUE="${installationbase}/addons/${name}/scripts/updateChessTree.groovy"/>
<attribute NAME="delete" VALUE="${installationbase}/addons/${name}/scripts/copyPGN.groovy"/>
<attribute NAME="delete" VALUE="${installationbase}/addons/${name}/scripts/compareTrees.groovy"/>
</node>
<node TEXT="scripts" POSITION="bottom_or_right" ID="ID_836008002" CREATED="1521562135167" MODIFIED="1578504823250">
<edge COLOR="#007c00"/>
<richcontent TYPE="NOTE">
<html>
  <head>
    
  </head>
  <body>
    <p>
      An add-on may contain multiple scripts. The node text defines the script name (e.g. insertInlineImage.groovy). The name must have a suffix of a supported script language like .groovy or .js and may only consist of letters and digits. The script properties have to be configured via attributes:
    </p>
    <p>
      
    </p>
    <p>
      * menuLocation: &lt;locationkey&gt;
    </p>
    <p>
      &#160;&#160;&#160;- Defines the menu location, defaults a sub menu 'main_menu_scripting/addons.${name}'.
    </p>
    <p>
      &#160;&#160;&#160;-&#160;Use developer tool menuItemInfo to inspect menu location keys.
    </p>
    <p>
      &#160;&#160;&#160;- This attribute is mandatory
    </p>
    <p>
      
    </p>
    <p>
      * menuTitleKey: &lt;key&gt;
    </p>
    <p>
      &#160;&#160;&#160;- The menu item title will be looked up under the translation key &lt;key&gt; - don't forget to define its translation.
    </p>
    <p>
      &#160;&#160;&#160;- This attribute is mandatory
    </p>
    <p>
      
    </p>
    <p>
      * executionMode: &lt;mode&gt;
    </p>
    <p>
      &#160;&#160;&#160;- The execution mode as described in the Freeplane wiki (http://freeplane.sourceforge.net/wiki/index.php/Scripting)
    </p>
    <p>
      &#160;&#160;&#160;- ON_SINGLE_NODE: Execute the script once. The <i>node</i>&#160;variable is set to the selected node.
    </p>
    <p>
      &#160;&#160;&#160;- ON_SELECTED_NODE: Execute the script n times for n selected nodes, once for each node.
    </p>
    <p>
      &#160;&#160;&#160;- ON_SELECTED_NODE_RECURSIVELY: Execute the script on every selected node and recursively on all of its children.
    </p>
    <p>
      &#160;&#160;&#160;- In doubt use ON_SINGLE_NODE.
    </p>
    <p>
      &#160;&#160;&#160;- This attribute is mandatory
    </p>
    <p>
      
    </p>
    <p>
      * keyboardShortcut: &lt;shortcut&gt;
    </p>
    <p>
      &#160;&#160;&#160;- Optional: keyboard combination / accelerator for this script, e.g. control alt I
    </p>
    <p>
      &#160;&#160;&#160;- Use lowercase letters for modifiers and uppercase for letters. Use no + signs.
    </p>
    <p>
      &#160;&#160;&#160;- The available key names are listed at http://download.oracle.com/javase/1.4.2/docs/api/java/awt/event/KeyEvent.html#VK_0
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;In the list only entries with a 'VK_' prefix count. Omit the prefix in the shortcut definition.
    </p>
    <p>
      
    </p>
    <p>
      * Permissions&#160;that the script(s) require, each either false or true:
    </p>
    <p>
      &#160;&#160;&#160;- execute_scripts_without_asking
    </p>
    <p>
      &#160;&#160;&#160;- execute_scripts_without_file_restriction: permission to read files
    </p>
    <p>
      &#160;&#160;&#160;- execute_scripts_without_write_restriction: permission to create/change/delete files
    </p>
    <p>
      &#160;&#160;&#160;- execute_scripts_without_exec_restriction: permission to execute other programs
    </p>
    <p>
      &#160;&#160;&#160;- execute_scripts_without_network_restriction: permission to access the network
    </p>
    <p>
      &#160;&#160;Notes:
    </p>
    <p>
      &#160;&#160;- The set of permissions is fixed.
    </p>
    <p>
      &#160;&#160;- Don't change the attribute names, don't omit one.
    </p>
    <p>
      &#160;&#160;- Set the values either to true or to false
    </p>
    <p>
      &#160;&#160;- In any case set execute_scripts_without_asking to true unless you want to annoy users.
    </p>
  </body>
</html></richcontent>
<node TEXT="pasteBranch.groovy" FOLDED="true" ID="ID_1708118480" CREATED="1522494712280" MODIFIED="1578047836752">
<attribute_layout NAME_WIDTH="146.25 pt" VALUE_WIDTH="135 pt"/>
<attribute NAME="menuTitleKey" VALUE="addons.${name}.pasteBranch"/>
<attribute NAME="menuLocation" VALUE="/menu_bar/addons.${name}"/>
<attribute NAME="executionMode" VALUE="on_single_node"/>
<attribute NAME="keyboardShortcut" VALUE=""/>
<attribute NAME="execute_scripts_without_asking" VALUE="true"/>
<attribute NAME="execute_scripts_without_file_restriction" VALUE="true"/>
<attribute NAME="execute_scripts_without_write_restriction" VALUE="true"/>
<attribute NAME="execute_scripts_without_exec_restriction" VALUE="true"/>
<attribute NAME="execute_scripts_without_network_restriction" VALUE="true"/>
<node TEXT="&#xd;&#xa;import org.freeplane.plugin.script.proxy.ScriptUtils&#xd;&#xa;import groovy.swing.SwingBuilder&#xd;&#xa;//import groovy.io.File&#xd;&#xa;import groovy.io.FileType&#xd;&#xa;&#xd;&#xa;import java.awt.FlowLayout as FL;&#xd;&#xa;import java.awt.event.ActionEvent;&#xd;&#xa;import java.awt.event.ActionListener;&#xd;&#xa;import java.awt.Dimension;&#xd;&#xa;//import java.awt.KeyStroke;&#xd;&#xa;import java.awt.event.KeyEvent;&#xd;&#xa;import java.awt.event.KeyAdapter;&#xd;&#xa;//import java.awt.Action;&#xd;&#xa;import java.awt.Font;&#xd;&#xa;&#xd;&#xa;import javax.swing.BoxLayout as BXL&#xd;&#xa;import javax.swing.JFrame&#xd;&#xa;import javax.swing.AbstractAction;&#xd;&#xa;import javax.swing.Action;&#xd;&#xa;import javax.swing.BoxLayout;&#xd;&#xa;import javax.swing.JComponent;&#xd;&#xa;import javax.swing.JList;&#xd;&#xa;import javax.swing.JPanel;&#xd;&#xa;import javax.swing.KeyStroke;&#xd;&#xa;import javax.swing.JScrollPane&#xd;&#xa;import javax.swing.JFileChooser;&#xd;&#xa;&#xd;&#xa;import java.awt.Toolkit&#xd;&#xa;import java.awt.datatransfer.Clipboard&#xd;&#xa;import java.awt.datatransfer.DataFlavor&#xd;&#xa;import java.awt.datatransfer.StringSelection&#xd;&#xa;&#xd;&#xa;import ChessTree.Notation&#xd;&#xa;import ChessTree.NotationTranslator&#xd;&#xa;import ChessTree.ChessTreeSettings&#xd;&#xa;import ChessTree.PositionInterpreter&#xd;&#xa;&#xd;&#xa;println(&quot;sadf&quot;)&#xd;&#xa;&#xd;&#xa;/*************/&#xd;&#xa;/** Globals **/&#xd;&#xa;/*************/&#xd;&#xa;chessTreeSettings = new ChessTreeSettings(this.node.map)&#xd;&#xa;/* CONSTANTS */ &#xd;&#xa;SUPPORTED_LANGUAGES = chessTreeSettings.SUPPORTED_LANGUAGES&#xd;&#xa;DICTIONARY = chessTreeSettings.DICTIONARY&#xd;&#xa;&#xd;&#xa;LANGUAGE_CURRENT = chessTreeSettings.get(&quot;chesstree_language&quot;).toString()&#xd;&#xa;&#xd;&#xa;/* FUNCTIONS */&#xd;&#xa;&#xd;&#xa;/* Static functions for ClipBoard handling */ &#xd;&#xa;static String getClipboardContents(){    return Toolkit.getDefaultToolkit().getSystemClipboard().getContents(null).getTransferData(DataFlavor.stringFlavor)    }&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;def showPGNFileChooser() {&#xd;&#xa;    if(guiPGNFolderRB.selected) {&#xd;&#xa;        JFileChooser chooser = new JFileChooser();&#xd;&#xa;        chooser.setCurrentDirectory(new java.io.File(&quot;.&quot;));&#xd;&#xa;        chooser.setDialogTitle(&quot;Choose directory containing PGN files...&quot;);&#xd;&#xa;        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);&#xd;&#xa;        chooser.setAcceptAllFileFilterUsed(false);&#xd;&#xa;        &#xd;&#xa;        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {&#xd;&#xa;            return chooser.getCurrentDirectory()&#xd;&#xa;        } else {&#xd;&#xa;            return &quot;&quot;&#xd;&#xa;        }&#xd;&#xa;    } else {&#xd;&#xa;        return &quot;&quot;&#xd;&#xa;    }&#xd;&#xa;&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;def switchPGNinput() {&#xd;&#xa;    guiPGNClipboard.editable = guiPGNClipboardRB.selected    &#xd;&#xa;    guiPGNClipboard.enabled = guiPGNClipboardRB.selected&#xd;&#xa;    guiPGNFolder.editable = guiPGNFolderRB.selected&#xd;&#xa;    guiPGNFolder.enabled = guiPGNFolderRB.selected    &#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;def getNodeFEN(aNode) {&#xd;&#xa;    return aNode.attributes.containsKey(&quot;FEN&quot;) ? aNode[&quot;FEN&quot;] : &quot;&quot;//: PositionInterpreter.FEN_STARTING&#xd;&#xa;}&#xd;&#xa;/****************/&#xd;&#xa;/**** M A I N ***/&#xd;&#xa;/****************/&#xd;&#xa;&#xd;&#xa;/* Build Dialog window */&#xd;&#xa;def s = new SwingBuilder()&#xd;&#xa;s.setVariable(&apos;myDialog-properties&apos;,[:])&#xd;&#xa;def vars = s.variables&#xd;&#xa;def disableItem(item) {vars.guiPGNClip.editable = false}&#xd;&#xa;&#xd;&#xa;def dial = s.dialog(title:&quot;Paste branch ...&quot;, id:&apos;myDialog&apos;, modal:true, locationRelativeTo:ui.frame, owner:ui.frame, defaultCloseOperation:JFrame.DISPOSE_ON_CLOSE, pack:true, show:true) {&#xd;&#xa;    panel(id:&apos;pMain&apos;) {&#xd;&#xa;        boxLayout(axis:BXL.Y_AXIS)&#xd;&#xa;                &#xd;&#xa;        guiPGNSource = buttonGroup();&#xd;&#xa;        panel(alignmentX:0f) {&#xd;&#xa;            flowLayout(alignment:FL.LEFT)&#xd;&#xa;            guiPGNClipboardRB = radioButton(preferredSize: [150, 20], text:&quot;PGN from ClipBoard&quot;, buttonGroup:guiPGNSource, selected:true, mouseClicked: {switchPGNinput()});&#xd;&#xa;            scrollPane(horizontalScrollBarPolicy:JScrollPane.HORIZONTAL_SCROLLBAR_NEVER, verticalScrollBarPolicy:JScrollPane.VERTICAL_SCROLLBAR_ALWAYS) {&#xd;&#xa;                guiPGNClipboard = textArea( id:&apos;guiPGNClip&apos;, columns: 60, rows: 6, font: new Font(&quot;Consolas&quot;, Font.PLAIN, 11), text: getClipboardContents(), wrapStyleWord:true, lineWrap:true)&#xd;&#xa;            }&#xd;&#xa;        }  &#x9;&#xd;&#xa;        panel(alignmentX:0f) {&#xd;&#xa;            flowLayout(alignment:FL.LEFT)            &#xd;&#xa;            guiPGNFolderRB = radioButton(preferredSize: [150, 20], text:&quot;PGN from folder&quot;, buttonGroup:guiPGNSource, mouseClicked: {switchPGNinput()});&#xd;&#xa;            guiPGNFolder = textField(columns:60, font: new Font(&quot;Consolas&quot;, Font.PLAIN, 11), mouseClicked: { guiPGNFolder.text = showPGNFileChooser() }, editable: guiPGNFolderRB.selected)    &#xd;&#xa;            &#xd;&#xa;        }&#xd;&#xa;        panel(alignmentX:0f) {&#xd;&#xa;            flowLayout(alignment:FL.LEFT)&#xd;&#xa;            label(&apos;Language&apos;, preferredSize: [60, 24])&#xd;&#xa;&#x9;&#x9;&#x9;comboBox(id: &apos;guiLanguage&apos;, preferredSize: [100, 24], editable:true,&#xd;&#xa;&#x9;&#x9;&#x9;&#x9;items:SUPPORTED_LANGUAGES.collect{it.value}, selectedItem:SUPPORTED_LANGUAGES[LANGUAGE_CURRENT]) &#xd;&#xa;        }         &#xd;&#xa;        panel(alignmentX:0f) {&#xd;&#xa;            flowLayout(alignment:FL.LEFT)&#xd;&#xa;            button(&apos;Paste&apos;, preferredSize:[110, 24],&#xd;&#xa;                   actionPerformed:{&#xd;&#xa;                       vars.dialogResult = &apos;paste&apos;&#xd;&#xa;                       dispose()&#xd;&#xa;            })&#xd;&#xa;            button(&apos;Cancel&apos;, preferredSize:[120, 24],&#xd;&#xa;                   actionPerformed:{&#xd;&#xa;                       vars.dialogResult = &apos;cancel&apos;&#xd;&#xa;                       dispose()&#xd;&#xa;            })&#xd;&#xa;        }&#xd;&#xa;        panel(alignmentX:0f) {&#xd;&#xa;        }&#xd;&#xa;    }&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;/* Handle received data */&#xd;&#xa;pgn = &quot;&quot;&#xd;&#xa;if (vars.dialogResult == &apos;paste&apos;) {&#xd;&#xa;&#x9;/* Update attributes */&#xd;&#xa;    PGN_LANGUAGE = SUPPORTED_LANGUAGES.find{it.value == vars.guiLanguage.getSelectedItem()}.key&#xd;&#xa;    switch (guiPGNSource.getSelection()) {&#xd;&#xa;        case (guiPGNClipboardRB.model):&#xd;&#xa;            pgn = guiPGNClipboard.text&#xd;&#xa;            break;&#xd;&#xa;        case (guiPGNFolderRB.model):&#xd;&#xa;            dir = new File(guiPGNFolder.text)&#xd;&#xa;            if (dir.path != &quot;&quot;) {&#xd;&#xa;                dir.eachDirRecurse() { dir -&gt;  &#xd;&#xa;                    dir.eachFileMatch(~/.*.pgn/) { file -&gt;  &#xd;&#xa;                        pgn += new File(file.getPath()).text&#xd;&#xa;                    }  &#xd;&#xa;                }  &#xd;&#xa;            } // else no folder selected&#xd;&#xa;            &#xd;&#xa;            break;&#xd;&#xa;        default: break;&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;&#xd;&#xa;} else {&#xd;&#xa;    return;&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;/* Initialization */&#xd;&#xa;def translationNeeded = (PGN_LANGUAGE != LANGUAGE_CURRENT)&#xd;&#xa;def nextNodeStack = []&#xd;&#xa;def nextNodeStackAlt = []&#xd;&#xa;def pgnNotation = new Notation(pgn, PGN_LANGUAGE)&#xd;&#xa;def nodeNotation = new Notation(this.node.getDisplayedText(), LANGUAGE_CURRENT) // FEN is retrieved from PGN notation, not needed for nodeNotation&#xd;&#xa;&#xd;&#xa;/* Determine starting node */&#xd;&#xa;// Search for starting node with ancestors first order &#xd;&#xa;def currentNode = this.node&#xd;&#xa;while (pgnNotation.getFEN() != getNodeFEN(currentNode)) {&#xd;&#xa;    currentNode = currentNode.parent&#xd;&#xa;    if (currentNode == null) {&#xd;&#xa;        break;&#xd;&#xa;    }&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;if (currentNode == null) {&#xd;&#xa;    currentNode = this.node.createChild(&quot;Starting position&quot;) // no matching node found&#xd;&#xa;    currentNode.style.setName(&quot;Starting position&quot;)&#xd;&#xa;    currentNode[&quot;FEN&quot;] = pgnNotation.position.FEN&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;/* Walk through PGN */&#xd;&#xa;&#xd;&#xa;while (pgn.length() &gt; 0) {&#xd;&#xa;    if (pgnNotation.getMove() == &quot;&quot;) {&#xd;&#xa;        if (pgnNotation.getResult() != &quot;&quot;) {&#xd;&#xa;            currentNode.createChild(pgnNotation.getResult())&#xd;&#xa;            currentNode.style.setName(&quot;Explanation&quot;)&#xd;&#xa;        }&#xd;&#xa;        break;&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;    /* Parse ChessTree specific comment parts: Odds, Freq, Opening */&#xd;&#xa;    comments = pgnNotation.getComment()&#xd;&#xa;    odds = opening = freq = &quot;&quot;&#xd;&#xa;    &#xd;&#xa;    &#xd;&#xa;    odds = (comments =~ /(?i)\s*odds\s*:\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*;/)&#xd;&#xa;    if (odds.count&gt;0) {&#xd;&#xa;        comments = comments.replace(odds[0][0], &quot;&quot;)&#xd;&#xa;        odds = &quot;${odds[0][1]},${odds[0][2]},${odds[0][3]}&quot;&#xd;&#xa;    } else {&#xd;&#xa;        odds = &quot;&quot;&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;    freq = (comments =~ /(?i)\s*freq\s*:\s*(\d+)\s*;/)&#xd;&#xa;    if (freq.count&gt;0) {&#xd;&#xa;        comments = comments.replace(freq[0][0], &quot;&quot;)&#xd;&#xa;        freq = &quot;${freq[0][1]}&quot;&#xd;&#xa;    } else {&#xd;&#xa;        freq = &quot;&quot;&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;    opening = (comments =~ /(?i)\s*opening\s*:\s*([^;]+)\s*;/)&#xd;&#xa;    if (opening.count&gt;0) {&#xd;&#xa;        comments = comments.replace(opening[0][0], &quot;&quot;)&#xd;&#xa;        opening = &quot;${opening[0][1]}&quot;&#xd;&#xa;    } else {&#xd;&#xa;        opening = &quot;&quot;&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;    nag = pgnNotation.getNAGtext()&#xd;&#xa;    &#xd;&#xa;    //println pgnNotation.getMoveNumber() + &quot; _ &quot; + pgnNotation.getMove() + &quot; _ &quot; + pgnNotation.getComment()&#xd;&#xa;    //println &quot;      &quot; + odds + &quot; _ &quot; + freq + &quot; _ &quot; + opening&#xd;&#xa;    println &quot;*********************&quot;&#xd;&#xa;    println pgnNotation.getNumbering() + &quot; &quot; + pgnNotation.getMove()&#xd;&#xa;&#xd;&#xa;    //println pgnNotation.getRemainingText()&#xd;&#xa;    //println pgnNotation.branchingStarts() + &quot; / &quot; + pgnNotation.branchingEnds()&#xd;&#xa;&#xd;&#xa;    /* Handle translated notation within chesstree */&#xd;&#xa;    if (translationNeeded) {&#xd;&#xa;        pgnNotation.translateTo(LANGUAGE_CURRENT)&#xd;&#xa;        pgnNotation.setLanguage(PGN_LANGUAGE) // language is needed to set back as remainingText is not translated.&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;    /* Process branching */&#xd;&#xa;    def numOfUnusedBranches = pgnNotation.branchingEnds()-pgnNotation.branchingStarts()&#xd;&#xa;    if (numOfUnusedBranches&gt;0) { // Branch ends&#xd;&#xa;        numOfUnusedBranches.times({&#xd;&#xa;            currentNode=nextNodeStack.pop()&#xd;&#xa;            nextNodeStackAlt.pop()&#xd;&#xa;        })&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;    if (pgnNotation.branchingStarts()) { // Branch starts : at least one move is assumed after one &quot;(&quot;, no consecutive &quot;(&quot;-s!&#xd;&#xa;        if (pgnNotation.branchingEnds())&#xd;&#xa;        {&#xd;&#xa;            currentNode = nextNodeStackAlt[0]&#xd;&#xa;        } else {&#xd;&#xa;            nextNodeStackAlt.push(currentNode.parent)&#xd;&#xa;            nextNodeStack.push(currentNode)&#xd;&#xa;            currentNode = currentNode.parent&#xd;&#xa;        }&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;    /* Search for child node matching moveEng, FEN match is assumed */&#xd;&#xa;    matchingChild = currentNode.children.find {&#xd;&#xa;        nodeNotation.set(it.getDisplayedText()) // FEN is retrieved from PGN notation, not needed for nodeNotation&#xd;&#xa;        if (pgnNotation.getMoveEng() == nodeNotation.getMoveEng()) {&#xd;&#xa;            return true // found&#xd;&#xa;        } else {&#xd;&#xa;            return false // not found&#xd;&#xa;        }&#xd;&#xa;        &#xd;&#xa;    }&#xd;&#xa;&#xd;&#xa;    /* Process pgnNotation : node text */&#xd;&#xa;    if (matchingChild == null) {&#xd;&#xa;        // no mathing child found, create it&#xd;&#xa;        currentNode = currentNode.createChild()&#xd;&#xa;        currentNode.text = pgnNotation.getMove()&#xd;&#xa;    } else {&#xd;&#xa;        currentNode = matchingChild // matching child found, advance map processing&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;    /* Process pgnNotation : node[&quot;FEN&quot;] */&#xd;&#xa;    /* Update FEN from pgn even if matching child was found and its FEN was correct. &#xd;&#xa;    FEN counters, enpassant, castling infos are guaranteed by starting position search at script startup. */&#xd;&#xa;    currentNode[&quot;FEN&quot;] = pgnNotation.positionAfterMove.FEN    &#xd;&#xa;&#xd;&#xa;    /* Process pgnNotation : opening */&#xd;&#xa;    if (opening != &quot;&quot;) {&#xd;&#xa;        currentNode[&quot;Opening&quot;] = opening&#xd;&#xa;        if (currentNode.children.findAll{it.style.name==&quot;Opening&quot;}.size() &gt; 0){&#xd;&#xa;            currentNode.children.findAll{it.style.name==&quot;Opening&quot;}[-1].text = opening&#xd;&#xa;        } else {&#xd;&#xa;            opening = currentNode.createChild(opening)&#xd;&#xa;            opening.style.setName(&quot;Opening&quot;)&#xd;&#xa;            opening.setFree(true)&#xd;&#xa;        }&#xd;&#xa;    }&#xd;&#xa;    /* Process pgnNotation : odds */&#xd;&#xa;    if (odds != &quot;&quot;) {&#xd;&#xa;        currentNode[&quot;Odds&quot;] = odds&#xd;&#xa;        //TODO: wait for OddsView class, implement here update oddsNode, &#xd;&#xa;    }&#xd;&#xa;&#xd;&#xa;    /* Process pgnNotation : frequency */&#xd;&#xa;    if (freq != &quot;&quot;) {&#xd;&#xa;        currentNode[&quot;Freq&quot;] = freq&#xd;&#xa;        //TODO: wait for ConnectorView class, implement here update connector&#xd;&#xa;    }&#xd;&#xa;    /* Process pgnNotation : nag */&#xd;&#xa;    if (nag != &quot;&quot;) {&#xd;&#xa;        currentNode[&quot;NAG&quot;] = nag&#xd;&#xa;        pgnNotation.getNAGs().each {&#xd;&#xa;            def nagTxt = (it-&quot;\$&quot;)&#xd;&#xa;            if (nagTxt.isInteger()) nagTxt = nagTxt.toInteger();&#xd;&#xa;            else nagTxt = 0;&#xd;&#xa;            nagTxt = NotationTranslator.getNAG(nagTxt, &quot;sym&quot;)&#xd;&#xa;            &#xd;&#xa;            if (currentNode.details) {&#xd;&#xa;                currentNode.setDetailsText(&quot;${currentNode.details.to.plain}\n${nagTxt}&quot;)&#xd;&#xa;            } else {&#xd;&#xa;                currentNode.setDetailsText(nagTxt)&#xd;&#xa;            }&#xd;&#xa;        }&#xd;&#xa;    }   &#xd;&#xa;    /* Process pgnNotation : comments */&#xd;&#xa;    if (comments != &quot;&quot;) {&#xd;&#xa;        commentsNode = currentNode.createChild(&quot;&quot;)&#xd;&#xa;        commentsNode.style.setName(&quot;Explanation&quot;)&#xd;&#xa;        commentsNode.setFree(true)&#xd;&#xa;        //commentsNode.setDetailsText(comments)&#xd;&#xa;        commentsNode.setText(comments)&#xd;&#xa;        commentsNode.setHorizontalShift(70)&#xd;&#xa;        commentsNode.setVerticalShift(10)&#xd;&#xa;    }&#xd;&#xa;   &#xd;&#xa;    /* Advance pgnNotation processing */&#xd;&#xa;    pgn = pgnNotation.getRemainingText()&#xd;&#xa;    pgnNotation.set(pgn)&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;return 0" ID="ID_1021927148" CREATED="1727087633692" MODIFIED="1727087633697"/>
</node>
<node TEXT="updateChessTree.groovy" FOLDED="true" ID="ID_728751355" CREATED="1538315999856" MODIFIED="1578047832451">
<attribute_layout VALUE_WIDTH="135 pt"/>
<attribute NAME="menuTitleKey" VALUE="addons.${name}.updateChessTree"/>
<attribute NAME="menuLocation" VALUE="/menu_bar/addons.${name}"/>
<attribute NAME="executionMode" VALUE="on_single_node"/>
<attribute NAME="keyboardShortcut" VALUE=""/>
<attribute NAME="execute_scripts_without_asking" VALUE="true"/>
<attribute NAME="execute_scripts_without_file_restriction" VALUE="true"/>
<attribute NAME="execute_scripts_without_write_restriction" VALUE="true"/>
<attribute NAME="execute_scripts_without_exec_restriction" VALUE="true"/>
<attribute NAME="execute_scripts_without_network_restriction" VALUE="true"/>
<node TEXT="import org.freeplane.features.map.MapModel;&#xd;&#xa;import org.freeplane.features.attribute.AttributeRegistry;&#xd;&#xa;import org.freeplane.features.attribute.AttributeRegistryElement;&#xd;&#xa;&#xd;&#xa;import org.freeplane.plugin.script.proxy.ScriptUtils&#xd;&#xa;import groovy.swing.SwingBuilder&#xd;&#xa;import java.awt.FlowLayout as FL&#xd;&#xa;import java.awt.event.ActionEvent;&#xd;&#xa;import java.awt.event.ActionListener;&#xd;&#xa;import java.awt.Dimension;&#xd;&#xa;import java.awt.KeyStroke;&#xd;&#xa;import java.awt.event.KeyEvent;&#xd;&#xa;import java.awt.event.KeyAdapter;&#xd;&#xa;import java.awt.Action;&#xd;&#xa;&#xd;&#xa;import javax.swing.BoxLayout as BXL&#xd;&#xa;import javax.swing.JFrame&#xd;&#xa;import javax.swing.AbstractAction;&#xd;&#xa;import javax.swing.Action;&#xd;&#xa;import javax.swing.BoxLayout;&#xd;&#xa;import javax.swing.JComponent;&#xd;&#xa;import javax.swing.JList;&#xd;&#xa;import javax.swing.JPanel;&#xd;&#xa;import javax.swing.KeyStroke;&#xd;&#xa;import groovy.transform.Field&#xd;&#xa;&#xd;&#xa;import ChessTree.Notation&#xd;&#xa;import ChessTree.NotationTranslator&#xd;&#xa;import ChessTree.ChessTreeSettings&#xd;&#xa;import ChessTree.OddsView&#xd;&#xa;import ChessTree.ConnectorView&#xd;&#xa;import ChessTree.PositionInterpreter&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;/*************/&#xd;&#xa;/** Globals **/&#xd;&#xa;/*************/&#xd;&#xa;cts = new ChessTreeSettings(this.node.map)&#xd;&#xa;&#xd;&#xa;DICTIONARY = cts.DICTIONARY&#xd;&#xa;&#xd;&#xa;ROOT = this.node.map.root&#xd;&#xa;LANGUAGE_CURRENT = cts.get(&quot;chesstree_language&quot;)&#xd;&#xa;NUMBERING_CURRENT = cts.get(&quot;chesstree_numbering&quot;)&#xd;&#xa;NAG_CURRENT = cts.get(&quot;chesstree_NAG&quot;)&#xd;&#xa;CONNECTOR_CURRENT = cts.get(&quot;chesstree_connectors&quot;)&#xd;&#xa;ODDS_CURRENT = cts.get(&quot;chesstree_odds&quot;)&#xd;&#xa;BOARDSIZE_CURRENT = cts.get(&quot;chesstree_board_size&quot;)&#xd;&#xa;&#xd;&#xa;/* Globals for odds image updater */ &#xd;&#xa;mapfile=this.node.map.file&#xd;&#xa;mapfilePath = mapfile.parent.replace(&quot;\\&quot;, &quot;/&quot;)&#xd;&#xa;mapfileName = mapfile.name.lastIndexOf(&apos;.&apos;).with {it != -1 ? mapfile.name[0..&lt;it] : mapfile.name}&#xd;&#xa;imgAbsPath = mapfilePath + &quot;/img_&quot; + mapfileName&#xd;&#xa;imgRelPath = &quot;./img_&quot; + mapfileName&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;/*****************/&#xd;&#xa;/**** Settings ***/ &#xd;&#xa;/*****************/&#xd;&#xa;&#xd;&#xa;/* Build Dialog window */&#xd;&#xa;def s = new SwingBuilder()&#xd;&#xa;s.setVariable(&apos;myDialog-properties&apos;,[:])&#xd;&#xa;def vars = s.variables&#xd;&#xa;def disableItem(item) {item.enabled = !item.enabled}&#xd;&#xa;def dial = s.dialog(title:&quot;ChessTree settings...&quot;, id:&apos;myDialog&apos;, modal:true, &#xd;&#xa;            locationRelativeTo:ui.frame, owner:ui.frame, defaultCloseOperation:JFrame.DISPOSE_ON_CLOSE, &#xd;&#xa;            preferredSize: [280, 300], pack:true, show:true) {&#xd;&#xa;    panel(id:&apos;pMain&apos;) {&#xd;&#xa;        boxLayout(axis:BXL.Y_AXIS)&#xd;&#xa;        /* &#xd;&#xa;        Text: Current language is ___. Check tooltip if you don&apos;t agree. &#xd;&#xa;        Tooltip: If the language of notation in the mindmap is inconsistent you should edit the mindmap manually to make its language consistent. &#xd;&#xa;        Otherwise change below settings and click on &quot;Save&quot;. It affects settings saved in Mindmap properties, Mindmap content will not change. &#xd;&#xa;        */&#xd;&#xa;        panel(alignmentX:0f) {&#xd;&#xa;            flowLayout(alignment:FL.LEFT)&#xd;&#xa;            label(&apos;Language&apos;, preferredSize: [120, 24], mouseClicked:{disableItem(guiCategory)})&#xd;&#xa;&#x9;&#x9;&#x9;comboBox(id: &apos;chesstree_language&apos;, preferredSize: [100, 24], editable:true,&#xd;&#xa;&#x9;&#x9;&#x9;&#x9;items:cts.SUPPORTED_LANGUAGES.collect{it.value}, selectedItem:cts.SUPPORTED_LANGUAGES[LANGUAGE_CURRENT]) &#xd;&#xa;        }  &#x9;&#x9;&#xd;&#xa;        panel(alignmentX:0f) {&#xd;&#xa;            flowLayout(alignment:FL.LEFT)&#xd;&#xa;            label(&apos;Numbering&apos;, preferredSize: [120, 24], mouseClicked:{disableItem(guiCategory)})&#xd;&#xa;&#x9;&#x9;&#x9;comboBox(id: &apos;chesstree_numbering&apos;, preferredSize: [100, 24], editable:true,&#xd;&#xa;&#x9;&#x9;&#x9;&#x9;items:cts.SUPPORTED_NUMBERING.collect{it.value}, selectedItem:cts.SUPPORTED_NUMBERING[NUMBERING_CURRENT]) &#xd;&#xa;        }  &#x9;&#x9;&#xd;&#xa;        panel(alignmentX:0f) {&#xd;&#xa;            flowLayout(alignment:FL.LEFT)&#xd;&#xa;            label(&apos;NAG&apos;, preferredSize: [120, 24], mouseClicked:{disableItem(guiCategory)})&#xd;&#xa;&#x9;&#x9;&#x9;comboBox(id: &apos;chesstree_NAG&apos;, preferredSize: [100, 24], editable:true,&#xd;&#xa;&#x9;&#x9;&#x9;&#x9;items:cts.SUPPORTED_NAG.collect{it.value}, selectedItem:cts.SUPPORTED_NAG[NAG_CURRENT]) &#xd;&#xa;        }  &#x9;&#x9;&#x9;&#xd;&#xa;        panel(alignmentX:0f) {&#xd;&#xa;            flowLayout(alignment:FL.LEFT)&#xd;&#xa;            label(&apos;Connectors&apos;, preferredSize: [120, 24], mouseClicked:{disableItem(guiCategory)})&#xd;&#xa;&#x9;&#x9;&#x9;comboBox(id: &apos;chesstree_connectors&apos;, preferredSize: [100, 24], editable:true,&#xd;&#xa;&#x9;&#x9;&#x9;&#x9;items:cts.SUPPORTED_CONNECTOR.collect{it.value}, selectedItem:cts.SUPPORTED_CONNECTOR[CONNECTOR_CURRENT]) &#xd;&#xa;        }  &#x9;&#x9;&#xd;&#xa;        panel(alignmentX:0f) {&#xd;&#xa;            flowLayout(alignment:FL.LEFT)&#xd;&#xa;            label(&apos;Odds&apos;, preferredSize: [120, 24], mouseClicked:{disableItem(guiCategory)})&#xd;&#xa;&#x9;&#x9;&#x9;comboBox(id: &apos;chesstree_odds&apos;, preferredSize: [100, 24], editable:true,&#xd;&#xa;&#x9;&#x9;&#x9;&#x9;items:cts.SUPPORTED_ODDS.collect{it.value}, selectedItem:cts.SUPPORTED_ODDS[ODDS_CURRENT]) &#xd;&#xa;        }  &#x9;&#x9;&#xd;&#xa;        panel(alignmentX:0f) {&#xd;&#xa;            flowLayout(alignment:FL.LEFT)&#xd;&#xa;            label(&apos;Board size&apos;, preferredSize: [120, 24], mouseClicked:{disableItem(guiCategory)})&#xd;&#xa;&#x9;&#x9;&#x9;comboBox(id: &apos;chesstree_board_size&apos;, preferredSize: [100, 24], editable:true,&#xd;&#xa;&#x9;&#x9;&#x9;&#x9;items:cts.SUPPORTED_BOARDSIZE.collect{it.value}, selectedItem:cts.SUPPORTED_BOARDSIZE[BOARDSIZE_CURRENT]) &#xd;&#xa;        }&#xd;&#xa;        &#xd;&#xa;        panel(alignmentX:0f) {&#xd;&#xa;            flowLayout(alignment:FL.LEFT)&#xd;&#xa;            label(&apos;Apply for full tree ChessTree (not only current branch)&apos;, preferredSize: [120, 24], mouseClicked:{disableItem(guiCategory)})&#xd;&#xa;&#x9;&#x9;&#x9;checkBox(id: &apos;chesstree_updateAll&apos;, preferredSize: [100, 24], selected:false) &#xd;&#xa;        } &#xd;&#xa;                &#xd;&#xa;        panel(alignmentX:0f) {&#xd;&#xa;            flowLayout(alignment:FL.LEFT)&#xd;&#xa;            button(&apos;Save &amp; Apply&apos;, preferredSize:[120, 24],&#xd;&#xa;                   actionPerformed:{&#xd;&#xa;                       vars.dialogResult = &apos;save&amp;apply&apos;&#xd;&#xa;                       dispose()&#xd;&#xa;            })&#xd;&#xa;            button(&apos;Save&apos;, preferredSize:[120, 24],&#xd;&#xa;                   actionPerformed:{&#xd;&#xa;                       vars.dialogResult = &apos;save&apos;&#xd;&#xa;                       dispose()&#xd;&#xa;            })&#xd;&#xa;        }&#xd;&#xa;        panel(alignmentX:0f) {&#xd;&#xa;            button(&apos;Cancel&apos;, preferredSize:[120, 24],&#xd;&#xa;                   actionPerformed:{&#xd;&#xa;                       vars.dialogResult = &apos;cancel&apos;&#xd;&#xa;                       dispose()&#xd;&#xa;            })&#xd;&#xa;        }&#xd;&#xa;    }&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;/*************/&#xd;&#xa;/**** Main ***/ &#xd;&#xa;/*************/&#xd;&#xa;if (vars.dialogResult == &apos;save&amp;apply&apos;) {&#xd;&#xa;    /* Handle received data */&#xd;&#xa;    def language_next = cts.SUPPORTED_LANGUAGES.find{it.value == vars[&quot;chesstree_language&quot;].getSelectedItem()}.key&#xd;&#xa;    def numbering_next = cts.SUPPORTED_NUMBERING.find{it.value == vars[&quot;chesstree_numbering&quot;].getSelectedItem()}.key&#xd;&#xa;    def NAG_next = cts.SUPPORTED_NAG.find{it.value == vars[&quot;chesstree_NAG&quot;].getSelectedItem()}.key&#xd;&#xa;    def connector_next = cts.SUPPORTED_CONNECTOR.find{it.value == vars[&quot;chesstree_connectors&quot;].getSelectedItem()}.key&#xd;&#xa;    def odds_next = cts.SUPPORTED_ODDS.find{it.value == vars[&quot;chesstree_odds&quot;].getSelectedItem()}.key&#xd;&#xa;    def boardsize_next = cts.SUPPORTED_BOARDSIZE.find{it.value == vars[&quot;chesstree_board_size&quot;].getSelectedItem()}.key&#xd;&#xa;    &#xd;&#xa;    def updatedBranch=vars[&quot;chesstree_updateAll&quot;].selected?ROOT:this.node&#xd;&#xa;    &#xd;&#xa;    if ((LANGUAGE_CURRENT != language_next) || &#xd;&#xa;        (NUMBERING_CURRENT != numbering_next) ||&#xd;&#xa;        (true != vars[&quot;chesstree_updateAll&quot;].selected)) { /* Update branch anyway */&#xd;&#xa;        // notation text modification is needed&#xd;&#xa;        updateNotation(updatedBranch, language_next, numbering_next)&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;    if (NAG_CURRENT != NAG_next) {&#xd;&#xa;        // TODO: updateDetails(hide/show)...&#xd;&#xa;        // TODO: use updatedBranch&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;    if (ODDS_CURRENT != odds_next) {&#xd;&#xa;        // TODO: use updatedBranch&#xd;&#xa;        oddsView = new OddsView(this.node.map)&#xd;&#xa;        oddsView.updateCharts(odds_next==&quot;show&quot;)&#xd;&#xa;    }&#xd;&#xa;    if (CONNECTOR_CURRENT != connector_next) {&#xd;&#xa;        // TODO: use updatedBranch&#xd;&#xa;        connectorView = new ConnectorView(this.node.map)&#xd;&#xa;        connectorView.updateConnectors(connector_next==&quot;freq&quot;)&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;    if (BOARDSIZE_CURRENT != language_next) {&#xd;&#xa;        // TODO update board size on each node having board&#xd;&#xa;        // TODO: use updatedBranch&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;    /* Update properties */&#xd;&#xa;    saveSettings(vars)&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;if (vars.dialogResult == &apos;save&apos;) {&#xd;&#xa;    saveSettings(vars)&#xd;&#xa;}&#xd;&#xa;return 0&#xd;&#xa;&#xd;&#xa;/*************/&#xd;&#xa;/* Functions */&#xd;&#xa;/*************/&#xd;&#xa;def saveSettings(vars) {&#xd;&#xa;    cts.getSupportedProperties().each{&#xd;&#xa;        def value = &quot;&quot;&#xd;&#xa;        if (vars[it] == null) println &quot;ERROR: &quot; + it&#xd;&#xa;        value = vars[it].getSelectedItem()&#xd;&#xa;        cts.setByValue(it, value)&#xd;&#xa;    }&#xd;&#xa;    this.node.map.save(true) // true: allow interaction&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;def updateNotation(updatedBranch, language_next, numbering_next) {&#xd;&#xa;    def notation = new Notation(&quot;&quot;, LANGUAGE_CURRENT)&#xd;&#xa;    /* Translate each node */&#xd;&#xa;    updatedBranch.findAll().findAll{it.hasStyle(&quot;White moves&quot;) || it.hasStyle(&quot;Black moves&quot;)}.each {aNode-&gt;&#xd;&#xa;        /* Breadth first order guarantees existence FEN tag of parent */&#xd;&#xa;        def fen = PositionInterpreter.FEN_EMPTY&#xd;&#xa;        &#xd;&#xa;        /* Parent&apos;s FEN is needed in order to get correct FEN for current move, and calculate positionAfterMove. */&#xd;&#xa;        if (aNode.parent != null ) {&#xd;&#xa;            if (!aNode.parent.attributes.getNames().contains(&quot;FEN&quot;)) {&#xd;&#xa;                aNode.parent[&quot;FEN&quot;] = PositionInterpreter.FEN_STARTING&#xd;&#xa;            } &#xd;&#xa;            fen = aNode.parent[&quot;FEN&quot;]&#xd;&#xa;        }&#xd;&#xa;                &#xd;&#xa;        def text = aNode.getDisplayedText()&#xd;&#xa;        if ((text != null) &amp;&amp; (text != &quot;&quot;)) {&#xd;&#xa;            notation.setWithFEN(fen.toString(), text)&#xd;&#xa;        }&#xd;&#xa;        text = &quot;&lt;html&gt;&lt;body&gt;&quot;&#xd;&#xa;        if (NUMBERING_CURRENT != numbering_next) {&#xd;&#xa;            if ((numbering_next == &quot;white&quot;) &amp;&amp; aNode.hasStyle(&quot;White moves&quot;)) {&#xd;&#xa;                text += &quot;&quot;&quot;&lt;p&gt;&lt;font size=&quot;1&quot;&gt;${notation.getNumbering()}&lt;/font&gt;&lt;/p&gt;&quot;&quot;&quot;&#xd;&#xa;            } else if (numbering_next == &quot;both&quot;) {&#xd;&#xa;                text += &quot;&quot;&quot;&lt;p&gt;&lt;font size=&quot;1&quot;&gt;${notation.getNumbering()}&lt;/font&gt;&lt;/p&gt;&quot;&quot;&quot;&#xd;&#xa;            } else { // &quot;Black moves&quot; and &quot;white&quot;, or &quot;none&quot;&#xd;&#xa;                // nothing to do &#xd;&#xa;            }&#xd;&#xa;        }&#xd;&#xa;        if (LANGUAGE_CURRENT != language_next) {&#xd;&#xa;            notation.translateTo(language_next)&#xd;&#xa;        }&#xd;&#xa;        text += &quot;&quot;&quot;&lt;p&gt;${notation.getMove()}&lt;/p&gt;&quot;&quot;&quot;&#xd;&#xa;        text += &quot;&lt;/body&gt;&lt;/html&gt;&quot;&#xd;&#xa;        &#xd;&#xa;        aNode.setText(text)&#xd;&#xa;        aNode[&quot;FEN&quot;] = notation.positionAfterMove&#xd;&#xa;    }&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;" ID="ID_1811054791" CREATED="1727087633697" MODIFIED="1727087633699"/>
</node>
<node TEXT="copyPGN.groovy" FOLDED="true" ID="ID_520278260" CREATED="1578047737614" MODIFIED="1578047866316">
<attribute_layout VALUE_WIDTH="250 pt"/>
<attribute NAME="menuTitleKey" VALUE="addons.${name}.copyPGN"/>
<attribute NAME="menuLocation" VALUE="/menu_bar/addons.${name}"/>
<attribute NAME="executionMode" VALUE="on_single_node"/>
<attribute NAME="keyboardShortcut" VALUE=""/>
<attribute NAME="execute_scripts_without_asking" VALUE="true"/>
<attribute NAME="execute_scripts_without_file_restriction" VALUE="true"/>
<attribute NAME="execute_scripts_without_write_restriction" VALUE="true"/>
<attribute NAME="execute_scripts_without_exec_restriction" VALUE="true"/>
<attribute NAME="execute_scripts_without_network_restriction" VALUE="true"/>
<node TEXT="import java.awt.Toolkit&#xd;&#xa;import java.awt.datatransfer.Clipboard&#xd;&#xa;import java.awt.datatransfer.DataFlavor&#xd;&#xa;import java.awt.datatransfer.StringSelection&#xd;&#xa;import ChessTree.Notation&#xd;&#xa;import ChessTree.PositionInterpreter&#xd;&#xa;import ChessTree.ChessTreeSettings&#xd;&#xa;&#xd;&#xa;/*************/&#xd;&#xa;/** Globals **/&#xd;&#xa;/*************/&#xd;&#xa;chessTreeSettings = new ChessTreeSettings(this.node.map)&#xd;&#xa;LANGUAGE_CURRENT = chessTreeSettings.get(&quot;chesstree_language&quot;).toString()&#xd;&#xa;&#xd;&#xa;static void setClipboardContents(final String contents){    Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(contents), null)    }&#xd;&#xa;&#xd;&#xa;PGN = &quot;&quot;&#xd;&#xa;&#xd;&#xa;currentNotation = new Notation(&quot;&quot;, LANGUAGE_CURRENT)&#xd;&#xa;currentNode=this.node&#xd;&#xa;currentNode=currentNode.findAllDepthFirst().find{it.attributes.containsKey(&quot;FEN&quot;) &amp;&amp; it.hasStyle(&quot;Starting position&quot;)}&#xd;&#xa;def walkThrough(aNode, isNumberingNeeded) {&#xd;&#xa;    def children = aNode.children.findAll{it.attributes.containsKey(&quot;FEN&quot;) &amp;&amp; (it.hasStyle(&quot;White moves&quot;)||it.hasStyle(&quot;Black moves&quot;))}&#xd;&#xa;    def numberingNeeded = isNumberingNeeded&#xd;&#xa;    if (children.size()&gt;1) {&#xd;&#xa;        currentNotation.setWithFEN(children[0].parent[&quot;FEN&quot;].toString(), children[0].text)&#xd;&#xa;        numberingNeeded |= (currentNotation.getColor() == &quot;white&quot;)&#xd;&#xa;        PGN += (numberingNeeded?(currentNotation.getNumbering() + &quot; &quot;):&quot;&quot;) + children[0].text + &quot; &quot;&#xd;&#xa;        (children-children[0]).each {&#xd;&#xa;            currentNotation.setWithFEN(it.parent[&quot;FEN&quot;].toString(), it.text)&#xd;&#xa;            PGN += &quot;(&quot; + currentNotation.getNumbering() + &quot; &quot; + it.text + &quot; &quot;&#xd;&#xa;            walkThrough(it, false)&#xd;&#xa;        }&#xd;&#xa;        walkThrough(children[0], true)&#xd;&#xa;    } else if (children.size==1) {&#xd;&#xa;        currentNotation.setWithFEN(children[0].parent[&quot;FEN&quot;].toString(), children[0].text)&#xd;&#xa;        numberingNeeded |= (currentNotation.getColor() == &quot;white&quot;)&#xd;&#xa;        PGN += (numberingNeeded?(currentNotation.getNumbering() + &quot; &quot;):&quot;&quot;) + children[0].text + &quot; &quot;&#xd;&#xa;        walkThrough(children[0], false)&#xd;&#xa;    } else {&#xd;&#xa;        PGN = PGN[0..-2]&#xd;&#xa;        PGN += &quot;) &quot;&#xd;&#xa;    }&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;walkThrough(currentNode, true)&#xd;&#xa;PGN = PGN[0..-3] // last &quot;)&quot; is removed&#xd;&#xa;println PGN&#xd;&#xa;setClipboardContents(PGN)" ID="ID_1140305363" CREATED="1727087633699" MODIFIED="1727087633700"/>
</node>
<node TEXT="compareTrees.groovy" FOLDED="true" ID="ID_627302378" CREATED="1578239373684" MODIFIED="1578585827221">
<attribute_layout VALUE_WIDTH="250 pt"/>
<attribute NAME="menuTitleKey" VALUE="addons.${name}.compareTrees"/>
<attribute NAME="menuLocation" VALUE="/menu_bar/addons.${name}"/>
<attribute NAME="executionMode" VALUE="on_single_node"/>
<attribute NAME="keyboardShortcut" VALUE=""/>
<attribute NAME="execute_scripts_without_asking" VALUE="true"/>
<attribute NAME="execute_scripts_without_file_restriction" VALUE="true"/>
<attribute NAME="execute_scripts_without_write_restriction" VALUE="true"/>
<attribute NAME="execute_scripts_without_exec_restriction" VALUE="true"/>
<attribute NAME="execute_scripts_without_network_restriction" VALUE="true"/>
<node TEXT="if (c.getSelecteds().size()!=2) {&#xd;&#xa;    ui.showMessage(&quot;Select exactly 2 nodes with style \&quot;Starting position\&quot;.&quot;, 0)&#xd;&#xa;    return 1&#xd;&#xa;} else {&#xd;&#xa;    if (!c.getSelecteds().every{it.hasStyle(&quot;Starting position&quot;)}) {&#xd;&#xa;        ui.showMessage(&quot;Select exactly 2 nodes with style \&quot;Starting position\&quot;.&quot;, 0)&#xd;&#xa;        return 2&#xd;&#xa;    }&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;original = c.getSelecteds()[0]&#xd;&#xa;modified = c.getSelecteds()[1]&#xd;&#xa;merged = original.parent.createChild(&quot;Merge&quot;)&#xd;&#xa;merged.style.setName(&quot;Starting position&quot;)&#xd;&#xa;merged[&quot;FEN&quot;] = original[&quot;FEN&quot;] // TODO compare FENs!&#xd;&#xa;// TODO add position comparison, in case of a position match add connector&#xd;&#xa;merged[&quot;Status&quot;] = &quot;&quot;&quot;= def icons = this.node.findAllDepthFirst().findAll{it.hasStyle(&quot;Diff.Added&quot;)||it.hasStyle(&quot;Diff.Priority&quot;)||it.hasStyle(&quot;Diff.Removed&quot;)}.collect{it.style.getStyleNode().icons.first}.unique()&#xd;&#xa;this.node.icons.clear()&#xd;&#xa;this.node.icons.addAll(icons)&#xd;&#xa;return this.node.icons.getIcons().size()?&quot;In progress&quot;:&quot;Completed.&quot;&#xd;&#xa;&quot;&quot;&quot;&#xd;&#xa;merged[&quot;script.ChessTree&quot;] = &quot;&quot;&quot;&#xd;&#xa;mergeFlags = this.node.findAllDepthFirst().findAll{it.hasStyle(&quot;Diff.Added&quot;)||it.hasStyle(&quot;Diff.Priority&quot;)||it.hasStyle(&quot;Diff.Removed&quot;)}.each{&#xd;&#xa;    it.delete()&#xd;&#xa;}&#xd;&#xa;return 0&#xd;&#xa;&quot;&quot;&quot;&#xd;&#xa;merged.link.text=&quot;menuitem:_\$ExecuteScriptForSelectionAction\$0&quot;&#xd;&#xa;&#xd;&#xa;def walkThrough(orig, modd, merg) {&#xd;&#xa;    def origChildrenTxt = orig.children.collect{it.text}&#xd;&#xa;    def moddChildrenTxt = modd.children.collect{it.text}&#xd;&#xa;    def removedChildrenTxt = origChildrenTxt-moddChildrenTxt&#xd;&#xa;    def addedChildrenTxt = moddChildrenTxt-origChildrenTxt&#xd;&#xa;    def commonChildrenTxt = origChildrenTxt.intersect(moddChildrenTxt)&#xd;&#xa;    /* Check branch priority */&#xd;&#xa;    // index distance of common items are the same&#xd;&#xa;    if (commonChildrenTxt.collect{origChildrenTxt.indexOf(it)-moddChildrenTxt.indexOf(it)}.unique().size()&gt;1) {&#xd;&#xa;        def info=merg.createChild(&quot;&quot;)&#xd;&#xa;        info.style.setName(&quot;Diff.Priority&quot;)&#xd;&#xa;        info.setFree(true)&#xd;&#xa;        info.setVerticalShift(-30)&#xd;&#xa;    }&#xd;&#xa;    /* DEBUG */&#xd;&#xa;    //println &quot;${orig}&quot;&#xd;&#xa;    //println &quot;   Added: ${addedChildrenTxt}&quot;&#xd;&#xa;    //println &quot;   Removed: ${removedChildrenTxt}&quot;&#xd;&#xa;    //println &quot;   Common: ${commonChildrenTxt}&quot;&#xd;&#xa;    &#xd;&#xa;    /* Check added */&#xd;&#xa;    addedChildrenTxt.collect{txt-&gt;modd.children.findAll{txt==it.text}}.each{ &#xd;&#xa;        def info = merg.appendBranch(it)&#xd;&#xa;        info = info.createChild(&quot;&quot;)&#xd;&#xa;        info.style.setName(&quot;Diff.Added&quot;)&#xd;&#xa;        info.setFree(true)&#xd;&#xa;        info.setVerticalShift(-30)&#xd;&#xa;    }&#xd;&#xa;    /* Check removed */&#xd;&#xa;    removedChildrenTxt.collect{txt-&gt;orig.children.findAll{txt==it.text}}.each{ &#xd;&#xa;        def info = merg.appendBranch(it)&#xd;&#xa;        info = info.createChild(&quot;&quot;)&#xd;&#xa;        info.style.setName(&quot;Diff.Removed&quot;)&#xd;&#xa;        info.setFree(true)&#xd;&#xa;        info.setVerticalShift(-30)&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;    /* Unchanged: copy */&#xd;&#xa;    commonChildrenTxt.collect{txt-&gt;&#xd;&#xa;        [orig:orig.children.findAll{txt==it.text}[0],&#xd;&#xa;         modd:modd.children.findAll{txt==it.text}[0]]&#xd;&#xa;    }.each {&#xd;&#xa;        merg = merg.appendChild(it.orig)&#xd;&#xa;        walkThrough(it.orig, it.modd, merg)&#xd;&#xa;    }&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;walkThrough(original, modified, merged)&#xd;&#xa;return 0" ID="ID_702003582" CREATED="1727087633701" MODIFIED="1727087633702"/>
</node>
</node>
<node TEXT="lib" POSITION="bottom_or_right" ID="ID_328124690" CREATED="1521562135185" MODIFIED="1578504823289">
<edge COLOR="#7c007c"/>
<richcontent TYPE="NOTE">
<html>
  <head>
    
  </head>
  <body>
    <p>
      An add-on may contain any number of nodes containing binary files (normally .jar files) to be added to the add-on's classpath.
    </p>
    <p>
      
    </p>
    <p>
      &#160;- The immediate child nodes contain the name of the file, e.g. 'mysql-connector-java-5.1.25.jar'). Put the file into a 'lib' subdirectory of the add-on base directory.
    </p>
    <p>
      
    </p>
    <p>
      &#160;- The child nodes of these nodes contain the actual files.
    </p>
    <p>
      
    </p>
    <p>
      &#160;- Any lib file will be extracted in &lt;installationbase&gt;/&lt;addonname&gt;/lib.
    </p>
    <p>
      
    </p>
    <p>
      &#160;- The files will be processed in the sequence as seen in the map.
    </p>
  </body>
</html></richcontent>
<attribute_layout VALUE_WIDTH="250 pt"/>
</node>
<node TEXT="zips" POSITION="bottom_or_right" ID="ID_188436602" CREATED="1521562135191" MODIFIED="1578504823294">
<edge COLOR="#007c7c"/>
<richcontent TYPE="NOTE">
<html>
  <head>
    
  </head>
  <body>
    <p>
      An add-on may contain any number of nodes containing zip files.
    </p>
    <p>
      
    </p>
    <p>
      &#160;- The immediate child nodes contain a description of the zip. The devtools script releaseAddOn.groovy allows automatic zip creation if the name of this node matches a directory in the current directory.
    </p>
    <p>
      
    </p>
    <p>
      &#160;- The child nodes of these nodes contain the actual zip files.
    </p>
    <p>
      
    </p>
    <p>
      &#160;- Any zip file will be extracted in the &lt;installationbase&gt;. Currently, &lt;installationbase&gt; is always Freeplane's &lt;userhome&gt;, e.g. ~/.freeplane/1.3.
    </p>
    <p>
      
    </p>
    <p>
      &#160;- The files will be processed in the sequence as seen in the map.
    </p>
  </body>
</html></richcontent>
<attribute_layout VALUE_WIDTH="250 pt"/>
<node TEXT="templates" FOLDED="true" ID="ID_1849114914" CREATED="1521565216661" MODIFIED="1521565216662">
<node TEXT="UEsDBBQACAgIAImj8lAAAAAAAAAAAAAAAAAfAAAAdGVtcGxhdGVzL3RlbXBsYXRlLkNoZXNzVH&#xa;JlZS5tbe1c+3PaSLb+far2f+hhUlP2bIDWs6W1iUsGHFPB4AGczGzsVQloQDcgEUkYe+fm/u33&#xa;tB4g9CDYHhzvbPDEBqlf5zvfefRRD8czY45uqeOatlUpjBxK51PDoogrySVcePO3H45/LBZ7Nr&#xa;o16RJ5E9NFI3NKX6OhvbSmtjFErAuamdYQwUhz0xoj1x55S8Oh6Gw12sixZ2jiefN/lMurOUqu&#xa;vXAGdGQ7Y1qyqIeKRTaf4XmO2V94VHfo2HQ95x51z9sfdK3X6zROr3r1bqXg0ikdeHTIFojgFe&#xa;tkGTOKLrTWldasFDxnQQuopV3UK4WmYY0XxphGfRL9bo3pgqL3WvMK2lJrXCjv0G6ysHZq597P&#xa;dmoH2KzaHZc3hWLYlNPgsMuWPaSoV/+tVylUJ9R1ewBxATXbVa3Z+Ge9pnd7vzfreqd+ViloC8&#xa;+eGZ45aBr39sIrTektnZYc2/YK6KzdrNVrsApj6kL/Brxt1HSREE7iMMcVULVT13qsBSfxHE8U&#xa;ReEEDhfQRbvWOGsEN0RMeEFWJVGBDu/fapf6r1daq9fo/V4pSCWM5l7hzfHEtj+Farkw5l3vfr&#xa;pSy/HAtoamB3Q0prrL7rhx4FJ3kVbtNd7XI13HRO0OHBNmQ02t2wtvx0ZKqIHeAZquvhoeregG&#xa;2vMH4jY1WE6t5JHL/DAxPbAg+5a6W9cKQ/7Pwhp46zUmWiQkgmaeYVo5Mp3VW4WIdaiPQIdar3&#xa;quV7VufUWA4JJ2edlp/9aAD/Xm79G9ctbcvqA6/byAJrFZ1zwMKDqkI2Mx9VJj+JDmi/jnIX46&#xa;NQafvi3iy/8uxP9cjgf2GJN34VLH95HgsNwLmCU5cKLrm0u9dXVxWu80Wm9RBZUProd/vy4dXJ&#xa;euS4cnh+Wff7obHv3th0v9ov2+7t8/+IjbN0X268D/Da3+96B0AteN4uTm5CNXVG5ODk/u4J9/&#xa;xb9wUGGjHX68/vv1Tzcn61FbWjDpwfWr6+Ef3GvhCwz28V/Xy5s/8Gv+y+FqAZbtGUy+S6AYdS&#xa;y/08nMXRz+61VMgJNr95dXwVqDdzD+arbwj0O9BQxwwAJ4iUWL0ph6NdOFOHxPhz165x0cokrl&#xa;/1BiysPjcohYhhrKST3soquvKKZcbrg9WKRPGH0OWYTlgeGEYpijuAjB3UrFWkynhygU0TeWo7&#xa;A9hfeIdfox2au0slq3FJntO3p/8PPnhe0dsRn9N4dbxv0j/MCWDwaGZqCf1Oo+Jga8QQByqMXS&#xa;L+jgY395c4jgHTAQMRrC1fJhbGS2+lnJNf9NfQ0hvLmiWMvUoqKFLeZDw6OwBFhgDIgdEcgYcG&#xa;BPbbA3YA2M+LMxt92jZT/4W5x9xMD+m4xezPpbi1mfrrr6bfmbkmc3LI+OqQMiAgrr4SuVcPTg&#xa;zwn3D5xcT+Kjr+yVwIcpPNir/Au6dCDtsTzEQAlao6XpTRCdzb175Bl9cGbLCbWQ6aGl4YLEjg&#xa;MJJ/qlnDHeBr5rBmSofkP3r2IwhgR4lcAowQX2+pIh8Ffk3bYiFLxTyhs/6NUf68V9QUX4wXAt&#xa;sbovQd/NGZPrC8ka0gIU6vdZprpG/b5sOq7wz1Pc0H9oWvE9yP3lg5xPmO9B7nuQ+x7k/opBrv&#xa;+fEOQy7kT1luO5Y8+p45kUuMHKSp5DKXO8lcLEHELsW1+0h0O3UnAn9hIiX1hnC6posUbTzRus&#xa;tW7C7PoIlLA21NVmeN3T8vVhWuNKwbItuDUyPd2zdVaUnNuOF3Y5iveBgS1gs+24flntc/xe3z&#xa;acoc78TaUwo0NzMQuXA5GB+mtyo/i+uuzqpqXPjHl8Pw46gytr1IL9uF+NS27BgzZ+oU1nDcLM&#xa;oVKwb41pAV21GmftzoXePdcuV7lFonrGi2H5DCYagTNDXRifXfbX8vW55w4FF2VadFhAl+1uo9&#xa;dotyoFxxxPvNVq+ot+P6jFbRkvKiegarvZ7lQKP2H/lTWIv86g0Kc5pjFFVxbAC2NedAvh+lkB&#xa;8bTdjNUdezBbNY4z0D9azE4r8xuUhhT8/dTddR3KE6Zas/c5ZmN0TIN/qlXfve20r1o1Pbo18l&#xa;8FvzSsw3hvQd/N+lnvORY5mtqQZIGhsz50OKYRO5jv0NmFYPDB1F4MV8KMMPuB+QM7CMTp1Ku9&#xa;oPG2NWcsddeFhwbCMuzi40wkGGejzLXdOLItPq6oar3Vq3fyaujootHSPzRqvXO4hNm1u6Rj4P&#xa;jIsPzBy0lF9Om/TeoUUDgKV0A1rQtvuu1moxY0X9c2p/7jgqB+Gc3LCWJJZS9JJbKsyDJb2FbG&#xa;BDBtbJR2oLE/h/odwTWC7Tm1mG2t0FMw+9kMKgmDeUttZ2waa9uOi7ZyutmCrm02NWMoCeRf1i&#xa;4rr9+xZ3/+9ivXRCAf+LSDen1Phi603yI0eRyqcQfVKptBZxeJI2/6QIm7nuEwR4gguze3ys2y&#xa;b8iRpjk0zhAqj9qn7U6t3olaC2Hj8Ko/u95svKvr9drb+rpKsUF9/EDq74JE+EAuM1KpKsM2dk&#xa;trXp5roCg+md4Eg9XM0aikDYfMVSc1lDEBxgMFJwwkiDL6ebvT+Ge7BQagX2idtw2AHIc4Bg3e&#xa;1zu9RjXjdqaW1nzksvjIS5vaiC5/RUdhbhS/HZMqmSmuE0WWzKLTq0azxxZ+S517PeDhLY2F1O&#xa;e2CV95HcpCwG7qY2L+9dQXSfUg9Vl0bKzV91j9fEXtO6jv0jFtx/TudzQ/RtW/mv4iqXbVHzsm&#xa;AxvGZzS8B2bAidMhT9wnbjtrkhMCl0zSCb0zxixOPi2Ze2AUzFexn5YGl+P53eOSxa8qKfFps8&#xa;BQZidnnpJX5q0odiLHGAyo64JtU7c8ny7GpuWWz6Gh4Qwm5sCYNlh9pLQuDgUDxNxDj84gyWN7&#xa;1BR9wjNFHOZFzAmqQDYOFbGzQ5zKS0Tg04eKeCzyAmwDniK9Yw4mrA7MyqK931laWav3tEazy0&#xa;YFELzZ9M0PCB1PqDF84xfB2Kdy9PG4bw/v34TFsTdhda1GpxR2ff7ZuL5jWINJKays+U2Oy0En&#xa;GMUf/bgcW0QCuFWqeLlKFePnmdKJZAQnL6kSLwsqTsEJqMmSlAUnEUSeSzsvae28Hovyql9IqP&#xa;jJF8fqf/7Ut5zyPHytCrKX4avcaZ3++u601UFL9O7XT5/9uiy3P/1paGzMaNkOtlRoYFjIZUiH&#xa;hxapQ0uIPa1BvqLciTGdovBZgl9aX0vrV9fdpJYezQYqrhVMCJZVyBaUtIJ5zGMp4xAerxKRCH&#xa;KuxzxPBC0p0KYqg5mBGUqC3+p997xx1ou1K3LcZkOR3ydfkkX7flio51Jeh0oruBRYGyYwS+LI&#xa;oiTzMi9ImGShpWCVSLuiJfElXgRZFEXGWObAyp4ThGUIAp8CoTUQYl5BUXgigZtNwSDwhIispJ&#xa;KCQWYnO3O9QgoGUmIoqArBgqSqmMvmDB8yRuWwpArQVPoWlEmj9d6klmX8/NOdccR8wIa3XZVY&#xa;omOwnCoK4GSTx2ABTHiJipgHppRCrQjsIT57MAdmLQXkyYBNCHHjFZGIIvyOYItFa3bIusUeKD&#xa;yt3LTKN6I3MZjeAQ7Bw0nXx2puLK2tWHFYAbcE8UjKMECJqCQzHomcLIlpsMSIY5xMOInwOX6J&#xa;C1qBbBKvAvCCtH+wYhiNYs4aNKpiUeDFhPQKD44JXEaW9KoqiCxM72h3obNWiKgIkEupOQTCgZ&#xa;dSBUAEg4uTX4bdxQiFxqWtVFIw4WRO4tKJIi9BYqNkBj5FBveWZpIa2pNMFJAQrCqHSVJgnaok&#xa;gGsXREF4KmpZhKF3ccpAbqtiQcRqhpgikRQl45A9xgIRcg/Zp+I7DqUiwEAQiic58Z3nwoYCoA&#xa;7CcN8isgn7y/d+/BEdtLS3h49Ny/xcEP6DPJHGi9kxEm8UuVcqFhSBkzMydCLzvJiRkvgK5uU0&#xa;j/kofICXIbIoKzlEFqN2hO0PMHly1N2HOj6wpDl8VPuwVDkds3KiWKgBiREa/KWw6ZaJKEFyjc&#xa;FpZKmAV/3QvqNbxpuKyXHLRS4EOIxVHAlsLAPfVrtWfwK4A+lBiH7b3LVrDsypCWY13B4SRI4D&#xa;xy8ns3umR04WRSUrrVUJ5OhCRiamBBojYJuKwnE5CWwRUrEwkmKCVRnz/DNlF6HMMDlmiSKfzV&#xa;2WaKW5q2LlAdwNEygF8hORA9rLOdExyV1lT9yFrcyLI29+SlOd2i57lrEtK4btsgyKFDKUCMSV&#xa;cKYDElQsZ2whRCncgPKsjMOLOVuIYhT1VdgOiwovKeR5iQspvyoIYF9KDnMzrFXgCJB352RYFk&#xa;MoIMUV2V4sGwrImQOCQ6IN7oCT9sZb+cXxNpFWxbMZx4hO/20lLxEgb5REPoe7XLYDEnnCpblL&#xa;hNDpCgoEVzm30ERCnysqksp8nPDMPhf4KYPBZOYLHMYZ2zhgLmxTdy6fKBEQKiu6wFYnh7nhvk&#xa;VhvoCIsrgn5o5frsNNE/dsykrt1PNsdLs9X+CBZ4qUQ1w+o24TaDEjW1DChBq8hyzDxiwvWwDm&#xa;BjESyA2pCs89Vy1iFWlUSPkJFjOdLlA3EWkElvpA1OdUvBdevVyHKMZ4FYEnEkViz1LUHPDUDP&#xa;AIQ0/cB3inY/7FodfPR0/kJQ6gINnYcXwedsJ+sCMvDruIeVIG8zAv87Lgb1Qy0ZMy0JNlovBk&#xa;H+gNX244yAIP7A/yWyyIOeCRHJ+n7MVshy/X58kZ4BEBoJAFJQc8PutLPgSgq7rlSz7+dExH4s&#xa;MwdRx7OTWtT9Fp8urVaaOqV6867+u551jBQfU6Wqt7qXXqrapfN8Xsm1FaPT045qGGn860iwb7&#xa;doauYbld6pijAqrVu71GSwsOPPiUxBIRIW/2z7doHbhZba4aACWPCD4qoHqrtnGjqPJHRUU8Cj&#xa;tpnU77A8OuVffbxj8/KXV4jOFlcScmZSZ3hBzuEJxR2lTD4jsmssJ2gdkZFgm3fIQohIOdrbAn&#xa;xtGXa8Vk2zGxlJIU2L6x6kOejrISQj8u7yUhbI1ebmghGQwXsMDLsphdfQP08jJCSBX3gd6Yvt&#xa;y0RsmCjyMSixU5wYU9w8pOa7h9wNcutl8cev0t6MmqLLLn2XnoCTl5DeH/W9CLuKdm+D0J9iMS&#xa;7NRzwMsqucJdLOWem9rHNoV+G3fYHg7dFai88FrAr0XyePKqqRpNMMHXHozKPK8okkI2dSQoqg&#xa;iKk1PuIdCRAt41nT8opeC8LkfYV9OpOZVFMSoYywpYCgnOAeylOvMAxP/EZ6vmbIxcZ1AplMrw&#xa;VteGQ9vqUdcrs/9NW/chZ88hsEhKc/+LDnch3S5PW1/um5kxh7//D1BLBwjRaXsZhw8AAO1SAA&#xa;BQSwECFAAUAAgICACJo/JQ0Wl7GYcPAADtUgAAHwAAAAAAAAAAAAAAAAAAAAAAdGVtcGxhdGVz&#xa;L3RlbXBsYXRlLkNoZXNzVHJlZS5tbVBLBQYAAAAAAQABAE0AAADUDwAAAAA=" ID="ID_527046826" CREATED="1727087633704" MODIFIED="1727087633707"/>
</node>
<node TEXT="lib" FOLDED="true" ID="ID_1750925238" CREATED="1522351097503" MODIFIED="1522351097505">
<attribute_layout VALUE_WIDTH="250 pt"/>
<node TEXT="UEsDBBQACAgIAAdcN1kAAAAAAAAAAAAAAAARAAAAbGliL0NoZXNzVHJlZS5qYXKMumOQZ8Hzp9&#xa;uetm3bxrd72rZt2+6etm3btm3btm3Pzn/37sZv90bcuxVx6mRW1snzoiKeqMpPyUuBgqECQUJC&#xa;Av3S5tAA+o+GCQQGJGRu4uSk7GhiwiBr52zgbGFnS29kbeDk9DMBBFStCeWuvLz+0zNO6sSSHm&#xa;dPAUwPBgnsYNoATGyISMTfx4+8QMoIB3YYt0UKmpjOyQKsUNWpWi3FoWW9vUG93ILOkSfU3NJM&#xa;3xxpc22p1rm28fP5s5ryl/c1K12a3A0kdvYvwHjGsfc4y85j1i3G9/G2/DTMHO5vusQupyE5Mq&#xa;/DovVVGJnQuD3tBbEp9S4GN6JlVFDBYPTm6w3LrwR6av0MFtzYYXjchEetKt8PKyIlDU3BQFKj&#xa;hQJLiIgNR7IaA8eYEfg0afr5JuHQdOjRgRMgU8lfhoWFpqzt/bgRw+DB2CxoocQSLPhwZExaiH&#xa;D+pay2MSED8/bObaNdIKgzxuac/cqoHCiHSFFs+U4AVlgIG9oUyMlnWuvMNY/SDJtowSf1rSEG&#xa;dA4WmS1AULirVXEOpbJfFw8W9losnhlCZnDDAxlU/aF/dLw88Tw2XgQT+Ibh/f6I/1oeFzK2HC&#xa;s1ysh0PmQU0H00lialy/OrkOCnKPlO8HRMxnjcc7qFq1bL/eYiQZ+SM5JrblfaubZeSnxnokOa&#xa;8bRy46fbgCPfX1kEFaXozKymtHBW7tHA3ANDx7l2fMfJnF0hsga1S6LYq2WvMuUXbF5WoZcUrz&#xa;Lpl5lH+far7Nv89AY34EVHLZQoscR9hcZ6L0J8fClbziRWcJFHfXPYF9f54LW//FtBpZtCRtJS&#xa;3p02L8SlI4n74iRlK+7mcDpHJeSal0Q6lnqnRLVXbF5lgi/6uq2o2+iyfVanWRIthIF36Bu0QX&#xa;b3c7hUZctCIVc2Rg/0WOyJ2ymfmxRfpm9fHoDTfNcL+0C3zlD0OUGiY17px9JoKQwXK2Udvyey&#xa;Ek+eSnxMvMgohNDC6F+qHC2ivxA0poTygRdFBNSd7WhTpEkPBwo4zEKlOD0JW3ZRK3HC4XSRI+&#xa;BFp4YSWtSt/76tZVgUWiIbzeYzLYZ0Lf9ONjCiRD6Hp5BJy091bT/vbuqsCvuI6yXOCJZrcC/q&#xa;/1LKPsqXKtcLZaM3cnz7wr4O9vOPs7/w4OPJlc19xscmVQq1CAUoSzQGSYkCWLVeXojskE0VC8&#xa;PqekHDKVoHlo6sMiMK2V3rtvmjRpzFe7UJV8UxkZQMKKS9m/dkcqnRd4fizgfOgfU1xe2NrPrt&#xa;HY2dpEJF+25aGrcWNW4fqLOhzxitIeEghfsa06/q8zoGzAYHlAMYo8mJxxbw+84Utdw26lRkdF&#xa;xjkVGFfraAjGchZVHMnVEWW8qROFR6shUerN/Q8fY+fPW52aljEfCHaxgtJ7PEcfvLg9JlPW6Y&#xa;FhqcaVHl0gIEcszIfAKbfeB8wvn1hPgLEYhBXHs9jkie7fA98m719b43hn2avSzZPhjhZ7dTdb&#xa;t/kRIMC1xr7bQV4P/5Gew5fp6866zybf9rT9DjC9uyu316+fhKBnaPdPdM5w8dzeePYsydtUP8&#xa;vQnt5zDvk2gJ9j4sgsDfZrdtbrj1p3y2dF5oLfpvhYnLZO3Ig4+PmsHFomHF7UW4RjS+6J1JbC&#xa;xx41dB5E/hW0jN773Uq1yjjPjpm9EtjDxWlvx5jPQvV/eeTXLFaqE7KI5tOTnBMXlO7jUT+Ew1&#xa;xurG8Jbz2LA2/SGiJFzMer8jC0/RLLRRg11/TNqyeYk3ZAphMwC76UhiKCCp4NKFukgpbAxqHi&#xa;QmBHzud+QYF2JEVOZmaJrpO7lBGXFARu3co61nTE9EHX900BxTq/ovrS4zUtRpKqiHW6PU0B5Z&#xa;hrBnX9DLYeLM+p3Uq3Wtx6BPGm60eY506mtkl1T+FTso4292vw7s+RcdSskokQH5J96S5cVaJ0&#xa;/jd39Zek+8eOQNHkZzeLhY2s2a+dg4ddB6c+RiA8HC3KOyMYTgF2rfkkJuT1DqEBP6Qs3lMwyu&#xa;sErGwyukA7UyhbNV8U/P6B1U7Doo3ZL523l9GDsBvS3cyL072xhh1g+UxZXGhkUNrZtZbsnuXk&#xa;J6nk8e1yY783PL67WAq8sru92eRnCs+fVeBy8vLykxhKj19d3lhe5CuO2GmZ+TlpyflBiZ723e&#xa;aZ00KrA/jXuoVMYj/Vh4BNtW0Mtl2o+k4ZE/j1G6471fWfxSKJr+L7+J534wJtejG0s6RAvd7K&#xa;+WrspXzm6lra4RWiTUMi2qQ5QHz2OlElYhTLS145xUZVqDwX066YwB6jB9ldX31z1NpnJ9eiR9&#xa;vrFALPQZQXA4hvVhWBEd6ihhdTRaRR+kiP7btvQnyNa7rbKE9SPFB6Zs9AkZkzOYQmaCndpWU0&#xa;vlQS7RO6GX8QF5KZOjQkgIappxA41x9/VtI05X98Zq+O1OLg93gCtiQ9HQRBLsWQwkmCHa4+Ay&#xa;dwjgQmwGbhJn6d63Ye7pPTLsbR90ka2nhJnl8igf9Zs6lRVz3DkHNEGV1QMeoXmPFeoLl4xxuA&#xa;N+/0qDORPu8wH0Yi+FWdgowgnNgkCo6Fmjh3Vb8titR5eHB+ojF1F4W6Z7UtLqlXJBbypcOLFR&#xa;Jt1CJTIGg4ocam+J3xNpP/7itEz4HKmdnK98GbssB4gnz7a6o9NzpJJw5gNoNtF4Xq4ZtkkTDz&#xa;aVIqUaXevcmKPwxXAMvVbeUEq13YN/c7OaVUrXo7TynawB/ns2qxYxddr4xYvL6a6TY4VNSpQ+&#xa;sfLYSDcXK+OIkpOCgb/2NFjoJA6zuafRYrJ5+djDLPNZXsuFDnWzTzRqbq9u6/N8SJPikr2YWb&#xa;s0+rswGHt9zH8ZDuJu6YPHhnv6nulgvejYvDHX7yPOBFy1nTGHTrWFf3e4E8rxGg5nnZ8IiDqo&#xa;+CU930Hq0IwY4HYYNQjDRPJv1SolU85HvGSGdjh8HpbJPoqsEME4bFl5t4vC6KOtlfQWdzeWqh&#xa;mhXuMzNcGLZZVhE+hrJnNgketiPlg/QMe7tCWwbZhsL+3JUuxDY+gNNx1eze2s+L6XFL/XuD4a&#xa;QFzwTM8BEX9p4rnyd6DBRmy+XgGqDuDxQtUiIIyYZ2xXLPKB2F4svCspQ0XgjlbfQBs0b8a6CD&#xa;tCFlcpbTidDB4gE8IVB+l0kY/VDxE07IBuiasUv5DwPj/LVDrEhuafmbLRw5kIlt50WeGw/yDz&#xa;WJjzn/qSpqv4GFLhLM4mGepMozAkG15TxiEnQPN6pLotqVhFXcY66dFGFQEqlKLjijQS8jBhOD&#xa;mRZQck215Rb0SI2vSMtN0kk6mOZItbZsbyn+rcabdX36Cy0SOTU4us9m1OiKJzVyygGAT66efy&#xa;CalyFLYfthIQDI8xnWV8VdFOsQM0S52COK1w0loRBd4sDiS1rO8rWtXqUd7hT7Kdx9UY9L8Af5&#xa;ZlZH+wX0hzfBp2pi1tbj89dBfewH9CKNl0n+a0M9SiHq5MsvzNPm8uDuwkcUy7N2qavXy5L0O1&#xa;Ef5E9l6fqL3zKNqbluP7RnMP/dryqFjorM8hCTG8nx+hM12KIjGEiKd4LPFtIebAjti7pG3v6i&#xa;57R45e+RTF9G8l/wXF4qkT9RlHYWCq5V7DEMtVfUp4n0a1+3fIZ+MEePalHJHs+imI/qed8pzW&#xa;EuFvwq79I8Obmv3fogfgkXT4tTgmnH0IXGub/bKJgJy5nTCqnFFD0PyxGXkA7Yhlw5Jnnh1CdH&#xa;n9PFkuq2sIioE0q9ji32wQ1fsm0X3QScQDWie30ZFD0JOTuj2a3Thf3mQvyTlixziU1Gjih4LS&#xa;fW4x8+0KOoVqsebiiuz8DebllErXEkuXZU8VrfwNyQyT5kYVHrFpnAI6t8g1MS8a+Kp381qM2o&#xa;m3HtTLyhHJ9D9SQxyajmGg/ihNwnobCgRnf0K8nwV8LBIX7SME+uwjFPIVKEVdRPMx0bBEDJf0&#xa;UcPjJ+3D55kHyUQz8sPnoYVQCg0L1aNUsYcNj9i3DJsm7CMVwhWIRSujE/T7G48AEhgcHrCxaZ&#xa;p27mAC5QrUojhRikwZBlOIhTIjsCK+EkrpCuQlLdgm6eWOhdrSzVjH/X0OF9YZFlOoh/RGpvK3&#xa;EgphZRIcT6hwKOHvdflmJ90hHCy9u3cQlxnUUdDlDcSYZTIKWZRvQc8bnzxfK32DYJe88Ag+aD&#xa;vveF938NBx0EuukfLy7wrM3/ioy8pAMJ9UAhKXxTtyh85AuojdgaQ7CcFiNfL474hl+3K2cfgS&#xa;nf0c43D+ErZlmUchIRK26uzjcDTk7QbHpBxVATiMivjqcAhF2QVbdb4JOOx9cJhUCNYZF/7Vd/&#xa;yeklz5cLJ1WSAI4qVrOL9hD0tP9wNoS5XBLjOpoyXLG5Bly6Xml9l1ywso9pIx9pJbEb9LFSKn&#xa;RA3qwU5deZfVdaEIlaAKm9Quzn0maJ5T/uCqyr2VAjWuzjUv/F4KYngTPZ7gtmlOsbGMNVGVJy&#xa;3a00fVBKj2alsYdMTUqDnSh2gTjVbvquOIz1cLtyN/pQRpJFB3yz4NZci7zNloNOASj4zpbOqa&#xa;BYvp1FR1ABps1Rr44tRWSqgaLh7HOoTGO1hqq0KoGrAfxjomE47zOhcbslr7aiP7v0J+8l868n&#xa;7i4f2WeIl5Aj5GRTTBnr1E+MCe5SKEIVdyCj69JnXuFOz8FZa2YQZudgY6bnYKPm50EZ1fLQ1L&#xa;usYor+hXc4p/ecE8yflL/4UdexLjL/2DHvRhRLj0mwHyefT+ciHWJTevVHYBKl5fQEhqPjUcWn&#xa;ZhVXYhUuxNQohGfL5SveZ5c1M5q+AWEY9ompJPMhil/FTootgCBs1GIqRFeKFCWTtcWXqxA9XG&#xa;IqRFeaGiSjukSnrRMqKFVkiL3CI+D6vggViEjUWITUmxHBeOUIxlyOJ5B7Z+lXhFT2oewaRBkr&#xa;I8bc+BJmcCVq5YmXEyjYzJYgXMIZw4J5sohy78FNOJ9GIK6uI3PEAGeDyuIDeSQKKSgVeyGGU3&#xa;A3Ywzs8c7Bkn3qi3f0vbqCZoqr2/kFV9k3U2jeKbSS5PI1mB7FWbTPQx+j3hTw8mHSP62DE9Ym&#xa;HwiCCVWT6mCs7ygtKyYdOYOml1HSWlauFf9uBGou4JaqsLhA8CpScEdbloBRK2FVyjeFzwr19f&#xa;+KUTi84RW/SObWPnBb9Kvz4ZUvtqTb9+or/Qox+lA4fXA/lf9D1yGG7VQTTv3bDbNAHTlmE/kq&#xa;nLmuF4v96Q6Ua3rwGkD5JJTKeFrBrBB4cgqAQYwJb0JZ/meN2Cl+e/y7DEjkV3pDM5Bei8k1ru&#xa;Lpcu9C2dsuSuY9g3bs6KZUcZu0eZZHVicMo27wUuHAD8PLh6ebqjj02T90odSyDxROYkUahheR&#xa;y2/uL+h2JPsStMlVw9Yn+NgT9gRyufZs+4yhfuQb5hPIOVj91TftC6iTWvOGX/huRE2ro4L/QW&#xa;UujmRdRtGPJzLRJ92IHb74JQ9sM1sRPulcwJZm7sxKBWAat1XlSvgVcsuWBIhL1n+qUtghimQO&#xa;NK1Asd9Dh/sjtmia6fNMFWR0mJYFoMvZ0aUvzcW9AaMIfTpIIlahB6rQtjCVqxEHay++zlUyAA&#xa;SiAxJrLR3upZDGb9UnX6NjU1sGpqENCzjGPBO8MOlw1XZa1WXbaDV+C7AULWDhbYZODMOMGJ8g&#xa;l8NqimJHpKSMLVcrMSR6wRilfD7fD8HFmJvz3aD0hnZR2S+6Dao1j9B8Bq0H+f8jdQh6se8nNW&#xa;Hr+wo0HE5txAQx6gTrA0rN2dTiJXUFcug/zNpq4EH/VdqyAedgmoUWiwlbmHXrdS6kbV89sgGZ&#xa;YJsKQrymeGwR7G2lTGHC5112G4cNiJO6BLKKYKxD9U9MOeRrEcFPT0PLXR55TcHE6izlPs0oFM&#xa;J0SmpbpRhMkSbGYTatZT0PhI1t3J/xprjI3DSbxNRu1sHHTnapddFKWxb2QcKNc/WNstx/iVzp&#xa;+K9sZ7W9tko4BuD0tsLlO0znjDRBKHXIK/Edph8fsAIMiwSInMHBNBP/54DpQr9au+Q6grvOYI&#xa;viPk17kmfuHlG3dH8m3B5htfR3ZuPs+bSEfibl7nG4MzR99xYQx1x2h92k0z8qGhuXCemR9J3o&#xa;VTqRHVq0Yf06RCvxdtm/qs3WMxCD2ncK39b88DDwOzEu6uuQr08ImFHH+kV1m665tZavjJJMNf&#xa;egORyWmz/XzB5l5Wcvd7NT8ogC2F1Bs2rsvYxx7UWGi3qP4EVX4vrhj+F0eQtYNjhyUGXb616A&#xa;2eYTXk7INByHLPQY+AWon753aYiqLQKvDqJEmW5Quvd4gtRHBrxl19fwsolzuZNJQ8tQGO8U2Y&#xa;V9OXXpnrPz3SkDRLLxPyKIUdqL2/tdo3qb/wQ+DwxxvGvp5A3F1E78DR+eJdemqfHmyoenwqNA&#xa;imkRUzkBx1+Yjc1qA9plTHsrGIolXjYe6Q6+Imv9zRnQxC3um1TvjpHzGu084xWqaUqM+NWjJu&#xa;W0xsx0x8B1LeA7FOmI5X/J7OeC1QuYj33lDQMVG93nsKg8q8CIcRTAuBIz7jVAT6XugdPBLYhF&#xa;NeKBqbfjFvEDTofERsFf826XySW2eunTLx3Uh5X2yZqnRMz603+Ymyaap+eCCh8nW2bMJrjW4Z&#xa;ZRbsSI6j5gn8s8P8dojSEuJzap1mvYWiAV3BDN2TplCnaDOf7WBzgyxnKmFvRoo7SbFfXo7cY0&#xa;xDFNdOAV/G4xJNCWap5A1wGkiuTEcRVqVjs6iEEYnOKCZPdkmvGl/iYvNW1JV+l2qR0rXLN79J&#xa;kFun5zLBwap0Su+1xsEqfdC4mlRa/m1V+aOhBfVpQwYwo9nn2oSznjD5ibiG6DGc7CJKfX8vnz&#xa;qWvf/TSn0CN7F5ChHzuOoyOlgELvsgNZpzpLZhqTcwHr6e+LW901L6lrxx+PVtlGK774jLzrJD&#xa;VBupNzxkFXcqHxlPxYwTeX7hE581GuC/c7j0DusSng7lS1u7PPz7pHUu15/xA5ivK6aXQBP193&#xa;4utX+Hpr5CHjrz0CKyBoCzegFwPPzFgorqKHSc4rlUSvG+OlqlC/xXYWLfJe8v3PTRoPmu8CeF&#xa;Aa3j/SZmbZ+POYIoj3npMnyZa1KBqlexpZ3qo57i9WTFd4/ln4oNvYoXm3XHdku4ZXp5m2jLVM&#xa;l37cqnqIr34wqd8h69so3IpS/y5ZaKd3i2GwUb+elbRRvh6VFlr2xLO4XrUJVPh2Vf1Wa5ihes&#xa;ZdW5mb+g8lK/IOHnB4zKUIGAahiBgOT/V8XzRj9b5j8rnuz/nv93xVPZ0cDWydrA2c6RVM/5/7&#xa;FN9Iys7ZxcHE2Y/kc9NFlVSw1HBfVHFhkTs0QbWTwcvDkjRTsPeGkDRIQIXRhERbAc1QY3IdHY&#xa;PK0/HQrtr//vITfr5AId3ZwrzZ8SepfcdKIg8rq946n2q+7e7l4fjcfZ3t5v4D1e71nGDHqnSU&#xa;02Ljk6nBZLq5Aey4oOFQWbwagTa7tZp/cIAxUZPnJ/piDJEoOrm2LqCl3J4m0MKN8Qg0Ha4gdR&#xa;/9TliuSHoqkKW6tNANusi21CtaBMYTDRAqTX4LIRJuckF5QN7DXbLyzbYWati5oLbhc7p8jT6/&#xa;GRTPfDZBAsPFgbkcW1mTnewWNpHz+arjGZmtN3UiG3JeSYo0W05Qb0p4L+uDFWuAwMGuMsbdll&#xa;Ywm9ieOxAcUMf15j8+wF5+kc0zS+1NtSdzQ9o7PwlLZsVZrkKtNHrEXl8J57de/CdjtdwQdSu3&#xa;jvC/H4sjMh9RCEVKyQmdHTjABEYmYQd6F+MueWxBcgoT56K/T3uHZzfySJbK5CSycnAYoaKv4Q&#xa;fRJ6ITFZ/jaxggb9MErMGg6HTomF7yVg/TMryfKgS1hfw6R8jpUmQ8OwSUzBAIMjQVgpTHLboe&#xa;YAnLOzPkhFWL7oOMFRxkqTRfcCW1Vx7ywQMrETy2Yue2VweBeRwS0+W1rHKx1hkR/bBF4FZI1S&#xa;zdS2am4V8W/R+6VRbS/k4W/PPGTyMgZhk/aJfBTjNkvoEnuxEdKyqNGZA+JMjuZ/Z/fZE0HDkr&#xa;wb+Rgy7yl7CWeB7NjxEirrm+YAjSKTqT0UcJ0z9GWOUUQeOynJtyQBrog5mzOe+hDCw9NbB/Bc&#xa;A4UREOaa/YxK6BQHLcBWIXTsidzLhT4eabqMSXSBzm+3gfmucaphCk0AhyhCfTT3cpWNped4Oi&#xa;RdEK9R6z7fsj2LSUhmvdIAd7U7Hm+p01q4oYMCGUA5briCsre27JHBVnOgcHUkZtJ3EXJ47V1U&#xa;FL4igKGOGDnXrM0RIhq5LYoYGRp/T2rfJP2jV6Ocq6U16MroQMFlHbv7jXY7ZEcWXlEiOAOWOw&#xa;PUgpm8JFNgw6qiPDxFDw3mGczF9uc+oeMwu5M5Yya1cjNz68mWmIb+KcPUwpmp8HLHuxheEd0Z&#xa;GwreKytGx83FX3JIgS0lGiQwi63CNGfWAi2GqYCYv7EOzd82F3Ofv5U2I7znd94vgVNpXKWDTX&#xa;H6IF1NGe7t0NwmvzGiDwqQ8KM7J22sdPPwJlLHXn3GhYc9CrMxzSZySJCz0Ux3KWndje7oyidy&#xa;19u5mdMrsLZcW4sID8TYM1rqmlzClJDA1ZHE8Fwmd7+jWsxnI4I/C5kE7NXQa38gYfjDf2wqmi&#xa;zIcIAd9fZC8YLs4X5LG8B4h7wivdaVnNMUcUPRHPa3QfYYgR1D9jvaZS03U3/FJFbVsYnoGUg5&#xa;WNeDeq/pS9g2kXqluPLe/ia8AG0L3swJbcxZzh8C5oP+8BXWOkB0e8015Ev0Dqd38Aorfp5ima&#xa;JAuHvvOUwCKno58w6OCwKXJGMrN2M4qoMTD99r3tNULZI6yvgYRGm7UIaYw9D+i4cTGfTyDHO0&#xa;Etgz5GR943XwNLsXXsrrVV9K+RWNr4kg/xGJiq5H7A5pcw8ecVmk6RECgtTlNNC/o3aWVKb35X&#xa;4gv09+qFXRd3uGQ4gE7gUfvPD3v2DpjC1GNQ4GBDQI/Z+wXFH+3+Uh4v8fWP4PMDZnQXnjDC/3&#xa;7VYh2KBStBxpzwigjhlouUoL+sUF8RvyhPc7CB4NceIa0FVfyxhXFyTjSlPJx/BzatpCciTRZB&#xa;H5D7EdU9rkFyeloJvD8FpYnOt4tuKeZ64nq9Jcw5r27r5aXWpM9/zNTH/dmepa3346jhXLAfcr&#xa;XhAAWcz8VBk8ky63VArNUV3IyDmTpoIiqSl6TkKA9K+onshbQFVD9pG59GypmG9CkISUPpc6/9&#xa;iL0+jN0DG7TUEqo1ph2wWDVBZjr9HrtRUys5pMeUHDq+SoUd/GJkK0ZrA2pQL+I6XlZLbZEYOG&#xa;0wGV5FqlbqPvZoqj7NLEVYMpqlWgRiG/W1P6kVHgKX2txiyauNyYtIEjxrYWXpJFe/Fksx6Avc&#xa;KOQpgJFYUlvwjdKaPv6PWTtmJqR6jUIy1lfn4MJml5yZ4/3RBgwd2hy8s216QpU0ZFVj2SosqP&#xa;WPEtD43iUNb4ueQc5OJWvS0rY4NXWgydBqv0RSggA64soA+rKzPoX/rJNgRvhdEe8YKMI4SDpK&#xa;6tZT11kNFxUAGNCWNkXtkImZTfgmaBFUPZLw8MEm3Ljo8rPsLio1lgYe+gpEXMvpQiXlmuS1bx&#xa;oU+P3Sq2ugiBTSWhb+ab2zSU1yNTDHq7amSVJExbg9246eKjRZ6+Oy/OXUz2kfLQN5NfdEG8o6&#xa;oGy0pz7y4sVck5oFn2OAgoq6UNZdyYQi3zE4UEd8h6hKK1hyuRJq6GK5OJN5eUKlGDL1ahricu&#xa;IXXo4+NM4BdRJhCnpmp28RINR0nj4CawrvELtk8iQO8jhu1bgcNZsVFHljwLF322nhY/tBc8U8&#xa;CK6afkl8JhpqW3t6uPFr6xCSITeCKDkArPOEvcdwcxmp+9VPJUlCl2cJxxOW+pLEHZGyKEmIDO&#xa;ks+Y546TRhifk8bpu0A2JyNcXhn361fHVvl3Rgm3jXB4srFXRKSYHF8rDFoIPVAGMouh21rPXX&#xa;Cj5HWIKncBA7GgOVq+wuXffm+0CNyoLFkCg+uHyzLlmOfaOA+FtB4ydfgCI1/qiGmAkS02bPuI&#xa;mm3u1FUqrIAtRTKfVLOd0Z9FqUWagRTEygp/GYKvXv5VH94YIC8rQ6WEkV4tGrhXqIJGxYY16t&#xa;EiKYXFKeEFlcVa4YfjYvcRSBgYEnl0z2xdKCs7tNS4+jzBeBd+GYmWgDvsiTjCv+AT0OSQhgqn&#xa;qQ0C+qLTsfA0X57aPwNHfR/VAR/NWL6SP4AsiMezZ/0bFkTUvZhNjsl7TbnabzYN5U47ClxIRq&#xa;3Pw9Q6iyEwty/LkMDpZDBY4G5QpKQ147ktJ2E/gZC+7Kx6uCDZ6yWlIG4HOfpSlLyY/q7fBIw9&#xa;ZqaxJtFPzWbGf/K7DqamT2I18iZ5n1oba2tjQm3e+iXqdJsBLB+khl0t2bUrVeGD0bIWboDTMr&#xa;Re1PcaTgBTDkM7Nx7uLTNQXsLKmATjrhXCgWKo4qFpZ0YVgis+8zWRK1CIgoIqu7kee/Cdx4/u&#xa;SC1KouQJeFv5qLVEm8aGH1D5+9rTiyB7+fWwhhgeuBNUY5fhqT/Qdw1Ubc6GSsO/ftj1RAwSl3&#xa;fC3BB9qoJn4lcskvrPHygyFtOXj30Hd5Bu9OVD1t4Egz+IIPZs2StnFNpsjJVZ1jINy1RoPAkX&#xa;V2rIK8afCVzrooz9YQsSAWSPaBBEz4gfrRjfhh0dwpHZNtMULE4VrlUL61nnNHcg0609kvq4Mo&#xa;sPzNV1l7Yjk9098AwLNd3K/kSAmI2PTDBLsUyNjz2tNmqzTsuT4tHOarxCWRWavc27CgJd/9u0&#xa;CCedar9V85Q3aO/YvqYD5aRjfSiymEX9hHXf2IjXDPUoc8sA8hUUHZu9QI56KqFpjv0lzZhuc+&#xa;Kr0vfq9FakskoXiS5tJcCUyXAA3xvTzBtnYo1f7sCm7xvUF6yQgQarrckBXxa1w/RZ6j5ehy0C&#xa;3NgdDWoYLNzTmQMd9WBtfQdHMM2YV5klWrR+0jee6osZMvMXMIYfW7pwbsIC6tc7xReWSX1HCn&#xa;llo5XcoeydtGYkRz7qxynDHR9cWq+q/lzj+Ltb1Aned5rZxJ2c9Xn29urknd2WkFzKfq+6ddy+&#xa;kKpPICzB4a2S8RdokQg5MnqmseLEzQ5louPXNhWK559i6a+qD/J05b1bFWasWd9d2kTqr22iRE&#xa;L0aeZ0v2HsdGnB3jQji1XzE7bTRAih4RTVOKoiCDGhkgNMT8bmNfLE86psLWNHzM42FXIiV4dM&#xa;aXgzjNZJY/bONiHytFs1cuZ7d3EJYzXz9CXDVNPxIvzpzdLLesTsA2aLvg0U44DK4aCimlJ1m7&#xa;CUNSQTHGh9brppQVsiiLe8DGxoJkwyT0VNQAy+lFYGo0WKLL9KGsEqo0BoT447RGNKkjS6kg9l&#xa;S1CfNEm5KEsbwLIkStQs0rJko2TGRJmCPUaA3ccrZGcBhfW7aKFeOrbEDFbqQZj7Bec2ZVwSBM&#xa;bhRkTFKShfE2Ab9OTcm8Es2PZVkX+NRddBx6cs5nIW/hZXnAc+WwPREvVd76mTOSd0xjNoqRje&#xa;2C7NY7U0bozW4Roag5U7XNvv5E5bfNXn4UfCwbqhshHEXVZwL0fMKFRcaUsZcWmnzIZt/nvJWV&#xa;aZ/JoTDUY4iZIlmm5RQMwDy9OdF7+HJdxce3hmo5VjbtPrZbwI5XpZJPD3Ui0mEZnxUHPPj7N4&#xa;OFxB71mIHDvTPIWxI3VETRHTCNpwYfsTiGRODN6UGrcfDQWv2elkzji3e7b0jOC+d7PtAG8Z5x&#xa;Zlorr/QRr2Miz3HUBDmrJ4pE76A+apY9yWrI5ST481menDQv7YWLC5BL5Qb3bI6MxE6FIqT+m+&#xa;ro1SrxPHwpKeFMV5D0GXEEW7gTyNOMMfCY+bYtFtBj7rmrn/2yWgvOsOvgY2tLNtUvygnPiPfi&#xa;Dl6UElMddWuVmnZ4X4A26Ss4tS/FE7OLdTCEMCoJafQu8BBESG/rCk9FPeBtZMVlsOfo9eIxVB&#xa;JywuEmlobniJ1+0mdVxW+q+2DMkJ07PeniUFk6uHgBWXUlg9DYwmDtmLB/dY9uoEWOIPlWtj20&#xa;vwmWx1fbMU+eqBjpbX/vYlDDkJOaa1wExqe70+csf41hS3U7S07bhMmLWTJPf0S9OmI0rB3Qye&#xa;u2wjFp2BsadXM6VMmiBrpgoKxOaSYLdzaL5GdcikqXQxs0X6VnBT9eviwisi54jt52L9K7FV69&#xa;e5OiCNtnUTb07pzHYLcq7fWa3vQuHMHdFl7dpr8R7x5II+kbliYRsLjXSBijeHwNUdFrpTWpzP&#xa;LzRXdJVrTOyF+ID779tYT4CqY2JYLEBjboIyDhS8Wj1wN2Sxf86wAodZ+7+G4gOCmTm8kZ6OA4&#xa;IdlecawemOpQkDchjMLZTnYMBOOtXhFwGw8vCPbMba0hTGuqT2RZXXQUsccY5sOXGe7XnVWURB&#xa;SzTgNtExnsl9VV8tECwOHzuBJRXdTxLGkLNpbUm+GMMPyU5Dd1/cFHqb8GiLJ8aScodQ4Ern3v&#xa;OrCqx6hfxP0wF8CyTAplstjHCI6V91ebG49a13Y4RnhVRBpcvpATvpgr/p1o4a4BZG2zTSczGs&#xa;HW2Zb1GP1k2N3pF7qcVrI8l8deLU6xsX4VXW0SWpeZCJSLInhBexALyJr9DIND2kOdWX24Z8M/&#xa;GjJO7dWk2PR/dRO33zsYrcJSDBQ3pxe019RD+S+rbxOpwN7mu5WsZYMVe/8RSG4Ms3ka2xDGzz&#xa;NZKlf67DiGPm/uBlrLW3qZ8JhZLHzI0O+1z0BxblTKEk5LXJDQsqOuRGBEtGfirTKseIrQTwFT&#xa;v7aPWERRGD81Kj3vM01ZVAi1DjamqLjGBshlZHt0iLp1TgoqzIiKcExITPblAnpO/NHdKzjNfX&#xa;1besFSpplz0rS0ulzWoXUcUER9OwL+dHN5+Rs2/nR9O4YvpvdPUMJxNpW5m7VhtdiC0+bS2mv8&#xa;XRBstz10bmEvpw+pMEdTQGNCrIl7HTcK5ajBsKdBhOKFYvJgDqPUcL+nGiqTb31FmHGh7xJBxy&#xa;rvzQI4eX+cBnTeCF8M7FI8SAaY+eAQhjE/QHz1siL5ijLwf0VjEO9UZeSBL0RPIc1FZpB5Py3s&#xa;otjMOpKGmnFToyQxEgD8KorsvX5F0L91nF6pw0qwfuMwOpWiKEpAtmMWZwkuFN6YoUXMiMM/zS&#xa;865iIOSo1/aklOuJ6Tn5o1jQEwueYgEH5P051LodSinceJGlPmCTGDtH6oBtE1mXs3oEjXfmTD&#xa;zPLRNZN1rnGTHm9SCudEW4jxmZlBlnWudcUp8UI25s6o0kms3DMIF42htFppcg1Op1qbwKKanX&#xa;TDl9wwrmPz/eGhejG2hhI4KSuQVkUayV25L5NLWJxZz+EcmWGfiibIHbkoiYm8WlsGxa8cJw1Z&#xa;ssG3nIpZ8FKpnEiObRFhbZeC+FH37tscVQb9xPAmw5ol7wyJiN9YXFLipaYlaRtNnRr5qsxQzF&#xa;sGMLXGDUJOCzt0VOGsbaDFKnSJQ6xcP1FyCqLom0OuL8JU058ozwDOTyO1F0ik7XxrMH+CnFk3&#xa;XdiUz6OOdIYin0Zs8I4wvJYF+lc3irHf05VtuugbQ60Rwd6nwVVk2vqws4qbsUUquFH6roXw3O&#xa;JNjGxcnTlJqSKbaigVVSDaVHlmNdRmMLdObjkDoejmyt+4iZz8IDAMq5JiSaW0LGnum59cgL62&#xa;0dsJHmMyyA4HHFTb/oKk2IwfLYQjdlY45pDuiEahMX2+23OemFvYYnIp1U7RMs/AERyCJYLh5i&#xa;2t6LaEYf6s6miXUJVmGm72ipWPIb+Ycu3OeGxF/EsnV9X75mKApU1aqxbiLmulGkjzeb6oQmY5&#xa;rN5qCNeKwzBSVVGRGcDYrhHe4KyDcST3KRXu/81wpV099MLHqE2IwwpJTDTc24f5WE9KaA9c9b&#xa;J+qbqh4WObrUbwLu5cOPg5+seLpuxeghlwklYg9rSRQSg0zqfgilK34DKW0OPmvlBJzv11CcYT&#xa;gs6H5p+YMR8oDCg8aZ+3CtSPc5wk4FIUrmkysaWnTYE+Dq/gaRUWeDFbsNmdirf3PCAqrwpHdj&#xa;yKJgYlLjAaHRORbVR/tehGfEttg4RbYg+P5AmUDIF6gjIqj6C0lKkHTwB6H/6qDiY4Da4jcbTA&#xa;bWmHOarCk/DBesojE5yzipU1ldSnqWrssemiwPJ5lZ3K/+0BAQTlRfbOLMVtwgGatARZ9B4DUA&#xa;iBYQN3bn1CW+H1kxW7EOW/GJHVqeA1gLiDNDfnL/G6T1L0o8f1Z+1cWEhoyGmgzmJAasEKeQ/c&#xa;ZOg7qSJBVGFOfVJF6EeLpfewE1eawgGKBpHQzFqlYFnq4uv4rzluSVXBFrcP2tcMOKx4VrWhFV&#xa;k9m6ljshGi/IgVw1ArO7hjtGiLZiUtmKWzhKgLnA7ATaLfQIhB0xMFWXNmCYlr6OIMuIGg3w00&#xa;EnxwCcyUuCBOWBj+K8AIGBO3SLILdxb/dc1v5QY+DHEcfFGftfjxD+sfuybZEeYXtoz5PG7gg3&#xa;I5XIzt+b9gi6yQOi7pA9YY4mb5e6nPMPmgye1bDjHJeNLbZiQnQILFoAoLqWfJosF5yOOqasZ4&#xa;1Ai+SYGlG32HT6mVf1jvjvFlxVzb06e//BF8bQYCtJhAGhlEHHsHLKqyeMamh6Av/QRvjBmvWZ&#xa;NMHse+6kdi9D+o0hOfR+ZUfWKbLRPgdjJueEQ0LJlD5EDejYOJM7bo2Zql7Ia5E9OFOnhEYum3&#xa;0NUycom57Y9S4ws1GyqZPit8umLWku/G8KknqWKQhpmSnpiBe4zUeSqZGTNODPvXmISUAsy+Oc&#xa;/Q4HiFw9lTNQ/0PGQ83eHbJedG1lyVbT12KngSh8FZVZMNbqtpT8hNmmOXrzvAihWbWSJmK7xw&#xa;hIA/JInClkAnqagOa+eAM0e/yyPYQGKLZFYKQ4D8sKhFOeatkCDQu/jz2fdzpWJTTEPpZpVTmi&#xa;GMqCvE2QrXtMsCVYTMBpfQ0uuxAoS21tRZKvgk0GspqwE1pOqNX7asCCD+EqwiDHy01g6uYggw&#xa;BZNV7IrWvrbWgqk3ZPbyrdw+eaIn30X8QKnzvolxO2JbMbBBlCplLZmj/IJW69kMVenRedDpl9&#xa;dAErawBbKBu+N+BN/BGj0/OXO+6fWzh0pN9BBBrQgaq/Ji8HywIlM7Wgv4m3DCtG9qjvW9jyqF&#xa;cAMyUGb++6rmSDDPafhm6pXRHaUCmxKuOz/BZuEvYeRZ2sb5Pibhp32+JuHncc8bZ6d63xtlxv&#xa;n+JuKh53sW+rGF9Oxpg/ro7fvm9iPqmzRz/B2ipcnTMVnqkVHwgqzVkVH4SlF4UAFQJ5laTpUH&#xa;iTfEvBBmU2qvp6S0VTR5N3bbb7Y83PsZORIycjmZqt8ehGHFyrwOR3/WKojyz9PohKG3tDPs51&#xa;MJNRyFAnPLyZdBPOWdpBWGzyRfmajKk8PHp2W7b08/6OZeMUtUf8/fkup64Mt52/nR711gi3oW&#xa;KDOsAgw/s81m55snnlcwMGOFaoBuAvNg314MRVfV1i62vz/95toxtrDsTSroZSNlfuSKoqc5Mo&#xa;1rbBcTRnpo3TzdBcspDKicuC1rAIViiGvr/QW+sTg9fUda2sgtXBEbQohka4ZDwipkWCttwpWu&#xa;dPOoK0ixMvW9oXg7STE3kGT1og2/0SlazpqY8CZGWb2/mI1K6PWDM3yY/I77Y4CIfIHxh1wmQc&#xa;Xxw7p7EEbZlTJyHbqbpsbxAN2QDW4mEyxwa5SIaL7mtmwWvO+K49iJn9g3wUQ/CHBhhQ9emAK2&#xa;QidMePT8XMTbIjU4d2mqCt/S5bXbKhmD0DPUTDxuzurpGTGhRHp7YtOEFb+tpMDqh6D4B1K2Kl&#xa;y8uDamanztiyQztPsDZvbaYbTD0jwmcBotWewStUvSj+ix9i5uzgC2Q9Of5LHSJPQigv9RD6Xd&#xa;1o8Jog/ksQIk9E6DWGYaT7mpLglTm+q3wY3uBgD+lQzLGBHEz9MOAKi8gVF8FLNoxu30APyVDK&#xa;Y00teI0Z/8WFyBWA4CURRndqsItqSHFXZwdVj+Kx1hq8Bo3/gkfUkhDaTT6U4bH2GqwOg+AlFN&#xa;b8UEcAWa8CuBITtGZD8NIKq943+I1kaAO4MhO8IsV/gSFyZUb4LEa0OjW4ha5vBlxxCFYFhn6r&#xa;hlUfGvRiGF56rBEEr1EBrmYFrUERvPTCRNzXdoPUKRA+QxE3xwZ/yIbY7+v+QtbT47/4I/Ikh/&#xa;qQDnV4rBERtaQHSgiHZY8MSgatnQOqpMOy+we9Ba+k8dlFw2z2DYyC1zQA1lmISu7qxYiX+wbA&#xa;ROjHBsuCtCOD5NBMyaEy6IbdgCrRsOf7OgvBqtzQaURDbIRMqqGWhzoNQWscBB7BsGGPNVwi9r&#xa;7BE6h6MAQUvobaBQ919TAyj7Q7iT/LrvgrpEOKAOm3gLyJPQMxqHpWBJQetbKJu7p/Pyb8Z8eU&#xa;bfQPpkDXN3qkvdGNICLwCIRlDw4O3fLxDQ5mBK+1A6S/Ro4a/3sPwCf3NXLk+/cRE1QfOED2bY&#xa;IUKPfQYcCNHLgtbjSb+IT+4J9DB9y2di8u26DXIj6Q+s8JgnGN7M/uyoHeXQDbU8R3C0nrjBqF&#xa;2r0B08eIVRraOv6XR5USSO2OU2VK59xZOBfO0vCOWjdwYFUC+K2rsR8YB7UHC7oPwx3OFsNJ7Z&#xa;FTaEpn8DDILgnEvvqRyaUZDnqXCnyP+9/8VEngth0St0CxG9HYLRn89kxex05ex1b3I9vnse2T&#xa;+M5tErdQsRvZ2C0d/PZ/gVf3o56z+M5VErdcsRvf2C1Q/PZfvI5eAEcEjyP8lzHeg3ivJZLXNL&#xa;Ebh9gt3dgtFPx2H/z2b/x2Cl5HOY8jePcjeM+jEF5HvYexaPejnJcxn3WS1yixG43YLSf89tN/&#xa;gfux7r34zwqxGyv89lqvI92nse6j+M8QsZtM/PZUXsfdh7Hug/jPFrEbldgtN4Dj7vNY90n8Z4&#xa;7YzSd++yqvo5370c7T2HcfyatQ7FYswNHO42jnZew7bRSqFxquTw7g+Pt5bTbX48j3Jv4zWOwG&#xa;L3aLgdex91/Sy/jPZrEbDvz2V4Bj7/PY9wzJq1fsFgHA8c+/dOGjUL9P4ftys+VkZ1sF9lPXgd&#xa;8iUbrGIBiQAm8fPT3L0z4rG/t12Cm/JriB/jgFqK3n3QWeA31tQ23o8Umthvf/4ezHsZZ/u3YC&#xa;+hlvjL47PAX6ihzdpj75mT4MIpD5tff732rOOwP9TB4G6f1zQfEpvqy5gQge2j6HtsT+xfadgf&#xa;hOHLyGtojwKT6cPdOktTbrCODt6n5q0V60/iq2gEuOb8srCP79tgp/Il2RHd7QAVogQfTjVeeL&#xa;OD5U54MAPqf6QDDtp8Dre9CEFAT9fF12UvfIUqFvnUCv1DZKLtUqNkxmqrxqnAhS8Z2hdtM8Pq&#xa;1+4K7smqd20zq2UX0nnXon+C/hI2/Bt6McEwjIzeo/hY+R/0P4oPnfhI//ZSmZODtb2Jo5kf4f&#xa;0vC/nZcTigqmryz9NittU5E8JbgwLZmMluEwDCL/xhhZGrq1JVLXkI1jgm3mFb1X+BKP7lxEa+&#xa;0X0GitilkeiunXRdSf0dqoQy/XVMzzlkSs3qv2ntZTn5nPm9w/HH9+xfXHwoo1RG41nEjPLFZr&#xa;+G+2VKhU5xuWl2jFjFOQMob0VJRfRic7y8xXnFe5ERNNMZZkLjtLMDyKDNcv/NAtzls3zyxitI&#xa;/IDJ8cpwgnGdxCaI0CmEL66XATEI3ObD2G53iM1yOqUxrYhhscNUXMxI9Bu/eTsRnWK2qKtdxY&#xa;YBXrxbFLGmGvIIRWLVSUrhthxRLfyYrz3eN1NdSJx6dGsuM9sHjPokkCsmGRvBSaxVl3kfKMvc&#xa;QU3KxtT1ihBWgcQoZEUWA3IwRrW0kRJj1Vy5cxZZ1PDOJGtq8tso7RbB2ZGQwI8MDNnwu2CEYJ&#xa;4Rmta2lGVJQ42iwqtyL2yxmRJEwxEUC6FTgsZVWWF6JRzrNUdcctUO1EkEbglfAxnLdbrJWYMG&#xa;+acFSbQ3qmFhe3dJcmU1GrtQ9X5HVXU/EKeUcCbJBL0qfBTlVh8e15ORoU+Pk15W1y4pmCSBwA&#xa;gfs59Lhkd5VbL4VkpqYJeCfsQK5YJOJkkJUKkgfMekTlmCPg7nlwswgh+4RfgUm8keFgUHyjiO&#xa;QYWK5koLW8sRjCO7rGYcnO06rK0YqugmEIpIgDVCHyjqQhi0M7CYbrmYh7IVGN7lz+jDNMRTwB&#xa;eWw89AYR6kKyM83mtIdo+2pgp1gzrkOH3oQmPpa6USSRUqiCIssTTNquKM3N0L2oNiE2fAIzMi&#xa;zS1iqr0GRKbFflaJmROIkmw4SOUm0DhKlPHflpX18yYuUu2tKQx6uMOKMqqJgFYGukTEfP+vdb&#xa;5DF6UoQRHOJb9toOFRapPKBtShvdyfwYO+R8WNVm9WaJV4xP6jEGZ+TLPx7FJ/aTxellup8EkX&#xa;OXq1URtit/bVDSMV8i3JAMKV0/9n7E+JPBSJXL2+GQjsBb0+W/5bfI+xn5byt4O1aQRFY/i/ig&#xa;JsFgy++DP38eKXmZsFzMHZb4sy07z9htRkRB9f7UeWBxGEA3qDO3CNyUrF4xkvLY+CDvkOTwuS&#xa;5bZZkl4HThnXelTqj3fzpsDfzKOUipZOYbSOB8SyOi53+h5hoUZ85D/YXuExKopZd0h6Uyn+Gl&#xa;NYLRhjd6+tZwrbbPqcAgZRBGXony6xRNSQXd0lvWmxIl6W3hocnw7TKnq+Ieq7SnT+aPmf6K18&#xa;tjRfHCSFHJeQBNh6hHohO2wyqcqj1Adw6vcYihTLDG7cIh8RG3hVGgPCKsIBbxm1v+xm9HxXoU&#xa;/sA76eU8NqBHb/GCVEX7Hrlo6WwNlNTXwWuY2gehfVPnbJB+nt+8BefbmdzUyxy94F0X9s3yp2&#xa;CbHvs2hm9oL/oAFDdLgo0JgtUBF7M3NjXjiUa8UmIPv8EIIb47R3J7NPj+1xgbk5DqKpMbwqBR&#xa;DX9b+GVfeVipUBiCcIb7rzZ2RI3P93Ct+RYthb+qztHV8TwG3kK7nAOx8gmMmNxRnU03FLAHa6&#xa;EGV6NcuPzBATrDBhxXqPsQGR4GkXsR7qvBAZLBCH3UqAR+4CCERyCMUm5Bxn9wgAZIHpyR1K36&#xa;L85v7c538fJ6d1f/VsOwC4U3YPhHkBFcUXHDzLsnAbEi5+ciSlUP6n6iRX+dEZwhdV6+3Xn+cL&#xa;CK3h6izLYBBejexYidJdpXpu4rbb08Q9FDdsa7bGk4JeKNuD3JtLl2QFVmL3371Zp/6SrLVJj+&#xa;bvMdiitaJgJcx4zGuY4m/riPEOg9j3r88V4kmNz7C/RfoL741kCVBwcCIof9T1DXgftL/yeoWf&#xa;9vQf0/Ddb/eZnnXA1FDfVvN2IWI2yYgLJlsyZJCFh4XvNK9XBYErJ9uKHAJqe07sAaY+KMtHzn&#xa;+oqtZuft985tGd2IZ4d3xelT7MW5D4sQLKkn0Ey6x+OOzp/Xnd3J3r/fPxR+fF9Tc5lZJy0+Gw&#xa;cABY3i9sMz0Z0Y46YAi1Tanda6NRJ/pqZTusWs7gTKMlG++CdZUlbGpzRVvvx0Db7qlKsgBpNk&#xa;WLHc/XAiW3spF/eWgvmxuvwRi9rSkTofjXgJSKaqiQyJZnn9NQwZHWUzFYaGQyWM9hPcsu3zmm&#xa;1FwsJ0IuWmKeJWXMdePpXsY6qcQ3QOVl+/fDpDnopCq/EAy81B0RnjsOIL0xkncOaaTNECYqkP&#xa;RXIhdNFEWOsEw99lOB1Oaft3DYZ/hJW3D2GtiD1uIHEXOgZ/0UoV034Ubp9ejJ6oiZB4ZB6hwE&#xa;SAifxaGYfU5x2MOd7nqsnDy2YOcBcUgNHMFP+UCMljqd6E7VSkuWQKKGMzSsG1hcMJYi0eRax5&#xa;npjLQoLvkgup4a5fKXcGdeEbCsT2OI2Ii58brlOwRmhPyOknusm6yxQVQN3MqAfdhsVzuSQlmp&#xa;njNzFUx6neDOGZpyn8BSUo565oLpkZPO4b0jMqkrlC232G235gT8QUpxIZlBvEC/sQdWG+WOqe&#xa;o6frKkCBdjXcyJzTz3dRGXoqJt3YpyI04Gt5qNEsfzDqBHtZkLjc/iaYNCWAm+AAtLQFnK1oO6&#xa;NmRGaUedZAMkRR4LB4Ix3tKOZiFpyfCFQBUe9IKmpvMYYcM/8U8fOatImRf1lO5Y40yBxyhywU&#xa;idlBbXbfMa202x2AKgrObgStWijD+gkVcuaIxT9ABWFCpBz7G17EquBal6+YkjOahXkB8xVWTV&#xa;DljhliuD8IE90wW8rSYQ2x2DwMesQ82jzy3FBJBfOIOp7daUYoQeEOWhft3BTyMlCzn4we/NRe&#xa;F9UxApuoQCOL0hcJyuRDODSrsiHLlRbbJ7URm2oLmALsoiAFq/nMLXTmGrHEQvRi3WgNxweMMz&#xa;ZDW202+6uvYOceJJ6xkBCGPiFP86l2qyloNTUqRW2wQwKmpslEPY/Z2ht2C9nURFtQsF+ki9yw&#xa;cIrnornc6l6G6BMduMIT81qT67o3sFIGdaXTmcKC+Atyu3+eG2upaLzOczwlCCGM0LGErWTGHp&#xa;xgPyMK4Z5p8CQ0wKiExjPpNCadjITHXIMcacUlhE4qKjo9hsJB41Bk/gOZj0zTCWe7ZRmgJ1ni&#xa;mwfNN3jKbHsQSdZHRz2sxmy7Z1WwSSpARo+dWIelRqeTTX23eCBwXuwcGJtsWtJ2fDtm0Whs8Z&#xa;V2g4+AfXBDnMnqsWiaUmK/lkfAY/u0NYJOrYsIRhNgA+zwG8SmIQ/eU28UO2jbLoPOcs40wWpU&#xa;09NXSs/srERT5HaGmf0KYeSA163e4fRnZGZE/YTD+sIa4CWlbfwWk8PkCGzdZwogs+XUtOlX5U&#xa;apLLVAs1cb8AC9Rn7/oJ9ZbE2LomzHvIYS+/Aa2Pw0ekWEIXyhYZ82WuW9suXvijqdcPeNmQ6n&#xa;cuStcbJxVQG47oOvHr426YrcEh484fLX3paH7ggWJgOKvTdzeBlAh6NV76/DMTFYjYooWNHUEq&#xa;dJNCopvDxtBHCH82pbN1c3kTJHxTnvYATrmWNmt0fGlb+AVSO3mWdki272jL3xEweK9pyIWXf5&#xa;f3UH35M7AgZu9gboOBYRlyLEcbp69bEyvCSLSZnv5Xh0mvxT1DmRZ0qN9q8NeLsJRZ2uI21cPg&#xa;O/gmH+9GHmU0a+GsgEgdZ3Uk6/Hzw1TmHsHmpF74wE/6kLyXls++KgigLwt0VxiN4cLoCV98gg&#xa;oczdeqALuhOsesPoGAsQopCr5U4V3xyOgBHdHet4P6Zatcf/2HX8TvK1v6TbF4snyYC8ztVu6t&#xa;Zc2P3vN5RYp/9e5vzjv+z/J///bzfqzP8T+5dqKGKof2WQt+qqMNH1lirKFISQo0Wt6KjRDguT&#xa;/KoVaDcy6CfBDAdtO9bLnr4bqqubb19PfcVskC7PD5V4S/8oy91O0SOJPwFlOZm5nvD5vnK9v/&#xa;bu/gWrw/nNYj0d9Sh53DToUdEy6bBKp2mUbL5Du55cMbgIjSn0mWa0mUquRDaILWXShQMuEFJ0&#xa;HVUs7ZUUi7MsOXHqWJGilbVXjrJ1ELP/MJ8hjDK4wa3Fw8sU4hILVEQ4NactNNxHjrlifHrAPQ&#xa;yztZ8yjsAoXIC2ah9pWmKsTO2j2m8aZoZjeByMzLFdYFNs2UVae/RYZEAo5DrDRMuj3hRhiyAk&#xa;R+s132bs/iIbo006Dgoni114gW1oHhnjwGGUJNleMOmFN0rYulhf8xhd/+7AGt4r+FWu0Q+KvV&#xa;GvKAJUidnCAK20GhfCXqWANKAJRzeXIfHBFBLHo1sVl3BVEOFPvJjRWknv9kELzegxnLeKY2Q+&#xa;DtO9QzFst4Q+h9XC1reh8ge1CDmYUDoOSKiusZMlygaWJwWVApzpYS6p5JWBXvpZDPtAvCkPRg&#xa;KYnFI8zEBlEJdmTUSfahiWxgjOpbherPhlk6bJFl3zVaEObEB6mQiN1J2TvdZXdux7Aeh2VEnQ&#xa;hUMoTxxbCMycf5DcGp1MyGSLvoKRAsfYrzOE1jsEXhCw6ngt+bQoSAMdwxgkwuQ1cP249TzEij&#xa;vMhIaFa7b2XTZ0LF2q7hor3aFt/xSDbVLBCD7LSIsRzfHLqMAAmE20el/jqfJMSHXQsSkigMA4&#xa;jM4VmtI9RiDzeS6TKNTQRdaVzrfKnDM4K+LUYUNJO7DCALL74KDqDDcDkPrf2LvH6MjWddHj3T&#xa;Eqtm2nYnacdGzbttVRxegkHdu22bFts2Pbfddaex/sc8/Y595xx/52R32r7/Wfv+eZ75wV7ZRN&#xa;oYQVFV46g8t+GBt172wQV6oyydiCBBUNuvVQbHlFLTzK0Yzvk+5jngx/6x6v4bHiyYC67RBK3J&#xa;LFqr11ZjvUCV3Vn2QolNFuNglh+XqvwqhKZ4iOnTYcqccZ5QilmpR4jm3MFxWp8jvahvkskp/c&#xa;AOnUkIaKSniug/XuJ00Ne9RP9JjOr/kux2UYKpjjCkzVCOAkZhaqIZHSd1r8pJBwVSUp6Lp6vc&#xa;E/H3hko8QL6di7aDy28ixw9aLcGN65PaAvOdAqHi0W08D8ErMeNcCRTtZNNGq3JXtCEy8DzwG4&#xa;aDp9Qy1lu2Q6xstX3xynkyokPHdadBvFY7ljZN9faEQOwUyDmk4ddVg8NRuCAqc6tHByJEBWpj&#xa;s5dwFWT/j6JS0BTFgQdnq0XWqOBFsKQmbUKrsUdTQcIiBlNvGvbw3E+3pNFtc9J/0w7m9o7Obq&#xa;BAlETBFIlVN5RDSodNU5CUoYYJAouZJfOuK/iGL0BS1aawSEvRVd5DnZkHRxHIl251cD7/QY8h&#xa;uNocrbRa5FbxB53Fw4XdkGbrsNdSXmVtJ3ufseRfdMwDQih2r1Opwb1r5Fu1C5ZTbAD2cyExYo&#xa;p612wWJF+KAjJYQHFHRREMifzLgobaXJHa1dGkkgS/lS+RbPXuvX2uHKrw8kfCbfj5YviS1aTv&#xa;RQpohfmFWTR5BCQvxKLjjth1NJckbiJakUQCxVHmdBAaG5FVY8dSuToGfRJRDgq8Yq5ySslBBv&#xa;gyu/NFaapUMe3Hd0/+vhyWltb44rF9pPiEsgKKBUmytVdn0IzpEnCNi3ssaVmjIIL0xBOmE0/w&#xa;ynNkObyJmw4+eGh2X3Vb5veEmD9OpDGMi8z1CYIh7hnx6n+Ylj8J6BZ2rgvkRA3KW8gPeedCbx&#xa;46udWtzLBtY6OV048tEiEfUjmt0h4bohP3J30JiyAO971O3K44ubUbPDDlEDSuagtX/Cl9++R0&#xa;CP/N+ElKFSd7Y3AcK/u4pJopAcFpZqotnCNI5NThJKz/h1iIpSfFyhtz4o2DlnfiOkvhJRqF4l&#xa;RLUNWwIrn/7axMwsrRKG/RF4gn8IfBX4Pwae838KvLOpi4KTvYOpk4vnv8Ue+G+xt1THU8X2s8&#xa;OklCmml7Ls+VqZJgzTQFO4CNcAd4wJq5DOKLzAJWPXa5ASDkTTqtByP0e65m366nzm+GwydS3h&#xa;6XM5Hicc70SdAXyc7Ly86Zhql/l4v3wU/By1+7nPwit17cE18lbFN3kvJh+PgjerudV5gZVu3W&#xa;nxVmuloRyTKOEnthHFGNvSorLpAnXh7GZ0MHFfmOUPpTTN7TGrBblnJbUFhzvVrLZxBLtSRKZ5&#xa;9l5Ap6yfvIcVINT9MxVJb4093hdQffhZRFuRV85BslrLgQxbNoCdiCauNjagkgV/1C72DJfJKR&#xa;IPN9vgKGIt5uRIq61i1W2QOg0wYjNm4Vkro+Y6J7lgKqU/ejjSa5P2Rs/aIHsCusgw5+qmmp4S&#xa;YndJyOXV25XTYkh2busrppemoJSjANk1Dx6YC/8JfGXtiH4hJMRRmG3kvu3NsI5SYpAADklHgY&#xa;Egz6rUqykorr5iDWC8gsXIYFRKZq9GYGcKIE0nNQnj4C3qOAxBuvzRQp9CCgAFYLZoF6TnFlNk&#xa;osawQITLgsDDk0xZw4KjPgMUt84G7eTq7yKAnRd/wF1VgQ49PtgQylPVteGXdUf/5UXqgRjkkK&#xa;PwIIxS4rn541yR5kEZiWFihLUsg/qzz/cdAyNHXhf9sJrYnYYoZY8gkhzlYJKIBNQnnl3SY3tF&#xa;6Uie0VYKgTGCBQZdkACpEa/mPd0MSrQGRYZxWJjTXaIxr8bdPHpHtLtJxhB6n98M+FoGQvO4vv&#xa;Uj3GwLsWRrSQ6abt4DI5D8YTUOlRUwiqlSnTlFkTaNeN7ZhzFOTLenO+4FOlXAGDdW0tHBCJEW&#xa;2Y7RGsEmhe4JttiOaWmq935t7iFWL83QdMm67wg8bSHppVgYLlBzOwwLtB4OF2VUOB9kj5xLtE&#xa;2BNUedgj3wJOtZSIeZTQbjdcp0prcyhCWayfB0DEIVsCvxiT1eWxFH+vimGZ8rnB/bw1gguc0a&#xa;ga3kgEcEg5tUOqSNkWDtKDbs14usxm8m1/VUoRMyI1dTYrHK9llw0oF+hjSwiBmHBy+GXOGXtN&#xa;hcmrJ6ayAtPQ7ikbLLfup2xnGE3vaAtNkCtU4DfcIBbHRcPsLggcxQQkv5dQS1Amz2zLzj2EzT&#xa;Aqo9vq2AAmT2HjzO45UpuCOv0vWPKFcf2XoyWZXwGRtUTk5VafXk0bc2DwUPzY1t54UFCrtnKq&#xa;fJCi3c7oL2JSwElvMRyvuhOs0cvRHsu/KfYlO2+IX7ISWbq8gncGGxcNMUkVDF95/bUFy3SsFL&#xa;aE3jI3c+8XcXNuPBxGNOq4tcelBz891gh8bGhr72jrzZH13Cb70MMOxfHqWSY31hitnGUNxo4I&#xa;1QP5Y708vX/bkBeyjEU4hy3D48HX0USujEkv6G8Z4uibjkUAcC4tkEMYJVPQdVBWhs+ADs2w66&#xa;i33xKkmi5m7pUbtWULRCxKFTJ17M+L0JdQZCip4eIHIYJsiPYWUHFkzSse0XE/g7q5ApmY9Po5&#xa;+9gkZkZSTABcniK3ZmB0V0RhAFxYq5Kg3tSF5h1EGc11nMNOL0E9hbX5Aqez14ubMMY7fj4UWv&#xa;/HQL4Df1S0Bij0k34hvHWw/tmlBt+UQfAW/jaCXwM19uWODwuqjfca/F5Ns1P6EiOZ4Sucw5ox&#xa;V2Sxke0OSxHxXo6BAvsPYQP9BmhcAIhPzSxiaGJ12nFvM0J3uFOIVHX3wfejpgWnJK+bicwe1H&#xa;skOleKP+lp9J/TbC1PANa+IvXqexYXLi/FFfPvh/tgcn+ef1/Vtno9VhffBNMX7L161k2hTZpg&#xa;iv2cJjSq5NUB5/DQCjUU8rsjSoL10pcIzEpWpPMDm6GHcz41guKykh3owouccUE4WUBrOVgbRX&#xa;6MCwF+uw72Dq3/2dnqozUXTwKH3Qefm6+djl3t2MlJ3i9emnW6l4b9uD4obji42u/KQBzoYrgn&#xa;N/+Jd4Bf9KjiIK+DTu+DOcNrWpVhQVaQ2gkfbispB/91xfsfyIywSYmraPFywd8N374e7uwfUM&#xa;X6axkPd1jYeXFXV+fqTaJhl5Y2Vhc2khwe50YrI9+eJyc2Zm7cdFYo3NpJ32IV/ZQ5ZLW35ndb&#xa;F6783KRlYmL/B22O2u4f5i3OX8lLg+T23VWJtiww1hg+SHMuMP+rWFW2f3Uzx8dedoHW8h5wxG&#xa;5+X4OEnNB0lW81/3ipVn5OBzyy8OARHYSakZuYVq33uEnI7skonPExS053UneJNqeNiXSjbmoD&#xa;vQuuaZER6dYM37sXDLHKuDTzz29CCtazgikBcV70AoGxMeTm5TAsiRnIw3wYFARzV0VY+0QFUN&#xa;XekzG56fxkYrq2GMe+tWIAB5g8qsa4UGbaIEAMjt5lg3Nk50xqq7Qbjo5AWRXrIfZ9oaY21NAc&#xa;s5ufCTeajivS3OeH70cnHcR8gdVympsVtnVSCUfm81Kvc8UveMV2OWLs6dnbFjugoDDqdvodQB&#xa;P1rRRtxIDFu2oUae2FCZAp5pXWk6kIEWIV5FIVbLsOYWPePA+FB62SOiwQp7HIO+2Ob0UMwhN3&#xa;gCQ69i33RnKzJvGRRJEezCwEmbr9r78LX5kKd1w9+ahYJR9XhubHiGgB2b1LxIjoSLTJGWdRkb&#xa;E9XqydbZlDmOSS8N6gfkkYJlrS7qfny2SQWKooS7O/56OcaoiyQ7FmsV6ow6haH9WyIYo1iMby&#xa;TMbGUeriUtx4EgvbeSTqVyzsn7rvdC/LxO/O74fqvAyUKoqzanWNsdLOdQ3hH0HM+4O1D43bxs&#xa;/JTcdFSzqByniGwPF4O91071WhxnKhfcOW2PUYnkgcaDkQ3DECBlwWdqoXR8fLWOK6Qn/Hu2oa&#xa;pk0mjNjxlJItc4OB4Jz0wPlEtKSnrdETHQYNMmrihv5tSkmKeto6vQ8KsRFV4WAhKWzkmttmDF&#xa;a9WJFzGxsTceLXKQxVBMEWJMOUVRNnmsRnU4awDvoeH+3vWuyDSRgrqHbBMerur2kl++9/g6Qr&#xa;ERPDSYLnuqhPZHp4tnLkxjVIRWh2SvZb266AA+SllHMENv5M8sQ9jy3dsyjS+ig0wDY3ktn5kE&#xa;W63HV1Peo2yijjcHnnQpRj0LkyhviS1Q6A6PWTbw9cLVwwdvrG7Qoy3kpC3LNBixrFmrB06DO/&#xa;Wqvwx8VaTZoibpmt/E6Uk/+map+D7prekT0BAtbT8ItxnVLOpIt3kCzEJR7VkT5f3j151c46eF&#xa;98A0h9N0ZlSnzOmqnY9iue8KH9t5YG4FmVV1M4A365l0hoYOsmOU/J3qTuaBROF414qph6ffn5&#xa;F3KSGW/YhHicarl7unelaJOsnDbghBZMCIzmcFSdR/rrgewItDk3wA10Nd59cUxfyLzVBLvidw&#xa;MJwkMHY47GtJvkf955ba+GZakwkJR1Ex9EfqNw8EV2FQRZ7c2fDHJEsSwhwrd7JPlMZqXwxwrA&#xa;rP1D3ZUTC0Szeps0fbrmYcDPiCRo5fp9M0Ia+I4nhSLdD3mcL89M68GVsBd3eJXqt3rEpRMj6C&#xa;1Q8RKULBTzJXI0tUn/hVkWxqqFvSpjnUNzUFaKVLtVfe/+fpBcgI/730XRW6+Avt3fm+LrLR3E&#xa;qiuGt+LXusWgY8EJuEue9bQKDpxwARjcaFsWDRqNx3keiobOSJp6Opo/a8LM5RMZxu4k2C7W5S&#xa;KaH6AbZHvDwaovfMQAyBZkEH5CnY6ra7k5zp7rNoP38T3ZQNzrEBEl0ZDdaP8UBm75+wOoP6mv&#xa;DmzSD6iUkknkESp+fXDjQO1oSkRpumOv9Z7XoqNYGpTv85OqAzanbqUopFgRslV6TfKPN9A5VC&#xa;NofK9AATLF0xxoNVE8lizwFrTG/ru4tOTcz9y7lJ9Q72ugVwgjgw1f4rFmR95xF6I0ta7aib3J&#xa;ZpmPc9bxG0pqA2foZsfQiXUMjxfAqMXAwNC0oTYQV8DupP0886hD8xCCtQ0ch3tFgEwe4VFQlg&#xa;7QePuYKuoFjibztiLh04th+7dbhtfpP03qIN1Qg4ouO1paMFPe5kHAQU0fARSDaH/VpMCnDUcc&#xa;Bfq4Od1WUNGQsI8O6QkL8q96JXu95ZWP6yqO3ImHXjVva0EUHnUJjyEt6oyBbjf2ahDfa5ijg6&#xa;p0x6PbLSpx6Ni7WPS4bUYA/fzBU4flLDa7AYEvNtxQ6OVLzDIq+Umy0kK6SDw7OD40kF2JH3mS&#xa;ngPADGCHaqZLixjXRp4neydfVQI5w6yZ7zjxeuYhj/jQ0f/PdXqFjDHPZ51qDF6U3lZehp8imo&#xa;ojhwxD1kd188glA5/X7h2jRj7Mxevxx2fHik/t5ZckT8wQsNDzhGfiBHeFCooxm9CzqTRbQHR4&#xa;xY0ZXRCxMmTgv4KXiv2opgQhAw1bzxXl52d5AMjJskzuo6t39BmGJQ8wmiKjZn6xW+srTME0xV&#xa;Pg/UYp4qO2+HgTsTBaFksfs2G8VXnHT63UR/PeJxR3g9PJJv7LyIwSIcZ2yDf2+t/Sg2veMqHm&#xa;yKuiWasDvcEX5Xd738wP1TNTFlhyMQEdKPd2vv07zc2o1Js+4uf9WT6MfePck1HodBDVnYxIRM&#xa;1FKJarOInMwugsSgo3TZMUkFcnsCV4as7HZSUb5HqAGTZ1Nuxlh2/yiMdzc56JMTylu8nsHncs&#xa;tT5zokUhcT4u+mkyxb/ZNnvhFLGD3enQNOJ49yve7XvzeyCOzyz31AVsQGXDOihI8GaQFPCITr&#xa;pdUDr47eOQqdj3zIaf2hMR4pUUhzCX6iRRbmqVdf76toosDVqSgd7I2+VMSAlRbBynAgzIdeSl&#xa;BrV8qZ1pHc76XaRL98ocRTE0wdEZ+XN6+re1kZJxfY2uALCE2HJhU4T4Y4V4c4X4I454QQazMF&#xa;i22QUfbRVvBRV/DRV3hTUGgAGeXC8uHCZ0bIWstWmIHFDliZQbyW5ry05rwU5rw0Ip81C9dsed&#xa;+Nx8PyTaqUqvu8CH73w0/Y7dX3MMRHisTz34t25IsfWQxd8L/Cwxnag6h7YfLDUYhFFV2geqrE&#xa;GzImPJSkZw2AT1HNIkqhUA0Ibbr+LUgfw7Mkv8s28ooSEUae5xW2szSuCl6e8W0NvAX4TR3oDj&#xa;EOdWoO6cD8bQlqGnb7/nMH77dHw72/3Vybb2ivrob99KkE7Z8tV5n+D2bv/2bmXlND7pyCZ43o&#xa;NQolZ6OQ1YbuiOPSnkOX1HLgwAJnoCz4oq0+PCVe+r2EPGHaZetW5CWTkuHaUi5ZfoL7XZE/k4&#xa;oGcZky9Cf3bMLmuK+72UXU26V/92/YbbYLFvJ6uvWmQ/pJYLRqAG+MncqZx8yBnGJ5mtvErjkF&#xa;M0hjgHXiPlpGlZ02taKZjGSY2UbrR5RZ0lOEVj2w64cqEN/3h3mVY5B2WZ80Qixz307SrZyXHU&#xa;AiS+ircDCJZD82I/lN87zrAhmw3ifSetLiNN3klA6S9YGlxhUk8nyOMnHD2tySe60Iymo5L4mp&#xa;Mi0vsz2MqhuJG22Ojk8uDy5LFy8ylP5QqpWEUdbkMf+eayzD6XKI2lfI/30zRNUpK5dTb0dOrV&#xa;INvq1viEG6MDhTijx51fmWLud7p+xDKlVMYpAAfiLKTxJQbieFk54Q4J1V2EOox8/FNf4xEkBi&#xa;LtaMM/vMLx1eN6fKZo3Y7ARFkUpqHNZEOFxTTV3TKTFqOIJ+hwO1dmWrbAbqarJMdMggV0FB5Y&#xa;mzoIslITcBkI44vGhqMlgkdR3I2HDpaEQlz7PDSQmnCempEtiaJqk/ZfIXuyv2wGYkskQBVJ+P&#xa;P4It1VqtJLlk87TUy9kFlM24UjTW5TY4SS/MHeUGcToGkadpepEHpEK8MRwVzzhLQkL84Koail&#xa;vy2+JNj4pFbeTVjKVdhIHqsFg4pMKgLGcbCUx+Tkj7XQacZObJGn0L/zXD46Z7a/+OQHrGyAId&#xa;xelowtxWa0B4J0deMH7QTXDZ0iAWGoNNgvelDWTC8JgHnjKhQ1BZIE5UeLR7sEPps325NbfIPH&#xa;EKcvQaxpKb2/lPDlwXlSKDpMzizioDRE7Rln1cnLmyizcF5shA6n0wS84qzYwiqzl6ruxlipQN&#xa;8YBTTtwCJjC3+bZtjfk2VIGC55u3b6gCVkpdyceFPrewHwaaSX8M2zu/o/4ctkclaTV6X0kR6O&#xa;b3zvv3STdRm4iAwapMwOIsf/Gq3iNyLfI0RNnpWCC+fEN4DoUM6KJIHVXyWWmloWhBtSoHShoE&#xa;/gJB4GvFZdtWlOz5XKYJ/KpOP1bgKUy2r4G23HDsgenO1kUJQbujnMZThW+rXXl1MHOApnqFI5&#xa;DsiKXPRmEnQdMVXxtQbelmQqNqxJaemO65MLvwizYbDQuOqRrPp62pbZzhd7QOs3XSYPXJxQOG&#xa;iIx3b8GHBov0PB13kB9ky1lrtLFKB/JxJXhu1renlE/8dRYObVsiTHkXQNdPpUqU7diI0/faXm&#xa;0BxJ6f313xCWELZ/uQHPf7JVsEM2g/QAEfVxP6OiT+EkvoBJ/xBxU7yOdly409Uh/6TzC0INd/&#xa;cPFJ2luKvkjsW0jciRARsPx4wQDXliw85VIdepZtksL7jPWRA49s/XPoqg3+N38l7xFhL4wuE/&#xa;FOH+KcrocLis1m6P0VX1uEtOz1NUQuVRbNDVpWxOlIE/PsCZW3Hz9JlNH4I+/pK0JhEzMKwluU&#xa;ZFlMefqjI3+2X5TddVPMccgbuI68/Y7u579mbaKc2AuwjgTELBOkbUqssO1OkBRSR7cCQeQF40&#xa;J029wWgUM54E5c8Al8YERCASsvYF4kkcNX+QVjNz3LufwT+cXegeBR4SkmrX9C376x6On0SGvH&#xa;lyrVPKEV7Vtk0ieIpFhmSZi/Zm1v4G8YvD9m7WSk6wl9xj9n7Vn+MKJ10q9PisgSVIVXVPoWn5&#xa;nSfn/+M7c4mioQqH8M2+T/MGwrumf8w6tJ/q/PMvyn5qKpY/vZwchhiwf3RGthWPcjB8NoWYvZ&#xa;kpAWijaINhisuaSsB1ukSJlTllRucJ6bnXc9KnfnN4XduzyrTB3Hnhx7m4Owib2EuWQu1l+7pt&#xa;oFOX9/PL5mf2q7Boqo+0SsPUhF3mpY/tiPSQDWuXEVHsq2W1xfhAwQwkblclunHowPaOgB62pb&#xa;3ElzQYbJlqbGbakHylozMc9KajMOTnN8HMMIdpaI8slsVjgcjMDVX6UsZyWjQFgSkKolsOrXLe&#xa;CVLLx+NerA083nhn4pc/MX7/lYM/pwiTkMBn39T4bQcXvJRAnuUeD6LmjSGwe3rymfm5s/a8nG&#xa;e3g4BTAjOjDsSSm/zT0X9sNESv9rIcyORkaAbNwltLP4JPe4Qwvt1uWe6isNqMghiZcUaSSj75&#xa;VeOp/ai/TcnPb1QF2MyjN93xg+IjHCVYOJ7BsCgLd87JAGcsLiO0q/CJxafm5MA5EZDI8yd7qh&#xa;u5EpvziNlWSqWKi2CJRpWq+xQrK2aYk8LPimNQI7W3/QS72z2Gfp5Z4aKRuktnjCTWJ3uUSv3E&#xa;phXFqOGTnRkxmQG8gV45Q8NygXNNpfw6GEkoumy+pGIr6CxkjDVngPVhea+ypkSOFKp+7wwsSj&#xa;I3lX2Aj2S75XD8pTy/muVDHrF1YZ41FwoK+HzGD+sryv62XHFtutDpAcP4cja+ZGzI+vr0aAVZ&#xa;Ewkkm0B7+fBKcz58Ds8MhffJ7qiyva94FIzMJgVBZczfm5X2Il878XMEhjyEitwU3otfVGzFjI&#xa;pNx9Yh0lnIfic0OsFC9EjiVlXpVcYOXRFMMUbxPTsTBmlZXjfrLg9GEbajActI9rSAyYldno9c&#xa;DykY0ylxkg4A7oZJqEqUhzoIZhJkKq85fxoGse2HrfnxVua0aNcUXDIrXslwUeMpMjZmE5S0G4&#xa;69EBFLfnL1CE5BAMfVmAtozOQTID8WaDrUPmcGwyEQ6uo/dC/JdOBYHoeujj5F6MFdoZdgliPs&#xa;knmBMeRQDuY41+Vkb+xfh2XzkY81LyOa2ey3D8ZpHhUOI5UbVAk2WsVnm/CwnqKr3qo/s0sfO9&#xa;Z9IeJeaQjLCgurl6JwtYoDTUCp3xQAskUD/OkRB9pAjaRKeXjpWRpOinqNDTA66jRqGcK8oWcp&#xa;29khw7k0S7ut9IR7T7yXCl+zHUfMirYds1GQapBiZlXxqFNmoVMoGpjLVo+gGcQL8pDtE2GYjh&#xa;EUJCRv0OZgqfPVLc62edTN6QPLZW8rfolBgqR6FDyJl3VAEKVFfvjaZGev2vG135fx1zqNqJpA&#xa;jXVomoNtEZWBK9cPz6o2VRZnSCZmLUMsHTT4mPukN0cpts4FjK7pnXaZZei0cwzTkWGuCojEqJ&#xa;sJWYWiSEz3pU/OOUv3nm6wB84GyEgfGX9cEv+fTLQV3VObBlr3J7Ygha8k4TGtJT9se2UYzTqn&#xa;cbrLHR0IEzMbrNNaW3X2ylbdnu8Tia57O6GC/UfSSmqFM/cRjBN0VEJqtVLoubG93DVIJdfMWu&#xa;ztVdYSeXMTnStRAf7pcsbussVkZ4FLUnw/1yp26T1XextqwcFOPJJxBLZbZS0cKiE1l5cb6pVr&#xa;cMovKNtD1yZvCTP1VtQCt4TQj3nmvm/sLba1ZvXt8dStoenS/kcVUB6CqF2FIJtL/ZwYGa+SUC&#xa;B07aDxUo8xSTnE9TVbSbyw51jQ7ymeAvoGJzFz900EF4C1RwIRxZwcOWdlkfwK3ljQXuhadjn6&#xa;b0wYMpXQmgZCPVxHRBehCkEppxfu+6eMEDYwpn632FOPzuKl+62c/1cazWTJ4YU9Kmy58cVWbo&#xa;mpb1XvZdB5kS7iqkubVSVG0h+eMbv0wX5uX2Wwtu2GbvWH0X17ve3cDjy/J3PMnfQZRekzsL3V&#xa;KGT4zznh0CPtDJg1L3DDfpsw9Zoci9ry1nZA0ogcOxX4sEsmTXexYcR/uSm6/+vGQwvOs6+5+8&#xa;bzeBgonECkrybX6L0q1UA3w/oP+8ZvhRc+/O/nHNOAT8swXt/w3R/34GIlPNVhlPFd3PbjPJBg&#xa;tGYVU8Ry2CgmRasjKioFLYRtqK+iu1xnyRtBMaZtKGizvamLog1578FTTXe4T98FVP9eRTOv79&#xa;+gYFBKyMC6W3/mSW96TzpO/kytv10o79J1aPkbhxO6c1vVoueU51yAuuNMXGoQgO9wiKjYZTzG&#xa;6KABaACsOczVmR60JJUf0mHqwQSGqurEjaLNW+zJX33FrTtW/GzeOFhLOlkKdjnQ/FrMVpdEv2&#xa;ElvkEXYIIHL4LRHZFCZeoC9f1E/atoSwpTCaQc+JNVMyvlgMjvGLIQynSuckDuOh9p7eAYadY3&#xa;4/EMDqmbWlez9vZNyUz6NFU17elAmkpewT7bI18hCj4kyzLEhvM5GhxRzpNUoKqASKXliADtaN&#xa;PWY1dc5Jskjkqlij3E04W8sMkJNNgx3EhJC88mG22SFZ7NnHkZ042NNJflymSKNby89U8K6P4i&#xa;SygvVP+6+y94Xk1Zzb0pCZAstPePpkzIfXNPFt0pFg7VEjywLFsNBsn5ljgqPwJFkhUEcYCwJV&#xa;hAxSrNw7ozPT9KqtxNtYEiZxfm1kCH1XU9k5oBRx6WMjWKudx+3jrAywEO9bPzgWu7BJ+wW5QH&#xa;26TjiWfuDWuYir21NLnZ9aj1h1tuiBd69zc/f5+3jggQPcJYPMmOSemj2E/Vx0kkq6Essy5cSI&#xa;K+Tl9oZfxAc/6Ph2tEuhrgFXNbQvZFBHs1IRl7xDXrU+n6dwwlTvFxNvEcnzxHZMlOa66RGvn6&#xa;B9Go86AiyRwufW+zYVw5ZEDXuEZfW8L4fMTHsiYbhrRcVCqq/2+qiEbTTIMngCZURtTH1VKYuT&#xa;jpxjLjttOULfUo5NE3MTn5BUr7rT50gJH9Gek7Dbwur9Ho+LTHML8RCiYAPW4sJwytYssHdFLx&#xa;dRLbpGPQZ9GgPQVLdpqD0CVXHgNcjM8zgbU2Qb80dxYtD5Btpahqcw7nL1Xb4z4aBmcnyFFYP6&#xa;BVO2ZHZJKZcr67bpiVGyHHeNTzHlgFYGFoNxHYhNEenitSCZPSGa7mSl3QJQn1JPrBF7m9G1he&#xa;Rhw1lbJgEzg22ziKRkcVRtZHMVOaQzyjmba0xqwlpI676csIby19la2U5iCmfyFmspW8GFPQD0&#xa;ocswI7TRUZgjB2184rb1vsQL/N4vj4QVosV8qhYuOB1cuPym2H6jt5ZSBA+P8k4KMwC2G/lpGt&#xa;/ZXHOdemLL6BNWKceRPrgvP+OMxawdmlD8p3y00hF9lOw0hKE+tAF9ZnSk6gGR+u8eomfiu98b&#xa;idYvtPKvOXrZugLKPXQbdLR080NbyxW9/ohyDkwbXYBITnsMy9bpUgGaS+dHVK6vzDSb8ByJ2b&#xa;dLYtkuYWrXb97QTxaxDYEeQnvMYKeomB+YYLCftWarubXJY1qwKXWilvheZaPyWy6N8QfAschE&#xa;Yq4gdPhwZjFfFEd7SQQ+P6T1eIHyZEVminJL7IcfdAWdpnwigu3voM6D9ZKJ9mtlBxJeOeSz9O&#xa;28/Qrqb2uR4TSuE/jk3fpVo+TP9uo/fj6aHH3SP3sPM3+evzzCmAVPzD7w762fFyjLesayMwjI&#xa;EmQh3vGMQhFi29IbH0Lj+VZ7eEAKESqeWvAZS57opEpFnBM3DwGtsSuvNVut+Ti1P5HXP+pN8M&#xa;9W0hO8g6YgPn26+Ye3WY39l1Zy/WMr7e3sTI1d7J3ULE3dyfVdHUwMXUz//Uvn//KER6Watjva&#xa;ny//S3ATxrZIx6yBRGkUZgzREIUcZd/BlPosZVmotmvpFA/InOxPlSKm3cUQewd/urhp3KwpR+&#xa;p62tb6oEwa8zWjzJ22VHd9juN2fsiof3z09c72vVnaGusGxx5qBkDXsxuuJSQhH1dYYuftpywm&#xa;UtpFo+Pds7qLDllgSbdZctKzFH37Wz+bZnk4y44rHsWEwgznG8qO4zUx2Tdr5j5oyw25VgMls7&#xa;FANcPWrfX56YZX4T+hOxgAfdZkBsu1UDaQ6dgvWZvDNZxZ3SPp60HenheUK0No5bK0HCKmCrhN&#xa;XObhj9RyfhRT5Xmk9IaJ/VyQOLUEFxaFFZO2vOYqMiATgbj2kqN9bWC0iznDuXqE2A3zd1MDII&#xa;B/iE3EWY45A+YTrgGs+I8Uo+VmEuhwGoygZUIxbF4VG7FLShfDMJKzebb4U4WPrWRIx1UtNryY&#xa;GicoKREPbKNyMqAN4yjxZmJK8gT9kiuI2h1fOp0M2g1iKrTkS0+NoOTMgbCuvQo72QZfxh9xVJ&#xa;vMycHQy3PCNVxmM0+LOdfomHSwL8ROm2E7FPtjhmGv9wnAM9VdJvOcy7CfV6dVIUYXd/WpjE6o&#xa;bIPRyJKu2CT2xGCTUNA8H+ii1hPuaIaGVcqhzaBL0sRKmlP6HohLVpdf0EXfBoM4HRFvyaUDPI&#xa;vMw+gZI084TNi5enm+34FYfBDqQCWTRWJxGUBD6RD/LL1ehG8Dz0MApEXck4w62aWuhKHnghzC&#xa;FhYFITryMe/DZkTtcskpenX2cmtXRcCwsnbqArzeutFXQXB8Gt/qWYIdYu4yqxSNHuhTZDVtsb&#xa;BJ2e2wMpLktjfDZkqJv7OeurKGjuZQWofNy2WjYGxOE2jiJmBynkVYMjh47mLIMJeoxLVtD7Ib&#xa;T3ZU7rLGiDrCqsOIih8WPnOElQPeY1nMO/jhKEtV2Vo3kZPpAGt7QLrw58iwFfSi/BZQcwmLd5&#xa;su6TrBOWkOJvBW0LITVFfP4rJHALJjFAHakAhRkQPVVUcFf4w0umlvLNgZyGlXDamDu4YFoGjp&#xa;OKzREfBcNMmCSGhrf5guP5O3X8+loCuMw7RecyLxKWZvcmCozueVfDHG1mZaCYkvXMiUGUNxGj&#xa;hmrVbuU2SWpzdd0wtgwfCYgshXq/1EBkdQFCFwN4YoM9vP6RVKneNhlZ7rDk4QW02auvxUWJAX&#xa;YIaOaOcZw6ug2qCQRLRZzDe67qGbQIKCZOEdgJBk+PgCj+Ejqivnrl7+hO2e1xIpXyJmuuEU8W&#xa;sCdam4pfCaW1dmFLpUnl0pLXvb1X8zfQngWFrLTEW/xeqyIL2TaGZtwmWLXbSXJVOqGzO64QQL&#xa;l/aQxW6yMOf54ICyELhS83U3g5L/3nR1KeJxZRCbgl7mvQE6t4vRMxTMVzFVCveSDPT5xHHjzh&#xa;d57egZZ6JK4fa4yJE5FfcdYepMEJcQjiqy28iDmu8933vLV26K3BPyfDNc9wa1oNm8Nr1rpPnw&#xa;qHLMN+Fa2GQDfOHxA3rCVL/zu9agH3GS3mD5T9b3qT7w/vjSfSZsv7C5MS4kmWKjVtP9AIqOZ4&#xa;IX5Vph74dPX5+gg0WkWwRYePhP7LcyyIs5v4k1SaIIPwVmaU/z1wFdIvh73UK8pvhZERKwHWDt&#xa;+2AmGFHDpfJYpGsoGvkZf64gNmqi61pxk95VSUcH7JFHx0/rpUmtohA9G0mQLtS/+nUV6CNpHk&#xa;g+MX+lfg00GY5Ft9a/IbEbbOuikpAuYfqAoMt+QeucbQteW7oV7PvK3w+d5T0SFbO7KIGtsH3H&#xa;4hPG29UtQCTvAZvN2PbU9xSRpVjn1urx4rjVKC6VUf0LAxpya9oj7orC8gFMz2WIxd9ng6ieay&#xa;8G6/15jesW6c/EG7nc8Pn+weFC+H+WeN7/OfFy9ib/kfn/ncbqeKrIfnaoqMuMyGCFgbaVqCRM&#xa;XwpWsaS1QyTXLDxQmDUqBilaYeHTO48vKAk/vh0+ibzFqH3vg+72iuke2XO8uIgvMh3beTK9vB&#xa;jnA96OZ6bW+//2vqH65skFaL5pX2/iZJh09jRM69iFKS+4JYr/pVZfxu0jpuIpoViF3Wun+WYG&#xa;iDJssYOdERjGSdOc+sUvCzAEWRouOGOAXVgx8B5qazLMzeDxPaakr5MOLSDmhRru/1iuJwzeWW&#xa;2VYtbxFLlhuVP0+qwBGlFxlLe21pst5/Umz5LPxihtgfiRK5HgAKdydtA2ab2+axYyBexPaMrn&#xa;9qKwt2jSZbYOJFEG7E9ZQ3kuhqSeLqMKqDEmhP7iA18zC9tckt3wHL5iJp74JOWgdozaNx+CXy&#xa;BNK85cRhxIRwvFvByKPIhNOlllB1yn+ai+INYCN51xalFlLuVJRBXZtXEASZviDL2S36h+XwIE&#xa;5VZPZiLM1NF2YF2CSpV7mNFU5tzyLRtO2lKttyYwxk+EegpS2CuFZX+Qc/IKczUZW8qCiNrHct&#xa;Nta6ecx9ZXMBao0jTZWzLp4Wq3rNyWLPpqXeoFflNuHwglQKdgzZp/jl8EXThYlUvJ0HgQlfZQ&#xa;z4quABW+h6QRZ80BSDpXIzXLEDAMJ1Bl7bihaQXivEDcoLEAd8K+UIBh4DR9IdjrM6Yd3ROMO7&#xa;WFMlnUXGQsmsvavtNFh+dGiYbXnCafQ0uDRomVbJkj4BFnPsJCUl16SjvNcSdmTe0aOZva45s8&#xa;DkjvBCuEucVssEZSZGYxClO/kiWqqKl95Ulc9BBITzO8950e+/sFxclHhR5/Jlyb51wVbPm10y&#xa;HyFZRKiIW/EDwpzet4pl6b4kTmVxALrb57OC8t91n1XLjhQuR5UKh+aSe08jXFIkaFYVCufoy7&#xa;eo3NNgccYvUuXaLJRpNKPws51T2NyEleOyXI/mhUTvmeYyFoPtVmDktfj7ZrwB0uK/eM+6KgTL&#xa;gvQuWMmbpueNOGpUD5cx8KFwiwNMUZFdBGZtWySOvWgzGfO3cw2i4bRx0RYZbIJr3kBuiiIQIE&#xa;iW3s01UOIjb7jCy3Lf2i2FiUqjFIE34IYj62eyllp30d05prVoVvOKRPJqa6346neSSI7kjGUr&#xa;x3WyTT1RrCkk+OLW5ikcDCzMWJIcVHGtGF78fwTHD5CIYAWX7kFxD1mHpdzC3h9h7lOpMnZH6A&#xa;20+sR0aJsf7aYhHAXHkZ2IiA4gfuYwT74an/Kitotm6R43l+QOwMWefEYZJRsvLfesW0LLAj9Q&#xa;7E2YbgHFmyxxbs3UB74byCGNLgGtwTYYXP3aGCGW8LkOD3oLqCyGoJwIFrkeXBMZl9h/LynQrN&#xa;bFCVv8iX3Xo8rPoQh84uUF4VA57BDCzNzNQfeUCMaVzTML6gF7NKLMsE+xWxxVzf71QvM5r97s&#xa;1JJNx7LR7AWp4kzN1txbor2MF9gu5j4YsEqvT4+jtmy+5je4cyHsKk3alI4jqtAHZa6VSnkcYq&#xa;tQAcmXsqbwDfTgnVePNJwUvD3b8w2wC2jBbwB2ZjYP8Vpfv7zjhT5e9PLKMum2muToPVOqE0zh&#xa;bQ6KJ8t/pk28sQ3/RV+EfE4MRBgW4bP1V9ssXvb8APiPeLp8YjgNvTtrr5m2zMXnsySDJZrpjo&#xa;4Yz78t6z2v/365v8J9MUgHr56bprOuKhlypcj6w8Dx3mb7uyX488oKFkk1AkbIa5pKrLKzo47L&#xa;7+NDJTf+lmhNoidbKYQLa+CpdFlwT0JYStBWOaIaysxpH7dh2HUIA7FK4EttzH1KNOQa+DnT4y&#xa;4Fn9m3ochQdsGwAL/p5KfCvsC1NzNnKrzrr0rAMAV8Ru9B4wxVretNPGPvMDALzvP/JYouSXhv&#xa;Ml1jZT0GKoq9EwNSgHSFRr997YscpQfZP81phniI9Gy8o1Ene9yJC8o/WuAElGn89w7L1eCgsn&#xa;lZJh6FMtDTKu/Cl/R95PoMluk274YRCWQK/2cAplXy7hMlPLoNQ60A6y95bNYycQadE9tsEVks&#xa;PIMJ5eVVpdR0YS0/abcqAtjSvH3fwJiXF4TdkXjvX2taBs27ZMaqvGt2vdlEtXg0AcH17xfKtH&#xa;DEM5pagO566R5tUsBVR/j93dHHkpJpgs4UApa/zDqCUR3cm/3vzVOmn69dZL1qXJKrBshl0m7V&#xa;MmifSMJ2PqOcsbM34axYtT0GnkunZyprdQWQuvarJT3yWCes4Od2LvTTl6UAZl2FKEN0ZgICd9&#xa;rDIh4x4/xuXu6LJih/wEMizzcC9J+lUcf8EOuA5e8fzknIp8pWM1CiKFmFlw3yCzJvViaPPMN7&#xa;H3ZO+VrMBTAJkJpVoWNeA1ap5tvX+I1m4bDTT2yu7Q51KRpb5y40FcO83ipaIKiQHa66lBMqSn&#xa;sMsymce122mKoL2wwB7QwKRZN6bGd7mlfko8MOXstbDfoD6DrfO4Ui3KjRHDeKxFxyH8snCFM/&#xa;p5zxmKvUR2Pg0wICxsT+HG0vf8DonBV3BRL2KJoJ9TagSpP6ugButVM0QuexixoyG+djCxnXOm&#xa;HJuCFynO5Be7wNCT/DbB4W40uh9UEkyXZI1iKARzHLIGsipcKHHPZP4iN1W7RnpkmJYCgxWyGt&#xa;dlfMOrZkCjvpK5EXY+u11gYY1mUeBkpSBE/EjmxCUk6xN81LB4rFO4FCpJtow7KmP5gJTh9VUd&#xa;VH3UgRwfu8t288XDGyGhH96ueo5B7BHIhZfOckQ0fCjN63FqXlJ/9wr79UDdZJaX2gaNLnoo18&#xa;mLTVb23dUDaXwCoXUMaf2XYtTGLxa0drrv7SpHVfj5k6gnh+jgTfq9mQTYo4gAU2ORrf4qcxoa&#xa;HB/RwTxs2n7pGX+vAxzMQeVuAxMzaPdmf5FKvRd448+u0GOxJ935al4g6O9jQ7k780eCKQoOgk&#xa;PTX4BNyfn+25z1QRJrJEkALZcyUYS3KAXuLoRS2hhlKEtXESHepJav1dIpr3/ZK31el5DmjyLR&#xa;/0uKxPZv9tJWXlND/oixtVGAwBaRzJVKw8TyCWhpaE2YDpRGbT5QyinKtdQ1JMILqNiTrON9C5&#xa;i8C73L3KTuE9HnnduaP3aJJcenogbMYRFYundvvD+cXRxd+st/QDBDh+64+SWvPRQNeDIyySSo&#xa;4xv+cPnwrVu3UmMPrQ6jvaQexRBZZojcighgASwxkKxCc4sAT1s7isNJxpkZKryqhH/qVpoe+t&#xa;CVm/J4BR1mOSRo77esCt0xR3WgvhZBG7a42aEC1DfjfAC+iXqfkgxZVdfnVtOS704mCcMPZ83F&#xa;aBmFTI9myDPAMNpbq25xm1s0d5wB1wXnFjF6I3hptljjaQbD6ODPt2lCWa6GBzxNwbE/xvYNua&#xa;d+NuHkIbkqux/gHIDPAuIgzH8wssjoDgu1FRhB5MORtuQZfQryhTGMItk9O+Ho29j9fYKYx66A&#xa;yRCqDZlQJkLDQj4JZd6ikuTYIU+qj+E5wYz9crK+gsxQ3ut9bZfCgwEACrHbcqaJl1eltz506v&#xa;RUEKLLRGjO0c6rSDnVkwUb8yYtmjzltuO3rWC+8jWPZ+oq+palqgatjeQhv1aauUdz4Etznjrb&#xa;g9kRsnl+8yTxxSS2tD1CLG5K608MfPyOG0Uqm8gPjqFZArvLPYE8W97ZItWYS1qhmTfCcPhlAF&#xa;ppinnMgftq0vgpjEQGOa1QxUBwa5AAstkhOZCDvZersyU7Z40yuf5w4lR8YDZ9cjegr3BAWNVa&#xa;KdrYYzhHTVSkTctrZjYK3n29KcLTp2IbRcAQ26tUH713Ow2njxRBTBuo5dM4yJy2emG2h4eSKV&#xa;9bQBw7VGcg2pZc8lrvde9Ce3Qg205ZMTiWKfITTwEj752bIazgDOjudSzO7k6LM1jis0FxUbJf&#xa;0y1HBVJlakIi9Ct8IJQZwNJQrwEhgPy4N3V76gLWqLk6IpgU413XlFCG4jLmzQGlkRdp2F1FdL&#xa;yyC2sqsUrmdbL6Pp6lT1BbtB4xdYctCWVwCHRKtX05w6Te9QNxcpAAiW1sVh3BLWaok5iSHa3y&#xa;ZUh1hVC5dLpLDqE8ato0xVl63TWWpyIfZgCma0J1Ay7v+g2F8alecrKLNlVPoCXcClJvQftx8W&#xa;LJGZO17JYaw3RWvU5gxnyQdNG6O9uNnp7owppmrKslgT6frkDW6iC9rkawGVeEAx+5OwOy+r7s&#xa;7DMZKnbRc2y8H0Tycau8vjVMfujkdxm3F6QO9ltiVsyRRP+hJw2TU3N3Oty78Th15BdbnR/l8Z&#xa;tVOzzH+2u8d5hOWyYdzFKl776X2gXf28LPYM2+oflIdvn1PaFcZE53B1BxDfayZOHHa8IgCApt&#xa;d+F5zAe5g8lvl+Kl5H7jLUgQotywz1l69FmW0r7fF1i98/U/OLF3uZLiKdRl64tR8CEg4I+Mka&#xa;iJwsjezZN3pHUOnhA9ovq6h61P8BF4bvTABPh6zNLlrfaGsbZCpsL3GJjFpgP+24ALdOgIom25&#xa;ZLqoD8c3vpz+hS+UkAUnJcKYTtLhUAj3YtiqGtlT5JwRkZ1b/Vjy9Wb8+RBc5u2vey4MNW+t3/&#xa;5l9GL/d3op45mi+22Smxi2f4Fr+LG6WIbiFFClWrvcQN2vZwReCaGszeQopdeb9MsX2J7O9fbZ&#xa;/I3EbwiP9f3v8PJ0T07sTTJ8q0t2nvzjU/U3eVGw4RyMpq/fLupMTtShB3L6Hi/afvg2zZw30G&#xa;dXD2Ne0uHKSnjpJk9ZGgD2bNVHN2OONfJsk0SiQeR9US5rZgnf0tWWgGR0zXQ+3unpjy3bjNx2&#xa;9yjgADSmgS5MYWzGbMnAnV66YWtsUi8WDVCpzn3qQr3wLNJS9veWREFGVgcoqL5vhdvoJV5cS6&#xa;pdPbqMaR39cSNeXb/WJuqMPfXEbCRBwuwc/l07cebacPX20h6VM8RIY6ZQD4kkvmOYTd0/a5BF&#xa;gOKoU7T65ikCP4J8Nn5CTJ5K7gQGoEQhkgRIgRK7Lb0BnGW/rXmoK7+Dzl7WK2HKEBWNsHkJM3&#xa;ZkRAZg/Wmek+i1Y/ocGDkYEOxZydcy6Kmcahm88TQJ7HcIQIrJ9mOb8FZBKXKz/UGGHFWcnecx&#xa;c7ZrvWcT6Rgzq6Uwu12GpSmQoFxXGt8p90rEPqTQMavIrPXdA9ZHTtPTLgotxMc6VZrmtsy+xq&#xa;rnKobVQvXPS248fIMd8YKICr9KVwSKdcyZy/PDrPMtU1Tapr8ZfrjYxpZvunZwilN4ZZMYKkdD&#xa;l87O3OnzpADLAq44CtrfjSJhPTBAcsZAebpkCgWGZejRCbiDDMP4NteWfN8fWtn5omzrcMYS29&#xa;fJWgS9APptY4Lma9i++wQ72crjVQJ/y6HDUaNaU9eSatwkbNBCFsGuRhQ//HUFgk8EL89oizVx&#xa;UL2V6QVwX679DlfAmBmRFSA/eL5eS35b3E0KVaaxeP2JLndPQBU8VkEpYgrHZSHdgQvnpjXlOC&#xa;LTGERHhWf1FHgwBVuBwDeYFsPTVYCmhGhmXkGbnqTcrLOm5f6U5jXtpWbbo962droeTZ5Qbjh2&#xa;0mSeYKAIUzooCXcywSyr4my9ciLaJB7StIqAul9A2Ek2v5ObCeupWMa+4pr+VlVZAZSGXsMr48&#xa;e9g9jgJY02ocyNIYybUaU6ficbZJbTjqN8h5icuaV55xdGBb/LokY3//hpXc+pnFAqvOeukyHD&#xa;/8HNRac/U/9FT+hoyVFqA/elLYquQFnfflqd9EnpOp68sDK8g+m7+LE4XPfOLmFRxNT15xrpeI&#xa;iumJZPnEHYhyJjflEo45As2AKiSS6jWypXSADxD7dXQLQCYW53uM8WzJ36q8e9mtsx2FqfhMTM&#xa;8d6RTMTyjxgToO5y367GLlVebax3e3eOEsNHiCLFxlAf1YK+Is2FIbvLbwZ+y1jxj54WEDQOCH&#xa;eR1D+VOn1eIOsMirt4+s//9xONm9D0wZJ0BfTBlRUZ8td5JH84Df/+qz44HzBmGH/exYD5V9SH&#xa;45+tuKbDtLSkI4ULbNk6YLDp1fbi14NDJjZd3NGQ/H86/xkfzv2rnuqsPfsbj4z29gLLFScuv5&#xa;V2XuDUOJ+z+cHZ1u+sD1gDQsS+zDfC5nOGyFsdvRTKaq5e2uO3V5PWhQorRH0M1U3FRDpQjTZm&#xa;duTfnRX6vzmL/z85i9D5P5yF/tr0h7McDVEBS3oJ/8lZS386a/VCIPxw7lCMturLvzvL7uovZ9&#xa;3+z86imPrphp2H5KLsjomNCfYfzhr9d2cV/Yezjv97Z0Gbtyj9F2eh/+Ust//WWZj/4Sy6f3AW&#xa;NF9zbya/om/e350F/ZezCP5w1m01uB0Bx1/OIvzDWSd/d5b7f+cs2T+dpf2nsxQGvP9yFvufzv&#xa;r2787qyQhEcvy7s56ohZplGc2Z0pYmIgo5MwtFQqUjB8oWC3CHrr4JVYaBXBrfOgpxki9aCDDg&#xa;nzR6RHx6me+Eu8mDe9iBIArciCazhietaEO2xrmJQU5SnmwjTSHCWJOeMBcmxUfz+5cVlemJdD&#xa;dZjWgs3tBvzTm0oq/OWshSK+YXd7PRVhcqrFGKz23S64ojhv4/5ADWejZEfG9K5/wpEUw1uQYE&#xa;6YB3p472QFPwZkUHDwz9PPLTpkrSGBLuUnkcpeQNdhYfWXW3pLLmUsKiSdP0rrcbpWuELtUrgO&#xa;mUI5UqBq5aoVGy0HexB7NIkkw47JifLCYtnrWGgHkCxb5GtVroqhzETA71TdtAUUUVtvwCzbYm&#xa;6yuGZwNs+hNKfVt2t9Zf0oMcHYxMx01ygWJz6HVEwVLuc/KVitwaM2ldlVo5/OatENyl0MmyrZ&#xa;cW+50dYWXN9YTHszxdLk0+fI3Rmm01MBMO6DsekhdaxFXD6QW3EuTMMrdEFO8wVbO337oWUcSR&#xa;MslSz+6IPIwP/Ezo42l+x1zXDj9MXaixHaWSVBPfpbcwqlN0bvyUnR1pbj5i2O8a8TCMV3p93W&#xa;yWInNFW1Ee/1Tske3zDro2Xuct9AeXdwgcQOMTIK1HxvULzDn98Z9XXClkmQDWYz/wzq7DfLnV&#xa;MqrHmaLLV6C6f3mQ/CzNeR6OW9Ru+dGRpwtfIEbFC3qyT4RyqrENhbCgIi7V08kR1hl6vb+hwl&#xa;f5q4253erlEcL8/37FBfEq8U9XXCJ/W3EZ/23FlfR9avBft+Li/LfS/eGsv1ZcGsuMcVCrX22t&#xa;F2BavyyVYdAzwNUmL3+hCy+tTG4hD60x5aaqbw/vI3IYJNp17yCZQ/JzHdza5+oyd5fKtcEZZD&#xa;Kf8qye8s58f9069AfT+JKwI26Z4K038WudXorEYy7ZbuNgyxxvQ27s5rnM5logf8alYMn1OQNq&#xa;kHnTrfDsPCWGYtWMZt9CknVcstmWQ8px7sTLjPyXW4i9vfMtIdY6RV9l1+Cnvn6UrSVhDNAYVa&#xa;BByxXcFS4IVi+KsU+l6mb8RJPkKPR0KqwjTlDu786aH1H85VBh7RPUrsP2DCbCc/qcZM8pHfPL&#xa;07SWBAfux/LTM0gkyZZmvIv+2DoaSlODhqWmGBDUbGP4GgmIZGE2pr4uuXEFHSvjDC8hyGx3xK&#xa;AzYmMPLDOjpphIPqc3DTGrP+tvCBlGc5gsHdppKrjBoIoctDiDgAi/qHyUrhg06/BDd3RsNHA3&#xa;TSSbuKXk9o2kHzjqeDZ7eQHGjFtJnVjTIObMghjoPhsdW681guK1ppCVdM6xvEZlzGDfPiUBeE&#xa;DfqdJL1qUWAYgIsXgBk791YALjwn500Ve6Af/ClE7JzpU31Fn3Xle7AUuvUGPt+Ar72umjJfCr&#xa;/MID9wBPkCaBmA4eXrBUKTwk9oG8+kPLme6QN87XmVcAbLoTn2hqTNvvWaFsRcTgZpKNcyxlmQ&#xa;h1w6N5jls2J02lMqjbL7WaQtlAGaVGRPWGKaW9W1ZkhGbhre83T9+VQq2gMK9rY9aegndepNqL&#xa;Vl3OY7o79pwpaufreFTUEcYAZFaTiIb0g1UhHvNQAgMEBBTr7HGDmuysjzhOxQReCNks2NAoIL&#xa;o9twuNuOc5exRwjIojj28L0w5EZQESGgpRf0BLNb2G+09oXUSc/wkt+D+g9TIFW4DAJy4rQaA/&#xa;C0cD2ZlQOlz0a55hqWmRQE8ZOtp8ANOnsb1zciOMtRUzqcLOmwMlKTiuLLogZzVKQYK9Wa1Cjt&#xa;w60bJsg/iL3FktrzADYVoqMlaI1g/d5pHL1a88nT7MnSRr+eLy011k05JFaFbHny11VeO7BEmD&#xa;HNMChXblt/Ez5Y/vYaQA0+55ChnP4NUTmzKyRXDRW46OrPdPhwaVPmLmARWBDfpDFI3WR2446m&#xa;HFdvbTDCjrid3kipZWpKdj/YodM732LS2hpbvOPp/OUCkCqsnof3pt7/lQrzyyROAFIIGQvlNk&#xa;1XFidATkDm/aEeWizJKd25OuOX/+baWv7/tj3SDgfCc/uRE61rpYuUXKH00iP5XxzJAm4Snc4G&#xa;xv84KJWj3C31BG8fH6SuqXemKktwb8hL801cTMkSD20hXxhIIYQ11yTJ7U+d6IHbIzHAKPax5l&#xa;oMXkbvu3MmMItTj26DqMrx3S1fg3fzuPjc6wyYH1L5MW1z+X1irm/5fW/4m0Ov+fpKVTZaCGBE&#xa;85UGGJYVVG3rqC0VtLIG3N+jati7hhEwmepb0zmVUiMDNe1nNuohgWpFbfLp4eU5h+/7z0uRkx&#xa;/X+x945NukBbtmbatm3btp1v2ratnc7caedO29hp27Zt2+5zTlXdqKruezs64vaXjv6yfsIz5x&#xa;ixxhx8vZ3xAojxjRxu4ao68sYyfR1S8BIJFOM5gb/pFsHussyhzpb0N0vWlZCX6ecOU13K9vnL&#xa;LdLNWnE8T5h9e5EooKZUaP7m3uzW/GPTivv/N63/T2xak9nz/3S0+vahCQgT/uVoGe7A85338Q&#xa;ZS3g7CTyr16s2PESVdc85e+AicF1V7OxPavXcLujy18LySZc8zZBiNUHX/js2RHCHV7KtQdBor&#xa;5UrhHgaQPKIWOwXVxvr3KTB/YEIUP4Lt8NN//86+ZKbJ8RFWxKkJDGDCG2jgEkXffMF8WRNT+B&#xa;tw6BybJ60YWkScNoWU06EC/vV3s2LIcIFbYWhmdoVXjdzr+PNBgOL7X6W4kZXlh//vbVrc/+Fo&#xa;/fuPYhQUqbREELvi5qZltHsQPWUbA8tKJFlceDToEpXFVlv7/n5nzgbGs1vIrLvwV/wmkgXsr/&#xa;PonjEnPg8PaAfYgdej6+2H9yyXXJfv75epXKCSv9OOpY3D+BZjx7r0WiKOW02XGX0GZhf6Hflt&#xa;vtvWtzUFNZmpB2uf/jDRRmVmOgALWXb2ORXZQIpQroFWsxa1bLwVthllUdoN1Jq6saVSXcdMEM&#xa;52An64gXDnHQRdrJpsmKC9e+hd1VNST+RuuMK28fblOZDZGY0Vab4UQQYVRwQY0XpVPdYMBrMK&#xa;PDr3BM62qdDpUiwWrZElXVHGPxkHyeILxlRqJLi9mRShHHT57nZjguq1qiFtKKA+0tCEOP2OhK&#xa;x8sb3YxJESKbXM0dnUQt0lhlhp81K79UEPWKeicKRw0B5TjljXgG9M/rKqB7cJlzY9jEX8oEEm&#xa;Tz7ugbb2SVTd8tcw9Xm5JG/vRbZQD2wGCYzMfh+4OwzKnz3dQ9ntfkscrWhmuRyJyQp7XDsP84&#xa;mjeeP2/CboABivsEZ7l4omY67kQ4D9kRiEV41RxXx0PQZzjgQw6uE19NR2BmvICZVSvtTdxyJx&#xa;eIdZfmbYLBm1951wVhgKHKoyFW+m3YINtsjVpupEQZ06RkhN+dj7DdNjtXbqRWvzsvnr3u4Abo&#xa;GJnaNbbIcN4OAPBQ6FRz36xPrtOuSakpudaGOJgrPuuvUD1MM/Frdg396KPefzXr1N2QOTTUKp&#xa;fWB+e8NeJh8S5pcNj0eCtxrEO8t4HIkBFNZTo/cIUJ8DbzcHpjLyfivt5+PvbeIZ3Htk47w/uO&#xa;OJGkuEhjTqD5BJRiERrvG2eujKzWl4Ig35or6wcGh8Qw1s9gWTs4wWb0KrxofXkQpFu7BqZKrH&#xa;aKaOwrFHLmGbWpiyMAYsVD5KwU2PVB5wdt+XmTLC6LJWdPuVRI6YFUGY6Sm/ayPP67OBu7Du26&#xa;D8xVgS9t7Pwqh9ReFY/GzAd4zIYxyUS9nVSU6dWzTbzZfZNmYB8t1kiGGBv4lfO1vaxq+UWOqx&#xa;or2nHOFQ5GCN2r4v5zYeUaEfY7ir8ddpzLStmw2IKJ96UYnTcOsEesWLAfQzy29VxNWsrD4PmG&#xa;X4cvPB5JbpSREWxs51IH8afaXfvyOE4ZBdkooIh8V52NvpiWIJ3hEwfx/0HFRHQkYmiOV/49ZE&#xa;k+l/XjKGqfPAoqEffnHUjNsJB6w4Zrve3+C/R70FsBhkFYk9Mr3TjlO4FRvPELa24TF2DqfgH1&#xa;ZMRHb16G0KFK0PHXYD9Ed34QWAm6nl4Lw1gf7ugXaghdyA0O6pEmINsElIUwpHv3vkcUa3b9HL&#xa;Qh/me5BG8x9cOLh+NTymuI+BbPRZSHYljXSxQvP12a4GYd+nYo3A8L76Mj2j9q0OfT4zapah/f&#xa;T/Sr4uaNZ9Q4cdwqeD3OPOZvM9+elTgonCDkvThD4w67dG6Xj136jlDqTItkoc/rRmyDuSXTgd&#xa;ydhpQoueNf5tT7hf+G/RZSDaSVmrfxAt+n9JNPz/OdH+nVla0J66K+rfM5ZF2Pxx9G9eE6P1Jp&#xa;QydDFF0ZeDmYfiUeQ2KPSx5LIJW2JeBPzSMwRTcuY5h6tCgSB6VGiWsNVbIIEocGYu+8MoB+3y&#xa;WtpUxeAwIfSXvPRmpbJlbzc+Do1ewyqfazkP1+7X3Cc5D7kutYIfU5uUQI2j4n2psdKsmfiT6e&#xa;aNpClyGU68Kdj1k7DAEXn3WcwmYqgSziTrAc94IyBUyJucCdLF5gztXyPZN5+W5YYHKBxxrS7g&#xa;fdvNpWEmIxAd4N4zzs30QUovQh5VNo6NlMu4uGjJf/7I0SShq3nENru5uiLART+7I7i/EOLyb3&#xa;Ovzu2srKwxrwao7Aqu7cyc9WV40vxpsskAy9S7Vg3jx7ZroYj942QzLuUYPp5RZbcK6CQ1Mm2o&#xa;O/SUQTqTNqMouFtM57aSsyjM0cd24RPOr1Jj4RFMuwAtLDyc3SCOXwi6p17gyDJa/2tRJ+79AK&#xa;qr6j4qo/2M3FeyzptSg4uSvLgMH/oX+8XqlpRuVYnVaB00NqsLFjfE5uK3LXI/QM3m1kgHCreu&#xa;PMvgZYEmywayriGkFE7YhJjeomQ+8gyaFjubGymGfIRhOLH5DzbnvjkQu9oNHbfpVXQCRqdf3S&#xa;XAmcJtWw1FrmS4PeZQs39y+bFI5aR0gT6qBH4Vm5Z7TsV2b3eoUcvQu+p6GhxfgoTZcI1C3Q+r&#xa;g40vZP03yyL08qwKJUt545+6MwNETJbbbD3ixULhUnUcUc0oZ7NaqiszRe3xSX7xoEBKLZZiOW&#xa;XubAJWWxf/+CgOeoH0pOPWP8xJ4xE+S3X2c38RP8AvRqoPNXVInCblNpL0ABQTC9xSL45ucPni&#xa;0ORcZKuqYiEZc0c6ccOo5Zeuw5v4QPiXUsBfsI9oaM1DT30AeMk5CZt0CV8WKB5vWeKSKC3XVh&#xa;K0ZldYHrf1lqh81mz2DpZjlwlRM2GQwOPzFW4OIxiEKplMkI75RVi/8WLKSTkgfjSjYSm5zK8D&#xa;sIh1cvtj+YJOv9OV2SjUoHnY5XR51CxdkMCaJAihzjU9JM6SpGZ2MwnIfWxauxaDRnn2QrtJqQ&#xa;0ZKImP1CorRohJ8Bd+L4/QLcMbaohOcBFp/DNVrDkmuAL1j63DJuzoJJrENgbvSTzOEtRmmNm+&#xa;6ITJ2FKWEBVjIyAHYhlUDJSSBL4UvkzvbqiKbIQ97GhrT5yZ+YEFCMT0bX+AJDQOOPrdYvL5he&#xa;xa9ow8LnRfzVI2+1oGlsa73Kx4Cie40V1ZBIjdYYC/eOkYbsnfSoUzsF2yr0EFN3IVCO4St+R9&#xa;JShhTAqs8z5q7WEZSgYI5uplvvxCOEwRzXAY9uARTRbzKbA7+ujDgno6RTnxwzcOfODOFCHbUj&#xa;5E+H1eVxjRaKqpdUxUc6Sd4kLdtUUHFssgzw4E+BiYB9HBz/UCQwAYRo/GCE5npva8dLjez48/&#xa;PrHubpgEoV/42liM8lK6hXSxF9jkRxP4WzfmjSrWq/+7gi9Bu/EYkb8YJZDqaxct0Hbi1H16C+&#xa;WvCZwaqkaYQVXolJrg17/TSaftkrFxELcHlc/ikAwBIgOwr9KQgzPcHz9qeyaCX+ZID6Vuars0&#xa;TQXy6nAQdw08NEv5H0nDaJmCtSZdLDpvRezmse2QP7KxTtl/nY1pQtI2pby8oPGaO+pwe0fQoH&#xa;L06QI5D3/twsPXGqaa4YifKphVyZYX2ZFBUFQ7nb9O8Liio2XgohEaQJ0SmLn0S0HlOnL+kKGe&#xa;FyVkt7hqULC79QsH40/xBr2iqRuDJ8Lva6SFXmc3DWzde8H6641A+GZwyLpkZ+c5fIUZBlxl37&#xa;Zph+Uuacl+peb93vfQMTExVzErNrv/4dDLOfA7BttzGr50hzuM9hXerayG3fcoN9ocXSf2RS7k&#xa;4dh7uZnjJITdRWTvPPbs0JACuxvh8bvV7/JzAAoo2XMbcspm5uAQFEiH2Wd0tVUW7ik5UPOpMm&#xa;k8WBzLnyb6XgcPC5QW5T7aOW9VzDejDmYUN32HxDc6SrGWCd94muGpQMts0irNm1q1qzplBLs7&#xa;6ld2bx/V8hW3CP1wSA6z5SlvnzgUdFWr3J4NWZ9BFYj4Wa6TH5Kx6TNWOup1WqeesmflscfhoE&#xa;+IYbnKNmDSY5xKsVSWfFZ3MzVYqNOjHv78pEitXV/YVgL6CKjZWkc5kyaN2Ahq5mzSqmJyQM7W&#xa;ACYU9jFqfHjjglVKmRyamQ8bxjV+Mxp62KM343GnArW+g2th86miS/jKX2cVR89orhZTk7eBlm&#xa;6zjPbRKrRuK0poW7UhL20g1oqCWOqKrZGgNxnjSnGk+Z2nBtP+m+Qa5OLoigTmgsd9HGJYanlA&#xa;Ya3oAPioBGrcr2Lcg6dS10K7rIvAQP2qKWPemIpsqV7equOLANTFQMjdsl4V/Ji/eocwHpK9vO&#xa;3kCRLk/i9Fx7XXV9+vRSsU5QtOTIgAQJ+4YcrYOYKQOpIMwaTHby4ERktP1r2+Cx7atHrsOD3T&#xa;J1nQ+9XEU+wssmcsC1RzoWdmU/TH1pUHeFkZwhtjBshDIsaneTkotTigqJqHJ/C98lFwA4Qxoy&#xa;NlSZEq0GXWM5nKPPemGwxgqxcl572lg9vs8jr7J0RiYm6K7AxXqbQJT/3FeNdCbfhBsCUvu8tP&#xa;fBLvTbkM7PYpLEXTi+yB6QfRea+yO33H6XqiMYls2QjxG0st96WcHU4iv2QyG4ZmR3U7ZJcKTk&#xa;z5rrpWRYyg9nUQBwRwA06wjRsBZqLzPZq9SYSxeDhLZ5mwSI7zvdOghNg5WE02tHZwsMUklbPr&#xa;khLJjKD7VDPMSnHO9qn7aAoL0+RrD6m9MjNC6LEIb/77sTUkl8iKcVO6QZntt323lorXgUDDDb&#xa;2oS/RhQj2jzzr04Zcapm6H0Lsv2mhCTaNPor7igbYVtUdN6QYH7/OqP9hqwDXbVKqTv0UlhlXs&#xa;al3oL9Jf3/RJr5oGKLdwH+NTmlbnUuVKbCkb5kBFma9TnbKmTVVxpeQt9s3TipfVm08IV3R/xo&#xa;wpbawET/k7Z9XLcSkZndQrRimWFo14ruJX9Csti0uusxHIGeK7YSsQJI42FkXzWBUXYdHEckwu&#xa;ohtAHQNMMdQTcFe3N5Cw/cB5ccIuXDzBTm06Y0uG99K4hiixv2uC26VryC/c6AJpyCaWzVmAdT&#xa;rqJLvo7i+Uf4uEDJlY3nJ4p8qUpSAu7gx2LxQ2cM1+sGQ4c8FtDs4lSBUZYVxx40HWTN2oSyDg&#xa;uFrE4V9bOyDmW7Ujuzyj+5dv+XriKXp2+CXIpCTq03DX2yEonndHCNzSKEztTTbvhXFjpdUlvM&#xa;c43eFRMJLu9sAEjJld1q7MHMWDOO9+Mw5M73mJMx7dXlU82Ak1CF4aDDJcaoS9E7C/KhAlDryU&#xa;zxA6NlEhZ/YcUXmBPoWc+MWqtJvcQHpRsEfsEw/W2SQEpR3HeEILnpYVdycHCXx/5Hdyf92UOC&#xa;3PKxhEHk6tqQaACmYNQKbw10afCmxpCEYhHt2aJB9Q6Dt6m98l4PlDnB7d8TQ8BJ3cupyfYFJv&#xa;N3Hr5g7oGhRyHpWw9FZzd44rFH8yYX/JiCLkKsMKQJY9n+CmNQdQXhosIj/zYuxMSQcAbU/r2R&#xa;j0DYeR46elqVppFc3beKV8U4ULquPXnvB+b97hKGoTlH/cafBVzDueObaq/WTifetHKrfrngSo&#xa;CBo4h8k4v758jgTciWZM9JvZHt/29EohGFDyNk/oBnDjMehMX+BmLeM5orVHG3I5pmjPPji/lh&#xa;jrNBO0uPSDEnT/vj8mqik4pAmaOtq7V+SJJpP61tY8iC1u2SWkhrYBJfX/npSm2mGmRFfILbic&#xa;Hhv2qn4wPl1xrh+qe2WZsLc5RNYNPH7/dvYRbBPun7LptzGlboGvV+du2yTUZ+10RKlfYO3k28&#xa;0JWTzkJXBW7Oe9cZPlvMjQYLupm8p3tGQ+0PMSaCI4iFhARpiS6YqCc45hfmrUPclVCffPQvbV&#xa;s6c6F9/wUfLDdaGC7yXsFTh5Qf8G1y4uUPclr1ZZpmm5owmaMC9D3ANP95T1zpzT9A2bKTagNI&#xa;UsakwW/PgyGOhdB5S7cr5CKJyetyxAv8E5FOPMPQKBfsNlrG6LUnmh3ZAL+Id01R7kJR/8vexV&#xa;Xh6tnh/jaUO8Yok2uWdjfFDlYmA9TcVETlLMN+gW+umMWeiW9xxeibTwQ2XyvRkIuSlMf+z67d&#xa;LN+OBcSGSmG9h1IwuWmA5Kti8E83eGkxYeoSj6dZsxBiY//r5LnWAvzaB5rxLlSKM86xibbcw+&#xa;eYw2JJv/Enb8hCpYxGPKA1b+8zex2pnGz8YhsQNvG43aNnobMX37jTgYqYvz4/rE/LLqD7Za2T&#xa;Y3t8C8i976ucPoAQzFULD0TjvnX2Ii/EvDsVG8vFfxMfmxbvJ75kusN7bPlTBS0knVSeUKCyP+&#xa;JHE6oi+WKwpqryBQ/s+Vi0kuYkVvODfF3nopfq/Ow0+N1cYkTL839pQjZxUIvlCa7CvoNpf75H&#xa;X5mPrGe4mWBVdr3R5qCwmO0YWG+0vUhItWNCeVknYjnAcXH25Vo59t7sgPnYoIhJWhKpyaz8/8&#xa;6nPclmYEDQBejXv31fleoo71DBLrX7lWbM3jhv2B88lTVMNp2hFlBHkWUgPiJikDIn7Jd5wzr/&#xa;kVaVTNmQ/SU9kLL8QQMmmPhBIp0iKreViaBxKiSS+VITR0owvgOA6fx3TJAwJ5z0fuuGnPRx3+&#xa;92yCL/u47oFCUM800Z2DJsHdOcKn0yiCrzLJgL5C7rjvDMmAhcKekznBu1MD78cbvvc4gi/MuO&#xa;9KyZ+Fwh9WxjRRcAJ4T9cuSc6Dvn/7eUEYFvgIjQAEREX4nzXl5n/TlCT/RVMqmpq6/JtB9l+T&#xa;ojHq/2GGabbbEof8VrGpZk+Nn5WouDfWRjc2UAFVC6obSvNc+6fvb7+5JfYGOv2K+gkca6BswT&#xa;QA2cNz4OC86OKRxpaSsjdxve0y4zXtov8y0xMXAKn0a8qxuJVW12MCmaRHubZDXdQ3qeas5Mod&#xa;j7n2F7McB/7GNcGhvD37w9CuhHCW0bR7htdWTZTettNDfupCHV8h+T1iCDnedaT3jnGE0efgUL&#xa;VQJrHbelcQchisHwLcWOOF08xsFIXHVuIS0fKac5HDHFPoNXZzys0FBlaydgzS8m8420yj11gj&#xa;7G0fONY/9wQ390Q1Mdn89XRZqZMA9mjScpJA6LCQFptWOI0JC7MY3dily1jKrETxSXo9pazSBG&#xa;wJGxQGLpS6dr3DkjFH0qBV2+SvQVatsXsxVS4YBtVOPXv3QYlgIxpVHDa4FBicml10dMYDmoFP&#xa;LfGq09i5ZwAiHzE74LzzSppwpSyxfcvaRbJqY7urlneTz4OnhV135IJGXzQjvdmzwyjdGIxzfz&#xa;EeZ2CKimcLsHHJBk+7o1eAdQ7JglDa52ZdoWWdgr/xrDuzZxd2AyGNBVjZxnxj37tafwrfrMjs&#xa;l0+z8+lZIDAF3OENWGN8zzhe5NGTLObK2loSTWgw8wlDTxspiGNwjoQ7RcFsoW2bjNjDjhTm9G&#xa;Rzd/iRWFfvyU+WUom3lEPSbxdEd9GzQngxZ4MMFPDNN8aex+bVbZCZWHcUu6Cb+fC6rt3BsRpw&#xa;6J7d6qGZplwzwSF/oDuAsbEOCBfBTSj3Bkf1UyLhj0NqShOHqYelC/vlftb+DvKBS2NJoA84Go&#xa;Re2nDGbV7wbraCeieXqwTTK6hOoVhGD3BQwm/rQcQqgXaLN/v5nSc5SqSW6TvtlZdnBH9Bc20S&#xa;vFegSwz6t200Msa9aM/EdnwSwBYt0iHkKmg0muWRS/2aLMybj2M70PFH1dZipoeInW+o+TflKx&#xa;3QterSLfj4/b4shHoJazp+2Jqc2INkLHb1eAM6+qWSxp/u5jCeVhj8RYNIEuU0m4XlNq2j2D4P&#xa;uTpywmQ/msrunuGNPa9OW03jroV1ZAWqP9twGJpLjvAoVZqp9Lx9zWUA7bEC/ztQNFc1WveRuS&#xa;E/0XVyDUWAtND8EF8KpfABezTWF2iZvtC9j+4glvwG0tjZitAMRXYqcniWMHlm5gd8ee4Rl3Fa&#xa;zorvHROFk7QCnV/XL+r2JAPGeY3o7nIH0XQHaA6JmyHd+1wC/au9GEJHfp/oll8mdMBOKMcqsO&#xa;VHBNcEhVCfIXWBF6IsMQPxfEgT/CplBi++ivMG8yes6Lsvb3T7orlxpne/rsmiGmd+X9ZfQsUh&#xa;fNRZEt/0uguK+UvNQvuGOGMN0GjJErKukfIpDPkPSjWHVw8YKNGffPe2Jj/fvi3c15YdxyrB7p&#xa;Jb4ITV9TCV70on7tHeIjGeNYCi8LMh+E07pT+qSeOQkqKjWs5xSwjrPHbLvXjxTBEd9Oz0Bf34&#xa;E8L+gPyTVtO/Q370wYCAPqD+V7Ri/J/Q6t+D7pZGzq4u/y3+GPMfPj4UHR1sEbByo/GSpohIx7&#xa;4NrR29mHYBsHXw4r5s56V+f+rUtptBwT/JJfoZyxOMLfC6hB2QdOD5HMomc3lLzOkxw3/CPeP1&#xa;9XCzsANctfvLqM6ZyjdgBFVkh0M+YAVlBx0n3+ZeSA2hDfMVfiDV/zSyBY0p7KyE0qyjcGPT6j&#xa;zlULwPaSDxMaOdWN5pVNRAsalzFroqdfYGVtIzxPKZLgy7ZPpTT7ER2xyS13w0l7LcMFr4YsWi&#xa;VbuKf88uJ35jO4Ak2tDsrlNqgIstTLcP0dMQGz3zw3+JOx6ueL2XajBQ3j3V9THnGiZ43hKp3z&#xa;w08Io5erMej7Z14C/Tr0Eg7Q6c+3RAwhCcKAdXY0RAm/uecfzPWBgc6J46PswAM5jZWSdu2J1E&#xa;SLYviqwqoNWOFe5DeASjsJVPLAYozCYYxKFFl9dWO3a7O18Dv0HVbXQHmLPMv5Yp+koW+zVwRC&#xa;+M8D24OauZD+W9BAqhuK0PfwHDP5/iSPn02aKAwDN1QfdNcCA7lhaiTANzBleMeKlaSMnMYMiG&#xa;pmb3qRwZjeq1BIrAcx5df3bOEV07J0gvz5e3U7yP8Zja+R3P4GebnI8gxRNNFm5ixvq4fU/L/u&#xa;8ytFhRnbVzWn3BLo9bI7EOw8tgKtxyD3yb35756sItRar6aZ55z+Ojn7yMjqNkH++ivZ19uHGm&#xa;hHtz60puiFpkUADiTaUnJicWCwa6TwlX3hs2w8r8rzLX2ACiruWFN7L4tLzy0V2OKe/AeY04ix&#xa;CZ/oNti3TSxW/yWR+S082ALWpNMyzy9EXPd4NkFFZ4dN8iY/gLONQ5pCduWsSs075r9s0RieSB&#xa;ijBpuRhlpFwmNEaeORgOq/wsZfnnvqt97uYoTANknOY7oSEMAflfPmrsi06c3qtGSoVklAPCE6&#xa;1ceR2Q08gDn/+gkK/Cgf3IOs7zrdSQia9wtQHx+VxNPESLR5vFnZ/OpRjkk8OU8yBgdR1Tn+aP&#xa;TzrbV82RDpmmGx72oIlI05+8ZaZYjrbMc2v18HYqBKXZh8V2VHrajLUQzFDttHyLCB9AUbYO7w&#xa;bBWEOcGY1mKoQz2J8sHHWk0a8IPIa5SYSkrGXybIO5FXk44nUdmfLOR9ycD+5tQ4MFL3KMOEOM&#xa;GUmbGHtGw9jtgo0o14nZ7Hfe0LW8G7ivmWRFZTAFZYj7lXbPjqjMEbKZPGQdiWcX5m/bgp2B3D&#xa;5IZv+QdhEHZGviZxF3cvcg3hF+e+1x0rovCvFucWHzO+LrkqxlFQXYYtTNCQv/fsvyqLi4AOFq&#xa;wDeoakJjVHicTU8BQKDPApqvNGnd755RjnZ1nPlyX/l3WtQa8BpDN18st0WdYqnM/OgMVfFKRD&#xa;ENheGwMi3SY27pBu6jD/bDXQD0w7+Z7qP6BIsY/0AO1/825PxHDlFDxwNXA/07lk4LVTwm22l+&#xa;V0mGiCLBts06AyxoC8L25FjCfX61STovos7VVpElR9lCQkGNAVwbJhTDso1CKFBEGhpts0Q+ul&#xa;VVs2qINu4TgsArsKbfw3y4pi+JSHMix6/m4/7K73n7feFiygAYa/AG/J70Yf6BQo86irJC3WE8&#xa;+cRn/El76fZotHPvXb/NmFt/K8VnAQlEz6XmgI7jd6rRDLpkfzbbOhhMLK9GFZc6t8Nil7HreP&#xa;VGdxtRlGQxvZ5zVc22FLRr1WgHKR+9o02nIbBfV6KVLdJoDT/jX1oNHhs6nHxnSvPp8d+C6QY9&#xa;yUMSpuCJ250u+oY6VtXSpYdVrsV6CcEg2fw5Dq/mZoMsfA6LOW5g3rJ15uNaUdHyIww1OUdfrm&#xa;1yCCakIPvRQh9bJXbvkOAIw5bYDSi16v4yhh6ycPeqWrZ91dhkdfRR8qerv8DarZoFHVAqu1Um&#xa;YkupM8cVttKuy+TFyiD46/Xzeofr9/EVrByXsJnpZIlMXrttpuMDS/fs7KL5oB5HgNtalRrOXU&#xa;r0dPmU8JoqY5QzRSxiYEBLJA0Hog9ec25w2ANHlo0N16OmubXwkr47VfnNV9VlvfnJR7g1aqvB&#xa;zYO0V12COdu51srG0g8K354wk/VQSxixZTr+8gZ7EK3MxfIhpyd9S6+US684mM6FVymYwILpCV&#xa;ftIeSUcTU7pDd76HKwbUqni+SAQNpfL0tlr3p2w/q4GbcrEiVM2HhSggPg4gRWcV5Ipk2dgG6W&#xa;sRFAOw0B7JvVhfRKLiO9vQjwN3sRsXn9ojwD4ba8VivEC5VaEqIAyiNwgwFi8tTnYsfDnnP/hh&#xa;ZPzFhq4kJfRnbtU53msAMaKRSQl6PvcCo7re3WWPcspFmahxL1o455x9zYRhBDh4l9b4DEx3w6&#xa;WmsokHwN9Dd9m+aeajoA8d4PezPOrtFzubFSNLV47wsk2AlruGgD98/TLwR4ws8e29Xc4XAWpr&#xa;/yewyutkq+iTlv8YtEbqZobNTaXGI9MyOUeXO4lm4Ai2b+UgG4Qn5OWhRU9JWqtwF4gwpUUfXC&#xa;4ZHcsCkZZScM6zDaEfyf22C3AWtucJZ5G08mUEgG+LIlUNDTbB8db2t6yMWCWDpNmUcks9B3aV&#xa;YwHVHREXqa9cQwjeylW+QUEF1sruC50j0TniTWOmkv/wGS7dzZufzbbc9XkNxMu7L6gj1liCjK&#xa;LyeTQEmChbnymrIU0seGsJEDYm4X0FDBUhPWHEPvCHoWK1/9vJjr6f0oGv2eX6WawFQX6Vop4W&#xa;QNaUOLt+T47fsJLMNnDN1A4eaQHOEPRRmsLp+lIFa6RceHAsjJOxsAkSyvrWdzfI+9GPtA8uJK&#xa;yWy4caaGRuRkjUD77pqmilr7u7Bh2Lm6mgCfkL1Auu6YG1NH6J3i8QqSWqMNzA3BQdjxfZ/X7t&#xa;9VJ/Wuw+bquoywh9p2iPOvxBtp6OoDx/s5mzx2D9UvuFqfUILTuzD6UNi1FRlDinfR65rG1ADH&#xa;sJSEagOGksYhDOXADQd/ppg0rbGqXVeMFUf2YA3HbHIfdtka7BsLx2gw5oK0rN9G8tg1VpOazi&#xa;p+p+jtHc72k2XiD7GJVhN37/3RroUp16pG4+ks/Emwos1Xr328+YgNhRyFlEy6zutOqwCVtyxR&#xa;P+i+EFUP2vuIci43hNpGtL3mcH5X08SmRny7bOglDuBs7COj+RHsO73JeOprhz6Af8D0mvTyNN&#xa;pZ6nZ3v1tneQDRWvYlfU/Q1dbYGWaw/gnm53MirefHVKs8uxBeF3iLi2LM9rgyCRa1l53uVl8I&#xa;iiNmbaJHh8y4n/wjqHdd5JdQ0hQvw/6Tfg3B4blPJhYwF3fF87V6blIvGyaFEMdL7vVVV9jCil&#xa;NJZL02EwDDPKMMxCT0TATVpdJXEsZOXrP3rO4sKLFVaBtZL8wDmRdgfrB57bAPYvak+JI4Es7d&#xa;Hn1A+wETdSbwVSjvy3e4PEiq9qIq7xsGCTtGkUN2pYBQNFrGi+58rlBdT/PYHX21cuuat0JelJ&#xa;SWUGRtABzsFRnRtJf2eS3xYdOaOFw8KOjoGvSYa00bAxb+CVv2yhuo1uMddiY3C69zFuEH1i33&#xa;ign16tWZPX452HDaB2u6JoYQIEQQUHLx3Q+4rqXadbjc5XE6wUU4onOmkjSAx3sHqtm3CRStXW&#xa;A3OJEKXeBkmkJHZ+jgUrVfIVlIBYiS4dZI4gVM/bjX+CYFpg223Mqh2Q8cFgaZceK/VuV4xkan&#xa;3gUXp936lt/EnSpVTryOnc2r8+14wDOGXaLLyCln6otq4GjwgOsXpBL3TEvlHrKkpgXNyu1zft&#xa;pTtkYK5U7ZAn7lJuAoEddj98ArmGmu+pfisD8r1Iq8lUaVkUUcTP+6jjztIPFWFAsn9eYqII8G&#xa;f1Rj++mlqQZz5cjIRK6WfMw/3R6Y+0xC/nIVE8SdYzQ56fnXBA5wt1UghwQCukf4zxPYNVLhv5&#xa;yQ5fp/MoH/T5W4FxqoGkg/W0hbf6twNIqbli2Uk35JxGvr+KKRassA2VDRr3LouTv0r//F9eCk&#xa;8hO8HNC++sj/2jzQWCSQ+x/1iCfXDFhE3kAIHow+Fsff5secrB//ut+dhy/I6mo63HaBwJ1VCg&#xa;k/gM/x9pbqW2xrSTATbRN7cvyUeAXA6w5wX6AOZK6i5Wnm505hsAIwZ0P/sx+3cU2BuXoDgnCF&#xa;xp4n2Zkm1ULh9lHa3ilcDtcFhxZreVK/kzPeXIoBOzkEa0BmYNqyGGWgRuy5iqMcPA9iZNp560&#xa;KGwb9YSAJVtHPoiW1mkZV8ys2nOmgqfnxZfAaWfJ7VjpafcmOI6OjBNF9woFcCepB4gaWLFK7j&#xa;4lcZqE26kZ1sgg+I1/SjZ8uB5aG3JIlXiUAEUwjPWAdZbo46mceyUVc0FAeVJqy6BFock1iX04&#xa;LZ6SSDYN/hxnmn3l3rgo1yBF02a1mUnqHleJRsUAD2swDccx11XFSDftQkBls2YfLfUGOp81it&#xa;old2ssRCmGajjujq1XxD+P2YQ1XYAYkB16Y6FE7nkKFZvMJcn4xcKPAOkLct+EGLiNCyNgutva&#xa;RZGTS0WkXnm2STtLYDeerV4BKKRiNG7jWXfDl7G5If5ksTy4D0r6zrdDOH5Q17UdqkHhQeLLSt&#xa;HCobhBtujTkZ2RLooSJUxfHVOFCx9I+TEduOQXbZfmGY/SJAxW0fiKiLcWPqTT4S8yG265gnTr&#xa;hYBIlxvkxMenLjUyQPOMlokVIMrP/xJ84fWO7iYDbrqIDrCChkA0sZEURRuVk+JX3Om3Yh+T5p&#xa;PsoDMG9sQCRJRVtVk734So++MGE9icoXDMCoyXCGSNS4HJ1+D1xmnm4xjxBPgU4kU9c7Sil+ID&#xa;56wZOZSXdgI81RF6+TzjqifdSretMm0lUJXclEc6tg5gYm08ZwVv0sS+9W4QHEgwudcusBRh/9&#xa;uluiTqAo7VOiyBDNQoyEvUA86tpR+bYJ8HAVxGhhTXfCN9L429/mt/Y6WFwgTEDohXyKpQ5ZzS&#xa;LrgCPR3a90vrJD3y6Gvv5TvnGwF1kq6lkjqEsM9sGjzFQlfSUD4fPzdxrvEtIDvAi7TAIUM2h0&#xa;GUQz5T4v14n0QXBwimmYdAcW2zJJtZ3XDZFnfJgijBCbnfuPDx/PngQkfyFVCcwcJdXNP2UHky&#xa;Rx5Q30nuR7JtZY4BvYeWC0r2iYZr5BM1jNm5h4f/3mDjod+2s0JeIOVhf7BSxWm3tXf12Bo2C6&#xa;6mMcpt2CB1+qbrk1kRisGojkwdTsy2Jr3C4F9U5NjHOyMBzo7BuHiZBTxMvXYS/jqcIFE9fF+2&#xa;gt7IOmRDJfhzgcZuk5ufr3P8b50DEvjlIsbbfaKeE/az9C7xeeMMRkQsnLwtDi7Ndb4gh9JmLx&#xa;PyaLqyNLmvGU1slcvDzuGGWwKHtzqM/xxVvbdQRLOvyuCya03DqOI8LGvUtPl2zcCBk5k7vkWG&#xa;AQ8Xl/hJLXI7ciFpQrea/03MdZ1Fn1wpdBj7zQ9ALlXV80lczMOLf8gj+D+hS3q90vp0FQ3Old&#xa;5niCwies9pksES99UWZfQMXKEGUPsfBTE3xvFQNq3iX6grbdIm5G68LUDinmzjRm5cLQhPtUE8&#xa;n1jbqjYuEiOL9CfHIvNb/txHkDr1NDB11ocaTZ8Ea0GdygCZOsb3GqcIMg7S9Kf1isEAHFPaWO&#xa;5pwf8rvkuOf0m2TuFKBEkbxFrTaeFCxWU+6BUvRQkQsNjKFmL8dwpmYvjl3wHtwhLP6qglmyL6&#xa;vfOgHaqu6+g6R4h6rzwzyRWJQ6R+g8U8rqrhO5m74NG6Q//OnT1rZgeuKkftwK1h7S8fNg5hap&#xa;uEF5X6x9ZfqLNCDZiqW9Ko4hlqzWfj7v+szAEKfE1t0dfPN9T1+bt0P7DTml6I9Brov6XZBAEs&#xa;BfZEoG1f+v9q4DCR++MnAgoEnY/+3TgP1/HBVX3QCg8c9wJSCTYCFbNiDP8xjCRYKSWWnn0Tv9&#xa;UonOZy4mb3QK/bRNxhlLME11lX45Cn/kleYRGnd9W5x8lHTzziWjikoCTk8g8H7J8bh2vj7IDQ&#xa;j4ABVC9Dc+lad3HPnTzK2ocPwwHd2XZtImw13bxteUt1aTtCCbqlrntfO8nwE2PKvWSG9jxa41&#xa;P2nMcnQjVWZ02nxprNJy7ytcyTXWO16TXlM3mlS4ecghfOLBF8vMZkvou9ZifsrHRg2NHHbgRV&#xa;ucIgN3dffIbyf9IC0/vXPQvrHjdZsEgu0GN5d+YF2TXyqTcRD9BzyKOKFmPAdT5tBC09x5pDlX&#xa;ePwIyohkqPcaKRJ4gG2TE5unIr5MxCYsnxlwWGOYw64rYLqBE7qNe5NVqUAila/wjLBG2YJPnU&#xa;WRlYws0hAkUcbS7xlJfMmAhTCw9DgHK1eXPaqFnrZhQlE8usgd7M0EFtaexTX40xDGA7MvPOV0&#xa;JgUsZVlIgZQr2cZrpmNm31EJoy+sh8+wqw4jjhS3S1LtWjvNiZC2b51yI6Sb584SApe2Z9r5O2&#xa;W0WISeYTzpSds0qCNDwztM9bCu48WjmYpw7ksJpYZJTCzF76SEf+TNHsZ7jjIJp5blsZPKSWuL&#xa;Y/x6Sj0NNiq/E1ACI906rcSo7YA5UlPBUzat3QffyXDA3pmfR0BpTf0MHPZq5EYUqK2/FjurMW&#xa;f4KRSfHY6ZGtTCTHZAv/kY6FFG0xpatIqFkS25rrM8blJSZiyvO3omJrdTWezSYTmrPFal7ujw&#xa;ANLC3cSWzRrmId56oFYA3HU4ptFHtY38NMPUOOiaCfvnUmLqaVbC1x7TebkJvuEUul2hRU6DVc&#xa;4iq1bCMVN4WXc9m5Ja+UdBtUM92LSVIEDBP4cSe6bWoIy+sfTClwHFHF1ujx95BC8muVBU9tVz&#xa;h+hhQpPdntnNmeV6HzWMlXG0NcSLBl1dTZhgi8XVEZz1VWiWjoVNw0YbcROp+QUr1sq/vQbPTy&#xa;T1r6YsnHzGQnsE2bAjsz55Oijygun6i3SQfEOP4Rq2XQKIo5NBWDCM6MVPGPYEa9cQLClgaBJx&#xa;o1lcRs/ccgMytU53x1j8xIwYDBot77Kp68BSvDtADFwM3TdsxoyvF/MDpaWUBtGsapcWJ5NaJi&#xa;V9D+PIXKIB3q57sHQouF8Wl2JGDeOkDd83oQEwtPwWsWeHmLmvTSQ3vxeUQikf+8c10ueyLZiD&#xa;Rh8rGbAoZsYs9Ot0xlIoebteCeupTO7DlXnuAffdJt4+kqnrgmMuUdrVzWH3SHJ/vbfl0fahBg&#xa;m71FF7k7KRJ7ihkRJwYolewK63DbyIpgX70QDGPlfd/OxeeeLTkUOCEbT+jRaJU1XHToyC2BG6&#xa;TbRpd7lwev+3p/DJyTt87jzfA/IUuh6TACa/FNUWP82XLbcc5e/9bIGRrgTL7QXsJw/KRWtJmL&#xa;8wWV3kd9MIlpwHv2jwa3vkou07NETHMjMJEXI1ejAlkGVJC1BtcfDIGmoRoZcvafoqc2T/D7SD&#xa;8fxGsWnSfvCWajI6sFKuks6SLUd+jsbOjH1mwj5IA6z+0Snf08COk0WWpn9jaEeDNVUdsB09U+&#xa;kPPchDJbD1J/N8QGFCzgXVpzjCwUyevbGRL+w7XZu/TDRqT/89MgnVgf+vWQUoElYa/KbG1O3+&#xa;cTqz3Ql436/ScN9of0LPHwnfG3X5fkQSiUWV5gA4HOpDyO9/FdVKaXCLQf4DtoMw/yvzC+v/Er&#xa;b/DlNNaEO0I/Rv/foxuVTwfrBAcESwEF1T1PjfZIHOUBIcYChkEE2u9X/IQDsaLq7JkGQRq5e0&#xa;fawYm6qfVXzWnKlmm1bXRXV0rsyqu5o8rsxuJpb9fyZDQkxRF3qvP35een70fnxufnYE3nc+g4&#xa;FwzFp6V1cdjpx5G1LRbS7Oxq7qq79wxJS6V/DYTKQXzqKa3G6aUGrCjPs6u215+LkOD1o8D/aW&#xa;UPomjRDcBP4IeczzAzan29DQCCfqlJGsHWw2qGdVzEtWFLSDrPosO86e4yab/1DXhF6p7bxfZ/&#xa;UUUVwB5nNPZVGsKE8YyjEn74aKIuLs/n5waEHzmlHgSlriWG4kZtm0uxubzE8eaWdtN+bx5Ew/&#xa;D6EsNu/gjQ6BsDYAHBJ/r1tRuv9OrWrk9xnNdysU8vpLZ9ZW0kKXjkt4lbe8B35NbVePv6FHy1&#xa;Xo3Ela4Q79m7bSXRxpKIhJhEtVqa5oxpmXj19HEkyMtpICCblvjYsymoQu2pDhOMWpMQKBorrS&#xa;RJp5BjfoKLQKT84sEdSvGRVXF9/GyTtMG29l/DkDWnaAJWNFHoGb08YcbCVuecsdYuGDrlg4oP&#xa;3EeOFMWruN/M7Ve0eoxAlNKzyzKbt7OJLjGm9cE3xUp2LYYdWSIgm/2WZukUYtXDky409xmVn6&#xa;rOpGw1l0ihu2iywstycfTRDPIJx3sUAQ03hyD2DWgGbTNcthVks3/ZhRt/dhIl1rIp+WkS3CMG&#xa;8MnScDypjHs0J7eZzsjAWfkby69u9uIkiF3HkGkKrSFvyqZR5WJknEq7ZdSTsCq+jIEISJxJla&#xa;qQntV98vR6/E5cBmffzqoCXVeROQcjsImb96jsevMnWmiiR/puFNqyHgr4LMkqK40S9pJj3C5g&#xa;Jlrfr8N65W5qgt6Rp9XKscHs3kiyzSAlUuYw3bb7JpwciZMSL5efQlmOHusmLTcGeT6Rn348cK&#xa;zEFRfksrgrH6Cnfx3bYLqfxgLR8oejov+6Bf+CFPPmqVgiHHTSuMcLAysRe5iVnFVJAHwUpE3V&#xa;f2opGbJbDmBfPJVIPSzbhO5SXOhFANAAsrm6XEVlJTGVWs6/01n1uCvJMJHnugaedpqh2ZPveM&#xa;6csiDo7fcGjQnYqNQ8TBGNhPrqAY2hTeBp/4E4Zr+SFUMuJaHfNlvjwVk2/b4k1PUUSj4qB0xy&#xa;YYnXkr0Velv3GmlStnX89i/2POm2ky3r1mOK5UXiGCzKc97MhVO+vogtVS9roI4s+zbc/U6P5D&#xa;qAuw9kwzvEoWodefbSbSsIc9AGwqlGqbB7XdEwTnS4qLtH0/ftd5TI/q67d1A2Qmrppr8TzKy2&#xa;MRbyc1OVYW+AlZsBzkYMqXnBDn2uTmKd5JIcbRM4rtZsePNc0F7A1TPVp9FpoLD5Ig4Bx2hPEl&#xa;T9+QCxfh5y3M2DdHroLNnXutTVIny/mqKyDFoodNuAiGv7iILak8YRG5arLrjfEjq7KdOOHaUg&#xa;s0d0zMdclJZ4LSRrXZGrNtq8spXq63AllAa7Kjyzlh2N/YFMLugAjQdF+Nl0ZROZQJAgBtj8R9&#xa;0QlLgG4pNt+ctqYu8RFM8JOYmW3omnJJOLVdWd8HOC5z97IldwhnZL7f6SpPtMg583TqdAS0ur&#xa;90KJTubGSGah98Nx+PTdcPAwMWem3xIm6V+P13nllclUY8wORR210vRW1ArHbYHSG6OfstL5up&#xa;NUYJy2DeRAVOVEClV6bJwl0/V3vxHqEwnjrsKVooMGTLpGovZEs/ElP/1Lm4RbqOS56/QoO66R&#xa;UIrmz+LfjurXgvjvRv4S48sGDUbqXsIQvIX3wnVzSsB9ref7Dc85EdqFX0MfmgxfEfAM1X4J+6&#xa;xsHvQf0r9RNIXnp/f2fMyJiXpcHwjTXc8LqAxrBIn7TxiGm2YKCFVKZUrzWyA/7ALVeUqeEVAH&#xa;nR1ROc2SmI//MozUr2xdk1aTRuW1P79I1/KDkSgPXlHheLCSeg/KZPHVOsFf18qjJYoJLm9O4K&#xa;XRfjWPVlB2pv/mvG4NhNJk0F9EFt745RdMTZJK15hJ3aROZ26QQuSZ7Vkn9sPBFQuzHn8NLePs&#xa;nEZAAuGUkznsrQAEenxHbC9tRRfrhecu06M7t+279bG7ny2q/LMdcplbbma8eI04T2IJVpvC2g&#xa;d6zkOe3MeTdcn8Std4zNpepl084yVtm0gQXRKDtVnoQZkCm3onYkE3Ng3pJyOO7qsJwDUPxqHB&#xa;h9PmaLD7GubX9de47OqLshxq70mEVTUwPE0JIja9HJrsqMeiXn5cAWZkRkBDEeQq/DaFGk0LGp&#xa;oBshZ0z1E7EHjZe7y2bQndTBV56/aE+Fwuwkb9RGDBYJ0LnN77IKFFuLAeqB9/vffCsRdAa6h8&#xa;aeShrKVzEm6uo7ybw9mRmwei7Z+WNXqCHoTVuGmlYVxI0ejmZCpaZxrobfUlBf5ZpcjJa637bi&#xa;x3dAruT6hqUdnw9DMthYHRIJ3MSWpVU1l2F8Yq0qKLcczLU70/YuRcQBqO5VQ09ula5tlpOZ9q&#xa;5f8fRGa2SYrGY45xcX525tIX3LyVLeXzZiHGUITVKr6snZ3l8LFqE7yqj0Vab6to/zJjw6m4Pd&#xa;ANaGhUuAINBk9EZskx3Rkp0ZaDSyIuXkIQOrTaXXr+jmD3a3tOyGSM0bLuHvW10SeoS4dV6YqA&#xa;VHSW+izL8cPj2MyQ5Y1+Z+tceODLXtSB1dKt3IUZr2E6soGOWxs8ELIFjQu49A01C7cuATA+cI&#xa;z3nIQiUwezGdj8dI+pU8zvNpygi5FUhWFpzduX7q6asWFXEHVecmXC1Nzd4zX5q6G1pJkqB/7d&#xa;oyanRrShiBl0MKiEM18eHdADvhS15sIBINdQxxUa3aKPTKlToF5H3n5LoxJ3WgvuSuruqqozV8&#xa;DJRmVo1qyvrY9OrJOtH8Xq6gePp/wofc6CvKn7rLlq1WBXikGwmW0Ncjz7Mlwk67+SAiGKJS3S&#xa;Qm7rFA7j3ZHXkbZ/mh0HfCrGD86Ge90iUwZCF7KpU/QXKENEUTwuLDVnx2TH6C5V013RO7YyGB&#xa;/M3n7mDPHtHPi2UsDOQnr1yfjXjeidvfqXnerSZTZKW7kM5HYkvvtHVL/R93T91yDggHSXRnEn&#xa;B2ItIDoKQedtH9RKdAW61ecg48VWntdP6M6KTs2N99PjfzbZebtzgDfPBupg8QduN5AhTHVFjg&#xa;WB0kQjjB+sGfWlFvTLLK7rJzLPs+wkMx4Zm3sYDvNWPu+viujwP9uOLigKubspu8fPtzCQEJs1&#xa;Z4T8z5qK9q0ILDKiZn0L4UcTMJ52WSR4SohUULryIEBhAKu5WSt5520gQ7SpWKQJK3pgQ7GkmE&#xa;5bUWn61nbP7Wn3xxBtS4uVcw2WJllZ5ekmPSn82Vq69+khqjnjUHXN9ZIzsSqmKiA2Q/XNmDr2&#xa;mYSoVUsmHUuYSibwZx857ToDRMvEs1KA5pMMyJK4ehM3mxKrl9LoNqUk6SGtKhyVQCNNqKO4dy&#xa;RknX4E5qDyJcjO/lXDXxjo1svQoaBkfRBsN1akjL0SzSiHIV8ax81y78habfp723hR7sB67wJr&#xa;XQdpoTcEa2JpVVorq6jePwqxQeefLXwwiMv7y/fmHF6nvJYXgaqTJQHsmVebyJtGlM75el49Uk&#xa;NHDD7OVdxrtw0SDDI06IxMoUQ3NOtOFZOaPXxIvjnTnjazt2jwfex7+3MY0Gwh9WiLhqPTFrWa&#xa;NtgXe9h6gR8pA03WVIMqkaKY7+rnlVLq/mpqhMDtwvZl36c8dHw1ZOGtTCeAX4ND6UeDFhUDRx&#xa;WhmAwj+vujb2M7FTTU/4mszCwABeG7qDS4UCcLf9yl0iGAqtpzC0BINJBazEjxjNMFvHtUcE8R&#xa;+ZzUsl+QWP89/RaJl2JZYAvBzAK5nbFZx0Pn/ZnlfET40Um9k8KfPpb52RNqMg13L/prTpHB/i&#xa;bB1UtGOADNNyeNCIKk7aeRhrDD5vrGPZEklpRt2WaQVtOGS5qZgtirrVygo9ysoOLybQRe9lB9&#xa;Yl7E0FsofdNQNmA/VUB3qBvEUH7qT45QC9ywvyug20jd4bB3G7DUQAszsA/AkAyoXZXRAoMvAr&#xa;A2dC6f0DzAaCNTT/b5cGBmJ34Z5hgYAssP6zdqDV5FH4z9qB+79oByUHFytXKwd7aXtXM2dHZ7&#xa;N/vGQGFmauIg5GzqYS4gr/7cNhNsBGB1USzZ8S2haKdjdo3XMoVcQeq0+WvoC+yDDh1zIY1TqH&#xa;XiIwYMC+veNu+UP96grz0aZH1Q75YmGi9J3vS17AbuaSAcv0LtCfm5XXheEmy2vmz9dHrkEApC&#xa;PYDive2KTLxHhmVukMbqq5TZhAwcZmVXqWqaRR7EZwmHVqWPgw7FC9kbr8Nmkgc+P0nzCnJ4n2&#xa;qnOXs+gOUuLReJbJNtc5qjuvJutifvqGio11EMXcPR5O9cw0AP05lvuHmMAhDsulD4UQtFHYME&#xa;48nF2d53O9t7pbQnZm22TUszQ2MhtLiAVgyd3MBtExcMY56ULcPzHQCo4eP7V6XZtZFUBvI5bL&#xa;joWitRN8t8YCTqR2pq53T4wOc2hEJ7rNwLL4YtNunmueHlEdftywH2cbfPRKNvCMICMsQZ/mkj&#xa;EFKadaPPg0vJ/2SezjoUzmJ0OlWIulkupurAEGzDcy20RddieNbbeKLwzlY2orqgqqdZM0dzmN&#xa;wBRy6TVlzJX6RShWKMaBHk1zFXfqSuiqDWHGD2UsJCzmJEi9RS6KF5m/cAIncAilwiwEVfCEsE&#xa;MmK8UEBl0QjYZDKlWQme8jO5YSX2KKhq9LyZGmI4jzkteCHO4k1gsPhYxmo2d8RR7WkHmwYi7a&#xa;Rbf5HElFHPZLotzOryAtlzPG5lzuj4LEJIKyswTWc038Iof6Vgb7ZCgluSID7xz5KbtULJiJi0&#xa;JMjJOOm3U4sUyTjg9wpY7rCL2iaDKTHDp9xA1OSw2174rc8AVW5C7cNMsj30W3s7hq5Wowpy0D&#xa;G4SM9dAZg1aYXYG7DROFn/RRnPYw17Q4U9gDi/ZfveRB8LBVc9zIEL7gTmeRFvjs39W8pr4P2d&#xa;LDZCUk6b2ZNQfqZSwMxlK2ugUZF1Q1duQf1iKJG67T6U02vMfTsQVjZ79XXPNEEO0GGZbSj21V&#xa;F06ywsgzO1UAUb6arPS8cCn5sbNws41SHta4NdZYarfEsh1jA+mkKTJLyvnfm8eYCXuetsG6tm&#xa;opsdkLQOfLTJMxjMJpyr0dQQ3o52U6HvR9vhUp7RrHmRhzMldQdGpmnTEeYDo1zJdeEtfkmxG7&#xa;FO1musJaeZ+/eNIJBfF3CKG34qjjKjKrB3QCCAWGLODBbl1gDjbqztpZDhUarYIvKdVVUelJGM&#xa;FSUNB978bTte+6MxsypkcqYVk3HwEFmJu7SRnFc/2/anALJLF40HP4ClQpne5Hzhq8pDCVqd3E&#xa;9r0KB5HGsNVVHSsmy73AT+ULWoDc6IHvmIDZOHhNxBZJYjzy8pbeSmxRwXGkeuB5pfzFDWAfyU&#xa;KsLrUlGmsZEuS2Rravu98t/QpuYZ8lL0oL8gWoaSJrn8vYnpI8BR2jDpUXEy4HhfkYCTAyun4h&#xa;rKM2YFphOJqDqMz+gVYCoWGXZHxEBOMVOyALJZClrttORrmR/4z+kuUSE+WFR3RkizCV4ZbwGf&#xa;FJQnQkAVLMgjPiK34UNJu9spVzY9xHPGnqkFeB+MD0Atbtp20VTfIWQer/6xKbjTD/ec59z3WU&#xa;FRwZQI14ZoUTCkAlnvIG3oIKpEQ+TIFq2USXbNfH1t+a1fhI9XNLrP11UJkrsSfr7ltHbrrs9b&#xa;vqBe2Oz+/KzPjXKHK/DdY9EoK3fgeKLJY6iCBJluYwbpRHwgQFYb5WFYOJN48PYtshyra2q9CW&#xa;ezq6pXc0ABpVjMOaKqeHbCs4wocofzD5j65IJC154kiyVuJIilfi1/hRVl6qIfVSq4XnLDHcX1&#xa;GtV/hhqnzPG+IqK/L41rjKqByerwmvc2xGhUuGmp/QK7K02+9cU6Z3qHEWATy/iMwF0/cxft3S&#xa;wYA6CM8NEzZptQdh34Oi0a4ixvKgbnRBiCKSA17KpvmAf+I9cP0Xmic4EJDWfylpm1T/r9YQ6f&#xa;8d3v8N5E2a0L546tg/PfwWnEmmrFbaJb+K5ue3bBfsQvStYMmI7RbsOTbIrlBEoJOmyLTq19au&#xa;7VW0i0lUkJDjSazR40WrOOmPoIRvwdCGQO8AnciInbdCQucv25PHWY2nNxaJfzx+dl78bn66b/&#xa;4Pxt6CKa5Fa9clSII0ErTR4O7u7u5OcHd3h8bd3d3dIaGBRoNDcHcPLglnrb2/796z9pF7q2aN&#xa;mj9g1jOHvOMdOfzPq08lUEtN4YAKTuTTZz9LxWUyZ7IC2tJYebnywqNmnrzNr8ygbxSrldgytl&#xa;nB0npXFD7N2+EpO6XBucaxlyyvXFE+zgtTjTMf7bq6Qr53NPEsza/jXZ2bKBezzS6zjPqJSlmK&#xa;+VrK2WGEpmQvZC38Cm/drDr4eActU2a5qytYsMwabqJ1Uph+6cgheV/emkRg4kQV15pkeo2qZm&#xa;hn1qlVAWLK2VSr7fFFZliW0o65hatLlOUsQ2iimHdkXhCPWxcmt747CV2VFjShyZl/nScnPcHK&#xa;ypT75ePrA1/UFhVsIMwHOINTALDRRypyqNk6By15LVWwVg2uADS+r1DCXxDXhRYRsqrnnkcgVT&#xa;DXjpn7eCLfW7gk1d5j6Jj+HqkrkPatdV5bGtH2vb88rVsDeWgsazZU1qdcf8SluH7eFuYIjUmQ&#xa;9ioBrJzryZssy3KLSVatfDarzMSMKtiGqhBFpuGtLpO6aw8APX9PV3ZbKnVnTS9aSmBOn6Bmm9&#xa;VEe3NAcExWcfDIpSAzWtIcq2S2tQWOU2X9HE0YjvFBqE6JRATp9swDCX+US31UzRo9xkMvdEzY&#xa;1h1IX+gj7nnxQS5JZNpvpQdrqNnnjsfiifEKxYqUOLakn8idPQ+rgIF4Y/U5rHUliXLmH5em2h&#xa;pdlTQ7sgSnaJdCKBnyLqWx3Jp/dFld7xGwp/sK2zk7IzLTZ9HmjSXM2CmOWo1Ihtc2yYBMdOvC&#xa;i1xYVAbEGjvckz1smNk/3ZjZSSwo2eqZ03+TISiL60xfRkJvdzbli8wuXwdMfT923gDz4h+uIm&#xa;xGXSASkiatagDlk/wq8qAyyE+X2QCWPzeQ+RI+IOCwLqxsriTJk3DUSvEmd6m3z3RWFN7iIvvr&#xa;anJ3xkR6y5hy1xzcZapYbXIUl+Gmr57bko3BsTKCDqVQfcZS3JcX67E82enqjf0staF5MsogGD&#xa;YpMjnYJs04v+f96nh2h4k3CgrD5CojpYl3tKWhVygxz/MZVB/tJLO/kp9BoDxmVz72eD5eksPy&#xa;wgU2+lotL9m38YEXiIypETxs20It61n5PFICAV9/Qmr2W/q+u4JuyYpiyHuzyCvTnXA3Gv+olz&#xa;fkXf4uAxz1CsZkGZCFq2f70TDEttqE7xc6ETgOH6wnO5Il76v5uiM4Hg2daEYWvXY9ck1LEyTG&#xa;1ii0DITSGSO294LCfKgY6rHbPMfEEZxl6qkEjuPZ0b5v2Qc2M7gmPgRBUzkUi+lgZD3IXXPNj6&#xa;Qwag6+jgq9c2Fndi2KhOe+fZJ+iQ2gQfCJgeZ6uL2omtZipn+k3fGAI3JAsfYiN5BWoU5xyoBm&#xa;ypgT+OvL2KfwEyeZqrqIemzlGmqfmx32xVvDW53GMGg6vOWz9u6tqCoqYVuVjyC6so4fxuflxT&#xa;NhVya6WllH2/i52l7SRbO6JF5z4IXqONzewcnZgQEr5ErEpxNdvEZQcTLcx94yvd2UWf8rehUL&#xa;/ZIKoWqwBjUZStexWenqCzD1Gq0tWbK8sIyV/DeYDcCzhvRlKzEh0XaoBBBPfPPgaqaczzH52e&#xa;zkJeCDofo2JEO6oDYMMkYAZ+rLWXOU3cqvcj2BCPfjdzGXzTnjQ4BG0YxMX/xGH3r/jykF/G5q&#xa;7KS3LVXqaJczjANq+6TrWNFgp3eEE5Xe2gdd/4SSgIIBbilQuM7GSmp+qWpxHn2HIS5gKpqcNS&#xa;DE0hvxRk020as3C51ysP3Svf7bjetbyFaX4XjlEH9AS8AUml+fTjLOAAkjlgSHay2yh/OVe4UB&#xa;a0DM1vMNf4AjtFIk7R4c0W4+5AuuIo2NmLcw5ZbjPogs5y42fx7R50t4XIolagxz6uwcO+8WZo&#xa;NWRZM0VUHSHBv/qvpK9mgMjkxyr+DiIFKoa2aKpVcAUc/UUGiPa87kd04pYy/wDZXPDROpke5k&#xa;+g3i11975r2y8joF8jGlapTjSFtesfTs810KcoS4B++3Ie0kyyk4AKqC70ruug5f8wtW1GSuDn&#xa;UQfM0367mEr6bm2Z6FAzQzCvuytuSeo2xoqAZT7QbYhfqmotAL3qC2KzjKxljwp5Sg4601DBTE&#xa;pVRps8e1ufN0HXWPthglVeWuZlxoNtt55Whw5VDabHRq6tpzigKkaAuK40HyI9sr2Uk7HzrBwD&#xa;GK+zgaQZYZ7UmtKfCk6ee8xJhflKgbvmkRbLLT6gFu/Ap7uH3U5jX0beOsNfQd40EamtoUnonw&#xa;T88U5b/w1I0F07Su7ZS3U0a1pbf80xZ8dM9hCCq90SpoK9oYa066vsSkU6TOm7b1dpdyFtHXeV&#xa;YxbsJX1Ye5pvWMC4DgHZc1ujDGs+6JFsF6dBpKg23jegdtklpa3lUMGjKavvZpqcpLcaZsyldq&#xa;/r22MadyC/xB2n2G97ce+vdUNoN70lBRZKQaFMjfyKj8J4u/3Hd+PHMm42ykPc1Sag7VPSqJCR&#xa;RTvoCey0X4rdh+5xt5+FTVu7rAhIf9Ei4jpLZIUXqqqraozEBzVO2iQH20O96l0VGVm5N6o+5N&#xa;mZpTf66r2l6ZWypb7pJclVtml5uap14N4McRwpdRPaXNpcNMlnFTnlCPNMbvVuDQf0TjsUpTQ6&#xa;bjgyTyR85d76ucNK0OgYHHiNIJ3xYPai+OXWb3yiFiCRlEUflQjrCVWNcCIeoZarjF3uPMCvtM&#xa;qIHez3K7DUFWn8SlhFVj4z8l7dFLU8M5JIWxjisJFOnrXmnI3PTpW359egrejJAQJUhAk3KfFa&#xa;zOeVARaE04LfNXj3pQ8Sf80EAzrtdJ/fo/P2HUfM8Ppp0h8+RFL5AxcafkHYjTlMgh/eURZ4fr&#xa;7YUfIRHGs268H6EUY4jb4vSg8GJfZ1G/OMNnbA059IgZTrjZKwKI7zHaUE6JHqFDC3j1pM+v4l&#xa;HpXJ2pphmB6v0Lw2AayR3DvDkB5NMJtDPpckZ1WdRuoS5v/FpQvQ+tkDg/g9qEvE3GFE+ZPgNO&#xa;hzhDgausMHJmPwnzcqrzuswt7QKic91C9N60mrqEPrPGTnYdJdkWsrJ9mUs5N13DGZp+658S9g&#xa;7VOswMpTp+eZyRsdHpnb1rdSLTNZXdcLBcPjgmFQdmV+D+iprawcEfji9hR0I934kx7scTTMky&#xa;y+p1oO6kFvMOPCPpAIA9qUMw4c2VjRFC+fK0EnvWBMdFFq03E92DZooyNIbV2hJ3bITg1oyJfh&#xa;7gxkPbNP9ZMmGPXv9cWtj1XKJhT5OcMKFo+gbabUe7eR3Ct1hcUZp9QnPEl/cEXMztnHRG0vkh&#xa;lWxw0olbUJiNv8xbD6GqOvz+AbL4hLnYy33cSVBQjudfyf2wTVT97DTZhBZRdcd3Sk3FJ9qmOt&#xa;jfcNwrrUFlHMQRnnVtAGN88ME5NV/sGIXOdNhHb7bLXn0ErBgzVnDQAAkKTUylQvnuiNzKKCe/&#xa;E9ZrR6AEHbFdMq42VLkU9gtZUDDeEbrc11CH7skMXOo4Dy3ShYHxAzHMdgxjLpZ3eX+X1xkVcm&#xa;MQrfU6cgODYUIglLv6lbWEMHu2Pmf2K8PqMLBV2l1p7s0vdZKOx59s9liDvtCTTYAJ7AyQ4/lO&#xa;L6qY7GZTsJ0vuBxEfOCShKkvB/EjHM7DV46Dgd+hHBp9sF6XJe9D9pzJ80fs2NNZp5HWnCLDs6&#xa;VNjrURQiePmRtNqDqE73waKK/9ti4dnBVxVYZJGljOfQlSZwMZEvbjTEuAlQpzH+N3UA1mS7wY&#xa;36D+DGFZijpD0/qmGXYfIeT0w1Dnu/TCF90cdwVNYl/5ENSDo7IZo/sxPb2n931QtWNwAk2Rao&#xa;nfLGnfRacNJUZ/8/0x/kCbHpSfzWxM8Jn2huPN0HYpOwj1fUguXfRDkwCuG+BdkN4G/WvOqFi1&#xa;dWrJlJrimq5rahGlyhjB7LXKOhq2zIetV9zD1od6NB2ABJCIB0XJTqE4pg7XVQXakuywmIzTda&#xa;O9Ue7cSODh79jX3kjCpz1GxGn26awlvK4l9H4NvLTyPf3nYH1raNqFsdbq9/TVwfr2UIaWCAP7&#xa;T3oOSD1LKJxGqH/F9kFsjxjCWhPUHnPO2tCbBsRPvfJlLkz+ablSdfc/icc93CJ/ydb474kP6G&#xa;zapHlqH0TU/UrUCBihFXJMM2wab9A5mNd8JrR7+td9l7uxPTb3vyqYe7z/uYr5pP/PKobyH1WM&#xa;oqOb8d9VzD8uTLP85x6Z3U9GNLG2OZNhPDn0ws+GNnKrpOKyJcGqIcRteBlTFPT0vp4eXFm/Fj&#xa;uy/qANlPwgBn+COP59YBri6ikGmJJ9PejP9f2a73rp+sPwPfcNpTBIANS0i/LYy5Fx+9Z87b6F&#xa;6dF96jxgoz1o2+mn+8EUWN8jyo76K91h+Xb4WkIEFVzqdOYttvAUv3n9i4Ghw/j1UHCaySWnp3&#xa;va1j7mK6honplL1B4UzHYDVN1IxLxju0vEA9/Le2s5npKkRl9le/QlXqAJrK8egAxnnD7gibFe&#xa;yKBKzs4JNJg5IoH0edDZttpH400O1rrhPpbpUqDKSXx8yCy6irfO+SMAupH3HHKQ8TAQQwTT7n&#xa;aOoj16yifs6D5LYFU0hmrMXnfpNSP02TtVy3R4gpA0Tlh70TuzqU/T7/XDFYvEV6gIdrJYA6Ad&#xa;lavymWpCuHDLp1+3o3ey44UCt12rWLTmCaHrthlAcqkzJoUEknrO4WCDggDf+7c5uGGmVL7npZ&#xa;MKtJtn9YOOJE1n5CtmK87A0wb4ht2zka/QewLibrvf1dXxpvwhNgsKfFu9aUwrbaHJCtcd7qGR&#xa;2abHW+iDj35ansCAc1j7VYUmyK3c+tbntk/dBi2dGYxITctOpNu/C3ZWg8FkC3IrDjDPdVjzR+&#xa;KnMvJVmd/iigT3o6DcN1VWcrJw1Oia1cpvvkaP3wm2ZZLlwgqmSsCw0MY27GBLqrkNKGys6Wzy&#xa;TCgVJorKZ4/I7xL7jjuxYMi0z84LlUWvbrY7Pb7noIbtIEpquLArtVAq6GiE1JfJnnwgAUqO2l&#xa;LRrCqFs00ig2k6lc4puRj2dtgSRdmQUZVVmyKVrKHH2i/hOT+viMzucKQ2kY911Bqjif1OHUIU&#xa;OzS3jA3RIL2gWXAS3ZhyK5rqf5uZawRNa6g3EvE6iC1ew2HvgylDaWMIXNJJcqKIDcj7cOvzGy&#xa;q36XbjsKxsK3ejohtukJEHSEUyTOWB3W31PeX95jccXWgV4+VTGfiveuv2MpKa4A8tDj6UCId2&#xa;PcMWLznBQT5y3fNzi7KcTdTSifO3MyEMY4p1mLvF6nTFO3hv/TRtKbcVCoSCvuJ/gFOW0HHaqm&#xa;lC8OQFJFFalXA+MoowuUsM3RuSqGaW1F1RY1vXp9MiCcDWeLhdwV6QXLPz8R2v5LFCPuM8jaTl&#xa;rufEFBvistwrvV62/LBLVU2g0TlwmYrLheoJivs7oJF/8YaVwvCy/avFLtkNcjsPhhA5DsuClU&#xa;KS2Lbe4Buhy1N+a8BxEMcaiCPG90NtQmLhrXTiPZaf/FfyWjeoFOKjn5+jIy72WzVJi3CIcnEP&#xa;K2Wd/ULCNVVvzQhL/Pk9w6ZVmwoSRwn3dnaYvNTznzDEVH1i46Z+NXixO4dBil7tdasMP76PNI&#xa;bIJu/I8Vs/y80x7o0kFH35eLxXOV+drD4iM/N+DquKBcMcqkv9s+w3q/lvxg3W0Y+vCuNal56J&#xa;v3H+xlRRNMNnNVgoqKd/LKFRaP2zl/7/A1P/te6apmGrtSaJ1mfL9/nzLgVROD+e9IYR7NB36/&#xa;lP5MidCGVAUZYyuFVe0a9rpJIuFFmpBTNf5q7YT0hKefz9bH6cOI5b89GNBTWlgJjorD0ffkzm&#xa;8ZUMvD/fe0JxXUcaMxvs1vfsOuXrtwpssNnT5bt2ZbCNt+u5e8lCmx4z8rb3teTQn2myZKEoko&#xa;vjjthVZLKf8zOdaHDh6vJoTLB1eLuk663PCuQL9TqDikoOD3WNpgo5QcRF4SSyxsz6Cmbtd4QC&#xa;Tnn3BPO0ivEEa90DXcPIjqrBsZqgH510aLFuOp4bPDVGbFZZ5Sy/RLMukxr2iy7IQ1MnPg+KZg&#xa;fXseXmsTLM90wx51rd/exkax6fwWJyYarLmNCZ35uPL1ELqRoalbwlFi0GNHuOCer0SJ+4lUhJ&#xa;wvYhdheOR+4wgDK1WA1AdFnvdHjmc/ktNUSeh/SkQ6zcs+tAZjFbReGPBamOm9ifc4n70g32NF&#xa;PVYZsSxUeU0grD6AA4Qw+1jrhQP1wcx5ro1m88sIacu7Cutg1k9X7SAFE40QGfU0IuBBEty/Z/&#xa;JtxNsX6PZ70jzw77Gw4fD3i6D7DtLF+lC4ce1zrpnxTRG6mNlzJmoR/dDIkAMGE+vUgoCfDdt6&#xa;V8CFxA3TD0kIkNdxK4ZczehBzWTfAnAEYDGZMtt8Vwzsp9Z2PmjzOs6pqwBOBqGH/CMPdqq91U&#xa;iSZzFA3ul730EM7WgpJ1IWPpXusG6UwLZRvcj3kedLOJ+6M5XAUh7IJpLKE9H66NKxEtktA/FS&#xa;RV70n6OxrwHiYbpej0bDP8LUCPypedx+EiUKSotx1bhyUk58wGYJ9uWw3Xtxol6a7sCnnJcZ6k&#xa;Q1MIAFH1GsV/2YBGndhuovUNF6H/CAyEk7ojIoomXZeFALDDKAeKP7v4WCHYUn3UUk4ut46haS&#xa;ExJdyifiK4FUXeUgntB+khoEbSVaeEKMROzBhTa0tqwsrPl3dkYfpzSRjrmXCXfBoyEPpttz4I&#xa;dsWkQ65u726SKiFVYDZZWnFz1PCUZ8HSHBJtD0DGuZN92khiYejX3tjcV+xkayTgNuAwSOEsZ6&#xa;DLrV/QG8+VAA9WJM5bQgzkvCgepCso+KaJLS+qTa99LbJMQ6Qjgz/SFuc1WzEV3kq5FabkNxNn&#xa;VisKabKsWrednGFPzQIF9FBnOirj4gUk3qdNGotFzwqFzMwB272ZnXceH3BO5HsNijvg++bfEI&#xa;uIEtsahZSUkUxPjWzkCWWtp504QiyBUUaogU+mr766WI2Bs0wEMsBQMSZLBIqPE49rUqOFe9lb&#xa;AVb9hjv2uT/COmh8EOnCe83Z2xPOPgTswxvW72iF5Jl2dRZBbMXlY63kwnkmwyrBq4KC6mRCRR&#xa;J83y76IJ0puP7BKE2+Qb62WVSdbN0JXQIFtDuJqWt/0DfQLSKtTgvQHIN+YQWssbsr9xUsLpDc&#xa;x9QSay+EquNnIz9rwPgspm018ioJDgTE33NwFAsMd/gW8fzOErt1i8z2il03PC52//IsdDL4hl&#xa;T5iXpSKKJfUmuKatR6wKiHcTI/wypDeljFS5BkUuknqYL6CS4ZBhyfYNK/u8uUV5ePeX8Br+kf&#xa;Vpcj/yE85Pin1eV/v6mZu7lZO1i6/r/+JOT/uXuroaeF//dNe/RMckJpPCua1KXq1n3oOGkNcg&#xa;bEpPZZ5URi+xv0iH1y3MzJoSwZ+sBvbW8k/XvIOvxPp7p/KDMm/C1AaApGcF9Yj9qvXtcM/7y9&#xa;7ntC4RIwl7ZwOOjoUR5Z9kB32Gs06KoNJ1toK6RMt3neogPB0ovssUsiump3Nrxn/dLXbJNACw&#xa;4D1vHecva6VipzTne9uts7jHpXtSbvrjqWb04lE2f+WnE7DoZFMvCs673C6qKZJAvpVz+n2QDp&#xa;cbXF1gCkm7f8OdX11CXPR6+xH25b5N0NZgCyQTS7TMnQHM5hgfQr+mnKBqeUM4p840hFnXaTmr&#xa;Lacm1NxQYgYMxvOvkmWnJEQ0ypw1zGkBZ7bFA3PfhC+RxVw6AtA5j+Ev07txJ9DTD/m2KAwRSw&#xa;ZwzLTLJHa0LyxDyG1mhbPcycMUCeSl20Uzzb2pU1X8WICRCrXWMApxVfbxPhgk5lTcEM7eN1xJ&#xa;t3GOnmoJWv4XaL+Lot1acnS6K8FRmoLrxdNdQU0FsCooP1xj/T7WmRQVe8toWnDKYFFcudBmzj&#xa;Slh9tc62tI7A1ylJS2PEdpkx8x9q67xW10S7XeIdIVDGIm0832nixYHz0pIfk4rXa9Y3rcRsOQ&#xa;JOSB/DzukvIZU21iBbARWS4MMhpXpcyT0Bhsk9EaDjHiHoA7pee6iX0t0HWDkuCtyYyKFjeeTc&#xa;nkhsRAo1+590nzhx0CfMy0QYkq8jSfS1zlXtU7Sea/pZusn2YPyAI+jpf+VFfQ1A0AiWATRywo&#xa;JqK6VhA7N+wpWbxRGCik+NF8GIlJdoSrvSAHZR7/710P4J8LONW41J5j3b1wlYFvrobVNlpq3K&#xa;9ymhGO2EWXIHNCYlFSZElGE0aKwIXuBIVWiegYMQguRLgwCCnriF2Yga0bPWqwEH7poX0Yill8&#xa;g8NXclWKdaKueHK5Ppp4IYTX8SU9iSEMV+k8hHuUj0fotEJTH3kzuVXrpV8XcAnSlOGTNmqgH4&#xa;QtlcXRkNVUO0jLp5Ag4Q5ZVgfCmDD+hgwk4VlsZfILDGdT8PLxKh2jancfse+5HESY9Fw1xrT2&#xa;8XjDZWwxu4VHvlMt+Du+UGsdFrU+/WXnIX2/4+U8UlBhs39yd77trsIFdx1B19/45AZxEOiFDo&#xa;oJ9q890qm+KPNtbcbJpas1sBw6QKGNpkdyfhZegLNBpyjOLci0D9Du/UIHFfws5Hf3y31aAvMK&#xa;3xlGpsAzuH5yZG/In0f6L19oKPhHjPb5D9U8ywzI44v2KkivbweeVtDl0irz7n5l0fVei9vN7X&#xa;DhTisARijGH0SlgEfK8j6/UNiRA+BdJBvHyoyzHKcXCYT5569mzafisQHz3nfIPEC4GURmOmb5&#xa;JJrEm+FBMoXtM4/URZ58C0wUdsQw7nF0s/4r06ntwNtrwjygvTn0F6mSw/3/Tl5Lsr+WBXvF3W&#xa;L+ohrlOeIuWFe/tbGBR/c7CjRH2oFkhM6pDw3fAwUJLFPSzbdtMD+hb5PfwzgmyqNpJvfl8ljt&#xa;I2cKQoRQ5K4QWxGGEHceh94JpL3HbCGznpR4eiN0Wvi+wRBJBX7rSsg3Pd31K/s/KvYzGiDLtw&#xa;JX9RMOgf8musPt9/pH18/9u0T93F2MHVztjN0YXc0O2/3s2Vrc1Nzf8XEcV/sxDIKw9DLhwF1y&#xa;YrxziD2cpVSD0UIl2YpkwrgR8xJgPEs3CyEB0O3Ea9IdQrs8rIoOpJH6iS27C0CCpFoL8+mOw6&#xa;7xvoG/DXuX0UGviDsg3jB3ESaPlh7zu2y99nxFtdkjOSXIbnoeMuXyN09eQbYHiEN21rPl+v7a&#xa;cNbRqZTj+/vimToVGS+sOLCT0EEFquIWtrEdxQg8V3IaeDBZ7l8vYB4a+ThoaLxVGCtAUeNJQS&#xa;ih7JUSlamcNs+8w6saYdKteqj1b62pDreUzvuaJe6OBYdXF1o9O7ssp8QUgrp9Q43kl66zNPQD&#xa;HfAYbeWVbzxXbLuOKxxEnO2FycCbPcN8Uv48n9qdMp4c8AGN+hGf56/G6278zOtFsJN7RNkzOz&#xa;hruKf2snusFUDHIUKFK7UYsj/c86s9KblM93waQqs+EOuB/0jYDchAUTiMWRY/A7DHBHnwWlVv&#xa;sAJJYGHbgOFu9aVZ/Vdnp1nDs5bNF2QKOOpUS5RRxMTr1kNzrMEtQALbynTeJbERt4ZjeOfY1B&#xa;LBDx7PgMrqM2pzO5GYB4jNmNMpsCgC6yq/tdo7XdBN4aFKQoPUuWWeY+4VddnybjFwZNIVWOit&#xa;T6WIip/ye6vM17wWT/5+sxjkyvyIO4wf56ct5R/Gk6qTvRsBrh7U5K5TUXTBqz7BTJ+IRa/FLi&#xa;ThUNEEKIa1qoSyQYFZNrcaL3YyEeHD5kJrJRTCD3lLnTaxVO+0UNWe3nT1s4tdHRzCEqxNUZRl&#xa;mnbJKA1f7Ua5pQF7Si5UXPXXcRSsWtY0RBcG6sjpkAOKKeVvub/Y1TAm2vYY39z35aadacH1kS&#xa;FT5Pbo+22BWYy3feAZlEuzUa1TyQubhkPuxseN856+8w1TuS4wCuXUiYu/5Nt4/DUWO2yY0yBb&#xa;9qIjiZeoDJGjZvozUM4jhJlPAb9Dl65bYtll8drsBUhfyraacXdBx6ZyxpMiLRLtLOAe99YImq&#xa;q70j/ArVUMlpk/vFOYw7xgiPS6Js9VGntRSYWAx7OJJtbKjZ5qT4KmNINE7kokYgS6vjzVVPk+&#xa;tJ1Nw1Tu+Pgt0s2HDJPo+REhlc0LogOV4r4vq9LHG+6aKeRDlKgHbMveUb8dFkdNmNdd8ki7xf&#xa;mBUxJ9kCERqYwCpDQmr20deNeDc/ymo8AGlMYlamRqLiE3wyNtqa1LQVdRaeX3CMWIlCU7nZH8&#xa;u74WyiP8eKujlL5CJQAl74V5E3cj2ezlF/QU9gFW49Dwp1jiGO9csuS57Eyj3a0JvR/i9p2meM&#xa;l4fEF7jlkJ/DX+6ww8RqoB+YuuEKxd/5sFbZU+LQZODfHHCKXtEGcgaxnwBfSHdMFWa0pMMR6M&#xa;7AXvDBZLAHUN8fHNYXW2jfFBNrGzkUDY3lnO2bBNZrW8iX9ZL95db6H5ejXtAcdtqvdlId3Ym7&#xa;IhJIg7/MJK9DNjYsM8fKvxYprF+aBlC8ErBVCaxvueehBy2Q7SxHymaWqatWvDwUM64Fpcbqx9&#xa;MfiXeL11fJ+AXLOZhDGST9nTxKWRn2iQdQoEv3f1utZ1IMRO33GunACQQNGh4XuqOWCckYX2KR&#xa;vs4cfS3uFK0+OKJG+67HgeLRL6ldXI6wWyUXnhHrWAk9UOYYKY553okp+2/pGR+2x/L0X9xc/g&#xa;c3Me0ilf5nbnL9f0vPTP7WnbH+r8KztP9HeEYfhuUkYt+7pjqKTOZVJdEark6PPpMNjG5XyGD+&#xa;ZvNTgQufYXVps6bvT3DAhWc1g4m/z7N6QcXAWMVF1gpFCL3gX9w8n+zqdT0UsHz415LgN+O3bz&#xa;Mp+Qdpsj8O+d03q4HxxlngcvBF85SMByYlw0b+KSGvgCZ1eq3s4qEAIlBsLdZeZ/lQjWIjV6Zs&#xa;gxBOBFRqPl0avYRZsFiTllphrqUAydyrYlvfb7+8rsqWIAQrFnR+MhADCUyHVRQGFzV9TCoSwJ&#xa;vQn204Yax3TdHymuUpIo2lBH2solr0MNMcHPhW0TU1RSr0/RsAtBQfXcInyWIwR5dm7LpqEmnp&#xa;lzBcIYcZxFxm070vRoM5CrbK7jUwqbzikgfzDDuxdGNnT0cLNbunm3qD6gjZ1mXOylSXnJ6C7M&#xa;9S2zetzpuFzK4oo0uVTvarzMXG5zzO4cmCjoDdnLAc6Vqz8XnGYY1yw9jsXMn3RFgMl3ZfxEaz&#xa;OGgBEWw5lLhlTV1GGtaeP0vXCltYrWxJmNmxxAGPKckC5lEwLG4vud8i8ERoYeBFUjcPc0zgnE&#xa;HE5toS6ArG5DNTM31VC7TSKrTR6Ms3ceZLCUMCx/aDJATYTjCisMO6Gdq+UTvnIz/bZpWZkDr8&#xa;SWUjSYyUbdbyjw8s7M+6BXWKUz435FDzhLbNIc4uM4MvzQd52x00yxl8L2Vu1IIU3RCqVaJaER&#xa;4szPviXKQy3IfQini/ehO2MXTfLFV8oOMWW2SI/sbhoLcIq8+GBebGHzkDFqU/1q5NYNuXnAN+&#xa;8OlbAeRPzFcsJXHbI3m/BrPsyLEELtD+2PEDmnqJSdC1R/8aZRXnWlXH1DdTzlA6bi9NmeWIiL&#xa;XvlasCQnKM91l2eOtFNJxxxUz2GKq/xe+etjdbSki75Izrzv8Yv+zqK7Fy7d7V2KicEcOfnaCT&#xa;b4m3z2Rr9q7iZMq4I/3Ceh49HyQD4hVlE56n6VaDuGjgMytMVgO5vGAsZMr002i1KndeJcy4sQ&#xa;2ocM4WK1tTLgodsMDrT4j0WFeiOLn+Cd1nhwZ0lfyLmht0twoxVjWLzAT6ajcoiCEMV2znPpKX&#xa;WOvwe5TdGqnMVMoB0r8nEwrmHhmKXlkOVDxb3K1uHYcrnmqToAIUFw/n+06a5/blW+1iam+77S&#xa;M9kjBCEKPG+7zc1Zl8txhwwfumi10yDr50SUgOx70qLFbG39gZZknoU5IrUXIWpMweuP3bczkl&#xa;1GUJVLyWSJfCWjQXsWNpnW3MPvjkHRsIG9gK86tAxTG4AGJkS29Q2FvHHMc5Phcm3a01xe1r3X&#xa;FITYvBxBnIRd4tDmOMvf7c2ND6UpWAEzC8Kf3bi3yhQhzzpk2oOPadfhN9ndIb1p2czxlqOkYK&#xa;ZMFUGPowdC6RDbcvL4w4ngVFUahqeyf6Lt0oxn5Ic2elGvNA2abt+IZzbjAkgvcwfw0lFSJN3l&#xa;bS6lnLdQMFgbkeikIbSdZ9V/u44WLa6/shcDzjCkUG61xoH9YJrmHbNnsBIwTt89dc0x7x7Jo8&#xa;soiUXwSAhuIxMZ9oyaJFeWm2r8JcotsysO48g/aeErLLdOBv3f0PjqtaVM+I0oa/2RENq++GsW&#xa;9W8ZR22vIH8ysce+UB6Dyi3HEkqDuFR210/ZGx2E8IyDcU+tqdMfqUN/AMJu4IGZSsj4ly9LsX&#xa;cAin8Waahc8sq5j7UXYLivyBCN2fPnsa6sfYDNvpx1jn7qvYg/ZZpohXGgymEG0Q0lXDfUGfyI&#xa;2D7LOf+cbJwgYD4C1FkYau9l5CKhQD3fN9VmMw+mKeB5rS9kkFn2IAkkQieoNSZKjOriHyQl0R&#xa;3rJvODVBHUKSLaJYX4Y6WCUuKfxlsO7ynmSIsbC2JhZo3/913gfWYbUnEA4KyvAf+rPKIL5/5M&#xa;as/4eWqLGZh7GDqfl/Q/8/26OaBloYWpgbXOKfwPDc1AwadO2VJAiSjRp6bQzlsklBS8r0q5yE&#xa;lFxmzJOlKQjpASvLfxL71S5Ea2u+KLnX/aHUWvO3pIRHN7h2sTzcdH1YObr9IfT+5+FT0PyTCn&#xa;FKzaiP/2oKK9/BS7ljzw/hWXqGrHiKhh53PXvMumo9Ry8X8VC046xHfU9rHj2OvGc7Rv7ZGUnq&#xa;5ZxpXQcZzUlJAXwZb2RIB465hzzvHJu/ju7yT4qZRXZv1lRs5va52RnFsSNqhHMllEOcSQq2fW&#xa;d7BxHdP96ECG7wbqgLafVpNdn3L51qHnCqz+nnZl2yAtAWy+bTSFbDpJ8pXaF3079dIrWbvl4h&#xa;5Eo7tHW6WzpJGm19671ztWjTbfTnOfWmNMCXQdl0UCBFTJLw9qFqUZDong/9jTDkJAwRBCIM3U&#xa;QLrzf8dA9Oec4rjf/qjr0BYupzjvheBB/al9YrLKXyPaLgrm+flhMaove0SfrBvpauMjyctZXM&#xa;kqOXxEnZPgEumWQ7867B10HB509z/AeCk2853CNo2h+qXNfkpGt4eYJLB/HU9U1tjD8YbmCvty&#xa;MDaGCo4Ew4YVZu5c26d7s8p7poDYiwuVMTSPd8y9WYejZ3W76STJ5xFyNuM5BWZtPCugvQ+LNV&#xa;agULtn8fAekLmdD2FFSU7eQK99BOKXdZqqGG2/BuDj/Dbn6HC97JMG808vaYGmg9l6Ng0WW1pW&#xa;dEPk/pqzbkdJLvqM1bqnX3C5qF3YRQEPrOdkX0B1Inrjvc2nSSFnIJAPTeTVxiUkLXCj7yCg56&#xa;QZt24kE3qC0mQXTcmceW8Bo5uV53kCkRchg6zd9B9HJKzbeZ2ZsfJlLkb8pxVcx47igdHZUZnv&#xa;IvJj+RmePYJ7xcUDt1LxRfEjGw7adcJttBqFIrOaCjciad1YoJWwjS6mIRcmX6iQFMNrPCTFY3&#xa;T+W7iDo2T6IQSGfR+L1cfE+emG2mr8MoaMUG9zPHZzkE7UTe+p1u2lRvlMSMMINQhpkR5tPO0H&#xa;hYbOVFZ/wCmsFeZZTW6rlv8gpjAcNQOcbbihd+8cs7VyTLH/EfwsmyTRmkpDkyDEwmM/Pryoda&#xa;dX+q2/mf/SjVienv+dVOVoEX4zoX4/HiEAZrcd49FacCiXKAay8UvHQqh91JfTvvPqeuiSWf6N&#xa;pNh0WH69jR+RVtkAa0EN7dvpbS8xR1J5n5jdE9M2UpCpeD9c3wgzuF8+9sQxye2z0/j9oiT9q0&#xa;H/xDNQOVclAT+q+hSCTBgr3lDp/6CYdI8qs6wH4xN3mmjCG6lIkhvAqVY7GzQsks8fGlRDtegB&#xa;Mp6TZjWtPSrixrBxQBUc74HDG6J7ZO3/6darE3Ka5RYTB8/8GEwyBkFh7+fo7ca52cPVbtA4lE&#xa;Sahl9AicYFqqIt5zqvbwGknAOW5AcdQAwaWd06+e0V1rSfp4Nm58Hk8aUYEk3WEJsge2VTXb0b&#xa;p1yIHfC0L3wiUepcUtqhNPX3RVGjFonHii55bGhz2WBcauGf4K+FvD41VVcoDFQBpXKg633npP&#xa;rR53T1PEXIQizpyoigBZFYmAWfCdcBhhlesLOJvDpCqCukF89+0icsg1KXzfX/3PiGB9jfZbDC&#xa;KGklHt9zyv2HCdah9UZZnf0WUKqY9CEhUjzY7gRxEn8e03A+wfqDaRyuKQPuLK1X8ZaRD0L2Tu&#xa;/JUkp/4jSU63/idAef8PAP23kcZ/81PE4q90WcHRw/w/+6yaen+BFLhB9W+Qpldr6C4kwpIZLW&#xa;rax1SpkhdyYMa0K0SMIeAC2E7MQsq4Xle/zHlWG0S63/9SXz51dGnbsLQQTrRqYrL8ccD3urZ1&#xa;P2kY+P4LP8jYj8mJVivp/iWVytxj7l5hyyOv36REk9Xfe6puzUZA9aGMa4dxvFjD/QxZCcX2b0&#xa;/D/DNGRvOacraMqXAqPF1Y1nqujLb15NrMOB/O5F948Y5Mo+eVbqVS13MvcYTQhLbVSmFz0COa&#xa;uni6cA9CEdnfNs0CAzb12cUEtSyPyg4K5pOEc4QtDQ2MtbuqdRoSeMy1iNMcx1XTa3ql9v/6wn&#xa;k+1GmTD4orCq9j/vTe9LB7JwzeG6vD67i8U0I6P8lJCfhRq4nUziTFP10aJTb2R29KRry+mVqJ&#xa;zdzjgnTqZHAT1uRnhSlqLOzuTya0RzoPg223P+9hyUttOBsfOyAEvGNNx7KmNZ+h7SXKKPXnPl&#xa;FoNaFzLw19UoCeHfQLxcvkhmEybwUtw6FUXswKs8ISpP3hmK6TmTacm40A23vBSJ0g0hG7e/gG&#xa;W6czQZLUtX9H28ojyx/TrYWstYd8KNsOE54sJ+vJj5bX4H+M59ErGwuF/nSbZOk37XZqvqznpc&#xa;sX5o0coUGaSxoyXieauIUxxxXai3VszGNHP3NPBmq+1dHF+4HYWo2JzORpX112nR3f4cwY3OH0&#xa;1eha4jO9dr7BLRPjs6pMbOokXooczJl5R3UOMsG8gmsFjy3hlTF5sKezCsSh9ar44gqJvENvCI&#xa;8R6dgWG8SwLeoSk/R77QqRV/CbNnRJJ/q/gYrrzvx97rSFE+d3ETLtv4Ha/TdQfwGzLwUnUgA3&#xa;5V9VzHjdqBztO3WvBdaykHQnUE6JbvRUjGBtVbI6dsmIFvC+f0duL1htud+Kxm2ftBj/KZ087Q&#xa;y+lWXvxEn18lNzCafn8CvfE9PXOnnhWduc+Iul/uUroFmb08+LuP9m6W62bCoPZyJO598sFeU6&#xa;7Yxrhz1UWXRGKqAejP/Wb6GDV1lFs8J0bM3mtj6WcXXk/tQz2kYy81pQl33BIGW1WGBgopCTX9&#xa;c9nIqnrW/3YekCoQW7ju8vllLhI7X8xVKf+gjx8ou/WPoZEvUVIb1Y8LCxA9YhTd9D3yVV0yfV&#xa;2sBZDjoqZO2a3nulXhYwx+J8/VlYzlJUg2zmGYZ3ZsxRlCcv65sh7L2481tyDdL5b+eANc1ZgS&#xa;xZS6LttIIF0yCKeKmQCJJgot7qrwg/ULaJpxfO0SxZfqxcklZSQNNUGosqmMWSieGWeFLfo0FM&#xa;pIXEq+FScMmmpiZXD7+Jme11sjTGboVyHdPF8w4JsYcC2AE7tooe6IKKcNHKXBohENuwj86sxK&#xa;VWrTfys9zTDclzMmQF6HRebEMJAsNKtTtM4Xz4sW+Uc9zyCcPOeJake4ySlRA1uk6joQBxWxus&#xa;rgPfzlQlIcmIVYPhJ/k/goxlWsxdBE/KNGbZHUIiGSAVyaBh7B3Csj5ZR6VxbhN5LFXJBpYpFn&#xa;u/SRbTdfpK6spClo0Suj4Rq2D/kYqBYm7F34dk2myS9PdQBwfSuQMkSV6Mc4m9EeMFP8HOcEiB&#xa;14NPpsAaJ8gX4wCQVt9rZWnAyC7luG9BoYHpS8f22jceUuY/KBhHfIvy1MV7DtvqF4Z/s3S+PE&#xa;ln/y+Wtv6DpdP/Ma5i+D+w1NTRyVvJxMbc9D/H9HEaOn87Ef2pb2JQhuUGkbtjiOZ0bsMVJ1My&#xa;hJMzZNIrIluzBJfbnyI+r8KH7SeZWTzB5J1MH4ttnUjiEr2sZv0pV6w4kh10Nk26Cb10udTpbz&#xa;m9ClR6h22ETzHubgUbeIJ39A1aBKbY7Oj05i+WdlouDOp9OTZaN9rBjnJGAFMFSDsqioZaS7YN&#xa;jVcS8zdmUz4FjY4zPynbHpvRg1aG6Z9Hp6YOzlK3Xn1kSUZAgRYPum0LYALrROIlHLVxpEjA8B&#xa;RzQc25zSddKHpixgfVX33kcDiFzIAFgzmXsrmLLV5Hpwg9XsNSz+VZXFUdLagZufLDbvMaYzZM&#xa;2qT8W5DMKkL16g4Fg2qdJJ6mHOCcDrQvAGbt/QSYfoUORGl3HX1WkLUPFFlRd0LQMhu6SQ/5HI&#xa;tCAurAKg2Z5wB1dph2Ap5lC8pE8+MXztshec0SH8i4U4e/ggE4NqK3Oigp7j2lWerJap87yVQh&#xa;TjRznghXKoPZuerxR6RqgnG5sTT7uOhD7fvIxdzCv6FAK5V2ROcdkx7zjQuh3m12i6gT2F1LM2&#xa;FlegCxtfaLrvySNmD/laSD9qcHIi2trg7T5QIrzY19h3aTNd8LTU+86nxT7anhW1guFD3+kL7c&#xa;Kyy02Ro8IirULUguAKtDKuUpiBSfmboTiUIhIEA6vmO1f+8WoPRKN/Cn+4QRew5TSlZxEo2n7K&#xa;k+cqnbQ7MCk3rC/uePPzVNjcBrDUKD7wpm5tXdFNkcOiK3r3GkRc/+Q4lFsR6WfbfisqoNe0nX&#xa;icaJC2GDpu90EcLy3035k27gzUFdXApN1ZdABsfnmb0Q06r6tkpEcr8RZvqXTiRTluaAEhU67e&#xa;HsWMR8ms7I1uNOJqDLbxQsBI2PB5NgI/KN6XvurKtAWRqveAVc/J+ImJ6FtF7BWDfCJXLYXQiy&#xa;WYeijMXYZDX5Oy85uBR+cm1GL+uI/WA5XA4r9mBZWAPAZ73lSYUpllb7FMfI8AByLPCu7cVv+8&#xa;uw1EmfxGYFMEdko5nOTmvxOkBN4sS3RpduX2McW6PoirjiaDYiPdNkwfgDo0ubTQdhnhArrKfN&#xa;c+1yqCWOa2ojN5Yf+o26vLxS0EPqwARpSet7EEus2tosUyrlhbmue/eFURD1tzhR50NUMwsc9C&#xa;zxoge+egt0vawnUdYUzI4oeZczy0D2Reu+UNi6q11eyuHe4nm+O5Z3t9D+zEB06o9vKd9IZlS0&#xa;wjVr7kg3KZEGjHeB4bs0gtCaJx4a6xaKzqg/s3lI04HcdTKGvxP6nyf6g8fin2XWH6fY+IXjN8&#xa;OCad5RACDaBN7ttCAiWS7RjYKnqwLJcaU7hsAWsoIyg2sKpHPgRIMclW+ZmnNqIzrIMqs0PGE+&#xa;3JRfARJACqR6ejvGqf37FLi6stL1Qcx4gzYT0d6ZsH+Kps16UiAzpTHZ8DXyV9CLahHXDYbdl2&#xa;eWGLXdD1mVLFs5Mcx+1bHG5y8qGY1SvtmKnsc532sHAmNX/u1vLXwrwGn0F7o6/jFph2j8345K&#xa;ipi4urkYm7r9a5z0X6jSfPbE0MD8Q5RFr1BBQY5JoEULN9dKAS1ahNUUF5KGmahpIlI3b5aNIm&#xa;+5O1mq+4jsuf7oD/avohO4P07wiQ9Mhuzd9GdZ57QzHaOO5Xhu9W31XG2+9nu+v1leckH1ZRpr&#xa;F+TMEFj+XGq128rcW7WZFSi2lWBAHEnkrlKs0hHjmFgBm1K1FeNLRO6ENNvrqM33vwU9CgzgWV&#xa;j9msyr60cX0+eINV5ktK0HJ04ySZ1TxEQfcL9kFiHrquHRUBwe8bTtatoz2qgbaDHku6CcWmSR&#xa;SCJ21+hRinVa4aYrcNrH13T7sFhWxrMZxesBsnrNM1okakoVKjWo8Lntbfc+2suNrMAZ/CLh5Z&#xa;WFD+X56JFbZKzqquGYBZ3aIHC5/Qa9Il4/p7DRl20s53PQpCm7msASNncBMWs18idAZzT6SenW&#xa;ZNP9UppOSLvqM3xR4MFRP6tVbGXlgYmjKh/TXt6t+9VTH6RwghEy5aeyuBhHr3WW5szCGLVHqk&#xa;9LBgJ9rB38iOv8fuaCG/dHCx+cLdEYMMHKvhhrwiZhJcvxF0KdQe4nexfPWLKtYngXznYikqDz&#xa;EnfW0lXqW7GvDh9xQqtL187CNEY0zfbMfMNjMZdcUi9Ys/176czZnw170p94jLp1syAWXI8OhU&#xa;s9RmO39VTxAoVD4WNlglygPpJuOKNjdHNjm2YT9YnurLxVBeIyaxSzhJo3C30xLFYLHcYBRiwQ&#xa;xGa+IUdtiSbui9UgrUFDNoWY6+qvdPdq3aq6KJLlctXLOktufoNZ2FM5RWzg/nEA8km9JNW5FG&#xa;O8oH4Pb8hZJb8/nLM3owiiGSvK9gu5hFkQorsqlyn36Ez6168y7vSfUjDHxNZV++hAZDKy6FOD&#xa;adU4pyQgAVKuU81Ll6ecZPhgB2WM6Q3okiEntukd2nFjXsOIsVOSfOk5wt5wERcqt6/J7he4ul&#xa;YNZB+O9uknGE8oDYRAbdYfOG9SeDXprfcOooAjQI+K6ZzH2y89Q7cifMPt9lvOBz8MNnpMiaFT&#xa;K9lPzl9Yr18WyD4KpYkDP6ro28vjTEuJrKhRUdqXuMtLxoAO0CwdYwZ3xTsY4xEviR+I8w978W&#xa;GKHqJz68tCc1FVp69s0D/Lz2owVUs22cz0S6X3E+fA4UeyDfc90tC0kWfcmrlxXe6o+zNhEVG9&#xa;4iGeoV2qJCxcQmBy/b6kNuEhKBqhspW+X71iDpcAfvXW/Dlr5+obXHt4f98e8wIkQJzxlJ6+Id&#xa;WPe0XPX1nzTzndvFlTX5WzOaykrMBkV61gXqEPXxanTRBJZVeL1Jz5PY4cmzs1g/XFluWXe+SK&#xa;0SRu+L13rdo+9zMbUOW+UcTdeg4faYAeWoOA4ZiTTifPWCVeaZXz163mvfFau17IjsovebqbRa&#xa;aRc0oBFH7V2nPT3HTiVXh1w4xUB5GlU5u2GvN/2PkmYOM47sTZKjwONTq3yIZzw6eX3nsHxFl5&#xa;qslBi94bCygaVBB2X20KiBeG5ewwX/kqb8GnwXKSy5lCXYTDcZWBGJ5yX8gJm0IM14d0GarkT/&#xa;K0ZEwZb0E3JDU2OG2/eTvk7qaFagN0CarSHGLEHeVg3zaVrwYRCjwZN38CY12YOeFM2b5gOAds&#xa;WPmh2wrLZ3tlPmK29qdfR+Yev7PZQNGL2hc30biiyB5rSbd0nitrWdxRtXpghXgnlErrN6skYY&#xa;sbU0xK5KQ6kbTSzaFnSXwq8GwTR8wqaKqjqhZ/9otAZ3C7G0oFFpyrm4T/yP9YFqzUnQYSzfwm&#xa;KVqko8/BTvqc8mOGwAHKKj/SheeCIwJMfi0YH4KX9SMRvUDsAzW1M0nYnSFaXF7yHFCYHZvVtT&#xa;MtrJnUF6K5P+j5FShU8Q6Aw8dUjhpsTR/sDj+E0DSaI9bJBQtIFf1GoqGcP8Up7Qr+ajNzzhnr&#xa;8zttuV+l8lkrJUMctFb08p3K0Msl2K058/nzxp/ZI2YUcqpOYV3MSWP0TJ1rut2VNi/fcUHJRq&#xa;rQrqCBjE3u/nTSxiVDZdwx5fQLnvUudBsDZPXxiGSgAyW14Ga4dTVx1GPFBzchnYZiZyTz1/79&#xa;6pZIc4ubmclHL/Ktm0+arif0+QRj70FSvAEjbGz5loZzQsOFz46lxUMtsRiMRU69tTh4RgJd3a&#xa;b7ntJs4ZPwWOhpaBn0qyk9MCq9QQ29vWFOoBHLk8fcihvSr4hQKcGhSfKfjK9jB1t2frsbiSXM&#xa;TnhRcCsPrhH1dm/lBm8RDIR3SFjVxVjxe1nyb3hSq/df4mU71zLz9DtLFr7UAz1K4B8ESM4pP5&#xa;+/mvxUIP2JGtZo8Fcc/jsmhDVu/BWH/44toj/zSH8qDTXyaQ2Crtu0UGK72bfVQv6M9GCo+MmZ&#xa;osa9WntwPHibCgIdASM7RgQkvNt7Y0aXJlsDf/9NJ/CwUWA+QUGZov3f/qb/1K2JWrtaOTr9y+&#xa;dC2dHV1drEzvzvVoqrpIuj/X/MHes07F3XxNECfnjQ62ngQawRaO3nZ9jb8kptVqEprEmY7oa3&#xa;W8tQEIqCVPZjSiSTYslzPlo8DQLY3mD+QG2B9UbNPvazgh1NgA/kwwr4bXusfl0bPWsGAj2v66&#xa;cNgQ9/oJjjGoCtz+6X3jGMR6u5J3V8U0m6oa+PBNNsWgz9261dnvPunLagAy+GDCVZIwAM8rLz&#xa;ql522RqyvWBvUqIZ0HMdZMHt3l/fwc/Q7KLX7ujgcoHd0VXz2rt5c2x83GfpEuqLI6oHmp9+5x&#xa;e7tP6G3gyA7PYCJZHSInz0UIM3DfxHkQO7vZ6kv3+mBkQxRAtp82Su+/ePGDjg++nqG6JPmDfp&#xa;kxCT5Te8lrM4nuRrtS8TgFQpOAP7LWa15CFLvO2YitWL1IOD/DCvkST+U60K7wwgRxNiSO5Q6J&#xa;thfIwc4KhHVEVflRleQxKRCpNAwhAbIVc9EaltHvFF7CI2xK+ybzzx17JCgnHzr5CFkmzCOh6G&#xa;gh7zHFklZdxfESIsBFVRTGF61XYbWcsMMTs2njzDEpMC/pTGsTtedr/J5ZnJaTBMzEnS7fAYxz&#xa;uhSPWqrdt6AYxUJzwhxqTxghcKrDaZ7Uv91WkXL5or5Yi1J7tiDWxmWoSQRz8tR1Y/X2aReQc+&#xa;fH297T/dagN1a+4xvmRYkBUrDlQLg3uDeQd5oQln55ox08mJYTBK8ajG/FHqtkYvzR6y/H2ZyL&#xa;BcxEfE+pLUCv6ofQH1fB2h0Cx+c4XXsaOpuOqdbIVAh4mjQZP2eq4qKPTjnVHQhHWhunxCtH/9&#xa;9XbWht1zeRkCG7QnDJd5b6jeXayCi1z2vdQCPFnh6NhvKhG4tj4OyIYff1s5G3W0IAVwchDJ9V&#xa;FIVQnzwiF/c6qv0YouJakXc2wiqTSYnVlUliNTZoFfIJMDQOt8TazEp7WQBeARt4BRUuZgV74m&#xa;0TSLDT1UawAqfRqMH1ZcekKleQIWRGYHVhtBQYaAT7FFMxe1qY3jhediyFQX94MkrcOXEQ0hvJ&#xa;0AGFvjbRR1uDNtbBzKJLlUNj9mwLAoYM90C/v3YL4jdXCAvDVdo+b2t2TjUMGkbKpjk2KeoWGK&#xa;DQ53k7libeALbfnUVSunVhd+XuUjeLnJ7GNsTpu9lNtmUxVXnzi0qamIo2S77AolyicEl+7LHm&#xa;Mk3Tk+FGeVao2KA7y3cppaV9dXDIreB2YZZLlZMQWyPLlIFtTESYlmoeRn4fFiMPkA2LlXvIFC&#xa;LiDUK0szw2OLTGZAF+9DWdPN1vX4UGqpbNlqA3eZ7ISNDW2JxZCD9BR9jYCaDgedB9jGQ0dBaa&#xa;ya3sNSw/sZYqTt07oJEj9zj93OzSwsjdvl30CoE9YlnYHdNStEmKwSxqj0hVbYVkxR+lwGf7Ds&#xa;RnZu6RMAeZJ1qe1Opv0dosbXKW4SOUS0+VH6i2BhwcYy5JH5k7qns6+ePNJTazmMfBrUbRazx6&#xa;dbwPjnQ9xefCMLr4RGcmj6eTOG8xb1JoFeVDvPZFQYc77g5jzhFWpluhc3iuuuhBiVGZVVhB75&#xa;1KW9TFkvomG/uQG8M6GFtneT2nen5T9fhl4KLn4IZQyip5d8nFYhEIm7LSPkH6UKKBTuqbR/h+&#xa;1jfaB6GTphxKNLKyhKuNg2BvYTYnI63zkCpJldAPiNxV5d8Eo2OAWOn/qkd5B0zXkVYL1ebqi5&#xa;02Zj6oKw0fvJvUN8vOI8tK51iS3JuoL4/n0HLJ2e9BcsHBRUOdL/DbPY/xvM/hdHNc8cCRax3j&#xa;dWIJPxEDO24LBgURgWs754nWRh9F1YvJ5SHe0jcwzTW+a9+zaBm/NJVjbb81/HoewMDDOtrcKG&#xa;rXDQ8AifhUmXSJ/CwsKePj1FD+H0k94gkPzIy7Ij8CXgRP9ymM92lP/ac5TvS/Q4f5X95cMxGB&#xa;/wHIx7+QomOioLmChwPmMFgkG3c/4YAdtZi9uNwzX6ktFFbGa/c8oFlvP0iCMZhZhhaniNcvoN&#xa;Pcr1QSbD9+VyGp7J05nIA5jW6fyC5rc2Rl2KVWVrEOKEBIzBbSgYfNPRyyYCus48Y9cil/VcNr&#xa;n2E/kMFAWCijR/OooNCHvlsXISaCQRxYK+QKSBXgjLPqWqu/0sagyLGCC7cc9gjJvFNhUaahHH&#xa;pv/1WHFuSjIRsZ4YS1Xw/KWfw/hWxDP+9VWgY8TJNOQiSvv5gBX3I3hJ/Ioj91v1zZzyYsupyL&#xa;vot/CRfpkWIielkUWAzeKexTe69C/M68qdjhr4/4O1u2CLs9vSRR3cCi8cgru7u7u7W3B3D1a4&#xa;uwZ3Ce5aSIJrcHfXACFAdvJ9q1ev3t1nXXufc/5D1TPHfT1jzhc/2DIjTO8TyM65NvrTdvk+Cd&#xa;94r8iABy0iCss9lS6rdvVanM047eQFXVre1/BG8S7lLDKOTlxXzDqCSO9K9lyDU6jxLDcrH5tE&#xa;OPbLfYj5rOaOLU2XjRWpgJNSFJj8A4XH2lZn78IpzIXxDXocQGaroAVMrpI3OVd1O0Q4p677/I&#xa;Uk4tcbTaV2CmTB5aIUaV+8b/mfsOA+Ycczq36ZyPIMJc420zH+HdtaZLG1y2W7H+ytjiMdT2gm&#xa;U7C6VqNvGxrCcrqw+IcmL0o+l/PfYK2XxegXb8kqhx29B60hpj1tijU7T5dQyAl9v+CjWB9IrM&#xa;q6Q3xgdcdK128YG4Mgon3JFav6wDvY+Dq4cdDKLVSgzpchyZfTZDCwcdFpg9UuSoRHaNG+C2l8&#xa;TXvpIg19aZotJ7f8uZlQ0wVafLApLBHZwMUeZhT6Mo2vsT2j6A2dPrPQYnu/lJWoMTEtXbug7q&#xa;ZEjdWoxbBv56aW7b2Jd2OtuhZGws1eZDF7QrU3GqqqgfpXIJb+ALS4cbKLvCpsUXGNJ1IKH1Bl&#xa;yOo1gqBMWsEqoJK74nl6XvpVIntLDgyJTKDVoHZsj8lnlrnFxMM6sUXGg88nSdl0YTpPDhpUxs&#xa;FiVKykrvv4+zgfENMp0W6OklgjHuiOJ8QG2qOJqOHG06e3EsUnnO3vUldoaSh2rX6uxCbsnUE/&#xa;6/wyVfi5XG2DHWz01USFW+80/luqtXEziZa+l+h8NJBDIAqTrm7w6gt3UQ9T8IWsveZXApsnwT&#xa;cS2yl1fMne3OLba2qQWFeP0Qg7YJVXvThjcHMQ0a5rLUjA+oldqdIbOyjqo36ZrTdKHxZmUHEr&#xa;zTred3zQpZhYk4y9PGDJyEB1JAY46VlRu/PJW3RY+JoZVP0KK6mz1FoXZrdwTWCqjc+M/jJMD5&#xa;nWB3ELAc6OPrgOjVuFfgQpqmEp42aYHWWe6O4KY3vOaS2uiDa9/2VnObpj1F4NT+fxxcFbs3cL&#xa;w+3Hm1sAH19Swtkx0zxZ+11Vux7JL2CpXTwFYpqQr+nsU9AzvbopjiwJjl9rruQRvxmCUZkqJe&#xa;J5wTD/DaILgXgLAxMY/yaXhCmhBZqMJ48n6smjXQB0QUl3qPb8zM74xZ5mFWvQZtYdIF0KoS0l&#xa;r86clJbXvN+0ENFui04A1xZ7X5LdjsCzzD+XgtKxYUMumKw3xOiTBRuQ0muD3uVrU4dqvWvlrs&#xa;crXi2t3iNeXMInwaK4Tnt4iQEmFfuCm4UFL/WsRiLUn9Rw04S7mcfZ6ECQkhHnDp9kkWL/hZxU&#xa;5lRAxSgKxwBDY5xrWAWDxE+b7PBApr0K7CpVJxjxiqY2zrWowrzSGvNcDz62ng9yIGtVWAQ4DH&#xa;35/R9+fCfFREZEamOmAXhEuoCTjpEkt6MB2VpbmXKxwsSixNvzfoLil7A35y5dei+X3pOq5WUS&#xa;wuCH9PoEC1UTy7/idt/7jAFXQkQjX66SJDRskslOXdTNkxEypBhBWyFDbE6lIGpoO0jGFG5X0u&#xa;aS284xUor/IWp8W/HEd7lC9X3gpFCEOFvWhRX1TrKCafny+wXZdHPjbXoBBTbNVSWsGXLdiHvA&#xa;ykmKwr7DjNxdnukqVN6wGWYf0PEJ67PATgKT7NOU1uCvZ4PBFHkdHTuKVv8D53bXAI61KgE1HS&#xa;cdIUZbp9hZZbXClo4nIaXTORuaYcmXm4ku7865O4Rv8Cdkb3x6PqjKj90JfZ8QFL3TpE59MgJi&#xa;PNjyJ4+uBYwib2533u6/6Az1hbPdAn7ZXLRy1Tlm7eq+cOdSJXxCiaEqzsC+FlbzYeTgDF2Kil&#xa;ftYZzb+r4MnNtg3SCYf8t8IytLy4wfuu/N1DJf7TeQIR423/prNyYc+8B/Dfbdu1fUf3c8sv+X&#xa;41HextHq/8ggaRr//MqvTisFzL6kXS2+vIw1eW/rnBYJDD4BIoaE/GK7vWNy+ORme9dXQFA/Xp&#xa;BY39kTlgcse95s/T/uOGcAx8a2M7r8rnw6pt2meaeNfwn8hOoXeMB1BOKve7QRTt2hKnbl1y10&#xa;tJEaLK23PGUfO3sNo09GmyK0XVzzwsSaNl/Cz/J+0e80nMaBjAnhAdc4n/qIa/iIO3X9mBm3Wc&#xa;tf2f+h6egm/ejdgjM76mwD3of1coLtBWhP9+WbPnEYwIQCzFVZAUvspYI9xXAsS16P7TuT07mC&#xa;cyzQcaRpnoIb7HEhpV2Os3UIIHvaZNR6XaAVIv/WXZ6VCh3W2GctExN+wKuXwtr9JauC9MfIjy&#xa;21ptDFdBi45jLeyPOWXzLetG3gwc6SzYKXQIciM4Jc0/1zTYA4VpbwMsZcFc1x+vCM9ApOD4RB&#xa;lLrdR3zyaP/ylcZVj/kpL8eDGM/vBdbzAZwbBba9Iyzt9GFHvvGbZk+XFC7zl5EB+cZ7RuIaxM&#xa;eei7uOnRRDgV0et5xj+eICR7/onc8KhsnXY9itoChKG09cqi7PvMWHObuzzqWzj2FRZsNppVpH&#xa;PRQSZmIscJmE2+R2PS5pvqid8HcuHp5xgm4mKoGFmAeZw8hYvOsWmfxOUmMg89buUqgE+YThqs&#xa;3bfSIndgXcopU5ot5T52xSq+rCtfGtVo+zQaLW4h2i7mozlCtWCrA95YpxqhwYLvgCrE6REfa5&#xa;3ZG+nbHyIrcEO9vf9o5OaJAIlCn7ypEe5S0Boi9NpPOIuPgWNu/PBJ+6j2VNZ6ZD4SKrTpz+ql&#xa;pSdfYWyaqg+i2lap5d9XQhZolW5wNuAYfp9TGtjGgmSFNApSGELCoxdxEz44AsnPzZFxlVNZm5&#xa;rcwU96soWcNUYkeFM82f7/mC8L9MbUzgNbPjaJMhW9pXLg9Zie6+10D+tNfL4T9QMCaNcphgSo&#xa;XJKpJULPfs31scwmwzxLClD17yLtql15CZRYQ2HEticbfT91LIo7CXZ7p/1rA3D1J0Cv9p8bX5&#xa;R7GnW0anAE/WKmDEfO2+1Gm2Nfwc1VS9trlI0XAfc79ZkWlNDVUWG9JAooVhNX5AWyGLtsWdQS&#xa;V4pXRwWMYdgcOMVlMLTSYgAcg0P/Q4y1vJVst34UiOQhsnx8X9k8DoeQXnq6Fe/Y/RV9zRMA2l&#xa;55wh4Mr+1vg9TnHQ6RXLJGpzwmxbcowwGIB2RbY1/FOZFet9CexLir5yIUWgGNkbMKVjyGbJHK&#xa;xh7c1aEtMV4S5JCFsrfvzJyAQTyd41uPC0OHk58LEhAU7Hd5m+/cg8I1KYKkci9wFPxSCdyPTk&#xa;86g+Ei9sg8BEt4gzBs124Bcv2n3+PMFBavIGYtbEi93ZHeZlmoM3CbV8z4bX9nt6Lldpb8KSjH&#xa;abVNCvkYqQSSAYJT/sh5oQH8nsMHeE0CG0bXOVO90VXsHc4qs6VsZMQR8uMLNwVL/ZD0v7F8yf&#xa;1LJ6x0WsCf3uHcR/aSKsg3KV/7+k1j9X+v5xyyXZc84U0b2A5kHMzhxBdlXkWNHGjrSVk5JWBk&#xa;1ygUdBKbnQFNaKauGb/HfFoMirZTrJrm6BlZYXRcNTIXYoCkrLtIy8LLeHt4e2+pSgt9cL1HfF&#xa;T/E7Cq0jRFbfDgUEbTIXdSrHNmzGXWKH+Zh1qtc7TPXHKXsceZFzrChYQPlVDrrVj3MekzVlTW&#xa;9xYSziY43VNht0d9nfnOeC0zdYDM2zyp1cU9ayx8f1sX/ioigRGBxN6RpnFDalxYXRiDvxSwHK&#xa;935QOmje6SowMrlsEBGs+pSISMGJe024cC7NNHlMurh+GDaT2V+bO0jjW8FLz9qcIzJPlKMUo7&#xa;HAW5YG/GQmKNsxssS1Fy9CruUFibMiklcvnkmCD/Zaa1Wbs55mxPwwRKfc57xkhHtsZHbuC7Sl&#xa;4COwCEPoyEO0cckcJ51x534IYqUMnjLoImes8aY0mp/mim58zS8sprh+1UbstUfgMz0lgRclQl&#xa;/E/s5Wr2GnmguUJo32IqC26uwec0BgHdur0nK6rkQUNxZYMqgTiYIUiBPFcyJR6ukoX5eRUaEa&#xa;YgWXZlTLd3nK7ijAJfPQ7xbkx8dbSE3n9TnfqAHJd2kG0dhokATXypo41zqrVaMpc8s949qCLX&#xa;myUZ+6Wj/wYY0bbebD3/oSEhVVOWF8tk4tWqqBubQ1wmS7x7S9W3YwRHd/vLukMCDdLdry38vH&#xa;luvNCmlzURzRjGWPPU8/KnIkoL8cEsxAirtpbN2N1pujIASKzwyxrniSrTVpORNxW3SH5iCiFN&#xa;29G843j+w7l5DLtFDhIr8/+iHnL50oziy8i4jYzkieQEvsHVMV8uisazAx0z50/w1B6Nt+ssm8&#xa;ZPXu1DViG68iZloZc9lartw621Mp+uwrkmKZ5FKZy/cHCYvSTeeip0RT4gZcr+KCgPk1FNCO2A&#xa;sMRK+1hEAX6+zIT73VkUfmwhITFOJIqQVr/gsivZC3daX7sxkurYb+9lg2OsQPN73WwfjgJEMM&#xa;OtMoUgUbVZVRSTyvzzXb5v5k8OpQhI5LQfk50+F1irSLL0PIVwEXndaEJHXVgFGvrSqNQYadaE&#xa;1b9JncDwRm3BOIouziKbVbtNb0A37amyw/LkZuydpCU97wPg3n7vDicivKM0CNlyCou1LVApjL&#xa;c4266nIG6UtTOls+pOHtFy1+9ggEV7jFqmiRFQTEObcxgADHbxCGx2XGuha5qx97j3bZxW7f9x&#xa;gWBrwv3IpHvt9QolBPuDlVNhvYE/qKudmYMZuwNHRYXk7OI+e1e4IrGH6c1arz7rugKNIrQghd&#xa;yUKwgpxgkqqxcmU529drWFCgJB9AuWRhJ1ZuqTjLouRgENPuaf7nhL+sGsRP1CVoUgScayzBc2&#xa;on9JfdmzNy2IIzxcAl56k9ah3DEv6BU7ZXRMZwnQNMeyKnH0+FDv4+mL96g+aAd0vBo/Kp/fAj&#xa;8JMJHmQiRAo15mLIr5HWZlBXdYJDtf63tJ1DJ7BlR3cJzvQd8bvZGWo7iXq9d3i+FPuVJBzeEE&#xa;bJu1iBcBinH/mMFSqoF2CSywV4z7+qJhdxFCVzvAveka3f7Df9Pr91s0LRoOMfctuNLycg5cGo&#xa;Uv4LNdiX6xozCH7PiZCsA+WOmS3TH9EDij5F2dkqXyFPmgVDeM8R6WbT6jjVmmTwaUQe/U7tGs&#xa;ZjHuomjQILZsu3Mu0N7k+oPghAYt7/DlUnxH83CgL/W6j+xwKKvhOBJPCNqrdmr45g6SS8tbl5&#xa;mys+z92G9oTSgZQ1LHvVpr9wAAif831o5UPP2SUlGbMA2Q2S934UDrSaXgEyLQ4CKenN0NU2N8&#xa;lQ1kac203rWKjX1ETHRNZdwNFT/S+uQBgWlATTIJ8o/qmayQ5XeW59DFxwUm1TFMxoi+Zk3mzH&#xa;COUQLlvvca7dSnpL41jiJH/d6aneigpRuRmTHmC4yrINOGl7S7noltqv1vCjaIBTu02h1I5/im&#xa;RyWj1MLys4oD+xuyyn0y/UtEKlp7yuIrowm/HgYVDwlvBKEK+XnDwuwGaIlH1og3KjMLaKf0si&#xa;g4Jj/LM9yMAJHqQx6uqehEM5v3vZvHoIgEMCq7a6oLOEi1uIlLGn7x0jwdbr0q9nNdZygVciu8&#xa;nJLb0+yfKMOQs1uuafnDrULXDqX7WnVDPhYGMqtuy56g+6gJo/uC0eaG644E0BL4U44aYXkSUz&#xa;48Z5glNsBBJwKgTu0xG4w+dZi2BwpYobdWy8APWlOWNjlqVmXNr0VBu9FYh6+3jPOAzjWAYnLP&#xa;69PbCdHWaMbqUjG5TVPuqcObBet5rjeg98axC1Xa0fT23im6qJ3psa4V160FSDVJcMlZgFYgo5&#xa;pgpYEodYXOhZIg+1KCEp8Chj9yvIijWKWh19lRDllBYiIkWGCy7CCZ+HPN2pD27vVM8zlwDjN/&#xa;aBRoPVNrEIY3IxnSu5LLFAJnYD2nPYSvxvm9NVhN7Ss7IWvpwRuJE6ske95av3EwpWfpALxp/m&#xa;Evi4yGe4YnUXqYI3EzErRvEeonIdqsEOGTW34RsOQJ8rAm926Q3utEF09LIE05pRF2Ui0vxrTx&#xa;SEdTOemkrQId7QcVaeMu6EerxH0CYas0ZQPAthqdGGUUWdHAc3b9iHUH49PpZE1lCvOR6QVyWT&#xa;2b09kn60/cFxjMXEruCsIkdicuJzFNYVO/CBD45y5jyFWx257Pi7mHIr2I+4hk1oSNpmfXhUdN&#xa;uxik1owKFQxcY+0hW25wuLQaR12ZdWS54f9uIIEn0lO/rj1oVZI2TpuPH87xvog0iJIYpjbZK0&#xa;CceBbysX4hvaZfgsAA2PFGW/CxjH6SoLOthuyfWO4tXO5YgIvE45/brKPGdmbYWUtbfaEI2Tzo&#xa;MV/E9z4Uz8HbyjITi8PIo6IzAtTTYQjImvkLT387LRUhCvP2eWSgzDV5WbP2owxAlIHQY7B0tu&#xa;cdT2t+2/EPFR5N1OJi8nQLA6yo7tvoNBV4svEUqGc2EB8MtVzwy7Rix1kqa8zXIH8vCqROwcbx&#xa;FMw9Sd04+xiJ5FLTPztMartyR1qNlDHX08me1QW8+oG0kYOWqkZbMewnjzSgUeBfuGchTK9DZf&#xa;aMJFS5RsDSv2WVRcItBcqLkLqulDMEtRJCs+nIrHAU868DIDlVm+0WAT783B1kHEra5/0VIdTS&#xa;y8wt/5/rHqV6LzM4T4E7q6d5iPwIiVzmjGUxQD1zV3/jbxy0T8HjdxWIxoITcr5Ulngk000SAy&#xa;8TzhWsSSTPQO9M53PlmXOWV3l979PRSL6GHkbpjOYrrklainqzW0aXf0egcyJWUToZXnZcdpYf&#xa;9pcHCrfI/QJ2cGApxJnJHMEnVTTg3/MN+6K7uS6LNMfb9IqZZ7atihE75DgsWrWRrBwcHsT4MB&#xa;z3Mza7+YYSnXJx/ExdljM75flQdlehwP4uqC/DbWUMLuldBoQPVliCuBSzPGCLUObC4vGpjONj&#xa;0iqHRzl5Ld+/XMEWf0O76UBtSqD0s5FS9/PSZ25Y7oQgfz7t31v83a/1r+yTvaWFm7/x/C2/A3&#xa;vHEDlf7AOxHytrBFK46SohldWN+GPhEyDhkGoajU1oCL+uvgB+X1DQuQ8HascLAfkVPllEkZzi&#xa;bfnpMr4VZTV4l/DWAzd8NtM+FO4Chg66g+yOgFwgSlC9Dhn9d1WQb2uWxw+HZqVGWwt9npbOg2&#xa;ultdNLlhKc0xBqJcTwdbYbGAkrLJJfyErU48GTNQGRB3AeyDlQcA1R2PnoNDMeZyS78PoUda7Z&#xa;NEG3tpjhKo4DSPFIL1HqInNoO+J1/Qvm4/4jOeVHERrmNZTJevPurHuotzV3BOjlBQiek7/FKl&#xa;jvzLLKnNOcM2E20Y8TLcr5HajNHs4Xlnz1OsNAdsljqT7J8dQJt+ZQ6+qLhlZCIS/atzLLHoWA&#xa;ixbBTdnSdsE9i/rHzgh010mwUugfZk5r/l/fRiCYCy9BH/TFmDlbTEGFMY0cjsHdCOXQ4LAa6l&#xa;eb6QmrddVOBf6k2hX057DVF81PQIpXuGFf8Vj5Z/xuubshORsqDYxfjg7Zjm56HqU7KGFdNVWY&#xa;TmV3v49ZHGJ95m6fCN3tmt7yv5OtL80W96J/+m91WOt/zv363gQgxwFpmwSF490j4xJxO/DEeW&#xa;3SDAJm3Ibl01sXC3zaN6eKkKYH6iTitGPcYaqk/X2K7o0WOtJAcy5+oZDvhN7/Dozft9oiu2WI&#xa;Ki2QWi3l3nbHKrpro1+a0297M5wdbaHcHuejNsYhZA+Ep0I5gmDZQAuTZaLsOEaOqyoeWsrbYm&#xa;JMvI8WPhUMM/xA/AmvJsw0F0EwlYiibVPEVZq0Us/z1T03y1m9EY+iwCmVIkxPADLKO59Epqnl&#xa;lSQ51Wble08LXpN73Njot/0/vLX/TGElBriIVESMr9hplhSV76h94JqqnMbVV/3hqTMIsjDdA9&#xa;UbnmDfUEcKLl/zxxsy5nrpfEl1vWaAhmDhkyrMDvHRK3eYoWTUsgnCAGu/OZfSSTTuN4NpOGMZ&#xa;6P1O1tAzndKAxz06SUHSB0ppKbHn9Lv8zkk10uMzj+Xrk8slm1CXgUl5w/VNaLIzq93bZwJcdN&#xa;YJzP6IVZw24UDlNsmUPk8khSTpz3tP6a7ivTiLZNVkU56wrotR9T+DpsHow4wYTFJNUoX4AuX9&#xa;UYInIrTeGSRtUbMSWbYbNo44XjImOjwbaStXUz5mZM4WXds0P8aAbYU+M9cYJMsUgJqp8zjn2r&#xa;7ANzCM8KSW25cr1Bzot0hxrAEb83YROQefhB7YVSQBEoShb4Mcp+t/mswZSNIxf5ZPuN1BA9Qv&#xa;TsnW/54cqTQE6mVcVTBUVrWUIAQ//csNEIFHGXxAvtCsVu6vTHXbZz+JgIw029L6yRB6aHPiEp&#xa;Iu9RxXtjSLcqJ9CFCOJfY3sV4JRRgoZ9WX9Sg/Zt4PSVY/pMBf3CykV9o3KkbK6dYmmWZdjs93&#xa;QzmU+KoTCI/L2OzZUK5Krlym/zhegMJ4U1XWA8nmNEg/F8u8W7llxe/1pfruOXSdf6PSTC/Vt5&#xa;/98H1/9ubwy+ExYDPoPmB8e/6G0NUVobvqwlp/ZZFKi6x8IrWxaGl5ulon/l9CzuP/pNcpaJWd&#xa;mTMUg9o3N64h1CieGBpdVhbk/f68XZ/t9XpeF7rWSsqtddDh2m5tnLVCs7G8zCu9zS93DHOfPb&#xa;vnW4gVu1YnwnXU+5pmVMAIJYa43frsrtsnVlrV4JEExBqZbac52au5q1lyVQjF2OnSN0ylv7VG&#xa;2cGRmeDKu4fIeAOrejkPrxmZ6MhD/2plcCHO12dK12Ht5lGvaOe3iZOf9KgsS7gCZyM5jkvLdX&#xa;dMu1abJnpXBlRLhzjTsHjCtcHSuxyAyTke43Ac7JQeIZyPPO9WyAZpLZkG+Q4CTc8KRF25aQnV&#xa;vZtW80mwr+zpWcUSR2fCf8JZ82uUqcfWfoycOEYKQLxiK3sUCR+pyEoJ11CCS5YA/s2s7xC5uU&#xa;27/sPf2psIdG4KkeGPgVI2xwQRotpJOsivGM0qhOo5iHPF4MeMM01Xxyi9hGOUSTcqZXO2U1Dn&#xa;i9ORkJgZED7vICvnhDuYDu4Mbiw6APxAjZY/sMLPU4FRCP1pKGYNDhvnu487C73swdL3sDwf9h&#xa;766yO821zvLf9jYoAsW1fbTkyUf6y96W40YbeYi3vhgXRXV/7J0WslTn89veBGyElAsjs2sdZM&#xa;eXPX/be++3van+aW8FtaNummmYDa5v65U/mXDwUygdJrFaSnSP0cxn+llXXKn0/9PefDM+mWaf&#xa;Pvy2t4JcpqlKK/k99bOcv3FiKLPwPuLtb3tH6BJ7R/xt7/VCl6iTSXb/ogHKgTIkrZUe8Pj6IY&#xa;eiRvZbpqMbncv8MU6E5CMzZya2wRoL/WZZZM3iqRKQmK0ZPUaWG3GVp6fWBFdqbxrh2od8d0Ux&#xa;ksvRzpZgqy+sKATGnwRftfjV3dka4Tm/9nip0LLGLNwFjzIVa2IvYBZSE2TOLFMR1gUwlYsJwR&#xa;+xqDHRHBh9kkArgz22W/xXexP533RWEFPVnQGojbs1K8N0B7GqF8gKYCa5hhwzcUI+gKj0jb/a&#xa;2f2299Rvez+fsv22d7GXPzYS6MhkjoOxAcCQQqWQxWVj6c17cL/qsQE0os1bqNWsHiLBqemsvS&#xa;OQijPPbMSAuLAL67JktRB5TDgW434dI9tbgL1XxCHGSH48uUC8uIN/bXUq/OVJluUbqx2EjfQe&#xa;VSb/Ib0ntthb0T7Qlw+0506drzSjHplvEwOjIozWPPOJrMJfTjBNtrKc/fSM9rs9Fd7m4Ha9TM&#xa;ROVCpfquqJL0VKLIehtxlUkO+nLGZZOpNfO9kkFKZA41kw6S128M7NGfVvezv8tvfsb3vHzeaZ&#xa;eGQFhqeL1bgitEa1+b/MMPV2x/3qF7aJ/HHWv8dDyRKCIHZnnoeoAoeRk6kmLkyavTzYRYDqQp&#xa;/hH83k0hneMbxOvi7nWPR5p1SDpyT9yh/0HoGXDh7Z6GNGiXf4ljrC99ROHZmK8kXKZCtB3v2v&#xa;6P+0N179psin55OrJ3uQDoOwqI0qMuX74kb0innhSBFBgqco4bAb7vjE9bAfOHgTAuGd4S1Z1D&#xa;q6FOpH6LFDzO1LEt2PeHyU+JEsvTdqQ91Af9GN+9onueTokKvuBbm/ryg3mUSO/rG3x7+dB7H/&#xa;h1j9p77d1iSAb1y9X1wORjzkfItLSx33lmUl1+6zWxNxxRQvOLZnTCAVsXzMq5MotTNENvE+PB&#xa;EBriA+rCrgem+H4wXC9oWa8tB/jc+pyBOyfjzPH88f94p/e3N6RH3Hfo3beMDllUuZ43YQXNm2&#xa;Wgc94mx/5ek56eKg6YbjUeeCwAqKVebL0Gu1dHBMiureq6qrS0NedKE77BxWqdHzlJ+toXKqzi&#xa;+GTo6eXEKu6+i0pAtYwYO18UhjWBgDnMuD9ok2Fjb8AHvhp+oe6pqARXta1KX85MOJgZwoabY5&#xa;nlQpQjbxdYczFPG6TmE6X6pCXZAl0iEEOaCy7uB4kN21fHgDpgWMF49NVWSREvwVuEmGjmHUTC&#xa;htzO49ubo/1e3ggcsk9fTehr7rl9IgAmg8aeVOQfvKubRuxXcpb821IzHTocowYw1DibWEM6ea&#xa;qf40fty58POtHLGANjeQlIt8j2Oq5IZrsxBalaEJ+K0DNxgKoK5qZO/ZCVqaU7S8K1NjzdHHSj&#xa;Ey1obhuAWA7dIPELvd8XqJJ4IdHfUIDCpd2hw4r6o/zG8r9drqEhh5fa7wWPo2+W2iGpjR2ikg&#xa;1s3molJYgy9l6MUr6Y2+Z2MgYkoRhVBlRIIWVy8nkWSRypJVHKugGs3XecJLS8ObRDxIQBkar+&#xa;2KiyFtKXx+W636pLP4l7t1B1s46pC25c5+u5szFujItk53zqzOOdF7pc07Ew+Zev3dE4UVPpNv&#xa;WmCxTIR9QxSuYry3NOGZi/zUAVe+ShFaMgnTI4GdEENoTStj7TId9QBqEvjjNuKJRtqQ59Mgq6&#xa;l15M6HsFOC7+HweymEGN79LGV/2B12NpwBxp1M+eQRdIvGpxFUxJJbkE+koPWJMjsXKNYwm6HH&#xa;j5bYEKk8zxM1TcNtBo+cySjJ5X4vzpZ+3XFMi68oKwMOi2PGRXTiQ6ecAab61cHe3TvufGzDdB&#xa;Iys/QPr5/XGdjrd97SxFO+VmHRwH9PlicqzaYAJNOja/TBm+o2UoEUZbF5mmPTsy5riOcC046S&#xa;hx3U75OP0ZiLPmGNwmYFBSCpoqbTwgHINTf2kYys4tbk6aKiRZ3QPd9XtjJN7ViC8ue4bG25Bc&#xa;ax5vdbf1W90+x09GkdOfIYGJ/6XqaLlhTqpjHe/s6Li1EOySJIBBHsnlIULPKLVE+RT7MCRhJT&#xa;ZnhuH8kiEJvus7XiPIoA1YGmexTfWQylCy652TFG2jA6G1kFoaq4RMKutbVntOdAzMFI60+qlL&#xa;dFzK1cws/ibvfEozciaT0kqJjNxjGv8Sn8PPo5BkzDni4IOpl6TMMBp54vEv68OWTBUgw79epR&#xa;hgawp8i7Q1DJ7ie4X/MvGzBJ+XtHlQCfU/zOT+Bbm638+Qa96ZI3vBgJHAISmCX5lvbmHwnquK&#xa;OHcdobYvhFilsFOjLOz77MVKkS5WhgKX23MyV0mBAvn1f3j0B+gYcKKgoNMmGbM9M2/TmchYI4&#xa;U82p6vWqV74MvPzRMtVw5/2pAlepae/pYwXPjdXP7307exBfgDFdT7jLkljLCdBO7xCyhDBsBS&#xa;lU4CfgdtDW6n/E1fNiO/9MJLwN/tLoMptaGMfbiaW2N3xUcQQKFKtqDz24MJ6pSH8bjGzfGLAt&#xa;fqbHLz3SWXsw9JaiRwaDf5lpDMp5Zs4tAy4sXx9PrpqgDOHJx2myepbiwz4rq6gCPiniNb46mg&#xa;FRaJakt5/qqLbnAsMh6eZODHMfHx8HX23btxAfeVNfX4X+8RDEm8YDIdlvdQP/7S4Y839JWRVT&#xa;L8f/Prr+P73ljQHPoC9TeKv2r0V3KQf+X0W398o6BdL4ZntXFJjYeeRTvxdRn1regILw0yJeUI&#xa;Qw2EXAy0vWZ8XzydXrSvAo/07gMffu5XWrSRhiwizHtGoGra7rEj7J+EB4+UTO0Lt6zmOSUZ5h&#xa;vNWZHkS5kU7+IdkEQO4hPfZgtLnrKWgMzyA7hFdWqj5N0EiH331wKP5H24d1X5gR9HnWMRcv49&#xa;6DkKrLWML82K8t2192FwCh1KZUs9OJfBfTzoLqq4cO7/v1V1axQdz8Hg8yo+/cERM9BX9re2C3&#xa;Tr/ZLplUP3qf1BZ7g7007+p5io2CHiv6s4GJSQ6g5x89t9SfnrvQHJccH6N9KPEan2pnOm3KEG&#xa;VMWCeJUZlHMsd6GWSCK5QDMi0oMoPTF9NNg3HUBQgCfTbPwGk8LZC4jhLoTldctVobzXcX+j+K&#xa;DDfoV1PrR5Crts8Ar/pqvnVH11TghFHZHE/9y8iXxmv8xufENU359pPkVP7aw5sMGr/f2LYydn&#xa;cJqKclW49Rt2KmkbOcx9RY4b4uA9l521Xg2BQR8EjglOKu4C+x8iowJ5u2P61XRS6Fp0ikj20e&#xa;asnXLOBKsVOLhSkBzfG5OfadU0wPLd1UuQibThjPfcR8JrR95tV5N01x2fcdU/jNvqJzcE/5hq&#xa;7FbLW1e1xeri7cMG3Os4Q+4oEGrSkX9YFyoxHBF8WYFDglzdDlO521FQ7vy//03E34QiN/9dzu&#xa;tJi/sa0t9ze2Za0eO+BVErUL7SJN86EpFQN0HkYTq6Zeb8wyCypG08rsimYq50+SdSyOi1l2Dp&#xa;IwE0Ps+NKvVcBQQFnvhdz38ukxwLjjez4hcdme9cZ4UcB3zCgs0ISPJHnUNN49eUXw/vpkrii/&#xa;RyDWnOpIJ4jTHx36UmzxhvKSHqwNyPbdN3mTuWFHhwLyVgG0jS8zh5Y4zNKvavf0BWavkelKPs&#xa;CE1O3L4K+vbsd/le39tihWrzzM5Znuw76OmqagL2B74aiaAUeNaTfgbZ/Zez651qrxSupQlWbU&#xa;XBnjHyJ3FYHtUBpBgQTBVKSXzjiKhqqARdviTPGPotv5T9GtqIkm8xoGZJobepzhpWWrzfVsQ4&#xa;9IHrHg4n6FM/I5jdnHrl162TOKNVOgpX6NMw+xP71iex0+/vTMD7hjvzC/r93fnWaBGeL/4nU9&#xa;IEQ1GKrxKcjVjvjrUL3M0CNrvnyuuyCbQhhoXpuv3U+EdpfFmkjkap+QIMd8zw2gSZw2+JCQEM&#xa;DxR9sDgsRdYi8IK8Dd5umPl5YrpNgond3fE82dtcOSjuCVIGHWUX8whflTN0U8ufM8ID03Egnw&#xa;PSFXl64b46qVE9kLML3GL66TvofbwXLELx0IYk0e0os2xVQe9KYlJko83u6CInaD5NTj5NP0ea&#xa;5w9/ilAYbhOGYGUUzM7Dms9oCq/04s2vNamz9F9w38v+P2/01i/Se0/7qEp4SRyZK3WVY6pihC&#xa;ppgisgpctYWwITexFqOvXIzGL09JsZDjU7eiqt2GCZgn3vWD0a5s7Bb4qvcGHYT05z3HVSo0nX&#xa;+x9lVQ0CtRP02vOe7Yt/a9ibXc8qNmD3atKlevKVdC88oppG/4XnK+G674fzE7QPM3sy9LzrJ1&#xa;Ff/J7PlOzUPO2p0/zDbtHEFUNt77i9leDA+s7lN4/6i4q9OifjN7et4eV2n0bnw1+5A901DvsJ&#xa;Of9/78N7OJoNH+ZrahW26ubgMuxo9WDZ9SJU+QZZmXOzVeiVoUGqIu7AM6+A0JZNOegQu7lmgt&#xa;bhdcyC1FatHi22Pd7j/WyhnNgUncuZgvkcicd080p+xEoMYTcJyBPigK06NiKXGNKD5Ui5eabB&#xa;E4LVmS2CmnBT7wnCqZyOSzUvlkOTWjirH8Rg9j1AqdxuKBHFagFGkr75ulXdVCoxRdjDbcGZPC&#xa;bmh00BqGe+CsWM39ZB9uSpJvx6RZIDGQN1IQy41mxXOn5pOUWMAQaQ6K6lksMawucS6Dks3Fcl&#xa;FhlpZmKz6aSohTlmAliycDkIY2zrTZ8Rk31XrEzdHvCIgHdSMzgGf9+7daOOcrdR7GLikSl5Zm&#xa;SOmeqSBiqGh94/S26w45ScCkYg7v2/LoQy59VvPCYiQM7rOd1pfEvnKrX3MxjbeH0YKScA46Kt&#xa;ZGqvgDRg/EzKtqajuL0jlg8szeZfNQrSmZ+31DrNuuivVyVhSl7kRROecFPRmVqw4CQhuJCoXH&#xa;cfamoXmbH2+0VPqR8Xwmnvv5NbC6I5B2d6ni5BWc8jbNFZkQuAyb6S4VjXa4ym2K5gBD7jnqUf&#xa;qgXg6yzl9aKTazLchNpxeRX2x7diRuSMFCZqwHUqJdZX1EALDOCy+EkJOEQJfsv1TcEH9V3Ow9&#xa;As3Qr5UBv5ntUGPm44JnqQH8i9mcIPI/zLYEsZRKihLtsTmaS/6D2TzLdb8EuD8hGeaoVf2IIg&#xa;j8kXZW5PKxvY6VMPBNqvTWEkG9RjVGBJtjDc3P1Ag+Gyfb9tVTVB95s+sO9NWJQyu9nSiXsPOE&#xa;XYdF4Jp2vnmI7LNCNhOl1Vzn9S2tUMCGtsJOmppsnl7TGMB11naZr892gVeKhhx9pk6qXRobCv&#xa;b+5aPj/Uw9Q6Mio8iW880PEp+ITaY5poQZp1FsWEeK5MoI7+/UDesuGfsITrPjPGFgs7P5eXTC&#xa;Uv4b99h8sXsFAoaPz/kF4W8colhqpzf/2nFjgwJF//eOm+AJ/HPo7447A4YUwfwp+v1DShv828&#xa;0TMhrUzHeuvnGeoxvMmpETpc+dIn1i8qRaP6DXhvSFAq1xjDdH+s4+cQy/eGy7hGDgDlAU/mhQ&#xa;gqsIjVJUqC4kRle039mI+9merywk1cazMbhu9gZRR82tun6tRkeo1uUlKPopTAArDMTUL6/WPX&#xa;h1E+ZrYMhAtYB5yvivHffCy98dt+j3+a3rFUCDjm/YbRG+nICEB7lK+S/kvzruPtQ95vvk386m&#xa;/u1sUGf4YpZ0e49M2RQUbtSnhk2x7l8InRT4oP90truyP6ms5ECbkW3p3889VosVv7v7nafG/8&#xa;XZlYlh/6/zlP0/8vRMHVMb+GsD2tBAq//jgtVsuq1MIryenSQjGnEpdAmsTXDrSbJB8uJneW6C&#xa;GgeH6hbUn3UBuwrCni9yLaE2ed8Cq9hfcwjX3DyhYOGj2Z0b/a46jm74j14u3/yuEvrenQ80i7&#xa;hxkLt1iOqPffkY+M1erqSU3eTAdURH60FXnS1D5kOtwWa6HxA+uLPZQVf9iEx3Q0G6aDMesk8k&#xa;xrKcXJaekt1XCIfWdsVnnpXKYr+do7SWn40zyCytfxVCnMqybnEeq8IINypELnh1eBb+HHVE6U&#xa;y9E2cgqmGe7cSdwdDGqLNEVBIry36Mt9OcolhXMOOMdZQxWKXG/tpVQP4IMB47ceYJTxMFrXsc&#xa;gxiJHrwIhzzvjIJ0bqCrIw55lk1TWZE/OYIs7bnSqtTRBpcjPQ6nKsEi+8w7lzBBVOJ+qlI/GP&#xa;Ed/xtpQRFkAoIGD16oCOKoloGWXCWf6QGRzWNmWGxWKmRwaRKSBuVy66NcVDkDiqSJdNbQeAHz&#xa;zHPBS+c0b/KjrwKihYHy2CtiK0INaURrUpkmRNBnHwkwprfasCeHKmm3oN7aTu3FgkroKie0bF&#xa;P/SGrSPO2KRq6r3IlnlTJfp740sqly37Cy+Du6L68mKwF6q4hkFkFy04cHUS7BIBNlGylJyioR&#xa;glXN85H3wYYJGgIwyuqV3rpg9oqqQaFzHGu/xDjvOS6qPN7MTrXnErDL+wIzytoo2Y30UQdZ8g&#xa;+oH9zdhi9ktomGSLGIeCZMZj4uAWuH2wO+pIKYlAtzsPwZXpBIzlprahZsDBJYVchLRbDaDAry&#xa;tV0IBf27Q4bpsKt1aSCFQse6fqrCiQy8u5kNcArFW+Mbp9R2Th7xd2lEhIU5DbXUd5OvOZ5s8G&#xa;DndlzBfKSNKQoijBOwZk7hz99oHye+e5XokdKS93EJjFHQvv3sZ+uBlOuHiG80UE2ntMNJJlGW&#xa;jNG005iiuZkEWip0yxrhqJHkRBWVI2lXM1IXcaibDD9t2C3cTrbO0VZKxWdj0ShxWWU3YAvUjb&#xa;0dgUZXVnclRXVkdJH9QO5it85LO1rKGJUBPwkqK1k7QDpmnx3J49Zz5bhcBmV5rnhi/bh0pRP1&#xa;/pbBz/CZuV1Bb9wj368u1K/NVfSTjxFWd+UO8vI6qxN6k3CnDcwVA74J6msjHtuPvupdgc15E9&#xa;NkpCBRkzsoE41riCTagaIdcUBle1gCxz7rMEQQ2edeg6UORyHLjWl4tbzihWsY2G+Je8wwXIxB&#xa;PWjTkrR+veoMcl4ybcj5s6LYC7cc8l/ZA54tbnqoPmQ2CguzSgkc1toLnJhyWrSPdCnM7940Kd&#xa;BVfDOfS+zcvs4QnVRN6cFgWrDHi3k2jtP34adNwNOVBe4X0yczMT3ZaeajFzywGePeV7O5T0j6&#xa;E5CI3BL48kML572rQrQ+Rg3XdzQD11+Gu4TvczlDVSxHKvrHzMx/sC8UDFyVUxbypdq8VoiiL1&#xa;F8NsPMOqXfrrSxpyHhiev3CKsTozdZ0qzpBSExBn97+Nz3sadvT5dPFBVGgDvOgTF4Kvn7qpwX&#xa;OR9y6S7+zQkHvj6k9CoYSx5l6iIluJjyZwwy8HoQ4NxFOdMV+7gM7n4UHPL7Be7eOoyB2UoW+L&#xa;jaZa1xvbupdONdbn0O/NWhgwRz43dN++JV9cLV63ZzJLY1Mn0/nWZb4BWJ7JZWVI7pWNouJN48&#xa;Wiok01cynGYdGT7EAOqJ9HeUwP8SwXe0F92mpvZ69YOpOC2jIo2OJWTWDMoDp/YSMEmGfv0aMq&#xa;YC8TXrLLHhmmjh2hbCCmTOTQJuYrFaPzSL4Bhe9FItJ1GslTVQm0s8b2MEWiPz3KgUzKdJG/gs&#xa;pPXUxXY0Tqe9UnQ4dIzbjMWUtXY1vatBzX3FPPKlrWtz2nlx7sfpjHq0ij69D9bVSMAWhKvf2x&#xa;XWkXbFJv6lCOd7RaLSf7Cp386hIC3cFxxTuHW9GKJxelWkR1p0vQeHw7ETcsupuJrwwitChx/o&#xa;OqD190rU1BLL9RzMu3fZgP+/jguO/2HHtN29naZHp6oBWXY1dQZSTw+poTa1RDKEpmjE1DVZAY&#xa;Gdh71QjXmR+5W01/ys6F9fU2+HFsPpPp/IbZr26n29GP9H1UXSa3U8rdWxN7GcW17eDPehRmfn&#xa;MvWAZ0Qs7qgW6xL4PftgwSFQF9L8uGY5vaUxu87mA2Xedy+KMDy1dEPZM60o7ZbOFJTu884TfH&#xa;mBgJyc9W8GRqt8LmGFHmPbfF5Mz70AhzgFCgk8Ps8mU9yoo0s7+uzp7c3BgLou7ce6+ytDNZLi&#xa;cBLz+OoOUH6tTTy7aTojSKKO1seobpYXzDav36uNV2KWhHb7ewJnBc+qgjnWzwBHqFJ26TvesS&#xa;Fjti16A84/Mh3sgH5Um8JbuRIFBUpvKD/KuVHVePKOk9HF2kL2/mP+xqdQY/PablaTcZCsvnT1&#xa;G6SwVMhjr/DLYm8GwrT+kgvOYBAN3zFI6c+pIC4LCWXRkFB1EGW+cS3FHz4zo5UosifOZDE02m&#xa;kN45Y9x6rVOnocAwjeROVVBGNWOr93wTuamXbeUYGUk0k2MNMdgGluJgmPCQEsurqTsHv/GJu5&#xa;lgFCmdH+qbkOpy5+WlW1fhchZ6U0MD2O5o7K3NFgItlZzT5JZfSz6cKM/GHHQ377iA0Rk0zjbZ&#xa;l1VHeYRiDOXHhp31bLGHK5HJAXZidhoJEe1N4UnBykMMDfTrrHN4ILa0SlJdoWZ+nlv3gwaF5T&#xa;wthFRqpxV1u07uWswDUZ6PYN0XE3PdbLRV+UfjVe9RwTcBP6kB8mC2vJLtbnVj/8CL0SdP1BK3&#xa;HUEI93/S64rYLOm7jYzDw7m7yM++H0hEgbw77TJG3DxuiQq3yzcOH+zwAeTaDXzUMi5x04Ohti&#xa;R/BhOAc+6UBvI2qXHEQ+ZDYRF0Ilr82OCyp8EoK41D7a5K1/jedIjQv6U3Pp+tMgqhbzuntbIz&#xa;zXnRwdFdrUmGn8XXNtQ6lCaoJSmNE1BgNALF+LCkCmeDE6atcIQlhhle86cxY/eU3iDC5RyXIa&#xa;t8tHEH9mOh2NPEMER70eUZcyy2eaWetBs1WvgDKR2AdV+lS0z2J8HHi9nabxqPr0jfW2PT/P8V&#xa;+wZ3IKXLP+Hr9JPiucMlkOlrjsnPwevy+4FV3oZWXT9FrkAK4DVWt8fZYLPLAySfDWbOTrpDGw&#xa;UHyBEvx8x9rYtuoIM9wG/gxf6ubWOPG/oD87rIhMb0iwfQfWvzFQcbxPvrgra4k1ykUrzslX2g&#xa;VeRJXP3wOLrLJNIBZQoRlfRhHoPqn9ZKP9bi8VQF468mfDFKOPjAhkpXZaGiu3Fvp7+jYFs//Z&#xa;MFXyl9T6PX1zQ5MiiD9lv4+fc0C/RXvxjYSw9kvZQjZ4eELQAjdT68TN1V+rRWoyDXy7aU0gXh&#xa;3J4L4hfqbnN3ujancJg47dpvs9fcfDVRxhnuFq/9Vy9fvZJbhQZ/jHezZ0Bld2rGOuy9YVfz6U&#xa;pWMqcXXyC1ZC4JWD5zT803IN91hh2H7i05apsFr0aWSdNro9J9FNwk+SpXvb3tZl3hJpe165ev&#xa;JP1mEQELdRQqbML2rEbp/vC+sXJFjHDALsORFSd6HcMfOx/CA8hU2n/mTqEh/Pp2xCETgQCrtr&#xa;yDxDpcoedlNLjX5H8ZRcdZL0JJYcE3IlYPOP6Xu4qtHv9r9N3/9+w/RPnP7jy+/aZ24Ei1i/DG&#xa;1KDenPdHThQr2x9CK+JMfBN5M2pHC0pgDbGvfMuKugFmoO7PxSWrTO61Kh5Yy75YwL77PUjqGs&#xa;rXfEV6c+ShMd30PNZ02xOGQFCwm/A7NcRCj9goB9XO+yG05fUuxlMb/o8Lvs6LsT8nqNeMRnhs&#xa;DtdwPkROC0Hyl25uKMTGJiYcXuzN11D+BNe002CjvesGmjW1lnyF89+yy5nJbjzm3kOz1r+Sxz&#xa;CTqVsB2x7EfH8xvT8Df5D9T4hIs0bt/y5mQEjFcCsxuhAKf3HKSxKOyfiwFfBbWGbx9Z7aexE7&#xa;I8mkxy0n4M7mSZu7uaCJYfRcYDuUoLRKjV9R417T8su+bzq938EPDSLJF12mi2e7kmFNf2LClv&#xa;V7IWiQieAraa0IdqeQjIZ9YV0isVquM+F/nXMGtdrHZr0i54oU+d0wYfTGWRueOBWvFGbyQFqg&#xa;GodQ/TVQt5e90sY68wVg/YTWx2bvVdxzyjdouLSspPdZpZxMvH2/uVdAloxnsG3ibLzRcI40f7&#xa;+1jtbOHjLprSGNrs9tlHb+1nGh1n6o5dTcMtB6wzTUJwfHUDLbAwB6EABD6hY7tjbFHIUvYZnL&#xa;ypJJnPF1/w3RsjTKUtsBbpelu+IGFaLlU9i5f7M1HAWk1WMWPkWMmkGTo+d1v7CIFbzx3QNTE/&#xa;2/Za4oTh2lyAv9PeF/WjGTfTjPOX3DGaESz7pQTjCjEoZVNznnOg4ThF2SqCzLjBlzRH3BzVWI&#xa;H9Baeb4IInpHRpyc1sDDVNT/tRS5ZvUCp56nIjE5JjA9/sw2AHsWjwUdCaZXr3fL7FTkrn8VE7&#xa;LElmvg8uMu370u5IQjr2MW/mGgG255xBSzGDuLv6wyrOxpy0R6yZgsXedfYhkSthTg5HoRCt3s&#xa;OxLf0g40ojJu16tCwi4kHDoQ2PGQltFW36xSyL5GW6oipuhgSvVJUT+AJWY100ZGHMPXD1I9UU&#xa;NaPT8n17fFZ/Oxt4Cpmo02TSOViuqdzKga2rXF+dxbCVqP7wlogOW+3zUKb6Uc3YeYGDHc8UC5&#xa;ql+DJ9Mjdh7taXREkoh4pEv/eUX0vpbOrrat95JgdyIPExOhmgDPAJm3QMkJSfmdd20dlS4M26&#xa;0inNjPg87Iec5bLIxiAObq6efidd0l1wllnQUBjpKD1k7vQRspp5vfa5lQNQreVzGOqpaF2xfp&#xa;a97horM6xb4WDWQ+xryoGm3p+Uml9M5cYWB+lZezjn6C9I4xPBD/MtueuRFOyR+vOGowgofIuU&#xa;d8SyF2ocL8I6eaLrpUK8PuPDal2VajriEH8wczLA2ioZMWDlbK9//LCku+Z2o90e77SzRisQfQ&#xa;Xdr6ju4Y+KGh13Na+CvQNw5KB7th9KA/r8YDV4/QWj+ZJou5Q+x5ffb04rEE/MarCzeIxy1tvA&#xa;TxbH9x7Nk/aJFnxAwE2o+NH09lNhsbXmk46DC6grpchiuMCjwjE+s45yU/wDfyUtMTFn9U6XkF&#xa;qls7YtECYt29nWMYu4ccjI1/pAnuR6BNySKi2Z6sdHOYdYQlyGMCuVy9WJfEIQka88v9YXmUPy&#xa;LMG09RNyFZO5yJyujmEnOYqW0vsr5zUpyaYICskHPlquDGdxKGJSkME55IhYQy/sA2Rp7xxIZg&#xa;wm8TlNhakYWgev9F5+ByFQSlnc97v07Yky7ugnWv76XQaXumDry9EGVGKsT4jNqwmit6o1ndZY&#xa;xd/RQOL1PyOje9pdrg0w+Wh162V4BJdRdnBRdswHZr2jIKV2LD7k+pPlSPvJ/yDhMQ8o9d82EF&#xa;4xImMWUnrAzmDpDVP+Ts0WpaYGIoWXIo4K1BshLbbAQPaH5YHS5I2R8O2AYIeXYXcPwEmWz5Xm&#xa;ZI6U66tUjbYLYksB4ukNnuOd245Z+aUtgjCW5cpCKCah3F8YDKufHKho52nQH0Dwwon4ad7AZP&#xa;wo4NUrck2lwSUMoV1/0sSmGxvEtEqFVYMPnrpMVWTlsYpqhvJzF1ZVdMr9aHaJua4/lZSM7RnF&#xa;CltrD3HBj0cod4V3Q1phYqq+kOMavUAKLK+YtM73KnInFz8RLH+CaESRziX4BY2Lf1zzte4yL2&#xa;gGDSs+EXjuXaVWB21zvEVt7SB3x3LrYjg1qHZPlt3E22cFLIgsYNMTyVRXnYvEKe4wrQTD8gMy&#xa;tFwMhlH6i9NCCJZRnprlEvcF6RVBghSM3XOuP2B73zVznfSVjtSJlK3c6VUk7cRMKvXpegrN5C&#xa;OVyUE91kb8nK7Kd3J6eHlVdPPEiPvqFPEt5ZehpUyNjYxCPGG61tAkmhkgnMlhWjChHreh/Gsb&#xa;pf/eev21DOsvP3f4S4xefs0XzvdfhRPYj0oQpr/4EK29MPFpCmQ7Fn/zZRiSl3/loMq4NidleI&#xa;N7lVVfS3fup6wozU9dA37/NM8uaR9zrE5xi2RjCzmNkUf6KCzilLHLJtu2wyfrBDiZJL1APWHE&#xa;TWoG9hIjn+SRtog/667Tn2Q4X/39it9lWiC6ONy7d9T/9t0hjv9yCKt6WFr+D6j5n58d+kcT2v&#xa;jVMxhNz8VOP7rUAcMaykEzrKh7Od36WB9tqMplxWAw3ZL70tFsFq+PZy+2T+TXx62bWraJY22r&#xa;F8X4vY4uebnxdFmivnW3y56j3J+5Sz+XhP2C3mUOZgAyjrjbz5h4c3GuOHnbQNUelxsthks67D&#xa;+KNnYvFUc3q07LLriIhJiCWe+XiNYcHXAUJ6twjkIJEFxAqmuVOB5dI9zNZfqA0tyyAzz9bu8Y&#xa;/fVZASM7O3dW9y3O9qmN8WAGcFbxJ6vjANj6MA7wDQ0lCKnjVry2FIbnqkZwv5M7Tdi/ZBsXCF&#xa;rmyiKmIb6/EDI+QmlzF6Ksq488qNKpY7UAGSrfAQI2FwzaLGrXAOGuJT/9N0q0AWt0rZZfczVq&#xa;k8OHfWAfSMVvO03xNvUBxtIi8TxRsD/6CI8y8Jg8w8j6akzeVcVCK9Edizrhs+aqJSK0syM+Q1&#xa;7WhNj394wlXnMBMkxrXszCpUnPKlcVE/gpY8iUZfAaI1hZCauj4UIYYVo/TNuVfWWZzZJXxWaf&#xa;zpfFNeVBxxNCyMDd3UfAsmRq/BaNm+KCp2EXBVpxV2/HLzeCBpdWnNo4JKlsfI6ujTL7WuWQwR&#xa;Dd30n13jePtOfDWv4Zr17oTk4oCr7W+Ob+sOSlw3ILzGRV1joR09rDhyaXmbPoI1ytgFOfaPk1&#xa;5PekRmPEWmiidbjvqeGor8tiuVlWcqBhmPHgaTKlSOUD1eK8VL0/9AA/NO5zXowmZONjbbDib6&#xa;63joYP2SvaqbyjUNn60gm2yU1FzggJEHrc7lix9wXpAs2gL2Edx7zh2ipikNViCFqkU+E3mJPU&#xa;fxKJQrSse6yt+LI1lal9iREYxuVyZdbr/NVwKzFxaVFpdwnLqk+EepKWaIRMG1f8ZmpG9yZRtG&#xa;7zVmKqUgmNmm7zMxojhSxcpeZXpRwyNND/oyZeccHJAiNoHqKJPMmN85kUhnjHHP1WGXi/144L&#xa;+Yltny8vFeMbbmpAxUBu3hSRWM6V/z1dRfD4TMN7XEdxzc/BWC6mKg5RzrCvg4nTkkB/C7vZXx&#xa;7NBdDP6cllzLX9IFowpGBSJvWxWcGKRvR4trm1hqy8WSFxvb3Oi6ebXRz/TpSvsHW8Jbi+XXe8&#xa;UfLQIcZ1XlGywInJNk5Fi1ZXY7A3NLfOz0mniKEyDspg33bYkY+vzwb+ZGL9TQShzjBWfRBjoV&#xa;yWgp2VdR+iKCvxIZzjTF3XIvO4jSc4o0J3roT7Y4aNh/Wj4O797Bw0TWzsG0ibSVHuf9H2Fk5x&#xa;cFveLgSHxiHQuLu7E9whuLu7O8FpHII7Ce7uFoK7u7u7BJf7JueduXPmfHW+mVt1q7q7+i949v&#xa;o9e6+1SlWK3yJmSutzKSiUraRPoedmI5bZ09RmjDjzC9Vnd/PLh43c5ZPUfW/NC2ROPpBpFTFH&#xa;3Rj5o7mDYx3JO3BvGwlQogx8kTeQf8j8tLbn/ME93uWaKpiqMxeXWHDmF6+4+g5p0pzoFlambx&#xa;StKHT46Zat/0MOxEvLF18XZOdPplgIvEYaP/PYj4yfxgd8OKrX+vmClMI8oS+eUoHrpHTMhCMY&#xa;UgiPbGI2yPf+WY03ATkuK59bbanwcaxACilfsp6xEaL1vmd9lQmx468pgTzIGSv6RRv3FIR/wi&#xa;h2jOxa/u6b/9YyfssKR2dMLnuJt4Ra4FhziY1cW0M4OMlQyisoRBv7Eq7n2Br5ZPVobkEae8XE&#xa;tHENgXvyiPuKdgvooRid1KPoTVjsM+f1ZUB7yFRLkzcWyBbgu1YwdTFeYUSA00fhl+Jul2+z9h&#xa;grqiPW7T3z+5N0qiRqvkNAgYHl/tuXJv9ryP7nTua/Iatn2JbIlji/qNQgR8z4aVnLmrwCXmPZ&#xa;woI6h6geJ2WXQnPxVM6dM20LmWtH4RLmAX/jq6F455/2jok1RMvgkC5kb/1x/osDbvP3p4NNZD&#xa;BPLsDMDaLdCu3Hg5YD2/Exk5bxLHLDlafCLiyx0BWEZItkWlD1ysdOdChj7BJtYRc3J5DZvPPN&#xa;ugyGEEjKcM4ZU3EPscL2oFVHbcXllmKCf5+iiS1U3RvNEJRDnqXezH92xaLDu8bXc4nql4dt0n&#xa;xI2cuUTWNniT92c7O0/7GK6/HWMT7C+fNQklonNGik740pxTNae7X8kk+k13dtnm4cRWY5Zv8w&#xa;yVOk7ixQEx2QlmuP5DFGpNzK5Myvp4RBnyLVs80HsULUgOyi7C5g5rG104Tct9GBPnikCgpnPZ&#xa;KrKsXuM4Uibi/Y5gPBoP5coTFaP6IRGbQ8TPyu3fceig//4KNZj2+HKTuM69mHImj3bUtHE+ey&#xa;MjG5NHUBEGQ4y1lLFQ8QYpFlknxUc8dDh7cjEfvF84QjBiKW7a4bB6MImsUwSL0uMyhaYll2XR&#xa;t1PT+AN3MtMlDCY5dbnmAG2MFvLcYUNGD/OJuotXPr5ZigdyoiLlVgq7Ny4P2LcW1rxwpfhmpc&#xa;6rIFpRxMi/q+LCIc7XxgUSVf28K4t11VdEC4QJZwSJk+ZH7I+76Z0ez9wCQPbJlweK7vZ1Cl69&#xa;gbPePScRpVa/hYQBEBhC4wcjx+yLVTdrUr1MtejLGV4HSKjy4X+CkSYob+SyhMyQ55UxnkTUly&#xa;H70LRzzaV5I/ayikLWwya0+GskloKGS0yyzyibJxUZGIVYffhq601nIheM6HdQq2LohM0WkgMA&#xa;L3M+Zxolh6opSUmzmkqpKz9zdiIa6zAaeL8FvA108ptruCDnfYKnwDtYF00mzVu82Hyhm/8N3f&#xa;QCrtP0tlb9IjEMJG+vXMJbNc3cSu4oX4XeYyfJCVB9rlvn3BLn2A16f1CKktaj4ohUeUuTZMuC&#xa;SbOXJFFuHZg/DbEM/bGD6KUpwtFgKkaItB6Ajh84A7ZOukiEirsBmr1rlEX1aTYD2hYromCNpy&#xa;crbMFZAld4A05nRXR9MLvyZhUcyZhX36vKQ3q6Wr12CA5rYKRt4MIkxzklZS9vZVLCafaqTxEU&#xa;pZrWnpudrmX5ldAU+f2GUTrvHHmwY7Y3ZXNxGzfEcibZZ8lXm3wTlMsVgr1IYQygVbYF0a2via&#xa;mg5H2Z12XdUcD1tFLswaJyq63o8W10C4Zmkx6YVlqLXRw95OKkGWtV4Q21J0cgu1mnBLcpidTz&#xa;jNaxVcqRoglEL77RFK/e4r0mvMqRfTaeXStFfYoHG8j3+s/7SAQNwGuADEfIGoJ7KCmxSfP0UF&#xa;6sLtfaV1Cl8D/8I1VXMls08MnFdC/8AaL9Mk+48VBNlfh7qWdWXPCPcdh7SCbmaPuPyPZGfxjP&#xa;GG3h5eKjxOOjwfu1npXJU5JaZZ+sNHCdS2AwgHo7/4tDyjc0QsCTLTlTw/mHU8sHLUehd7HENV&#xa;JF7d+BmTRagzg2g81PXLceUsCLXb7MaFLaZKUdg3xZ3Bq3RLA4k17Obzqi1jZ44gngqZzs7rUt&#xa;/+rKXvb0N4qIIEA5P5t+rnfw1E1n8LRC3tfwNE/cu2jStEoNltGesbxcDV6tpXcQ3sl+r7vdUb&#xa;32znuyo/pDewr6E9TPwbm40dRo7Z3uv7q7LJJ6uaaI0V9jg+ii7NHQbhZi1GsG22V7yKTKC4Vn&#xa;JRc0pzCzN+zosOUVSTVAw1fnVU1fXJZbfKEdMGOQn761VjOycZZ48GSlQzbK1pz5CVGQLGnoaZ&#xa;MVYA4RVnhBAo0lcYsFOynTw/xSf4zdbuKiJBgZCyhAsmScfyl7VBs84psnPaQnPfGPwEq+jpgu&#xa;3YNqAm/8wiRi+Nk22FIZW96yv1077/AoClAIF1YYdcbMopjY1unLUaUen5E6frgTEIS8D3+fPL&#xa;Gm9App5pKlfC+m1phKKOGkq3Ns24sQcKeHsFyX5WJUtwJkgerlX1xW8xx38iRWxlS60rvz1OHX&#xa;C1cwccTyoAv5C2LInwHGPCFv9CGkkyhELWAxmUaO86wJyzSaGkUpVXpWiC3U3GdwIwYJGUAwdR&#xa;d8K7pdPn6S6M6Rz4VhqoucNT9CnO5L/i9WwWosScaWhFbq280Z2YSdjcrJK44+Q+ibKWQTcliB&#xa;E3rlS8zabgyXCePCZAqrtprYZ2fBVgIFJWncaXd9zof4a32xp3gHSnjiYIEoSH/xHeFoq8kxj3&#xa;DGhSsD5V6pvWHl+N6SEfsFG1VrTKTTX8TPOxKIbxmEP1wOx4L/xs0c2FlHJp8BiCT8WCQ5EwmG&#xa;rvDkzAtNmdxGlDMhulWydTWhr/Yz25qPir+AfwN9SPZOIErJAuRpH4UCw9cz39uTQZbnIaY5zo&#xa;0Uy8kmjk7nTFzeCqOfKa+VJpiSbu4p/J2ZvugWjBM75099mSE2BwLkvibxDmsUJ9znS0g7miED&#xa;IxkQINmhuOB/aSfQjlw2xVJc3+zTanrqBZTXN1DEbgrIh6x9A9k+voyu1SaE5E1WVDoDqVd4R3&#xa;ZelkNRkhB5wCS5bePVO+ssDlvS3bU0XmOLZYNE6vQ4sq20/M2Rx0sIMhV+58UTFWNXaZBVhkWq&#xa;ccQkVFzscZN+cEbV1poyXrMNW1vrFyS3hNT0MlWxAsZNKZWMXcnioCheEA4udA64c46iIy9oYD&#xa;rBAtNNuybiyXIfwMXjzG9Tq5Dvzvj7LypBgIg8SIkwTO7mJqiXcXTIGRs523E4UBvuHztq3sKG&#xa;TwDvwJWS+I4SVpDiSZ1O8RtOGXWiRs6FKiu7Z0qJrPU1kg6Ap31MJf/Do9vE6i00e6T6nerfL6&#xa;P/mlGAPPpZ6IO/LED7UwsV1artP0HUyRjyYvBithes6l85lJoJAvUT9rIZvKPD+I+sI8ADRS0P&#xa;b4+ZbIr8DS68V1ZjbaKnWvZ+90RvI2W/svuSkO5XAI3S9+flp4sGNkmstzLxirPGdcvc+tellM&#xa;27O/3U2ol/khCTrbOlI8GnQ80oCdqJ6VW8OTGsGmZPHWCIfxJeK8u9o7V1ikMnvvrc4/38n4tT&#xa;2xOHies12CVa/UP/EeHUel14dduqn7pcaOLeeLzVkrN0KOWJnwrD/uGFS7Wwk8yKBFM7a7kF++&#xa;CPkwo7u+bcLo6U8j3eZYk+D/HYiY/wrEv2W42qs3niqm78XpwKi82crYbSQcbDH1mk16pVwZPa&#xa;JKuoWh40wyBRuZ2I6Jc4Js3ZKmmdkMpIpKPawkJjiqqICKymVZfXzvr50rzuzQ924/Yb+rq6vV&#xa;tCGKMfnl6Ng3pvvVlvvV+2zvc+6LFsLXtjd1sC8PrD13AcDz1h6kg8dQq0x1EyYQv3UQJYXOBL&#xa;PMOjAypTkKW2T5ohWmEH8lW99k0KU1+0izIKD2qDVkOHHsK+3yuMsPE4VrYN3+PsRYe0/RcPuu&#xa;phv5xuSZ8deBAThDB/+AaGayixqaZPdMQ/1Gj65MzhvTOpYsQX7HALU79liXrJnvuXJieDgiqx&#xa;k1OqC7bZDIFEN4vG4jPnQHMEioZLmSHEBqXdjiPpy5A+Ct01VshSNU7GKYJlpjbTzRQjcVsJhw&#xa;vs83nmBexTT0JJutnGR+O9QU6MPXQ5XnsKCB7xE8qaDhccBt+bLTHrUCRBLn+aF2Vc6dTUjDrT&#xa;Z3on/bPMnFbKnGfz7YnCBEz7166zHlxA/qWLrJIPi+r7nX/vlk5hLOR6lvYGoIhVTCohmBN8T2&#xa;eVDi1q9beRIzjwlCRCFR9cZ5zsl2uXT3IHYfIWmoTzikPI0lBOKONZ/CZgU9R920uX4dqGa6nr&#xa;33KHQ+tpiAnJo0xOLOG9nIr11WGRtLPFFDM/Mlgx5Pr/wa9pew+k0geJ0OQS2fPKWAf3sEgY+V&#xa;NxoMtQpEyOFnetHVZpAIV3mChIAccysHLZIAPcM2bMhGu2bl1YwyoK1uQShYOtiRM6aECz7iW+&#xa;Pm/Pg0n6ZjfUEwEDeyecjbUWd115w66FBeB4rSpZW9lkXgaFEV6ptxM692O4NWX7biI/aX4wQe&#xa;slWFABZzBioqJhczTq2aoWHGw7AcSWJ2c9Vg06LgNgR6ex9xSjMPSaYg7hFMQMNxodwmwXzcT+&#xa;6tTGeX92x6OnUmmkK7qbheT/jVyGROkavRo+/6s8SRNRC4D8XOfBHc/TKmKxXcL9+jGFn55uKz&#xa;+iThHzcAMD6sOd2i4SQJsCqTTR8iGn5Q7cznASAllkZjZ3gwRj/zNQdyMUDmc9CeH79VeJWpQ0&#xa;/d9bzD2EMdVJVWX2GLoXDKsMLr4FMbPs5H8ZEZ6/WJBSS4EJalIT06TFCsKIVUVA7ktDZ/IlTV&#xa;sgzQkNDCGBOuOgw32/r6+6f6UDHh4602A3IGkiuVuYtQj+M2giEJOZt7u5jQjZwpy3Vjdlcdz+&#xa;MWN5Q3ZEyvQ76n6Qjwlh/f9kFgSnuILsXKNLeKdYHQTYJSk3u3kyqsVO694KfBZ2a9i8r+xOL1&#xa;eiKVFUfdMSQMtvYowtJmiKqv5r07Rvg27iYlMeuSPWUecpO7sezDLtxiUXfoIJsyRnygPYtFWS&#xa;H0Rb53ndy8W8Oby/Qlh2/pNv0LHZhdaukWfjsZha9Qkm4zK1UsQHcp7OmjphTQrrMmN+qeKnnk&#xa;RyNoY1MXs7PfHmjnao2hn9WRhbpQvCVmqI6nDvvWj+HBGrKeQf1ZuBdmMPK2m14L07eUg7Mryz&#xa;BBpQ93svCQ15wn+QEZZsbExtJtshz0rpWjtBVj3wQr4zpYyU3uO43mnPY2NyC1iZ6SK5zrrOhm&#xa;ooKK92kfaNSMEU2lQncYIn0Gc6v+3YqiVnLc9UJf/OlLDaTMbClZgP30dlG1bAfvlwayRsM2Dx&#xa;FFxiC3D6j8WV5ov9wNzGFXRJRG+27X1HG+SvkdnghkfpQNdRAVaCbXwOmMLV8VV451e4fDN94Z&#xa;eVg0OGVsNobyVn9X+BV1qi/MoTZg7m/sSHr+3h+0ERyHHV6xmR0lG71e4V61KUAqnwDxCR/5K+&#xa;kuZFd0f9TDpMWqJADVAT/I6LrcQhyW1JIsgxlNu1uj4VeqzaB2NSUpLhwh2TBd32dxn9RFHBVx&#xa;OCwbxDJDvWFJMcP+DGY4Buy1WdvSnMb9xgxh9lFr1uU3hBu7Q7GxSa1bo7KviNYz4l69kjjS+L&#xa;FgIBzYMSxXPpp0xxzbmH0nkE1+FAdpR9QQD51B/YH9Iba+cMtQkHWO3kCmht3MNYG0WlEMDkoJ&#xa;oX6VH/OsPuytt4UvPWWs8ltJc/DKJVvrFT5eT90DTnaPhEf2WbepmaLtCxijJLxe4vgOuSVcle&#xa;R7b1nNFw96jsCFV50feLsnVgwD48aosc+3XcWUkrmk87GUFnTiEtxRVZMaeBJG3leqx+SXwbfu&#xa;y3VZD1siR6Z8Ul4sMwUw4dTLOdXUd8g+Qf1KpzTesbAl+KWJBqSiMrF5cl7BfVf0ODP51h5YG4&#xa;U1bGfuJUKiEj5GH6ZbdPA3MAU8wRclpewr8/JdguJ9q6WldmX2CSWMcNV/nFWt4o9yNCteA+NM&#xa;t3N/BGO/stHU3+0lX5LqesFI20FV6bdEcEasERq1Yet2TUhELlyK36P5evZxGoZolZ6svIXgs6&#xa;wP51/S8pj4p1zdU/7Q6boIZmEBdNqfzhNc25M0Rd2/Wl6/EpacEVnGt0vTcAxZkzHGv0AMtdp7&#xa;BQpDpxK5307rx+QKD7599hVIRAZdu1CFinB/HGYMcaJJ1KP6VoiNfu2p8/ZnakdRsaW2IwwY2B&#xa;3q/3xYppK9vfX/bGbHf2YYYl0ixAL2OzFb5UGE6twGNQvVsIJo0Ec4qJy5ZjLOoW4z+9a/h2WG&#xa;bSjS/hdpTixnaHjZs57iPPHsOb7U+c7/gv4TDw9U4hO0clfa19JK0itfqnMwXltt+2VkUya350&#xa;xMhm0EU2TRNnJCtAtb/CQZJUt3bnK0Nf1eLxeWRRa+rFJNNImzvrHCraW88ehQrlJg+/8VOqZ/&#xa;C51VrhW+nsuMc3HmQYchBZAhn+7qPE/6wf5Mha2e4z4LpRQ8wydiBa1XHOxKjOc8nS12O8e67g&#xa;NskruRRjNHkMewG5tE1S7iWCOCmRyTSeQP6k32INmjbhXv9nwqLYYEUAEfxApZw72rsruAqcf+&#xa;P4SO8mAaOyjc+WisnBq7Jwlb2EOmi0kcGvXnCvz2+hHOH6FD1PDQ+VXkCunv/FIfpwwIT9gHMi&#xa;QW+F5Ia5ZEtJthA4x/BIjFGcHGGwoLLTc176SGbXFMq1Tu/JVfgH/ll4vf+QUf/Bim88M/8otc&#xa;g7MCfercWqCU4yybpb4p9ipadw2+jDXzy+Q3k7XTMPxKBsci4tJY9t8+RzVfp0H7NY2RO9lu/k&#xa;AeXWfN1pHwTng/319WVcqdq48/CNnIg5AwRtQh9LfPCfrtc9oeuISALQNMzmraKTTJ604f3fAZ&#xa;uPfLtCKV0PvoRMqNHI/v//icom/flqNtJThVhsTVLnaEoqDRG/7hc5xBbUUf7ht2qYnpyIrzZw&#xa;1++5xRexKUdUIjRaNd1N8+58GRiFWH95j2b5/DP/EPn1MUGKj92WiWSoaNUjn+NAa2NH+/UUAk&#xa;3mE5dm8d/QhIFMCwcojrcIeN4ROdhO1ENdUeP5OrYDvuvvyIq3QJsGYZO4FnICF+9goi/rI+hd&#xa;nnDL03qGp/yS/57ZLD+U2zeFPbB6sHIZG/j18d00IjGVk7mDJNvsobm8WS8OGZA+dVZdwsKlcc&#xa;0ah5FR5nk/l3frnZbcVTys0FWqcXWAeHqrYwRWG4JghacjY1zxWQqbeDNGZ0V0cz/ovP0ZzW0t&#xa;Ur+NvniBOk/5PPUUxZvQrJ+9vn4Pz2OVf+mVNgZ47usUMR02+k4o7hTylvi2wTjDOtIk3QgaLg&#xa;dmbOCZ2k3Oy48qC6vQ0HdqCeAsiMdCisXVdBfN7PrShH6AQ/2PILMudlDF6ci1eKwH623TSWg8&#xa;J05HfveF/Ji2LUVjUoaN3KllNanTUJilsYJ9yu6rZ9aVxiEv2UXRGfD4lIl2kvSFdQ1cTkw88e&#xa;7RLb4GyW0c2FypXWKfwN/Av7nx10jR/Q0G8pomPb3A2+W/tUYaVuT7VNm6nfq597T6m/PbXs2f&#xa;/aVf4dX5LPdoYcjwaljjxgFWpW5dY+/I4vtc8acpC+JJxIl2PrjIt0+2/dYfkEm8/R21WLo2d5&#xa;/4gvoe9dFhiM2wDVy8ofHpzpk+CN96uZIZO57OK/44tYu0sJM6DLqY4gRM47UJ5wijPE0v3bwK&#xa;3fHxTaIFCX/hVfJP9tfPnfovBf/PY/UNioYguxC6WhbV0xWYoig4tIjwYvXOYo9WdusIt7AvDN&#xa;n/UNpXMH97+g0DK9u3sztIPxIPv+JrPO7937ltLfkwvA+gjddMYe6eyqGram0jKehWm48tTYlS&#xa;IWuiLzn3IbH8oYu0Jb2OVORYT1xGrdO5xkkIm+vFXrj8tpXN6rXS7M42x5CstYncbTO5MKBoLU&#xa;XPS27soHRhxebW4APfatuH1EPeSCQNCQi6PEiUV2hkKTu0df2kQmGXUzWAjfH5ejdBrrlPTH5X&#xa;wzD1tkXEnvA25Tr0zhdcT/h8uhfyr8h8tRPruKz7VokcVJvgHYRM6uL8itPQZvpcVuCGD43csT&#xa;m88DC8cLOOsqDQDqRrBb9FA92EBRMHvaMO8iawBxUY5y4Oz2uzBSH6/OR9tQbaiEaXF5ZjL5dP&#xa;Pmz8lPHbSmBTTX6YZMUY/QH8UiiCVBcFCWG9vyRjQguPwSnQH9vEGWYCmPLuBPl688H2aRfaFO&#xa;2bTF2yozrA6ytZjKvKEStostp38MMzXTBxvzJs8bPfwQHGpdQm3T0d2XF1EhtDab23QrlWyxan&#xa;pi1XeiWyuf+EbR3LiwLXAaMioFnlYaf+4Q8fzRbuBSQAA7fBOpYMr4Ekaoi9PR/UoxkMUpdmte&#xa;01a3VMNrRHPVuXlXo9iKXloOwxlQE9FXshHZKjeXJiko2IC7EmNXHB9dvj4QhI1IYRWEUrBK8N&#xa;Mc4K4AdW49pCysIftZqqQrsDF4MHVDlKhdsDe+d5AU5C9vc7Xzyaz5rrSqeLhQF13t5hcf6ShS&#xa;vOhQFjy8nXC4Yh7dTKasVC0vSXF8+soTQKrbUjDZWyHf3B+y1SbP/ueS8edLTDXjwRzRG2n5SI&#xa;EG7g3LA3vJLtbyETZ7quaw4NMTOdCtp4Q6xgQwUb3SK+hC6Cm4Ke1mQhhqY3MFW+/7KfV5S+mn&#xa;ngifRQq+IRevtZ6vUs8/N5qmDoucOIwx2K1QevbUJsFic5CywFIpF/a+omGOaSzQ6ZLylQ+FGO&#xa;YXZ7xItbWMVTCQtxyz97aeb5t1sYWUtzOVcIhABg6f184fX9NAJVTvQFN1sV9PJirHpy/fRArT&#xa;hzeqbsm07sYw/sD5W+Vc/VY5yINAxEkC9/vUcqozQQOMlGK/o1i5mxeWijYXayJJjE1xDs5X3n&#xa;hW5y0TLu03RPWErWgTC4b4qMEVD5baqwReREStCyLZE+/mGPfdsPyZtlvme5egH/7e8XqQawm3&#xa;Il4S0ZMNNEyHTmPmfn1zECbCfkRNQEAbbVx/OAZf98AnS9ZEWvxt5Uf8LWcDZelE5EuPb70QFt&#xa;M4jnIKzZW6d7N3OhkSXa7RWwiyUxlsAkfrAQGVV696BhESF9IZumv6rRdi+o9XziMbp0NFFik+&#xa;cXS8PxN2puMSpq9Qso0KMlrF4pOZ5U2Rq5NhXyTt8LZPXr/VqI6+hqBK8fe6Z/TpVyfxfupTZr&#xa;QoiEJ+D5qi0usF/lY5V3ZsOSKnp22/VY51VDE4Z3qkx5GSMXbgnhk/fMYdZJZAvj103fkP/78X&#xa;I65PCyyX/19hiPEvMPyvb8Gx1yjh0pjwpXG8atzrc4LBosVsS+pVw6bFIfbm55UwQ7dQoEFpLg&#xa;yK7Q2/lCrekDYUF3LpWm/nGnzuN5p1fM3NcD4AMPWd7J596jpfdeXfXsx33MEgHuIM/RwDeMcT&#xa;xzwNu2uTyZhApBneQXUx1mXpvIXO0TJhrPUPygc6fY3ly/AiPCfNpWXWYiKumfHc9sy7I8m61B&#xa;bzePqf+YtQiBA4vnE27x8naxYbw2DnpwFrmZRMDGYAQyOtJW3qQB7nPbGGwo+AuXIMu1GG6bGA&#xa;LF7dJozBRUpS8BDiLYZDJGYa+1/hAtP5miBTVhO3dANJVXoJrPYw2ZC2vGMWc67Uk4huiuAuDC&#xa;RU/+/GyTuHddCENVarwMYKU1AdajspPT686ZU75QNfUws1mYC0hCKHj0LsCBcIfXf7zhmuCHtc&#xa;Yvg8rfLHKEJCeoX6Wg5mCkLvZqaWawt9TpbQvE1la3s5L4OIxPl5JZJHpR0GpM2nLhku0h0xEy&#xa;CSTbdM4Qht97FmfG0hDkEn84QDl7qVChFkXDReq4kLCWGRCWTPD/8ByAAqsFdvaf+jI1i7Di7K&#xa;ZkzsbQwyqAPHz4fzEp6fToQ4Q9SBXnm9pfTqiFW5GSFagleZ2qg6Z56qvXsfRG7KTVtyCUoBsT&#xa;hHR2ZjWtshqOcMGs4Lqs7jm/KNsmnbqrjcCq2NdmrQbm1cDUp7qJf02yFYEaWGsscMlObPjlL9&#xa;Yu3r6ZCmqixgogsK1CSomDpdc4Cjd+iSuvKM7IRuop4CHU8Z34hU0Tn9+i4jUPfjR8v2BpQ6Vk&#xa;V21jxg8s7SS3uwISjDG96bu9bDbQXJ6qA1yppKEc5ZVVtySxcUUGzPnk4FPerm7EwWhC3+XpTx&#xa;Ba3fJAqBQuogu2gZo5y0DaXITtu2XsQ67ieIuWCZLeezqegZWbFbL6Vt2bBtipcTR1MHlLiXA8&#xa;wMsNeRM4S0WzZqqzsm0jvmURaUfimhcpZuZZEtFMLXmOSlncwl/2QPtdd23AkOkCiZ4ODRF0SL&#xa;TmMIrm6kP+MCo9pMTXHEwZwW48NFNGsjXXG4DcU41MBANJYSQlNihUrC8bSrsk+F9LpONFcJwr&#xa;qUtoNZqewQjIA/70pWDEHHrlRW3TSUx5sttkbgDiLomUyKtECLOwvbmr0JQBMoGGXzqQ+cqCHZ&#xa;YfXpcli9omqr/bIUxkQzCVkFSfD18QDr0Q+8WIoyggxNxFqT87G4iW/kjDrp+/avRqoWu5JGhv&#xa;ktMwTHqWTxWatmNenCIdtvyYM8ntPXNtHIJ9t0/LflATAMvBi32FOFqwojJHefnpiVLAqzMBqY&#xa;nqyFOjcmS0VdSaxEh93v+YRGJrbhfxTop4l/RqKYipFgs743lDqVKPOYs0juB2chMQOm91msg4&#xa;JylvRw+jT5nD0a7FiO7LNux6i7HC1ieKD0YKvexGygbkLXFBxtvPbh5GN6/XqOXF34tGPv1mOq&#xa;8njppxQKKWfqYlK85y+lfSDsP+B64HpEWLtfP+pdH2YhroKRXIWLv3iEfYO97HD5IaXjAgY0d/&#xa;igmTglNDRzxBuHHDaf5eEvJfvYypwO5xqTE5hRj1X0WNHKg/WlwT/ZxxfiAgGJplq3yCdInv6X&#xa;wui8a+sn49ELuxX7uwdOZJiiX/59L0w1LsK7LhbGYW5QpaydoBDZU8r86xMmNb8AzfM3iAojd/&#xa;zzrOsqpraFy6tShS3epwK92nf7eqniwowrODVhb8v359nmhasCMNIxh863BghDJba9b5s5frKt&#xa;PhcnuHmUgIcIoh02X7kd429O6L6XBRbdplod4pXhjlR4I1seuBePOzAPl38MO0omtaMKFBgYxD&#xa;8172DYhP1T847IP782t3e2/L1pW8rOxdTJwcn0r18yfWdTQydjiz8bbP+zUCX7bzeQBX+VrOjq&#xa;v9+96Wio66F9ypte5kj6+l3RomJvTDjiI5wwnBH4isvSKlmkIee5ncMLRNYR8pF7Kb3Zcs1ZEc&#xa;/Mxm49v7s7XAAkzAqj++/5H3wHAn9eZTynbIBFbcP1mLT22nr3bfM1mCy35mX0Z245lBk5ahlz&#xa;Z5Qlq2lNt/Q7ay3Vl30kDD/rjJY2AMTlmqbzKiibzlEVTq+HBxP1VFtiKqenHZA3WBX50JZZcT&#xa;1xKKxtQTephB6cENgCDrR3HeacTbBfkUukLcy5kjhnrFpGHVizl5TcVRhn+sboK7l3xnhFxrTh&#xa;TTLNLMrCNgHmrNHqevtQdo4iOzuANeYVRXxdmRTVlWxWeAoRkpl4aD0qZZNWkVI7mTclBgnUj9&#xa;MAmyy0b5OIa2lGqTyK2wMm7PXDk+i0ThJfv87hC9hq0lxxoxEuW2Rl6JNEn4abZy+7kxE8TTKS&#xa;+tcBgihJnVWFIBWBxJnqDtBZ+Ltf4oh3E10yttT2/6pTsE9G01RrM1nDPEQwKFczIXuOMn/eCA&#xa;AZmiQ7xOaAT1osNMT9KGTCQK8d+jknYBCLgGjm1lMG7LhVsp6jWTaPjobswRz8mqhwoNDU6FmE&#xa;1dXSgGqDj1HlAiZgJyKKrFJpCHncXLZuVFWkm11pMUar8rrvg4ifTwez50ZYLWFXcdTJQxjx9x&#xa;l8UhgOWvIRn1y75PBABezl8EDyKlKGc+uJGpUehtT5O6GgtrWbgM+IzDiowqOt/LU/8efmBEQS&#xa;LWzyW33JtI4P+clXr6u/HAzm4HjYwRcyk+6wfqbMQpWbBUu20Xydv4Q3c9RG8ZIQwmoN8TjA3q&#xa;Y8s4C7URl5VenwZALaD7sd7pIKd304Hxo0mELQUVDtSklFgxmZRWc+cyhDZvuktKgyT8cVbVzG&#xa;WaiZaeVqIrwaRpiw5AjR/QsXeXoCKhQ+xZVujUpaI6/k5g6c3AbPEjy2MXpUEdJv1Yd+h/iHYn&#xa;Xgc67RBouOR88ruc3wJIp6dQSMcGH+wQ81HEdjrBDb8Deo0oGphqZvOdoes0JwSvrus5RAuV62&#xa;EJSdEbJvqnPTYt8qwkLIZPHz+LU+0765q4tzPnQc31E0vWQd1sI0l67w2MrigqjTR9kkL4czhS&#xa;oOnfqP6qznUYpFscKLTPaBu+WaDWy+2ozOx89gY1ZP90Sz+CgQuIfJIXdHj/xeKG6d4ZqlzK9v&#xa;4XF6WnJPrbFEnuBTOOPRIWhDW1jNDqbl9MvJg69RARYrQYS6mioWciiQDkgXm7o5mF5twfeHsu&#xa;0dCvbg93L+MJYphaHINUKUwrpfIGu+yr4EB/AD5r6Wbu3ovsjDCPEVqoI/h6KRssFxGk6NUMOj&#xa;dLszeHTiCijBxG6CEMYvqaG/fKf2gi+T/zD8wEUgvAkmtCRR7MF7fiyGKYUcXxHGLqSAKuNoXM&#xa;MvyyYWn0E65Eu2MuEb5YFsOD0mK5p1lYdEcXfpyXUJsYzO7lPzDHBnHVI/RGtjp6swzd6xc0Je&#xa;0uWkBpfEn3rEQYUDlpJSr8dybqrhH8L5/UI7uenc3tLi+uoRkHmJQV4k2Gmf7lb2ofeb0Cs6f/&#xa;058TsM92incDPoA7e19W6pYKj0qi1h9/mXaPnwWcLgnfXpnSUiU9UjIAk6FC8D7/SfvaT3p8Lf&#xa;+/8qZovh///E5t99kAVq1up/YXONExwahOrgsfjQKEdMNkWlZY2an/okCScNF2ix4oLNMGSRKm&#xa;VOUfylSUv7WfApyyqyvlJAYK7hKUPHdiILSCTpIPS892N/9cvd2kHcy697xk5wrpgLbOgZsXMu&#xa;dI6DEuYRZp0eFtbCkbPaMcuoffzKJS/H0U2eiRPykZLFdsbWWh7iAOZ6LJsRreYEGksz4qS7Tk&#xa;lYVjL6tq/TFZp6szTyNNW1tIXWozezUHZO2s6Pp8fRXqA1di68K0YWvHdkFXI2FrZRLcsKFSMu&#xa;zJH1yY9s34720nB13BXs+Y7WPPI/ibOKKHNfnjCdDqsJemdOOGZk8AjKnducqJndcYhoz/7exz&#xa;FDPubIsp/ZhzIxPxs8kTSICF6kZgsnOXwAZ8g29rMS9dTfEOccCKLV9uqjuOXgPs8yWQTSO6jD&#xa;JrHqCNis4FiuY5106GU4oYhnnUqhZ2u1SGq5GqZEoegZHS6lbybA81Rri+PfUS0GJFO0digIlX&#xa;Xy/Px88BFx2ofqubM2icx2SBuzdjQVA+jFGdQahyTirPdw0wRYYydQJJXoVlEyOCynrg7GFkm9&#xa;NT0Mm5Ot5kJj8YrDYJIFEEcMpmd5mAWsoMUo6dFZFMB38g1MYo6oBEGJB8+H7rDEbEH2bNmKKX&#xa;RLKWnj0XKF7Ju1x3CGNZOGuc9PBwi740AEPhKJDBLV3bHnhZMkBXIokyxyAjG83ha1wNmn3PiK&#xa;EztoLY+W049GNe9etPwuI6q0yWa5P2Bxp9+UWiW2pavTA1Dj67Xu5hQwRhoPuGUGmdgiVO4Zm6&#xa;oiQ/3kumBrWdb7qXpqsOBSZ2zzTrM7dpwMmfnKknRR80cAvKINao6ys6O5y+WY7UGOQONBaose&#xa;eUVIdWwjbVt8tEKfhjKcCQObHlLvpvVIDNmd9Kiy5nOIKiXVSwKGCOQLZVuxX7/GjPWTZALl9s&#xa;q5m1oV3cRcM5TDFn5lvjDHzS+UVe7rrDAh6EWW0qbQyJOaAY8PEJXpSmB5rLqYMqNsr3+OOW20&#xa;HSQ5euguP7yRr6owQeiSbfOx95+JyFRnn4T54ln9UHXpRTZNNKR9AEuXBC+t4GdEUekOjNKWpK&#xa;HqRqG7gI0Cd7xjPip4LMVb8+V9x/jGjho3UWKirk0dQiKHkuun5WKuVIeoeIBu9H21CH7OPsZq&#xa;z2AjnV3Wt4RFsOdsk4zlnDeTDS8ICSQ3gyZ2xg5Nbqx05L3ssNyYzRqiHh9SW2mheLqXqVrj6r&#xa;tO5XjsSPy09F1fYrYppNce5pNzGedIroeFLxjm2Xp2Yv4lR9wXGB7Llwi3G9i8uP1sU9Gnk53w&#xa;XeNT/tUNFMuwA7/uN8kelfxK/QhJI3cmErnXTdfHNrbsT/zRa1zBKWInRXO0YdOcNV5JasT25F&#xa;QhHUlE5MVKnAg6fohDzxyilRIJVgr6LxKn+t1b+V75jHEqyl9so0c8opGQp7cmDpGNbVM/Nj6S&#xa;Z2r2XpCYOsaKQ50SAuBBaCA4gnyEEPh7/m5dgoIu1e4g7GtY1kwxku8uIDPDOeHEWnD8DRGLsa&#xa;Da7a1Kv+1oARoRL+XyoJX+eDjaXUPESbpqDORI+q0XaDJP0ng8ojXkRI/I2u9IWA7MBh4cn87C&#xa;GbficZ4Ioq9MZekEek04rjAqtl2AF/LmhIYsNcEvuRLH2SnCOcnmFikOSbURrcL+7v7bRC+NA3&#xa;MESQfbx6j2siUhmYO4cYEqmQFXxIy4/vK/+quoor+a38ANz1hRvWGPGxnIvxd8uHHxx/cOG/62&#xa;KLWDZvcuhCWeLazbL0Gq4GCdXul7DYuJ9hzpasKbnSOWS4K0g6vwUZBJX8nTR8YZP43KY3OI+h&#xa;XhN8+FOnPn9f8qgwn+bRnM/f+N5/9B8Wd1dAmMNwpIjt4kg8spiwoL1GswUuQKsYK+WQmyYvIw&#xa;sZXCETOiMkPONRufW0NCNe1nu7MTwsMqfhXtn05PDyXZM51DM3fjZnBCH5EPublZ61idL17POd&#xa;1/DAm+v93B+Nu9/JzMGrwyclzc5fMdprJKNjuUWts269qdbTSJ0GGeW6WOLuPL2482GtrVRcMW&#xa;mQm2xMaq6r2JEEBVSFQnm2Wqx90X1WGv5StKjHA0T9GcpreNH4h1ysqI6KvDjNQCjTHEuSchAh&#xa;sFML5DEvak03wFVGzNeu7lKkG7OZ3yqVe8xhUos7xo9HzWptK2lVY9YO0daBlyTbowL2bkMowE&#xa;RNOLydSwscepR/TlC9gxiSpXPl5f8YkRl3mYMj7GswCvmVINDMyBx0gWrWa/mDPdAk5ZdmIc0o&#xa;4GYXtak+HsyBN9BCo02zfYMLfraPG4D5CWuEmS7pS7+QTsJVVseykE+TwCc2zFPpOSsswb1xHq&#xa;2cTVfET8ZdKhKv6db7l/s8EJB7WV8hfsLwlRDpMotApKVx5k3Ux9B2pYmqioMKU3stY6kGS44c&#xa;awk8NNc1eSDZyhllMZb0ZoMSFqr9XhsBCbi6fPcGr63g46N+G20XCPwyVqmEUaoavMoZGGTBG/&#xa;TtLlU7X12r1BLFdqB+BLrLL73urdo5REtumhhqqUFBFDh5FWv1B9RRf4LT8FFD9aNpY/x8NUrA&#xa;iAvdAxfDxz2eSOZWhOWKuHO12l/zp4O4zoG1sZKDUhDqNX1CETXuKTTKLscKIHHjxj7mYxv152&#xa;ZVKJAnwQyRm6CgBjdYpBE4C1Wyi1ulFfwRW0qmRDbgg7VaO2U0KHWhSNLB7PpBOzic1JXxpemx&#xa;aFmnm1w/bXeeezyF2oqkyrEVqpoXN6OEEDpR0oNTwPT17Wje2Maeg+y6LXT+ub2VPGglMjD9tr&#xa;DdhKGi4NrmFxVM31YWonGxocdtUS/7iKjLljOoBZzOIkGQkVjVEspktXrl0mHL/isYzdVLoRF0&#xa;1fOnR0pJ0/kCavBfutjEVOu7BQYfH6bC9CGl7ocRYtwnckdAH4YSc9W+5Y09dTdCjFYwrmqWHa&#xa;1N15opqzXXZ7RFduxa6zGWtdbE+ln3wrIkrqcJvdI4EgYa4t+fIOokry0UeHGwXrCV+wclsXiP&#xa;UVq+BKoCc5FIV+C0Kwcqc5KrKZ7LMvlYCxaI4Shcn9sX5n7JUUv+FD4huCCmST1arI8kWpnEsg&#xa;HDwpAWXQSwxVIYWJuQabi+mhURkWdFLgDb6kJY+gYjreTiErKaXrU5PJTM+RPBTSSTcrswhUGm&#xa;st4K1ekUXVV3TE2UWpUu/rdk7jFGm2jv+T/9pzX0fuG0WgRW1nuCzPlteyQoTUmfotu1RVQuxT&#xa;o2awl3VezR2Qb2lKG6s00sy3TzmnlZXYvgojvlfdWZLnps5j+JK9gb+4oBFzpUak3ZHNC4e+nk&#xa;Kc13K3RuKDUjQ/2nfIWbV67hy/XEHj7gGHZzwSc1ZWC0HiTx4i6wYSWOxtrYFtJSenEWM53mw4&#xa;Wf2sU/qXswCvi+0WnMUxvCda2jF8VsnFOuWHGV83e0XaoNdQYnDtbkUfkSCeCMKfiLyRVIYf6C&#xa;fMmYOxTumw9XoNYXjz4gZDw9VHuvSIeAO+DCidDrTm1sRYAlb7pKqCeuv88z0JhoRv96V/f2wZ&#xa;phQMY9E7Yr267CH6ZOHkqVbjJZ1cyZYEgEvhZLXa4+o3xz7sXuF19TsnKEuw+rYuJHlCE7GXYu&#xa;Zxaa2I5Jhtof6pWX29FsdIiYts4wpLn+2W2I8sm2Mp4GiSqKmjd+wpmYmMQnK7YgyI8RHP4dNn&#xa;3aDprWKhZCwVY3Jrj5Z5KVbOSCA4IBnfYzihqd60nZulDXJZPeyHl+TfbbLO4CiFHzgqX6NdZ+&#xa;V3+vVNmByQuzR92JhCT/JMvG6QKlG5v9EHtr8J4JBNh+H4yKBnlFwUvjm3ur7O+gl1EO3IHHei&#xa;D0tTsPxoCv97G5Ss8/CPyb+OjRjEf+e0Bf/p2BAycnZxMjR2+XNG/LnpE7KxUTF0+uuPiL29k4&#xa;mlnaHLv8xOzfqPyz5Ym0UGFJGC3IaPUeSM9bRfoHLmUJ7jcZaX86fmU5p/dwzurY+eg/6+7csb&#xa;/wxC9nXt39jlym7LKNT4ePpA7H4x4uk5zj3B/XhzEbQBTpc3Vq2yvvlD/56LU4Ze8JKO12PXIc&#xa;M8A58gUafJzrOeWuaoAd8QatV+ufLWm0B/8ic2BW924gpvoXV4jGaMHhuAeVSmyni5doyzPNv+&#xa;rqA9GzaT3m59L9DbpJx/EtsMG+H1KYVEE5T2LvrTYR/7Fkf86Ar7C2imxedXS4OtWDVhY7Yzrw&#xa;aHAzy0CM8JjNrmounC9WuERgogxMqGyWeNnF8C3pmobfQ7e4aJYcXoz2zmqHKubjg75tG9GC8+&#xa;rwR77EEDJQm0ImB8F0jEIqXsvU082Lyd2hv8niawG43DfBDPdcShtMRHTEJ4Ldl0xBXI0Ps9Rg&#xa;pfZNhqyfbH+pLk1heQYQit5FYQcS4Qm6F/z9677OSOJ4apCWsswuJCBbJLp0nlygworq0ETTPP&#xa;0BMbqshlpG3n5BwNg1v7ZQLNNuV5qTQxo+N8K3j+wwRq1t4OxgmvLgGp3hCh6ue0Ym5wykCTq7&#xa;gYZEdDI0jnxAJJoh+NSRqgPcXBz+IRgMgW9C6Cb9amu7ksTuG1Pxweh+esF+zpCi+Zp0Kuj4oc&#xa;Htl3BhLo1x/mAKqnOCLdxBSZFXdlYkkob623jXrsjFKdoXU8aBq5Ql8L0he6x3MA2oYSTLLKef&#xa;jZKEGUubJPrhc4dkqSEUNx17udrWxKrJfUAjOOCOSgkARx2bG7TLvqVnQHckUrbV2jFGirEea5&#xa;uFCmj8bcBLHLP21Xp664z3GwB3qp+vQMBzuOPCYvoYKuWLotmldH8eFY3vdv+n/iEBwWbxuaeI&#xa;DN/UzRUESOBbqoZhSLYV+3YMcMuKH3tCRAsbMVI6x+Xv654JG7Q8tHTpIM14rDNt24CtrjVhvZ&#xa;c21gklXB7yK8bdRaPdmQFYyRnnfwCWWQFpYUI6Uu5jDupfJ2Hju+M42OILoOAS/lFnDULpaS6E&#xa;Dfyv1sXXuw9BKTlz9TxmgueXtqHACfTOYVSxQ3rwoVcKsguUN/XGTYWrQkc8LpotWNMns7Dd/3&#xa;iOXxnOIQ80Xm5PHSC1KZKw+Ee7bexdZRstZWLzOZvZxrXyh0jnabNZZJi4RvQMDlD2fyMWJIvQ&#xa;hCB8ZNiibgQph3eFnl0JZmmsAjoy96MuPa8K9vHOKXeL2As62ENXClvFia6dcf9p5xwvLTfu/S&#xa;hFs0lrSEziH85WZogqSqiwMda/qOnVovEOjHboSx2Wp+Pa/bBFZxjxQVom9XnUwlOelmxTtSG3&#xa;o8ojBk91c2nL2Zvcj1xy5lL/lUS2oeZcaACiYrRI4vrPUjUxd8Zt0XmKMvf0afIjohomBAgoGV&#xa;/tPo09H/BiCKfwKQsL2hk8kf8IiLyf/LjOb/GLnEwgQgQ5yEn5e2Dtb5TqpnbVlGJpyBQ4Umy6&#xa;i3TcYNB9GTWZ4GZ72F7EDvF3ZRjKnJ93Cs9UaRMvLFDBTGpKY3brvx48vd2x2hH/47tAEqR4+L&#xa;ZeTvdUgtehigmeFZ3lVtTb0yTvqtO7wf3/2Zo1zxiO/uXEeqeb2ov1KFsY7CFeVxikXaA/nVkR&#xa;sys8/S2nT8ftqeYxPY/6JnYJatQFi4lTVMsY3l1Q2d8aJlMpHMih7/ygfxuQul59P3fqbsMdXG&#xa;aH7ST3fNNWMZ67kgQwtAEGLJRZluRaa8QVBTS88ZhX5+GHCBla9OsxawQL9i2/W1SpSib+UjN+&#xa;Wml37KaZJXFl95Mvaic7frQr3chUDP66mnBirjVLETO2gJgXtwji1qJyICstIKW8wJllmWhayd&#xa;fsa0WfOx81gJOs91Kg8n0fYJNmL8qwBhqGEzgy60+nAduTTIlHlU9GdUMWyPqEkpvB1LL1wCCM&#xa;CGab8p9+EifeNaaLS/RKKLiVA1umOtcu4ktfGHuzbjSsWXzrRl0G2qObYV7FZLtrEL8Adv9GT9&#xa;fS/SgnpLE7kWMmKbqSOnMqpR0QL/a5vqBPPZ+LYf0O7c3TPYi9t9/dOb0twt169dvH1VDAdabr&#xa;AsX6bPk9X+uJbDN7bH6gqQ2dBXduloRZRjW7qRtVrM+Au4vTCAWIZ5DSzqiKhXw3ScfaS5n3sq&#xa;8+HFVkqRa338mrjHJ6lSVj0q1UbftBfkW1PfVtxWupdeQx9+z4BWiRCCBI581Z0zx33N26oLM4&#xa;zH9mnlfCKRGq+zwOD77kfCmXO12HlImGpJtRMXEfqQaLhlulOy7DJaqb563zyrYQXUPSaGKgOQ&#xa;xvcVMX0kaePDaQANaKjXgCbY8h000WqHv3YcSipecie9kvUYEK2NZMuwuF8BC7bgskuLtzQ3m5&#xa;FVe7A04gIZgSqaGf6wgBYbUUoJJ9DW0wgmpo9Ih93jMg5OcRnTJFlMCmwrHnuupQZ7D3M0qI9z&#xa;Txi902jZp6JpZVP+gaUFNbHcrJWCn26p8astmU3pGKyrirP53CGoVWupcP8GfZdMnmHFaR617I&#xa;NOopXqLZ4UdUkWTbZsxKdTNEojNjk4tu2SVLyST9JJSfmv3vnM4ib4RI9cFBZ7LtoSeCkWhBNY&#xa;+759tDfuaAnhPq9YsnIU2S+HsdUcFZ7X8LW+mAu7Onkz1s3yLJ5eWfLM72Q7fUdJGuheftLu3H&#xa;Csj1ipPL2yOQ5R7v7G7YwpYgau8tLHoQ8W5/63RofBsEK+pru0Py5kBZ2gCZ/jgMnf42TF064u&#xa;fhpg732P1UZYFzmpmHSfSlG4P2Otl+kI4OPtpTSvgBnXLkLT6JdONY4rJ+9feiGmOVpEhtyBxY&#xa;URNKxTesCXevQKPpigETSucwir+nBPUdFbOSXIXPg92egB59ekPs0ohWPwfMA35w8r9aW3ODd1&#xa;LVH476p9sHTvCxin0wJifq8f12oHH5+9t3xxWzr/tP3+ynLQMviLWRxw/45ZNP8nZjk4Wdq5/P&#xa;n/326W/uLWn9Ue8455oqpGnNQhiUrSzNGMlnOfGeilRIxnIoUsZfC79/rq4jhjcEwXSIeyhwgN&#xa;QITd3v5pX48gqkZvOZkB5uRziA3LVyNWrpUb3Ae8zy8b5n7gGl3IgIL+StiesU+wbZUek9QN3g&#xa;GUeQ/rbl8w7yAce8CMUy+gpRGRbL6NVK5JskFTYCerTDbozqG2tRMul6hOpsQ1MZ4+C0f4S+Sy&#xa;3nL1ObzVwHcMKtdSk6LefhA6aOiN27L5+AHUTfsJUZY1lVFuqEbHMfsaXAFFYNmXZtWir9tSA9&#xa;CnhH016IwrgNxTuKoIUKVEb1q8GoqtXhJZwYTOWyuExUWEvkPv2S2l7LCINqzhS3dUUVqqZQr1&#xa;RPfMNB2UaNMbdOgDFt0kejVWPM1+K8yHz6fF3hdnZcq0O6keYgQ/LYa+/zIcD86UJ6NikLmaou&#xa;xhH9gcZ9ycPpfd5Ttx4c5viWy3LLfEHQbT3KObfkIOOrItyGWC94jdOkhI4+f+7N29jjJVecy3&#xa;WbsTWb1L1bBwkXWqTkuCspa0wG1HcCsK8qxjOf5e9tfB+P1Rvz+UQuBTCVN4bDFrOHiQMoE9mP&#xa;GviW6SYefZJniR8TxwHYdpkCKrSXNe4GtKxqf5i+3AcLzKabWkVhKrvtV8Es9RbhBU7vWQK26p&#xa;hVKfeh2uhllqLlPJzcv7HZFjnQPEt9QH7G8sdJ2W+tp2m79yn4TI6vu8Qu8tfkILmKdOZQoG1C&#xa;RLVdjMfrTbQkDnFGrSxCgsuVsB7DliTf5MAcxHwif86tAloK5leRPX1pBY68Vni/8pUvzxfLtV&#xa;bTVvQWyCwpBapCBTqE5WmFXHpy4noCo8zNfGtktoppdz8XtKjtDkL1/alGdtvsuHRkaOX0IT33&#xa;akrqo7O+kDVWovyYBLyVheZBopSpY41FJ1acTiLd647SnLWnJSu5EIGPkMq0npG/V8cAw0DQVP&#xa;AbTnnsutGn41/eE8vSyIdMgfonWmZtEhIzq/h7GKPiqTFS1Ej0vcuiOgTyKHKVbQv4Y3+ebR9h&#xa;jzMPZtS2X2rHzy8YZByJ9punEZmcqaJ0Gsk37nfpJXtZ74DIX0KyPY3tj6rA5jgC9lEWAsn/Nx&#xa;YDaObvpIsoCL5VF1CbUSH+lKw/K8914KxzMcfqSn/xeGBH9fjQZ/t7lziz7cJLMast9AuvIzLh&#xa;Q9f7+6II+fQYVb8LPUw8cs0aslPyb7Tfm4LfB0y3ajKKRBwp0twyjuWDkeuXiKhswu95rZXkDj&#xa;dimizzctnZzOSI93wd84KN9oCm2CAAP7CfPvcMD+f8LB/+TyJEl1SQlXAoOfHg56F3zIBqlxx+&#xa;ZDvQEtmfy2v9wHeGzybgMiEorIUiC7xehkxWhU8TXlrsi1PIfsHnFVyTVni1ILP+vgIhXDXkGb&#xa;64LzBb/77ek3wfcPTKE4IjWzKNlNe/CKOiqrFeZW2ZuVcxpNIeRWyXntybQCg5kddrgGgJ7nSi&#xa;UJhQiklOc+pWJmFPNUtXPfKSXXqU36KmzNFvqjldBcD33JLSf92RUCfoD6QpL5c2O86RFC0xE8&#xa;j31IDABdN4B1coBpWbFvckN8fFJbnfycC+BemzTwEhb6sOBGiDDyrY1qSBcjjYn55+TMrCZ2pc&#xa;o4p5HIKZy6pMwocz5r9sSXFRru1ZthJwXmXVr8DNI7vAhZRKpG26GN4jmqbqvwgDOUy7bG+ldP&#xa;0GOl/ztMqU6SYWnbcBmFuCN5OOQ6U5xwKyGzjqnkA+KKcWrJi8L0Z6Eg9rncqWTyX2LH64i6si&#xa;MOJYWswYJACl7/MyYMHN+BQMT2EZQNLAxLshXHVKAs2RUBRUn+Aqr7jNNZYedDL9ayUc54hkp4&#xa;AF2QZUkPhXvfdCz9ucvaGj66J0b8oGH61jXCa65SzOb0T3qSn6juWka2sYZ0bc4EPiaihxsDsm&#xa;hiKEPGHHOLEkmVoe3tvv1gG3vTK8rnW5F7CFwv8vHQT3D0TqBMDojCSvhvMAAT7CK7rAsL7YLw&#xa;Vytu6P3u1bibS5kKpDXZ1R4ftL8qhx7/wusWk5AYkfPM9d4PH103pCkYjCXrnMKJV870gM0KpL&#xa;xBOHZ7HadQ9S3nWHOiQH2KmsCq7p+2xRRqzGWYyNjxrUOYBUhacqBVmbOavTgelNZuUGmVg6Z7&#xa;cAqcXEkZp569hUGQAKK8ga0RAnLCYu9CfQF5YCWWrOZqidPCflvM4jSMSKmRzNV312baVUmWH6&#xa;i17VbeHHAf81XSkaWnbaDDcOa7aOzFG8000SIDP0CVKMso2TfT34voqBwXWrUkazTiBwDT5T8E&#xa;o1y5yPqJ+rsoxUaff2OKQn1COCZ/peo/XC3UPwnLCz2P8zF8ou63H6foR39cJmzmyF58C9kFbE&#xa;ymFRUTvZ94oMPqcV5+PLo9sfXqC0wZx6KkduSP0COJni+Af9xwPINULmr2jECOlcLoyYMFMAHJ&#xa;gAhyK1JKzfhkhg+w6PkrSHSam1NYfbx2Imwinrsd6H1vXJMZtu+AteVKzgl5hwPVi/XI9SNIgT&#xa;4blXEjlXGVN8hvyH2+FNhFD9sP6nTq8H6kBQVFxXylL6C97v+Hs7cKqqtbt7WT4DBxmzgTd3d3&#xa;d3d3d5dgE3d3d3d3C+7uluASIBAIcL5v7b1O7bXPX2uf/1T1i1E1bsbVM1rrvb2tw60O3e4tSu&#xa;uyPuMPQ2ssxui8M0Wlx1VJ5xT54C/jj3u6ISmnBXQ9nrr1yboF1l9J8UQQBV/jfHz5GyQCRwDu&#xa;73+BROXfeqH//yBh/295a1jtdQbysMWsKCtZeO+gOrVq2Fb4RsaFeRURYRt2Bw7OiaGm7I2dgj&#xa;+fLf+AAiSrvz2EGObecXLH/bhmsLZLU/jjcrPja3DtOvv39Mm79x3MV/NL5oowCs8d+XBX95XV&#xa;HJ2uQ5eZhewL6DVvcU779qvb7LOlJXq4GOOeg/Vfg4U2Nhqi9JBocBAA17YlJffusWydLXVR+n&#xa;J77zEBzRvXaN6scVuCaGEw7UWbrRfYHpM+npf+L5dEymTWsYvNBScKQE8kAR8guYDFZhisyiYa&#xa;MqivbGB0vn4ou6df7LrcyLc9yQQFo7pswgt3A9JldybW992vnWR/TD3kmAZq1vjPJch1533H8R&#xa;lc1mu3WrEH61GzqPY4LLIea12dJpFWqoCQbaGgf6Vs73LQDXcP35bUU81+9Rxz94g2buu/tKPu&#xa;COU0G0lUYYo6ZjLxUh0M23/AEt22xU0pCFv8KAGK+/WZtEfCikejSTYAx3w+M+VUR2AHK4IzYd&#xa;dRycmqxMAMBzzDQiHJ5dGZ3xbnSEhNobWjaszbdkDHMBXRA395p6kQfxUbYJpPQwVW7Wbh3E0X&#xa;BWGXMKBqs+2HT9yqyXMhXocxwbqvnv6RwVId/3xN1sSO20Tb02btNUkK/3gD7pQljgNhm1eoD/&#xa;OWLTFPkZ1Xzhc/bAQWtW18+X3+Q+2Cgn0siTGqWWQq/jqpOTG1okjE6GepY8tIkEVClkinXuAG&#xa;ZXJ5THEBfbsD7ysjzBdM84wWzj8BqPxpaZEi+YsF0kvuG46E8HL32cEg8cezOmNJsYCkepHkW5&#xa;xhlE642PEP1e0BuUH+7XRnbOSIuno8Y/MdZp3d88LxsDEZeVtlZXK/WSaSrCYEU4Gk2IUKzJQG&#xa;iiMEPjUmsPOCwAUgM4AyNDSWeEv//uRITjFh410yLlieL1F5TGO/A0J9MJ0KdhAphM4GnSkZlB&#xa;1ZoEEWiVNmUE91YEuSf2ZLW7GfGeN4S8+uH1QQLW10kdVZyg3WYP9dpgWUkAWPErU9VW/DOarg&#xa;CU+0AdYKojGnmqBi/WjiUIofetlrMc9pxKMjTmG+SfP5rKEVR+BSDIgXpl21Fd/7gucV6vLaHI&#xa;g9GoWgopfwpYjzYiKVYecDBvfMlZU3A0fE5ZSwFz6Sx76b61Q/rIx82vm05vK7c8/ZPMCaiT2j&#xa;+g94Ynnfg6YvRYp8ZE2NpvGtWdDaTWdvnLhW845jF/UoXEHTOdbskE2+PCMQjQr6T/IAaF5ZM6&#xa;zeIVnMSv5HwOgxs4v3ZrlVYBDy58AN1KRJ5rR4KXowbi3cRyQO0VDpQA+EMW67P+wIr5mUxiN7&#xa;piMzhoDLMpwQ3LWoLeFL39GUYGRL/vmWwdl6uTW2TyQ+79hk9WqkwYUZfjVVKLUOuS3qkd01cL&#xa;RxXRHyCDI+LmDwSOVdMSZqC93uJiXvyPkdqAjx5K5T6T33EesMd0I2rOmF9SILXhhRLCD4zR1d&#xa;LHwB7GWR65YzR7vJLe49kw13JgTn+8N190EXL44zhf/+j5Kk57x+a9e/3NLAv3VLtP+3VPvnWe&#xa;SFJp44xoc8rHYWAzliGO6Lki68t9DaalFri1qEvxiEeMGyhr0eR7LZVBOeJ2fLc4DGm+ifuPqh&#xa;wh/PK65/svkIby4ZQGH2isvImZm5nU+zN7uv3Z4/f+zp9kMAx58A5T/Zr7kQOH5MppRungwmDa&#xa;vrVs+c6x2RzzTkgGfmZIwAvepbTRprGKLs1TK7gonzg0wmG+rizZM9ZRz45AlNeGXV9U4nuJyd&#xa;tV0928unZsCMVvydFfpmo67tuq2csaU+ElFDKkhwnr4S+aXp+h7JFFMKw66qpjrRYWypr57rOK&#xa;tvu9ll+PS89lMrErYuf/YRpoOr6tER4PX8s0I4iPn07wi3t6h7TrB2I7BpVGnOe7RAV0rWejKJ&#xa;vlKNBGHJG9ojHOShzOnuGXxgAXuckOsUqrgxS8cCaDfnbKYqRg4/ijjkxoGZb0ZGBXyTeq4uBi&#xa;i3lyU/DY+2RYgEEFJpI8pYDpY4ZZL0TPSuqezKDNV9SC9Q6XqvMAFn28N5pk0MrejIcoqKmXS8&#xa;8pDHmUPZRNO7SlK9S3UuRNKErafWBq9WuOFIATvq1wwtz25UBJM9S0piLYYmGc+CmU8H+bGmGI&#xa;yq1mpuzXpMU38Gi2zYOpbCGpGqnJhiwMxu7qUObFVdlTV5mlK2M9VDUTRF7nlS/WbadUebNrkH&#xa;xrQSO3qtaZ0sMztZ6n11WeYhvCHiUzoOy7pBc91tDhrj+WUdDRo/QIdh0wZQg5HeOycYbQjA+C&#xa;N2vcvIA7S7UWwjIHK0sVQ+/M2X9DufpCI26dqvSZxnHqD+6GBff28Nzc4YWumo3yuBMwXMcGvi&#xa;Aq9HVPvyNDx1NmKjJkk2CfPu66v+LlljIr8/59oY1OLveKSomPNgThlsWLepIRMcJ8V4C7eD6N&#xa;wOSozEQgtTHJpTPkzJo5h6ksVgHFS1UcEF7FMmnUvyvjBnvru2FWIIK7YpAOqqzNVL9vhv+SPX&#xa;2WQpf/C+nOxSws9qJheaUMchFzDneK+ystdv+Ozk6rh2JmTQVbvTwMFB9uiynWPFdM5zUuC3xt&#xa;DYOKsVTHFFlFhVTgHOPAwR4WgD9nV2c2TP+BUsNgPBZloV48aHontO6FUAGM/Rz+51Hd9iDdcA&#xa;mW5SxuC2T+CjOawUoeNYnLyWmHgnwTh2PznE8g0p3VXTkXu+TrJd5GjY/orNri6zWyhmpXHac4&#xa;p86xo6Z9516ZnflXrLBLkcFPJLaA8/11fl5ZbSyld8iGmx5Wgw5pwVxvk15Zxp1bvi00WYHNnt&#xa;Yg1XwtxMbLpBL+NIs0okxWpnzGLoqHd2X9goe7gZWOTvkU9HQTTcLzdkNNljc2fVEmGgBT+SbL&#xa;wNIZsHEcsqVt0XREmV3HaVBYRGNTk/AtlRh7fjxxtGK75wBVzDEWc+xiyeWoMConsNylPsO40v&#xa;4uHtaFyQXclAgIO/lKeEdR7QO6aQtxTRzCKpc9s0ZnfWguhA7pcm/sZAJ73cZ90OaD6JQm8XOz&#xa;cIR3tjaC1sREjDRSBpd1EtrJv2ngv6DqSD12lEVQYiE7MOXA7AEb0sItw6TiHU4gOpzM7hAdXB&#xa;4SAuENu2cW+v5e/VPv6u+bmN2/FGn2pQXzSPb56cr5TWo2bqPcDoTfrtSeQxvrU8P+LQfxvxUF&#xa;DcQywNTF12YnYsydIS6XshOEz1/V0ofn0n1L/7GSFmm5TN795wSYrgaMDwNNWIAqjhLNiQDnsr&#xa;xnk30YWdStVX6Py1CPXuFr9EEHqgnA3b6j3muyN/JVdXJCJJPFofOl9JL9yLD1S9zz3eIB/BdH&#xa;TH4z+GnOt9POz4oT59YgT8Oypj/p9U/k/+akUa4lviBECn7RhvhJq7JFEwN5ZoexTabn5HSVIr&#xa;kJfZIWdG0UDDDDf/Kp2W6e5RMFgdvkn6uFqxYsOuY1vbOE+6X1arad+6+lr19FH4pp5/k228MY&#xa;CmnHzbe69/c9cz/pSUbkArAFNAEKiptMdugQHvH2dMxmu/g4MkrIzCX6p4PpHjEEsRD8hlaXKA&#xa;XYHniONp4+c+qSVK27vvZofnIGhFKLPd1Gg/wVXYZeYyuNhRUmIl86KdV4nmblfVUR1c0WfdSl&#xa;1CCHOwHdFA+YuNViy2yHimL2KgMwSPmET8eiWJJre0J9GQkOOEa5WCHCUlXoeOrm2NBpB6nYtP&#xa;QIhn8Kv8lBsyTUUc+5Mkirgo8LMV/LLGR3xUK7yHuprpkMuMM+lGtvt0zxb3Ce6h2HhDXvkEqE&#xa;YTZZYHfI1L3bxPs47K27l8buFoPcTuKu1cwx8cawUwheAQLyhqw1JfrzGSX6o4+CXjtohgwT6W&#xa;lc5MF1zrpZ/h2S7egPsYPHWBCbnNnLyGqxLtJ4+/OkpzuqqoBQ+uNrFkHy6REbYlB1KM33dGKi&#xa;/JKFzLeugOqy7ekPqswoIUOAEbbbpOBPz1+9cuoDJ263yO0FnTX7f0Xew5rPDy1FsC/ImOjLyr&#xa;Fzxl7Jt926N9lT3KB16e94sI+j4Ma7Zd0IPWwrZAOD1dIrEk5n0CpQbONshMc36NPoxBBr1y1K&#xa;ILHE6WIeSd7WGjOcUOArc/tZgN+hMyUNJmk0KnBbK/4NKFBvswmQ0lzjxi8X9FD8wr4tEg2cSg&#xa;M5eKItDwsKlFn83Ck3SlH3gld7iyagN4PQxGjWM3WgxHCRvbNUURd6cv+YaJsCDIZTvwTbfz2C&#xa;Dl4FWv6OEV6kbgNPXuTI1wEH3ZIRfK97NkUA3hnMkrSUT3EX7nSO/DvJN+10wLVBGFdTTFYriM&#xa;isHBJD8ioDNJ9nEY4mIpMvK/ZEl4Ez2+Uzg1BphEiPPaxv9wH5eC6xlzq26qp1n3Jgk2BhZNKy&#xa;nNdFjDBcZHXuzQIuWp4iIsW3fNt/JHq8dEPwYgthpdaYxTutRlzslXeq2RTKdRPKaKY7KFDqLA&#xa;8UoIjE8uJk5VZiwrUQ5RG+FYnqZTI6KCNJh/u0ZNxfnjResn/CZpdravKfIUjWO25oKS+MjF1Y&#xa;CDDlJts658LhiblBaspa1vGI9BHWamU966Rq0fZTfejn7VoqAmD351Ds8I1BJWtxUZldR+k5Cz&#xa;fQa+jSX03/VPqP0m5jo0Yant3mA+e44/Qh8yz1drsFeOYkP0sUCycPUwHmL2CLu1hoLR1PCiwV&#xa;2/5g/PhzvCF5BVAvDzlh1+hrpKzUhrPv2ppjWbbjivFA+D3T+B4HLGP2amPzife7muvPStielG&#xa;y8Rh41fPzFrYLSbU+AdRdj3sqOYwV3w9tRZ5wbeMayAR71FMVL3ttp9Siq/ixmbP3ifmlyFv6K&#xa;6tM3Z+edkarfVczsMXlL7WQ7o0G3/eGASvnLMx2NvXYPb0sBc/SaYQSjHHezJ6FH5FbaLECi34&#xa;9Au6vDFx1LBm1O9muad0fcXEbYsc9KGy8CT3VT7yu0HraPbZmrtP4rd0eQhHOH5rpnoq7ME30Y&#xa;SnOH+EBr97265HaIWhbuEoEv7l7IxdKbryq9McphjGFl239W8qOc2cGDcoFTLA5DbjXVEoYbck&#xa;7NTAE1jHKHqI8tPGoaLOex4iqJlG+FrZUQrpwVVaIsCBZU0gtzdPsOH+CVNAnKFP4mF4iQ6Vvw&#xa;R2OsqmJvOMlgwtFIOtGPbbqCS1uY7E3MhzwsHDmSi3qNurh8bc40Uc9ff3Q5q25o0la/6bObx4&#xa;7yu3fm2mznlj7bZTT3Nc8S56HlkSi4ia81bKnBrnbxhPRbn3iGWWfp+3cJI/c3AIx6kXRUIXGa&#xa;PWlDzdJWqJ+6RbRW8IrdzjZwfEBe5feuyi+KvzCESzKz9qQ0JXtbr3QnxmXo4AUYETgGrMYid8&#xa;NFjfgeKRz/tL60nfRhhNfLvE5eocJqYjdnHqnfToM9eUpD5Re3wOPKYTWdivgeM1ExznHNX8ns&#xa;MHg/+xl3J37GidOPnQImOuw3onhsr5yVzGWiXinFY9WoCEHEN3zt/pOzVFn4dr+gqOb8Oa5l3A&#xa;biXoKkpQXFoc/9O3D3khW1R9oQ2bgghRIdQdk30NXSEHDhd+cXdciCXysGC0RHWVyA61uuoSMe&#xa;xFFbi7lRCdShPsuNtqnYehP+qrqpewnpCriOnUY86NGT7UFtmeHWRlhWRlg9jF+1aR3u1E5O53&#xa;YtEeNRFHshscKY21tP+5diID4mub0u1wqjKUF+lxSsvZk+d3dUa2oDRig+QeB/CbzuRk1chzh0&#xa;8huLaAEWArXQUhmaVNGz4pWz8pW5bPzuWUS7i1uf2uS18I3ZTzdgUleEBcOaDwgnHQqSushQ7M&#xa;poh4DwzwdIINzBL/58JkSij7vLaENZZG82cUUx9u4GEHXNBaA3fo16cb9VtuhD/olYEoCZrHAQ&#xa;lHOhJbPO/68cC9RIf3oVfxAIQBh4QFNtUvdmPxnTR8cU8yA8FegJvk69VblN05xsSz9iOkPc6n&#xa;29BPb18bSiKQ50WCvTid4J7ygDmjG2okyR0R8VZE2cPlEa5T5Dl4EePozc96iTZCDgxeS7JxMx&#xa;3wuqeVtTENV+Z5/Pu0m1JdeIZF8LxW06J9lv18N9pRyNICvmj3OiXVmbNyi7+5e+kx+kLv1cpK&#xa;3bGQse8QbZZ8MjmKAkKpbVlPLkm8EHCaytUEPY6UbVTI+4lS9+0Pfzu6yJt9MyUv4IFrjRiJJS&#xa;9gOPgSNmei86WRq0h3smpFQlGHjfg9vXCkXkZmZ8LlPkXjkWn5Gf97Wb4Qc6oX6qOJO9IenhR/&#xa;JAno/aBFTWkEMKjzRrMa+qxEezhKgT3ISM0MyaHUXw1jIGTEg05kRG6KiU6L8FRp4AkrOJbv/z&#xa;WP8g010CCBMiA43Q+cVW/ElEccj4NjeBj3bIj2odCCJTg61SesTE04JN+fBX6a+lUPlz9eK6wh&#xa;guX6ec8tMnPg3Nv7gbPmCBPSMVPbpQ03MLFSeSYK+U9azVzye9zDl7Mb6Q8af9ShPak5l3foWR&#xa;OrtIdYq+QHiXyPlwes/F2dot3f6O/bD5UnquPl7b8fdgR6p8qJfp798H+B3XxH/Ft2kfIc5bH9&#xa;ZYQFMf6r7FpV+1fZJfAvskvB0c3475iumouxg6udsZujC5mh238+m//z5X+PW2n8c68Pzg4btr&#xa;BUosAED8Q4H6EhblWNYo2HqBQUXLraQcZpbNzMubNjBhbcjxEcuanAxBH4+57q5COv62s0E/SM&#xa;GKJffTlPrtfcij/XBC0DP2mJ5RoLdM/Z+04d8jVT4M8shHWaW5fZW8U1HEKNC967WhRawXY73H&#xa;UyAYelRtGKnFOY2ZqTJnxymHyAFqHqExjikTe27rxHstruSwvVfPcZ2dsk2aVlEoyiNTtv+orx&#xa;xpdRXMCxehlQTAD4gMNdhi9RcB43C/vlZfczI0/0VYoZr/QoewXA32JpecbPFofDK1N3m+6nOP&#xa;g9i7xqKDlqxL5SaRo3y/7HdJOR1AlvWmQ6oouYTGYZ3QY8NryZMfvUgAeOyN8dM4QsfBc08bIk&#xa;PaE52xYZ13UCWzQO+2XBxLsqzBGFAZC3bVERnriWsDyvXTMNCR/9sRKVyFhiOwcasyXwKn6AhV&#xa;9SwDrMEtobGSiayBoLIECVAO3stgbAyYNFGvME9KHJkTNQdLMLtybDkANJoyZo5Xm51w69JlwX&#xa;giCG7colHdRsJXqLsjPH/Cgs0+JcKMi1Vkv6u5c5fUW4OFZKxm5Fbf90baCE8zVP5vor+xRlko&#xa;ds3fWghD/qXFzY8aQ5aGAxqm7zVN0hHXaadQfXHJRdO03e+09Tf9sPKUQRKHnx+UIjIMIn4x0w&#xa;PS97xsjtn5Euxi5Tycg0rR8GmS0uW889JYmUjiZLXiuhDnskEKKDsZJlcZeq6T5z2oXnqc43Yg&#xa;lPuO+a9YLw3oQCvTbNlGYdh5ul/OPCHLww4mA71odi/gKlgWF2FwEq4N1tNvg0/vx7voNeF0vj&#xa;8ct8RbQaWoCPwCPNNXHdPPExHO3RyIYb6KuBsKtktlG8T1XrTRYdC6Y36yBTHtptAo6h97Eg4l&#xa;ll5fpAWXB94ygTMXPRqHbXEZWbR70JHm9T0l4FUEJNgXVQoUh3AP5Itx6L3umJeAHLvskXUu2O&#xa;AB7e4NB3zolVDdNXKz2GJIQk+nIGQpRlobCQNw5puLYaarhCaQqvrgWewBzqlYvYbUrlFC1eTJ&#xa;m1jV127RegjxwbXNjj8LPVxz1eV4C87eDxrc3hQkyLZS5Q9NQeuoI9KrxaZyZd3ZWCPTWbmPLX&#xa;fBT158Sx5eholR0M9+pvRGcqPE1+SEDCrTF8fq0ECaZQIzLiRJwC/sPrKL+/NwZh65YuFx25C5&#xa;+paqF3fi2IYux70PDf85o0I/Q27qodcMaM+niaDIYp0ZE5ojfOz84x9Klb94Yb6OyN0veQCscr&#xa;JP9dsJD9d8GC8kMHJU54TNzY8FOXOIuKDUuuT2wjesnsLZyTxIeKUCgcSY7JGUZ8vDTFp+TVhJ&#xa;Y5lboPZcX2s0A0Rb0PADdZBCW/XKdnwZyn03aMweNpX9utfeDZz/7zCsGF1vfcsoAcD2psmUb0&#xa;mr5KApu1OMhGsHu/wFSAf5kqpRcW4h8x45zD33eMXomKH5Egaf6wX3wftAYliko/p9esSicI/u&#xa;CRGvfEMDml+PuiCmbvUyPF72RB3UVphFV85sw21mJQH/xk135uzNUieeYW34cz3fVanvH2j6Zg&#xa;KVzJ1lzIT59U/mX+LCWGSum/gpD3/x6E/1+7hLn/vH8PDcgjB0GWgIZgk5pGJqQ6v/u1TYQuAl&#xa;IHrlSlxTkjh0x0GDArV/GM/AfUZ1qNcaXyarb2k9O98nUakM4WBNWXw53e+9T+1M5o+/7+o13w&#xa;k1/oDU6dxeR2Gzb97NJ9WTFPlzWdTpWxptp4y8vPuP4fT+51dz0azFdVo5JkTGCrCZaZmVo3cX&#xa;aZs5gnEtA3Jiud0hYLLC/t2k1rw8kq3Li+2aWl7X0sHLpLWzbmkYtGRl8fAP+4N1VhGEjvgnw4&#xa;VsxDfkeNf+66ts55Bqe6X3rVkDphYXJepWX6kW6HNWeKMM4lCLtzFDE2nrnlaWMIj15V2d53jC&#xa;oLUGk3/M27UWRs4uahj+5M9jefdsYUU4MkYOaoq5C3Hcch/9sTaY8MA7PbQ2pHsjJtas71LdyU&#xa;SuRwophLaaNjgAZbUru0QG+5lJobiIL0qyvgjfLIVVoYwxkH1FO8TzdkKdUdDjpOcc8+8PkVmI&#xa;rLjDmbrR6uywqN6hDxR+J8EEfn/ss4L1o+lGrokFNl0A0iC1EJ+JOopqgBuZ4JLFotIDcSbJ4s&#xa;pCIhqAIQLS/SHiJGJavD1JOwpQUnWMCehmLwf9Wm0/2u6t4qckiKQcXN0mpYwO9buv9Tk632MQ&#xa;SLdFxALF/qkL2J8pzkR9olvqdaO0blPVXeMPONYCR8IK8SXPEyflEP34kVIk5eVrDzdhIzdNXJ&#xa;wVHHN+u0vgM5B249KTmMZcTJxlBF4GyUBtfxkdAwBscvnUEyFhaK28pgjpZotBwTqZwWRnK/sY&#xa;JL8VP3x1ox/YSJZM6u4DlmWlNo7bnbvmr4786qfNvF8DdLNnhtTyhkmfI/potcvZ5HXtiiVaNs&#xa;X/gE5ZAjU0WruMcXY5N4sbJgfYesByGqDiQmAWtokqHuanddPg4/GrJM7pTI+VQShouo+uutIH&#xa;N3W0LHHWcI49/AqFEb97ExfGpQhkbCZAamXIGAWLSOGBIVeMJD2QPzzJd+5crOtrXQS/RD5cf1&#xa;LpeXoC6kIwC3FPmK/3JLsXECKNpkJNPMRLrVbeEp2qRwrODXSt50Jd57J301nl9fV98k/QdF3/&#xa;4B41mbAjY6+EBRx4bUfKygc1/l29m6xxpKxQhhqtkGHdM37mYbaz+ZeicAOhEIN2IGthVmhAlm&#xa;03xB+eHtM0FEhyVJVtOeiIuy26LNwtnn4BKoEc8FflwZREDfwO/ChTIvVZoPBJ8jeeRAF8paed&#xa;so4q8OPdFPI8+lO68dQo4mT5+vvlwrfIU5S5PIRL7LmC267IIzcWBycTYjfmT18WS6pa2DbIwV&#xa;PKOHDdeAujQcgSwQ++BV32RLjkUx6Hxmxga1xRMVN0AJDI9LvWi1n9GWDIWmPhrzhQ58Dm4KN/&#xa;LlvD7XxgyglNZYxy2vbyjtaFtHqlvTTrqgn+grld97rRbzh+V0WnpyWmzfzN8czJXal2wp8XD2&#xa;fMUpa4aoX6Bw8GRuz/GPOwsi2N7zyEX7ukx6wBkhk1GoplL+8quIYetrSpReDN2JWJdYXaW0Xx&#xa;CCg/kn/cSTvUYWWSvDfrEAbjSp3oHzNkaFQOQ+r7H2dC/wkOFpgTtMqWYJ0ytuov5pM6OyHsXK&#xa;pCtGxH4sLgzvHjGd8hLk3XLpkOxYu1rQ3gKnGAl8mx586X+00GTil5fP/wXONfh/pyA5/0dwWp&#xa;q7/V3MJe5g+d9ruf6LdExHKygdExnFAsHNR4j/V+noJe0w9C8NhXeI/yIdN1iejW96fXfnOn/w&#xa;dQe+uf6E+erNBixz7R5y5rADNdEuntSBahGzdeMm9K3jsaqH9NPkG83Uo8lVeRB1/VBgTIEVmy&#xa;ocyE0U7VUbOXORxSHGKpsrdtJpowyOXBtCkw5adcroG+NDaBye4p2lCxMJfDdPdfXjTvR0n8CF&#xa;0cFxxdnCvEumQFnMX17Jr4N115eRSbz5AoqLzlA8oumYGWYdylaKrvJqofQ1SRmWp3VbTRT+lS&#xa;MVxRgy3Mm8CrtVUmA5UAugyCSJVGWyzWxCo0eLDGGKG7ptBqXbUQv8mnCgLbUMSrmF3RNScGSJ&#xa;MZx08FEdd9+eRxnV5akrasdD7aklPcgHA4uu6w6Ytmn/3CAV5dRjmQ9jeuwWLSobAd5+iBp1qK&#xa;gJ/NGsktP+3mHNoocszxCnDEZykbRPhu/dZY6x9UKmZpEzgTpk91J3Ay0JL30CVzbI2q6eWxTb&#xa;aG18t+NwTEX+iTWqfzC5h/E4GJdSd7TZM3vr72uMWE39JO6h3dHd9CdU11yVqxiK+gnv8ZdNfX&#xa;ebsfqPvZIOZyVs0OHvB28o9Sz3YcwUS6wb247os12glZZJ39c4nNO3lB/hgNyU9+CtsHgcC8Y1&#xa;ROOTnEHKN7VW7i+J0eCAXjM8d8+7AUwZk8LpC7UBrmvWU3Ltalddul4bp/vF2M7aI5DAyu2nfO&#xa;aH3DvsUjao9kOtkkQbl2aQBi0gpPLq1z4EKOrdlc762wGq6IjTW5yWNeL7/Nmfjqpk2sW6XGPs&#xa;x1KFIUXFz0LjBKe4M2JBRs4pXBeEuPNQLo6TcAcVBFu6baMkqpFr6DFH1MYomXApMO9LU31Zce&#xa;w1ts/weAB+eIbNHPnQYP0OX4LsdZXUPzqSRC8rRuhfShmi9Z39jtaKEH8TlsyKZ/fxAc+fscQR&#xa;Ge9yHTswq+IIamgkIhv0MTeIyMFuNGZYIuVxB6ujwc7z7SQWPos8ADW2S5P4rwyShbShSeQODi&#xa;5b+7xl60oIoo6DDSMyxW2kl1+T9O5fA5acACR0WuX56F3ZhDaxi+8s9TBNPrtFZT/RMEau9Zsw&#xa;xBZDX52Vqy6ajNNHSEWlKbEUG8cseTPKEKIXYcdQ5MUwpCBaKHv0VTllXpGBA+y4vi926AXIiz&#xa;aLWww8EV+2Z+Xk3uOOl/Usm1hV/yByJufqTpzq0eGoOg5PrK8qErKtWuUKU9beHGLtKntJl6P6&#xa;ZHh2ySuO8FZS8fQkR4mKSx6heu0Q45CzsyT+xuSMTxAYlByAe4v8CjssxjU2xExIlCQHiVXLbJ&#xa;4/4/sO47+T9oHKd/eH9ZhZge/EeNoXpusLTHjtqXs+odXUwC9swo8ppbcD2Ys967P4xbpjExyP&#xa;0JO1VtMfrejKNUbsFXMmSvl306h5j5IBJUxxd39uLXuo5P5EGojzQwcaPEMxUsQp/ZpZsy6d6H&#xa;3hhD70yjRCqYD8hSbMsWB6SeTDHn2IWYurTGrA4d/AXwUm5DJYOXKyvilf4vehYDq7as748w8F&#xa;6V3iRFjydwr334Lw/1VBsv5vBam6pYHyHmdPhzLEJcRQwiavC+MXVGGdDR6Do+8AOZvCjtYtlW&#xa;BrpsXHBifwJU0DAgtY30D+5elKFMj+V3KBqn99dpITCAuwlH5U3Jvr+LS1c2f40fMCIYTKM3y1&#xa;iOW5kzXc2eXgm2W5rjGzQLe2zLc1wdZzO8sJqLsHO2w6zB0QSRkBkgnG2zyf1FSbeWyo56UiWK&#xa;e3FCRXrrD2Fn3qcHW4+adYPTpeEnS3C7/W9o2jDD/sb3FCCIJpy4OMMrgRekJRwcvShuBRu5Ow&#xa;tmqognw2Q6cdWiQZlxASqGIlIHgrrlcVxD18Mnn3xe4nh2dH6T2JKM8RPJvPxLJeu12rPdiPvI&#xa;mqx17Faaj2l/2EoQ0b1ZBOZBC/pdQuK92wrokWD/YvVaWTc4DrD9m+OiP4dDMyJ21h+CPSCOMs&#xa;0IE9DsNw7uSHDY4M7UqDL6HnJJb6OJqZHEBglmkT5QYyP8VvisG6bIIJL4g/mAIcnfhb1isctH&#xa;uA4UKDJ+0IzWnWE60NBrHo/gInxi6lfDUGRXXt5NZtXADTuror0mpXDTaKljezvCoHmBZb7OdK&#xa;VdxwArjiths8ruzr6pwdpxz4F2vSJnbkRtvafXeO1NT4xxt4RpfwbX31CY0NZhF5Is7VEeNVwQ&#xa;gd1KaE515oN8rmEBBQN6KZBXzWeSbQqZYpTYZXnL+nlXl/t7TZW/7ohytLWLtrk9tplNoiFg1Q&#xa;77+CK/7ezorIsfLCReSfmpG0Jp3gFA8dMxQ6m0wZAb+NQXeAjvN0Rz1c2/xLTt0zpq696Yezce&#xa;P2YtdIfCgmmJlZYZwJi4SXFrc1eO5WSAKuGn6xg5jiCFX0V08z/YEr9AnVsBHr9hwSWSbvR5OS&#xa;0mBWzLgW8penQpp1IWWqPqMEKE7hZObjJlR9tI14wNosR8ot+WPimS6tV1RWDE9fkbwyyalJj7&#xa;0+60WWqZV88trIIJMBM13f7pa1C2WKnCN0ygriGvFgk3mYblgHTnHcYvtai4NVdQq9jYCgsML5&#xa;HUzaOuPy62cGmVabJ/zcetwhnl4XtrCgzVF6Ejph0lwxPgL0bkSpqWDplzdU9IwSYamkAHjsMz&#xa;8FQ7wI04iA8p9hv/eczQ8cTHgSHXtGVs5GlvLfHm/Zc72j4H8GQLCaWM5fyeuR5nb0irdnBKLf&#xa;jErLqKJLGIJi5//O7Dk9fnKtvwU1KCYB++Aav9a+OOrB0706ljhtBYYckG4T50ZwXgRCDBt3vA&#xa;mIkCeE7+6BG2+eXy78PwBv8N1meQT7R2u9ySG7Z5DXi4KRyRvTJ8gNfKivkUb4hwfvjFSa8IEm&#xa;elLId8faJ5opCDDrgKFAScoZ5XNHORmvHIuKIqwx2fANMqQ7u7057iDoXBZp0wAO7NtexlRm6J&#xa;n6rFALK1DHLOiD8W8IGdvteOP/BaHrf4ns9aj9u4LUfzz94yxVw9rc0/w/tNi/zAQw/zPk8p8z&#xa;AR5FWspoa9ITYSrwoSPpJSQnWOdtCR2c2JT0zk5USjF0tQTkcceJZqLvn1j/oOxChCVMQNRP32&#xa;YDwc1Jh1mbZx3DU3UeTzk3232uEn9psReYr/i4gKnf+tddW0g/qj5aHWzjlDl+e25n1i93/sin&#xa;9Rn20EUyTBwAUlzE2bcjr4AtVlb8bklAkw1mvO7q7Yh91a167CkuOmmWhE6PhO0dxd7bp1YAZj&#xa;lBx3ubgtGES/ZZJs++ZrRDAKklD6C68jBvdfULJZHGU8f1iY/jYq8mvEQhE0AdIufMxLNFt2eM&#xa;wOGMbzwhw5N/hvXRT9R1J1i9GYdltA9nvxUalN1W6mEmbVilBmtMOjfQZwbsM9Yp84w+WBWKyz&#xa;9S75pu4NI6NodS9RKXACzBjzGjSkI2A5gd19xwlg9l74KHcOrX6eN5oaKbROqUoHxjWWI0IAOc&#xa;SgoQeevZI8KShre2nX/D7kagsQr3XKZP/BJuXqjKTts0UEdIc9Zq+GYivxQpdw+4q7L3rfthJQ&#xa;8m6ko20rH3za/G295qjX3NMmfr4DVsuXrTaOZlJZ9jrvW55hu9Gqa4ITWQeqKJKJApG4+UQ9BK&#xa;ueNQQR+WUh0I+jQskk/ySG6KJSst841leLSPPL2ARaySGKBa2QdL20FxRNAjm+PQ1sPuCHnDyg&#xa;eMMQ95eTZOkmmTkXNIZi2747+TekLwPYupUMOaqt2YHWwWTsAbxFS+ghXlf0zyeyXqC0giK6tf&#xa;AGZTriftDakZzTjKg7VlTDyLeBWLjvLHk50ogTyFP48DaVAqqDvCX1muiwYafhZ91l4kaD6rJf&#xa;LRk6rB0VlCN71S/YtLuF1+07/IFQPrMe2MVCVQkTHJnITdflsCKoV/pISihbhgGTOdOJT5BMsh&#xa;Czxj+MU1xdhfQg4QaGLyjdnfCS0pYbXC8aSAcs+XTPyzMw9+RkOR+4nKr9+WYvpFU7LQzEfUer&#xa;vox9BlW+mu4qtWczy3aQEpospGOXVh1K9DOZt1hScmy2wXR7PMN4Il2sRbcUglzl7xdFhT1OGx&#xa;FnaQE5buRwhknTKgJfexw3SadONmb7JEeBoDOIaCLdO7OEVIs3Ik2FBRXXGlvhUltXxEkFFUBo&#xa;HP/OGxrVfOHmCVAQsCqRMMb3GZJxeNG1plP/G+W5jyCr42rxSwi1YQX2k6SwP0XnwQ08/k/XoV&#xa;DFE/ZNejF68wqUA+mbMirhS+UdUDFt81pwmOektPVP0gL+mIIsHQyL1frHHfaXD9y0ztoddEbV&#xa;kf8EhqmLeJ8VD3JOJKwvxySLhGeZyWnXk/RXl+PSQo8IJVQ5Dfe3CXcKaH1C9ITsCD4w8AV0I+&#xa;gSzSA0jAfA7hQfXocVKTJt+ByEmJ+bCn/4jmaTC/UlKMXMH1een5RdVeMvfB71/0mSbe9TNTG/&#xa;MO3rLnhXpFzuevw1VJBtAxXy7SLNmPPP34IvehMQb89adFZr3cP84loXAp22tqTxD2Sff5+R/t&#xa;eaglwwiGf/FrE+7f8Uv4f+aXlJq83L/ONf2fJVBbquiawI/cbY4xKiAGniw1SSrkiNfg6qT4Z3&#xa;GVkDboQqMtN2mkicmm7GuHBit7W1vrq7eX+T5Pv1JOs1MtIt6lwMrczZtLClRj41OuZleHvRO/&#xa;tb2N/nf9dwgh7D7TU1wqpyV8Zi7F9eoAfQ6XYvj+ydg0uTxdUdJh6le6ZHX3ZrPbYvpU9XLIMa&#xa;V0Tjd/D4bCSR0B5n0lMi8cpFMJgcQV1x7i9GmxzCkq6zSWYXTLzjHEjcPOqtB84ycbBCQeFUD4&#xa;R3sqWjDg8ZoNTK9OBPzC7S+koQ5+a1zG9Nbw4Otk8g6zrK173ixmGlof219zi842c7Mx/8Twk9&#xa;rBiX6qG0g2ik9LhWVZYc9Mv6HSBFFllyVtL2NpJdsJDlesdAsvso2kqZ9PmUgAH3yG5hCG9qTN&#xa;Mnlk0XNhXj8Z2elzjzsqBtRmL+IRIRYTKobui7LF4C47BMEoghuHtflH95vh4cUrKB+B7BK7jn&#xa;On5NF40rHBUhQsYqu4ww3spA6ubYBuvd7k+aH9UjwcjzE91W6iWhBfCBDKePinvC646CSZVVxd&#xa;BI/cq5UGDgbI1+iFAtO7bGN06rTEKQsv4y0uO02oSNa6radCKlluZnxmXLUord8uN5UQDbindS&#xa;2yan5hUwS4Vhf8AJvRl7s0k5deLJUeTopxS3jUUnKxaB4zXE4863xeILamMY+aV3YDO0GO23zx&#xa;SlPJSZVHdWhfzYQ94sqLT3iirAh9QkTKO7sUxBJrX38g4PE4/nZG7EMUmWsaFKoKoN/RqDurSm&#xa;qG55+RRGbnxOxIYtSa9WHJX1HfObVGKsov2t7GG7EGe13+1CFlqH+cq9waRNl0TsMvgMwQJqus&#xa;xTeEQ9uZDDTnz621cqkucJUSp9oZVrOiMGRkMxuC6qGiuSKXYcU083GwUNEMkYq2uWMyM41fYc&#xa;uGbHIFxipVxzEvuymeZa2Y0ax5KbqWR5xylVbyghSsXTNv63iNT6x+0wzfxd4ZH52aibkZWK7f&#xa;JWzWX9Cks8Mlu/2oqUl7DqP+crM+IoNpTrGYCIEMQjC5w8Zk+FQ4S36PhgEmhjrvCVlCTMVQEb&#xa;T+nuIwzecXCisgMpJZs++uHy0VibixTNOEOApQDo5JNVcid+fGTt04JxTGCgfFkOzCFkJA95rj&#xa;fZblsaUSrw6cPQwuZqTEhkMhUyKwRy/oH8ryWFub3OljsnBmD0XbBZAG83yeWwOaZPsHkfWMot&#xa;R5nfYY8jeyK4xxfpSE3XHswh1A77pjaMojHvGfBt8KlIqZDQqzL+wwNBzDfwXE4rHKPCd06bd2&#xa;DnfE/kYRGBqHhIIw6/LSf6ipiZsEkyhW+YkBMPyrwJcPDXp0N7YqUWNz6RYUncoCkQZuKlxVGf&#xa;AED9YPgcQI7dSaByUSqRa8VDKN32MoeFKzRhqj9eQvyEmnYDALK9v6v7wibYwYy2TEb1J8MqyV&#xa;5Gv9NMN7yU3GInNvfznC8CX+092KKWds/mLdJ0ayrOytTeTt0bw49PeKfvp7PNyi98aKGzFiXJ&#xa;TuMSujS8rX1JeYMYVn6+3o8gWyPAadK3HWhREbolq+XzJaB62aQ0jGBG9Y3O1NZMEcVwFb9VZa&#xa;Yn88W+JfrwtNt2VhYt0a5ATznwkHpeYInkkpl959T/GeJKAXj/q+ZT7oA+iP+JgYRlijO7jaNB&#xa;RfWQygaYLRRW5TH6FI6+lFDdwNWo9gpPp4b719cdMSsCEHQasIx8HY+UteuH0wkKuE0n4EsPMo&#xa;oWL5obQPjTDHXmFUtRQyp6947afyr8Fs4lRqQoxgJzRO56jgeUuY3l2kizeb+RvVc7F5nLIFGb&#xa;bE6bdfhLBpvToVZXSXOeml/XTpQTZLlnoneJyUhhch0L16cm8lklobm22wrIe/EzHojR0OLPUU&#xa;Wz8icZ27QrOPKg2dev1R2/EfSfwgubY+hHND8VoBREZ9NfVtdvGOcPl06wavt6kEpMiRn0A09M&#xa;57Gln9bZW6DQR7EdhJUS+6WU9KAXnF+l/CL3+H/eQLlv34R9ybeUmi8Ajq06cTwL/7o3D+v/xR&#xa;/jnG8pcqVvvLkl+J1VVx1C1l+1KGrnpkZSV9IU9PGunN5KFnsxb5skz1s7FWIhFf2gPX4UQH3D&#xa;/AO2zbUZrJtKRp8SzLBPAlG2WPVVmEOdv2mLsO6H7NFfzY8AIYwe6x5MytdRzJbeT86NnoKN08&#xa;sc5ldO1uVzu5fqyMLGrXXARMWa/7CX0xPa3bTFvRm8Cp0p45eUOHUwY3p+nPWGtkri2DkxFKLs&#xa;Fn59F8nrHZ2xr6Bg7Wbkz4PpvX3IbRB0YdEADJNk+dIQboUv34A5MuL0X7qr7m9u83zjMEm13J&#xa;G12lRpwYYKQll07RPKyt4r4Z2u3vZWPhQLKdzMozBkupB56683OdXSWCciMNOrAdMwa6AfM3sE&#xa;NmZ1pNR6VaER7FT4BdXKGrFqf7E9pwLkFYQ2zglp1lGc7sJSDLGgrGSUoCEI55Kb7GIOYkJjyU&#xa;T2Aa0cmei4JLJeDJrTztK6sxfOIxSHb6jRl8rIEN9EgPRQyU/pZS22MDBJSLksBKkw8HKWGQ9Y&#xa;ygkM8Bf5WLyu4DFlkUSIedXNZbFbmvowYlffQC9q40EXttkPIWO6Svn/SiiuMTKvAQKePeqdyB&#xa;wJdhlz09ssIqh+9Z2K5QzT0qKC+Y6l73LMN13lMuBGsaFwDkreKlmbLWAVf07Vrtk4sqbY6OJd&#xa;2WmjCJXn7r5Lra7JXCK4xyjXM+sZ6EjSpilLySJgoMg8GvMfcd8yuRmnD+hvuBurQdvBhra87M&#xa;0ii9wre8X94hjCNLhvCGGgYCQ41PO6OrPV09hIeyAb5SVlXqYvBjYjamQOwVf6UxKgbV946qlc&#xa;MOme9DJggHvVdD3Xklf7AjBMCudfKjziGgpNkRZmEJtpUNhmNuqPZbj6SXcwKwv+LsOP3UfhW1&#xa;cZJWUSUuYkC1CH5mni0nEWziG29GGnMYTvBaWxrOIcarfP54nL2EMLvF35lxv6HpZSoWaSyO3z&#xa;Xd6RrJhKXKvysI1ZlLKtQ3E60IEn0OzxLIUvzug1yeAl+mNVULTAzGwudPpX1W0VkqN3x2CAyd&#xa;OxOAtNXumgkC3l2SSubZ8f6FIyjXrcE0Nn+JbMxLUZWEzS+iPuU99MYLgW6bWoFkveTfpmeJvk&#xa;BhnbPI0f3GbtdT39+v4yr4mSju8Ofd8luJKC5XCg1QgU9Xacjfxnk4WeMWNc28Zt+UpEyDUxnq&#xa;BzVgcDmtDHepqrb6HjofTXASciW6jalwNcRdU5nz98zYIV97SO6yvWDuUlfx0liGNGMNDXFBDz&#xa;VUss0CggaG7RqmqhY57p1/SQNlLbj2rrqrg5q5TzrtvVGUDLMwr+wTiqzYiCnUfMathLZZ+tjN&#xa;fOybmEAumWSt4seclbooBlos/0Zfc3zCOdGllLuZbP+BVZUpBSbepZx71Mqd2o9pRcJ2wYIPKL&#xa;f5D6icAWnhZzZecaJ7C/4H8Z7MW5LzmVCioW7sBTwtfzmO0Q2VX5r4+qIc3h4QIQM1WmmrTtZl&#xa;N54xsxbNtt+i6V/iBIdSEXugpu2qMPJVUEVa+oO2Bp4STARJsAi42+I8R4MSUO7VWXBHfzyko/&#xa;xG8JTE6SsQT/oDAXYGkgKFCDmdNqIfCrCnVGgXyad9ElmmQfKWJGlLu7gRMHG1bU4qf96EXqc+&#xa;vT713D+JPsbfyAmiDsN04BlxKzzBMs6h6JyYHcN0WRE8aQSClS9fIfRNPAl+2d1hA/1trZ7XEC&#xa;Arjp7eYx3gLIILI0/2+8T2Fe0I8mt8lMdvU8MTHSkVHtlkjsrZAq5yJ9dDHK2wQEpEi16hxAGx&#xa;Gj8S7sdsB73QO/9jJifFilRG6C9IhyP8O0iz/c+QVvW2N3G0++8nSP+7y4BEV93kKCUtRQU+Yy&#xa;ydzWaYnlze2s6H2V2nIqSwx8vM+6gi0ZM/yW4s8CtOAOzNZwuRMuQelmFHE+CsTBVcbBY14+L1&#xa;hmvffe5FfqDgK8EAdJ+pVu2N897eHRfnsKq8jkH91e1Np+blg/d8FqBr8Wq97kGS0HBpAIj1mp&#xa;dyFHmmU+S4WoyNyAqgXbzIbru847c9zm5M40QLYt3/zs/QYQnVw9maYc71UbS08i0qh8zLsuPW&#xa;pQu3CbBRiTqcqnJfyd5GkhXfpdhJYJeiGAXICRpMYHwJwuTy2Gn16wd5kIuWZgKR99wnZhOHcs&#xa;4dmKxykUB2azjAUvfrMtKcfaxhly+RkDr2EFB051JHdKI8665+YNuZD008ksb5xOKvvojCjbDZ&#xa;rBgKLyZcS8pIRbTKVxNdJyp9Fh2nlk6JxmkN7cEAhhml9K8HNiq4YyGFvOe8Q/j12YgL2WyQ3L&#xa;utdlUXvGrhdSlBRF6rCQfhR9ROI1rXrq7ZML5Nnnto/Omvo2Upr8UHdz0tX+ZQ32LTca7lwHzC&#xa;vcoC1gUmttyfy3n6w4viPO8CHJA0qa6lgozfHtBG1yNzVUU6hairmErwZU42VIKxhkctclgnw2&#xa;89SzmfPYGwx/JAHhWmyh/RVVXGeCo5GusGANlQH7/DMkXI3MCFXDAykAUSHY/xPVzFzGKf1K/m&#xa;SNRvyOmtJdF+I48VYJP8lTa2No8dsJyzY5SheeUfY8ruvJqkjdfi7XD+jJENjZUwpXKZz5xi4L&#xa;7KZscMnCONoXBvdiP59rMauT6IR2BNeTgX1ktmZYC/pjL8FdBVJb9cAThRESkn/8U2XLqEyc5W&#xa;ib2jtDUgyjffGCvZAnkupo/Y0ELfbu8dt+L+O+6F6Tgrbh9ZMoThyWRi8ajCzH7cU6qBPFTNng&#xa;xqxSKPZ3J3rw3cWLeAsuxn/DUnz9UzdJN4+QiVEb6VXDJv5oZHhtfQV2BioTn+Qq2BrTaMu+Rn&#xa;VxVxwgeqd49EMpOsi47Zw1uUAycTRKtoi4z7CWfPu2uHPOHSkwtV3jB3jiYtWMHRKHJ3+exLro&#xa;pbWWOEMcdZXlFgm47XBU7VwGd9Fauw88kKtOC86JSyAu2a0AL4c5pe6goTWHkPTI8IWxhVEYlL&#xa;vqadyERN6ia20W4s9MpRsTTacC3GkgCRMpdQXZj+fY/mFxgXGZ/QbsWs/kOPR5RY2PeLBBmbA0&#xa;Y6m4oTnL6BECAjURPEouTzT+LjHInsPh7p1HzAyUO2UpUp4R5Y2dYLzZZu6cpe7z+K4dqjTWIG&#xa;ID59moX5d4Qg/reE+E/frwnnhT6O+S6ZVtuKYpRmFDycySWcZocBy0bmIWWf/DUkBs6jBl5mp5&#xa;WvDXu128TzZL9FfqtFPpvwQUbq207IYjd+5FXU99NUtjP/PU2fvScCq73pOnOcqcE9zdelPv97&#xa;i92eo3xOx3yB5EAMIVIEpuUWJJfxsyZuxW/tWLLNr13uAaTtokYAdd9WY3pjq+9CRcWejHMdoB&#xa;TmHEEj3dXbCM4+8T5FqSkcrPxa61jOXFBPZ21rda2p7/0sW0gWn64n6ZXmRUdWtaUO4ozz5nRA&#xa;NCit5TJIbOz8KERnVvpZd6tnr4C8y5wC3tXav6I8nK2lnaVBH5Aqur1SklEjg4W3IwAqYMeU76&#xa;rszgZOFrnvAGQpKbraLHje0vhT1ofkHWwZbmxjCuARhmBNQMNDm5+vPWRctyiftNFqs43LYbEK&#xa;eWI+YUkyId/TntnDic4TLBM0XkxnEuNhbsrEMdnFKCBvPyR2qSzoc3SOI00tiD9syqVvaWd3kx&#xa;zQYqilorINzCvRnA6LapNyFmRHHsRGcjQ7ijFcr7HwhUZTbfamnfBgtNIN145KnH9vaI2PlgLo&#xa;+OuyN8/tK9gvNv06aRpN8+xqc0Bim21psCWbkpVzrM7uK1BnjVHYOcH4Ge0sDWzV4u//ogzf9o&#xa;1t+GR01XsiUx2SNAJUp+J3jjPpK86DUWOcITqxYayr7dAN+VNW5ri8pE62UaNUqt5USw2QkduT&#xa;v7WNIayvWKSy2QUFyMceg9abRYlYpe4I9puyiuMdDtZHZSuSJh/RF2eidMWZjU5jO7fhMzy1p4&#xa;CcBnzbzIPj+mUGmJrY8LOHdfvOMQOfNZG0+2Kgjz5moTfFlG6bOZhyjYQ2+/wZSvcsx2fD3Iqu&#xa;Vb5xUWOuYtG4H2lLLQUkPTr0fXjboyP4yiSjCXUEKSp+eAfWw+fzNVlffnbodYDo3Iuk0sRL+Y&#xa;/LJpYzRHqUFWOzijUWEiUl6jje1BL2HxFV7SYkNRciXqDh841cL5x+7LBGGP5j3TEWsSC1gkqq&#xa;9N1zkiSCN/iX0PYpdbWC/CA7PDMtpkoF/PPPyoi/FrOMZ77dIWVpEOS6zP+RxlCAEDW+hAgzsZ&#xa;/gyWXV94+g5GFty3PXldBjsGB7stbWdq5Qo5vVEtWe+a5rp0C+eo27PG376web6WoAeoc9l/El&#xa;zGBXjsm6nAFyNSzc02ROIgiK9AdddgB75mdmRtRNA5nNZp45lC9TD30QgHvyNfI6ONFtJADqpr&#xa;+tpm/TaDXiFHDTQtXGQpupbrhaTWatGicrC3oHZKrqZb5gqFq/wumymlD9iOt3vj6ZCu+Qm3SL&#xa;NcXSYQG+5Un8rj+q+0qS+X0t3BlvV8haACYY4V3x63MTyu6I0/CHKl5es1kPd0yIFwKmkDILRo&#xa;+8eOmAryr1jSyUtQ+VeMw1cZjbFjf8tRpq2gQnfTrvITF3pXCXfo/uRv8vbAXqcnTs994ORTaE&#xa;J1V+dE5F5WwURm/Z6WUuvghPWL9+VpG0adTU4x3AwkabOKhnXNRCWdV9xU1rdaZvLmq/18sQKH&#xa;kXoOg8uAwrQKWTU/yMMgy19Eq1wZiRJbzSuLnVnz5/QnaMuthJ7ZMiTm6KMuS8OXkwCqqJnEVh&#xa;XBgNE3f9/ggEuC+gyYtMeIQa/3ZVBBjHOJCIzsbtFwMRTfG9g0VUxzKsSPO5/bqDJU/DsiHgCY&#xa;sN3LKD45diExLJ6/TZpFoXdljzXnKq8eCyxJ3fyQTI0T6sKx+RoBSTmi4w+ch/i8ILyP5RgMpP&#xa;/5ML3yflFx3MKPvOAGVIHtAdXC/73hDsiNYvOthOHtgefIPWrzj4RB4YH0yE1m84GE8eWB+cj+&#xa;JI+5x5fKN6i3Doi/lH5ucT7TPiXVnwnvT7Z6hAYoHqfcWUT3MbJQxZSdFzJ7UZEtfvUIGY1++x&#xa;fUhl7UC3bzLbCZCli+rhs460Qdp+Vlo4M6erdvrLIQx3BRz+5Z7M7hdxChAzFAQO8gM5X9nTs1&#xa;6mBWS+CnoGqHD+/rWtxLijsCtVMlPC+CWSQxl1KFdjdvbW1h1UbZNpFcK/z6UlDsMhlWsAxW8r&#xa;xvhJLWxUmsIHjyRD9gHrTloo15x8plgRoHPneMhAjktcNTbmZGCH8YPyqDEvXBldkSBd/yXwFA&#xa;cEr+P8OQ3NPy0Ak61IRn+qIWc3rKz8+HrAwd2cLh66oFdAPX/c/KtfzhBYn990vaMXhDlniu4E&#xa;lMWTWHCBz16yEUJkizGWJbwSOqeqCiOOvwhyGz5an2eNqksB8kicTznpZGFwxa6iBIPslJzBEj&#xa;ZWvglBrt9K1M3UALTzUdHz8ohdTiTfccLxxJyOddsB4uSPxtQRUe1f5LVCsOeRUqVMa29WQ5a3&#xa;IhjTvqOv+8P7ltSaejkT4ixmjn9KiClXy82JTY8dxpW8ZqqyZuD2/jrko0rISMq5qfqYPDb3mT&#xa;e2uvRO2NqX/QpEpxfFtWGg+IG4TEFZskPbu+Pc3NINXX3nYv0ErxehKdVNezcpgva/WjvveKq/&#xa;+I9fZF/7xiUjIyM7o7pI+Nqz7IxsXeEaN3snEV87DSFRVhlllJ09EqKs7AYqo4QUfp/79evRvd&#xa;c18vud/qn+eD3f533OeX/OOfec82bNEJKf4hCztnl+0Ya+t4+eUPZE9HGtQkOiGwd0v2e5dLXX&#xa;xo9BR243f0kkoHH6rpMar8dBGHwvqCBLz7GW1lTuw/H4bpOuK5niflX2KuxjcNkxS6TOzSvjkd&#xa;0hFba1htYss+llFvo6fnWrL4tX+k01n/qdpmAOpj3UXBGdUhtn80v1BUPG5MppmDet8kTGyrwo&#xa;aX8PbVKwd6eVZXg+KfcsOdsn0nv4rZHWVOncawdCms8WiculjgkpcffRVQ7Jn2BPPxXzgk5ng2&#xa;StkpFnIbZA5zvFw/BG1WbX6QdGnKeer0noX/eCZlQr6Lv5Brm5zNz0050XhRmdbaM8M6vy0jn/&#xa;mnSIRbkAV9qMZsr03dUL9uWm/pViZukB99yZtbt0ihbFCKd7UosrjVafhSySpxbfM1q9H7LIny&#xa;quJ7B2Tm6VQjsXol6jHxvQnGCgeWatKmSFuNrr2izbwYbOlQm+tsBz1BtvGQzpIwONqTcGGa5G&#xa;NtYIhgfORX6ERG4YUW8YX2teWHYqSuhn+dY+wljTEqGmG7ah9vRGtyfnPFVbH+u9DS6f2Kmawt&#xa;PcEkHUdMIVU159NGXXXmbdJU0zn+6RTPNYKe7Lept1HHVDpHo4y3O8bnOfzPKZiR4dKQhkSIc+&#xa;wXqLNcHCfLBd28bGHTW14jp/ycXGEmmrcMHSDem+7S8uKXoXdQ/pQwO0SARCCV8F8Z4rchBgTz&#xa;ejyXs0rUgLj6C4LwkVNJ+wXKYudVxqGNYU3zzJV/TycD1xDWwS4cY8+qQik7eofsWyM/Wbedry&#xa;avP55ho8XnmRh4nLoXMIb3loctL7PqcFs9JuuIk09XuZWcKAemTm6EKD2tK7pXyiJpHhxczPS+&#xa;CrFZoZzK7iYFEB1QL4zVe0vpWTh4oS+1wJKo5E+dYdZB0oXWWqB+vypBYovQJHflS6b5lo6SES&#xa;Y/kw5pZlQ7zt7AnwDffXPJXtnO+SpbRDGSEMnfHIqZsWKvZrQcSlxh5P5wzfmrXGFlCCz3yGZd&#xa;qr90210zMWK10WcExk7JcMfgqv8HBJtrQEheMVzsAeiCbI0wqLcF2WGbJ/arDGJsHJlUAxQBpq&#xa;6Mp3uC9z0P4lzAaK4BXuTrDsp/KJhjY2sjtARUwZId5lrz1gmkMS5X3/Xrv4/ajQs4H33PrLEr&#xa;nPo1ErsMqO+frpbKcy/uUrRewhMvBH7n1uoWmP1J6NwtO0FAXnHcuMfwk3PjI3AVMXCKTq67wv&#xa;GAi++6o6+vjZp6HHs5Ri799M5vCaai2dD0mNbr/ZolNInuhyo4x3pRGsqNW5UDI3ZBOTxxRjFW&#xa;H5w/uRuZhMBUuiT7AObR49QtdA3NS2S3PAwV37of/Q+MtnJpYmzUNGWs9rpcAMqQvqZ2EhFUzZ&#xa;zSVCnjAr9xtKHGX+MIIiasV11hHtcaZ8MS7Ho/Mazqc/iZk+bOrWGTYNNPR5ZJ9hosEerDoIMl&#xa;YzEWSmPEpIlZxqGQ1ONafwpzfW3BhKCKNiVGrVeCi9RiUedzuato3v4QRnGKmETNadg0TRXy2W&#xa;YbMTqWqj5dF8mc284TGMbh9ZbCn0c9+S9l6geduWIlfhtT58dxJPUre/tr7FhS03WvlpBlQiLF&#xa;HNTRxSTO9OUO4z9kvkhex5nXr74n/v6Jxrtu7VXWEuvhtvG5JvcFn8me7H1A5P5qL7lIM9+kMH&#xa;qWCPWMYbE58pn3nS5zTKXZf7qe0wM1Vux4GSsGc1z4eKHpq75gTXgQiLst6YliRfMOA0hThoek&#xa;jrvi25jixHPpbgKI2xPWoUT+R6IAKppk+tshFOrvMEpoEcTEAGqBYcgoYMGp6rLlzktwukPN5n&#xa;iDQna+X0ohHOuaRUdrJSQ/qS7xVn0vKeVzEdD3uk5DZu1Ym61YqSnf7QRmMQ7TIZNEXqx+JwdO&#xa;1H17oj12iZ7GUq+Z9tDnFebQ6Si/I+3h7hJsT+jj5RnK+cGpIQZ2NV3zalQHX5mopjZRvOcS/Q&#xa;KX1TzmaWblxzGPfU4JuhOeVtuka4TH61/9qLQAWekp/v0m6+KYyzW4F87//v1d2Y+Ua58JOkWv&#xa;ZhlVHdsoqkButN0zV0bs0ipGJR5pcPqlcrjuYlEnzvtF5HoOIPiJqumPEACGRB8v8ffyR+x5/f&#xa;+0CczfrMk4mn74biP1g48oiX/UijE7tr8pteuBoLWJAhRgDBLNGWrxzfsUIlUk81LlOr0fIu2N&#xa;BuNRkGtj/SGKpkc0z6gmfJxzuIGnf/9b5xNtDRlVTLovIOGUTP+7f9U8jKBx2BLWWrVdHT32ZK&#xa;p1fN290y+zx/WK1PFWcGi2p4mvERK9SLKvZlh9FSWIPJX31hSvo87/RkjjEuaYihuqr9X19Tlx&#xa;uFUpyR7mBdZeHzFCWM1+zt7rM3itAJW9+EutpB51pyp4EgRP7d/kMt+BaiOM21vQCibT7dJdoa&#xa;2+FbPT1k8FpUpoC7lEshh/UTx6hby8ukOui0AbTYIJL6TR74M1/cUzj5UE2HCJsCR5iBbrO4UG&#xa;ZcQx5YNXBoCZo0s8Fp38DVE++fViEhR0kaKfZO61SLS/V9c9JAxlcP5io8kj9XQoSiz7wOGle7&#xa;8/PycGrP3GAdVOCQRDfjmwNVJbbnEifK+Gic+Pw7PTtY62OazcoaT8+6WKf8HHrsPgphuer7oz&#xa;xRam1kwUs8/MqUwXq7i3v/pOhMyYQqgT4BxdDHxFHPeWemG/MjvSe+vvO68TPGdGAyX7bXlTHh&#xa;pJtH6r18qzvyceICfH499CMEpzTSNQbAooxJ2p12//CUtuSPOURbOYhwOZKtXJGPoq9v9IHYka&#xa;XPl2ZW/NTm13+lcliB5RYPFZNc0Vm9F3dJGO1I573yov8Jve3/4wgFm1gmCfex1HWG5C6NZgq/&#xa;+KZjJGOD8KqRQtOKjwWU/vniBjC7mKPy9YJhqq8PNJ9IspY6lloSrb1gzFRWdM+abID0a4pPns&#xa;ub6F6XG3KyX0U+fzS5QqdF3zkyAZsdD2C6mH2lljMXxjpWTtubE6PnXPf4wbRBeE57P6XFTSmz&#xa;M/WcRxV4ut4sQA/B/YKJDjpdz86jvJE0La7ZJzlEOapH/u9QueBK/bpzckV3x+dJEVvNoSfTVo&#xa;okOW0qZG0dXPqJJU+clzjMqrizZ/GJT0ZkzZJJWGVXKpi/c1BYMossGFCTqvDpXU7vr5dQM4on&#xa;C2COcDxnS92yHmp4t/wL83DP04zv6qsVwaLZERnX28hrrD/csFgSh1dBTGMmJSrziWhT7BaIWn&#xa;unNWFHpjSeSIUY39848OXWV3ay0/nIcKogmXLVsbxaJeOXhC1i6R9ITiogDz6u+xlrQybMNpZg&#xa;FvFlMqOKhl/GinowgIVdON5XVWB8Vd3xg/rPp7fUf0XpTYPyfGsmtKp+8Tzo/YJ3KvDsBoVn20&#xa;8jqvG0LrUrqd7BcIqLxmFX+8PnH+NJHfYO6qgKcqfVhnd089MVZ/EVz1R9Kw6kU+FpyUMQzEn4&#xa;McCrtUdNIAQlwhaz/wWVawlqq7MEIBA7RlAhNt3pBbvfZ3KB6IFw8f6dk0bbysHWGrklY/j/Tm&#xa;hUHheaHaaogpIrDpE8O23okEfidFBeOCfYQP55roRQckJh4Wc7j+Mv5onvLNivPEe717qSOnzE&#xa;6onIQn1qu+9I+zfz5c6amEBiEaoEOUEn1z4z9xOGho7a38BDbW+QFSUbbz0oXH1Ln3VcKniQXD&#xa;rkseJEGmWZOd2/NFLt4GCgK0goTLsKfeCYlTPjkYKAOxlSPLtT+p6xwtT/heDsBdYCTy5acD2P&#xa;AYLwLTjj4y17FU+CJJHTi858YQOmtiZDPfh38Vyrk+PnuFHpwtMLZuOT8q73rOd/JUIdwfX28W&#xa;RJYb9+iZC6ysYh36SUSVIhnZaRdEREVQpPT6oyUzH3tUq9W0Swf2tspb1R2HLQuKL2WGetB9HJ&#xa;mpciAyY6bw6aNukzulbetyCpJwgfdyLMGRNvo14uBd+wfPBVVj1cmjV3wClGyjYSX7mQ13cYBB&#xa;XqDb2SYMr9yUNVLMeGh2NeOTN23M0GzFWpHHHR7aw3H8OtVdV3NhqHO2MPlxIWsDWemmEQ0VC2&#xa;vYQosy1NDrs/25Frm1d9vrSlJIxbYNgK2l/s1Pmd+VHj/DD8XViJ/ZzLpVu+Jh5rEXavNWft+E&#xa;urepxTtJRfu4PzTgYmjQ0GRCoX3vg2jM/ho18/+W7858249IklF1o2HRsCIkLP9MzWTqrWBYMh&#xa;T7+kcTjCtt/EcLjR9PaESmsEI0cWZPRIt1UGz3e14Mdvw758XpcS+kBQnZvB/zTiocbrstNivP&#xa;wXAkbPcInXpEGPJXb3GM9Jx8X3JntxSdtM8Uikz7cEtrFT685DtW2k5W8dXaucNnjNkvFecBb4&#xa;JAj0ltDrB4d2QokUZdPqjKIejl7oJUsq4sgIsScT4hCEzbmHmRbUK8pflzu5IALVXHY30/rgm2&#xa;ZAZm5h1sQkid/Ikk1mbqUq3UWSoOgcctau5SOHg+jjGcb8tE7e8UO5hD0fDeYFzVuz5TJU9Tim&#xa;rML7y+3yL0anO9320xRYvJwDpT8Pn3N248m0Mbic+OhQvlwoYTtZFv17u9ijaqPGb86xF5wtzS&#xa;bzJz4pQyVb3ADJoCR3icvTr/gy9SuO/aluJE8Vq3TFzfTQxpyxhPAsK6tr+MVZv8zoGe+v+UaN&#xa;0ZawrJ2DT5in62cN0a+G47/lhWQFKNj5CMWpQhxqJs5xF8VFdB4RU3U91M51POCrsm7KGymVrl&#xa;WhfGvTF/ywKgW2b9rHpyJ/8ATf65QlZcZnuaR/oURNeMKpcp7J+iovJGaBplCj7OKE5KUo39qm&#xa;Xryihlq45upM4HzH+QWKKM8XMZPViNRxPLdFbrDGiuddWT3vLryCA4s65TQz6w2BG+JnAx7a/0&#xa;hm+SHwJUTY2OKqkZ8ubEAw5VpG6H0R6UguQb87AswTcNgS5/MTdd8upxWd41sPtpSTqWMQ5q+x&#xa;KPEKL8D/rnkux/Xqel14aAmkvs/r4Iz6lZGGmELvsWYBrQhim3tNfgihuvmcY0RFX5TN6ii/wG&#xa;HD6QiynvV10Qebi7PB3HtRtqhLVv8di8PDh4D+RDLK7jrrbAgIlC8CAkFBB0CYZWtc2wxd622Y&#xa;SrMWKZpIJmW+VkCgngwEksRQ+QrZ860FrDPD6AzUXYi7rwLKc6AgkOdFEIgDg8HGtDNjq14ToD&#xa;ezZgzRIQSBuMGbb/b9KVCxLb8FoP6ma4tEwp3t3bl2MLSQMFhDvGPjUyogrAXe/OHxT3l+Yo/C&#xa;WMtfbEJ33yBrOEBg2WL681N7IxzbKpxPEKxxW5z+OCMgLE2+ebDlT7n3zy7C7rZIHTeEi60b0h&#xa;vrmAu243uLKwoKgO6YTQd8XjEgh9V2hOB2BqOx3gFawGYuwGZhDDlWvd1t3sHWM553NAN4T068&#xa;AsQ/bmnLf43/si238YYAy1pYJzB0vpJhm//8/N7Nx9Ge7YC4FfKrtD9g/n3ANycwxL/YYIgjnJ&#xa;2BSQrCDWNN9Ps/sTMgYVOK8fvpgoEqRJNu3lL6U7ocdqVoIWz+kHapTnKvGSsfABLYAipH7A+E&#xa;o1FQIMHCX8+CcNZIA7k/EI6RjAIxrpPYHUS1Pgk2SMJ7fyAJ3KCkuM4m3G30xH9/IEncIIjgiC&#xa;QDzhqlhOwPdBw3KCIv5x3uGrFc3R/oBG4QiP+FOhwARW0BEUftD3QSN4gtLHiRlBIE4mUD6oAB&#xa;GojdFrRVCrXz8fJa6IY5YPNPEuyPpWAa7n2Q7Yc4Sq/FnLWXHtA7QYIdpYYy9r6vgmNYo8QDPR&#xa;y1jhADXYYSW1wr+y82bbaKIyO0NCeVfKWzgRD4YksI7Cr4C/EdxjGKomJ48h9igNJAhk0ZKdkH&#xa;BccgRjmqPnoMvATUwx6KmrChF/UKXJStKvxGMK3gwSCIF2CrMXhzV+xPudq8a1LV3xe8tuarQs&#xa;egXt9cbJ0UuwQgvgOzM04MjF3HLpitgqjpavo1QRpdoA+ukGym0fpTBAZxL8PRPpA4jDxiCNPi&#xa;nptdRj3eUkSKrdkzsqsmju6M+qLLC04QZgCaQWSbGwR/SsPkHucMXDt06oNVvlpS9B59nf/7dA&#xa;JmSGqb2t8tYRz+QaXcPeA8WBEI9JXzYOwJIf7srn3FCtVRju3cU7KDpLSYq3tvjgO1SQRqcwwD&#xa;8uEb7kawtPGwdLa2/U3doUGS4FJaPQ/ijN8B+sWAPgxDn+cHbv3NwflbXs4OqA7qiYkdWqUTaP&#xa;jT32QkUdmUyoDOJIjBcV/ffp8I5/4QujQqh2U7Ez0lARAiramxPw1CBHjbZbTELZUkwPH1ANCk&#xa;D8ixu6cfGbqUPNz9AsLlvxEPOMIdbuVoi/KBu5IbwmmHBkUhrtC/9xsiAoHWqEAgegzEJNVWBG&#xa;4Ne5Akmz7gTDzSzVunaD2PAV1DHRg5f23khcA72kvS+HSLAABBhg14eujvANu02RySzPUo4Oh5&#xa;AADBAFCwYwNwK+RLqSQZACYSk2I3lTc3hoIz3P4Ccl9eeGIR3ozywqUtweoY/98itvHDut4SMw&#xa;fgBwg5dm+IENmKwK3B9/kRHNUbFrbMP+Yk0DV0LD2dtxq5iw/y5DNA3wDx81uWYOmwvYvjqH1O&#xa;bKj2yz6RedQK8jYYW3xBdu/iOCIOSrwx97HvV5yWH1bauziOOQ3K57PXA2gUgJjDQ43dfxHq2O&#xa;K4FQqUi+4SAHW/R469el48i65w5pKtLQ779hBpmirIVwoAB6iTYROMjf6SsE3vHesok8VNcDD7&#xa;SwKORkQRsrLhJq6An5doNp8p/1N8rbYQtpFwJOfLBYxU2RLLhB3QJc4iEBf35eeRV6cGH+IEwB&#xa;B/B9jGzdR3+Fz1gK5CAMbubMpIbADuqcryZ/m7TYCJ2YCJChgKw954u01Vdsw6hKPdUEC5mntv&#xa;zgMms4KxgZDA/xsQx4BEAdFTXGNO3N+F7guIuynQE9nKYmAORW4719hr9mzsVQJ6BkrMCfidGI&#xa;ypwg6ZcrE10dPYHcXQ1EnEobltJktsXfSsVpjfyvM3cej+bROjEOgpZjAR2Xf+FoFjEYlCoOdL&#xa;wNw8DkjfIwK3MPqLwJhxDJK1RRj3Hj/6W5qnMCQiC/FwzKD/5iFhdBbqdU705+cw11CJJXtm7e&#xa;YXVKXQn3fCXEN1lO8G2vZtO2wI+vMtmLV5U7O/2uAYBKhLE+jvLGB+CUwa0EF7fhsGG4B+7VYO&#xa;A3CodVfA7o83YOPQL5Bhto5T5z5wuCHod1AwJxG0r3eF4LyZhk1AP4R5GIMgPrATAfdGE/qRKs&#xa;wvzfUJdLW/PMaJjUE/ZIGJOfhxPxgcEQ+1cYT+GyhmUHX4hGts7OH8ho46IRFKQAf4ow4syI/N&#xa;4wH/+h9QSwcILK36HajdAQCTDQIAUEsBAhQAFAAICAgAB1w3WSyt+h2o3QEAkw0CABEAAAAAAA&#xa;AAAAAAAAAAAAAAAGxpYi9DaGVzc1RyZWUuamFyUEsFBgAAAAABAAEAPwAAAOfdAQAAAA==" ID="ID_279237965" CREATED="1727087633707" MODIFIED="1727087633720"/>
</node>
</node>
<node TEXT="images" POSITION="bottom_or_right" ID="ID_209340361" CREATED="1521562135195" MODIFIED="1578504823302">
<edge COLOR="#7c7c00"/>
<richcontent TYPE="NOTE">
<html>
  <head>
    
  </head>
  <body>
    <p>
      An add-on may define any number of images as child nodes of the images node. The actual image data has to be placed as base64 encoded binary data into the text of a subnode.
    </p>
    <p>
      The images are saved to the <i>${installationbase}/resources/images</i>&#160;directory.
    </p>
    <p>
      
    </p>
    <p>
      The following images should be present:
    </p>
    <ul>
      <li>
        <i>${name}-icon.png</i>, like <i>oldicons-theme-icon.png</i>. This will be used in the app-on overview.
      </li>
      <li>
        <i>${name}-screenshot-1.png</i>, like <i>oldicons-theme-screenshot-1.png</i>. This will be used in the app-on details dialog. Further images can be included but they are not used yet.
      </li>
    </ul>
    <p>
      Images can be added automatically by releaseAddOn.groovy or must be uploaded into the map via the script <i>Tools-&gt;Scripts-&gt;Insert Binary</i>&#160;since they have to be (base64) encoded as simple strings.
    </p>
  </body>
</html></richcontent>
<attribute_layout VALUE_WIDTH="250 pt"/>
</node>
</node>
</map>
