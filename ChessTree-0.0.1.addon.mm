<map version="freeplane 1.7.0">
<!--To view this file, download free mind mapping software Freeplane from http://freeplane.sourceforge.net -->
<node TEXT="ChessTree" FOLDED="false" ID="ID_1869326925" CREATED="1521562113754" MODIFIED="1578504823200" LINK="http://noUpdateURL.com" BACKGROUND_COLOR="#97c7dc" STYLE="oval">
<font SIZE="16" BOLD="true" ITALIC="true"/>
<hook NAME="MapStyle">
    <properties show_icon_for_attributes="true" fit_to_viewport="false" show_note_icons="true" edgeColorConfiguration="#808080ff,#ff0000ff,#0000ffff,#00ff00ff,#ff00ffff,#00ffffff,#7c0000ff,#00007cff,#007c00ff,#7c007cff,#007c7cff,#7c7c00ff"/>

<map_styles>
<stylenode LOCALIZED_TEXT="styles.root_node" STYLE="oval" UNIFORM_SHAPE="true" VGAP_QUANTITY="24.0 pt">
<font SIZE="24"/>
<stylenode LOCALIZED_TEXT="styles.predefined" POSITION="right" STYLE="bubble">
<stylenode LOCALIZED_TEXT="default" ICON_SIZE="12.0 pt" COLOR="#000000" STYLE="fork">
<font NAME="SansSerif" SIZE="10" BOLD="false" ITALIC="false"/>
</stylenode>
<stylenode LOCALIZED_TEXT="defaultstyle.details"/>
<stylenode LOCALIZED_TEXT="defaultstyle.attributes">
<font SIZE="9"/>
</stylenode>
<stylenode LOCALIZED_TEXT="defaultstyle.note" COLOR="#000000" BACKGROUND_COLOR="#ffffff" TEXT_ALIGN="LEFT"/>
<stylenode LOCALIZED_TEXT="defaultstyle.floating">
<edge STYLE="hide_edge"/>
<cloud COLOR="#f0f0f0" SHAPE="ROUND_RECT"/>
</stylenode>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.user-defined" POSITION="right" STYLE="bubble">
<stylenode LOCALIZED_TEXT="styles.topic" COLOR="#18898b" STYLE="fork">
<font NAME="Liberation Sans" SIZE="10" BOLD="true"/>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.subtopic" COLOR="#cc3300" STYLE="fork">
<font NAME="Liberation Sans" SIZE="10" BOLD="true"/>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.subsubtopic" COLOR="#669900">
<font NAME="Liberation Sans" SIZE="10" BOLD="true"/>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.important">
<icon BUILTIN="yes"/>
</stylenode>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.AutomaticLayout" POSITION="right" STYLE="bubble">
<stylenode LOCALIZED_TEXT="AutomaticLayout.level.root" COLOR="#000000" STYLE="oval" SHAPE_HORIZONTAL_MARGIN="10.0 pt" SHAPE_VERTICAL_MARGIN="10.0 pt">
<font SIZE="18"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,1" COLOR="#0033ff">
<font SIZE="16"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,2" COLOR="#00b439">
<font SIZE="14"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,3" COLOR="#990000">
<font SIZE="12"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,4" COLOR="#111111">
<font SIZE="10"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,5"/>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,6"/>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,7"/>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,8"/>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,9"/>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,10"/>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,11"/>
</stylenode>
</stylenode>
</map_styles>
</hook>
<hook NAME="AutomaticEdgeColor" COUNTER="11" RULE="ON_BRANCH_CREATION"/>
<attribute_layout NAME_WIDTH="107.99999678134928 pt" VALUE_WIDTH="134.9999959766866 pt"/>
<attribute NAME="name" VALUE="chessTree"/>
<attribute NAME="version" VALUE="0.0.1"/>
<attribute NAME="author" VALUE="Gergely Kiss"/>
<attribute NAME="freeplaneVersionFrom" VALUE="1.7.4"/>
<attribute NAME="freeplaneVersionTo" VALUE=""/>
<attribute NAME="updateUrl" VALUE="http://noUpdateURL.com" OBJECT="java.net.URI|http://noUpdateURL.com"/>
<richcontent TYPE="NOTE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      The homepage of this add-on should be set as the link of the root node.
    </p>
    <p>
      The basic properties of this add-on. They can be used in script names and other attributes, e.g. &quot;${name}.groovy&quot;.
    </p>
    <ul>
      <li>
        name: The name of the add-on, normally a technically one (no spaces, no special characters except _.-).
      </li>
      <li>
        author: Author's name(s) and (optionally) email adresses.
      </li>
      <li>
        version: Since it's difficult to protect numbers like 1.0 from Freeplane's number parser it's advised to prepend a 'v' to the number, e.g. 'v1.0'.
      </li>
      <li>
        freeplane-version-from: The oldest compatible Freeplane version. The add-on will not be installed if the Freeplane version is too old.
      </li>
      <li>
        freeplane-version-to: Normally empty: The newest compatible Freeplane version. The add-on will not be installed if the Freeplane version is too new.
      </li>
      <li>
        updateUrl: URL of the file containing information (version, download url) on the latest version of this add-on. By default: &quot;${homepage}/version.properties&quot;
      </li>
    </ul>
  </body>
</html>
</richcontent>
<node TEXT="description" POSITION="left" ID="ID_752418840" CREATED="1521562135104" MODIFIED="1578504823222">
<edge COLOR="#ff0000"/>
<richcontent TYPE="NOTE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      Description would be awkward to edit as an attribute.
    </p>
    <p>
      So you have to put the add-on description as a child of the <i>'description'</i>&#160;node.
    </p>
    <p>
      To translate the description you have to define a translation for the key 'addons.${name}.description'.
    </p>
  </body>
</html>
</richcontent>
<node ID="ID_281132702" CREATED="1521563587956" MODIFIED="1521563734014"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      This addon is intended to ease the creation and maintenance of mindmaps containing trees for chess movements.
    </p>
    <p>
      
    </p>
    <p>
      0.) Template is available after addon installation from <i><b>File</b></i>&#160; --&gt; <i><b>New map from template...</b></i>&#160;choosing <i><b>template.ChessTree.mm</b></i>. Any additional information can be found in the template.
    </p>
    <p>
      
    </p>
  </body>
</html>
</richcontent>
<attribute_layout VALUE_WIDTH="134.9999959766866 pt"/>
</node>
</node>
<node TEXT="changes" POSITION="left" ID="ID_845634758" CREATED="1521562135109" MODIFIED="1578504823227">
<edge COLOR="#0000ff"/>
<richcontent TYPE="NOTE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      Change log of this add-on: append one node for each noteworthy version and put the details for each version into a child node.
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="license" FOLDED="true" POSITION="left" ID="ID_1331637895" CREATED="1521562135113" MODIFIED="1578504823230">
<edge COLOR="#00ff00"/>
<richcontent TYPE="NOTE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      The add-ons's license that the user has to accept before she can install it.
    </p>
    <p>
      
    </p>
    <p>
      The License text has to be entered as a child of the <i>'license'</i>&#160;node, either as plain text or as HTML.
    </p>
  </body>
</html>
</richcontent>
<node TEXT="&#xa;This add-on is free software: you can redistribute it and/or modify&#xa;it under the terms of the GNU General Public License as published by&#xa;the Free Software Foundation, either version 2 of the License, or&#xa;(at your option) any later version.&#xa;&#xa;This program is distributed in the hope that it will be useful,&#xa;but WITHOUT ANY WARRANTY; without even the implied warranty of&#xa;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the&#xa;GNU General Public License for more details.&#xa;" ID="ID_1555852289" CREATED="1521562135117" MODIFIED="1521566722845"/>
</node>
<node TEXT="preferences.xml" POSITION="left" ID="ID_136508631" CREATED="1521562135121" MODIFIED="1578504823234">
<edge COLOR="#ff00ff"/>
<richcontent TYPE="NOTE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      <font color="#000000" face="SansSerif, sans-serif">The child node contains the add-on configuration as an extension to mindmapmodemenu.xml (in Tools-&gt;Preferences-&gt;Add-ons). </font>
    </p>
    <p>
      <font color="#000000" face="SansSerif, sans-serif">Every property in the configuration should receive a default value in <i>default.properties</i>&#160;node.</font>
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="default.properties" POSITION="left" ID="ID_1494843788" CREATED="1521562135125" MODIFIED="1578504823238">
<edge COLOR="#00ffff"/>
<richcontent TYPE="NOTE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      These properties are used for:
    </p>
    <ul>
      <li>
        Each property defined in the preferences should have a default value in the attributes of this node.
      </li>
      <li>
        For each menu item with an icon add an attribute with the icon key (use developer tool menuItemInfo) as key and the icon path as value. Example: '${name}.icon': '/images/${name}-icon.png'
      </li>
    </ul>
  </body>
</html>
</richcontent>
<attribute_layout VALUE_WIDTH="250.0 pt"/>
</node>
<node TEXT="translations" POSITION="left" ID="ID_461099033" CREATED="1521562135130" MODIFIED="1578504823241">
<edge COLOR="#7c0000"/>
<richcontent TYPE="NOTE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      The translation keys that this script uses. Define one child node per supported locale. The attributes contain the translations. Define at least
    </p>
    <ul>
      <li>
        'addons.${name}' for the add-on's name
      </li>
      <li>
        'addons.${name}.description' for the description, e.g. in the add-on overview dialog (not necessary for English)
      </li>
      <li>
        'addons.${name}.&lt;scriptname&gt;' for each script since it will be the menu title.
      </li>
    </ul>
  </body>
</html>
</richcontent>
<attribute_layout VALUE_WIDTH="250.0 pt"/>
<node TEXT="en" ID="ID_1779268052" CREATED="1521562135133" MODIFIED="1578239400182" MAX_WIDTH="322.49999056756525 pt" MIN_WIDTH="322.49999056756525 pt">
<attribute_layout NAME_WIDTH="155.99999535083785 pt" VALUE_WIDTH="123.74999631196272 pt"/>
<attribute NAME="addons.${name}" VALUE="ChessTree"/>
<attribute NAME="addons.${name}.updateChessTree" VALUE="Update ChessTree..."/>
<attribute NAME="addons.${name}.pasteBranch" VALUE="Paste branch..."/>
<attribute NAME="addons.${name}.copyPGN" VALUE="Copy PGN..."/>
<attribute NAME="addons.${name}.compareTrees" VALUE="Compare trees"/>
</node>
</node>
<node TEXT="deinstall" POSITION="left" ID="ID_1510539068" CREATED="1521562135137" MODIFIED="1578504823243">
<edge COLOR="#00007c"/>
<richcontent TYPE="NOTE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      List of files and/or directories to remove on uninstall
    </p>
  </body>
</html>
</richcontent>
<attribute_layout NAME_WIDTH="52.499998435378124 pt" VALUE_WIDTH="271.4999919086697 pt"/>
<attribute NAME="delete" VALUE="${installationbase}/addons/${name}.script.xml"/>
<attribute NAME="delete" VALUE="${installationbase}/templates/template.ChessTree.mm"/>
<attribute NAME="delete" VALUE="${installationbase}/lib/ChessTree.jar"/>
<attribute NAME="delete" VALUE="${installationbase}/addons/${name}/scripts/pasteBranch.groovy"/>
<attribute NAME="delete" VALUE="${installationbase}/addons/${name}/scripts/updateChessTree.groovy"/>
<attribute NAME="delete" VALUE="${installationbase}/addons/${name}/scripts/copyPGN.groovy"/>
<attribute NAME="delete" VALUE="${installationbase}/addons/${name}/scripts/compareTrees.groovy"/>
</node>
<node TEXT="scripts" POSITION="right" ID="ID_836008002" CREATED="1521562135167" MODIFIED="1578504823250">
<edge COLOR="#007c00"/>
<richcontent TYPE="NOTE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      An add-on may contain multiple scripts. The node text defines the script name (e.g. insertInlineImage.groovy). The name must have a suffix of a supported script language like .groovy or .js and may only consist of letters and digits. The script properties have to be configured via attributes:
    </p>
    <p>
      
    </p>
    <p>
      * menuLocation: &lt;locationkey&gt;
    </p>
    <p>
      &#160;&#160;&#160;- Defines the menu location, defaults a sub menu 'main_menu_scripting/addons.${name}'.
    </p>
    <p>
      &#160;&#160;&#160;-&#160;Use developer tool menuItemInfo to inspect menu location keys.
    </p>
    <p>
      &#160;&#160;&#160;- This attribute is mandatory
    </p>
    <p>
      
    </p>
    <p>
      * menuTitleKey: &lt;key&gt;
    </p>
    <p>
      &#160;&#160;&#160;- The menu item title will be looked up under the translation key &lt;key&gt; - don't forget to define its translation.
    </p>
    <p>
      &#160;&#160;&#160;- This attribute is mandatory
    </p>
    <p>
      
    </p>
    <p>
      * executionMode: &lt;mode&gt;
    </p>
    <p>
      &#160;&#160;&#160;- The execution mode as described in the Freeplane wiki (http://freeplane.sourceforge.net/wiki/index.php/Scripting)
    </p>
    <p>
      &#160;&#160;&#160;- ON_SINGLE_NODE: Execute the script once. The <i>node</i>&#160;variable is set to the selected node.
    </p>
    <p>
      &#160;&#160;&#160;- ON_SELECTED_NODE: Execute the script n times for n selected nodes, once for each node.
    </p>
    <p>
      &#160;&#160;&#160;- ON_SELECTED_NODE_RECURSIVELY: Execute the script on every selected node and recursively on all of its children.
    </p>
    <p>
      &#160;&#160;&#160;- In doubt use ON_SINGLE_NODE.
    </p>
    <p>
      &#160;&#160;&#160;- This attribute is mandatory
    </p>
    <p>
      
    </p>
    <p>
      * keyboardShortcut: &lt;shortcut&gt;
    </p>
    <p>
      &#160;&#160;&#160;- Optional: keyboard combination / accelerator for this script, e.g. control alt I
    </p>
    <p>
      &#160;&#160;&#160;- Use lowercase letters for modifiers and uppercase for letters. Use no + signs.
    </p>
    <p>
      &#160;&#160;&#160;- The available key names are listed at http://download.oracle.com/javase/1.4.2/docs/api/java/awt/event/KeyEvent.html#VK_0
    </p>
    <p>
      &#160;&#160;&#160;&#160;&#160;In the list only entries with a 'VK_' prefix count. Omit the prefix in the shortcut definition.
    </p>
    <p>
      
    </p>
    <p>
      * Permissions&#160;that the script(s) require, each either false or true:
    </p>
    <p>
      &#160;&#160;&#160;- execute_scripts_without_asking
    </p>
    <p>
      &#160;&#160;&#160;- execute_scripts_without_file_restriction: permission to read files
    </p>
    <p>
      &#160;&#160;&#160;- execute_scripts_without_write_restriction: permission to create/change/delete files
    </p>
    <p>
      &#160;&#160;&#160;- execute_scripts_without_exec_restriction: permission to execute other programs
    </p>
    <p>
      &#160;&#160;&#160;- execute_scripts_without_network_restriction: permission to access the network
    </p>
    <p>
      &#160;&#160;Notes:
    </p>
    <p>
      &#160;&#160;- The set of permissions is fixed.
    </p>
    <p>
      &#160;&#160;- Don't change the attribute names, don't omit one.
    </p>
    <p>
      &#160;&#160;- Set the values either to true or to false
    </p>
    <p>
      &#160;&#160;- In any case set execute_scripts_without_asking to true unless you want to annoy users.
    </p>
  </body>
</html>
</richcontent>
<node TEXT="pasteBranch.groovy" FOLDED="true" ID="ID_1708118480" CREATED="1522494712280" MODIFIED="1578047836752">
<attribute_layout NAME_WIDTH="146.2499956414105 pt" VALUE_WIDTH="134.9999959766866 pt"/>
<attribute NAME="menuTitleKey" VALUE="addons.${name}.pasteBranch"/>
<attribute NAME="menuLocation" VALUE="/menu_bar/addons.${name}"/>
<attribute NAME="executionMode" VALUE="on_single_node"/>
<attribute NAME="keyboardShortcut" VALUE=""/>
<attribute NAME="execute_scripts_without_asking" VALUE="true"/>
<attribute NAME="execute_scripts_without_file_restriction" VALUE="true"/>
<attribute NAME="execute_scripts_without_write_restriction" VALUE="true"/>
<attribute NAME="execute_scripts_without_exec_restriction" VALUE="true"/>
<attribute NAME="execute_scripts_without_network_restriction" VALUE="true"/>
<node TEXT="import org.freeplane.plugin.script.proxy.ScriptUtils&#xd;&#xa;import groovy.swing.SwingBuilder&#xd;&#xa;//import groovy.io.File&#xd;&#xa;import groovy.io.FileType&#xd;&#xa;&#xd;&#xa;import java.awt.FlowLayout as FL&#xd;&#xa;import java.awt.event.ActionEvent;&#xd;&#xa;import java.awt.event.ActionListener;&#xd;&#xa;import java.awt.Dimension;&#xd;&#xa;import java.awt.KeyStroke;&#xd;&#xa;import java.awt.event.KeyEvent;&#xd;&#xa;import java.awt.event.KeyAdapter;&#xd;&#xa;import java.awt.Action;&#xd;&#xa;import java.awt.Font;&#xd;&#xa;&#xd;&#xa;import javax.swing.BoxLayout as BXL&#xd;&#xa;import javax.swing.JFrame&#xd;&#xa;import javax.swing.AbstractAction;&#xd;&#xa;import javax.swing.Action;&#xd;&#xa;import javax.swing.BoxLayout;&#xd;&#xa;import javax.swing.JComponent;&#xd;&#xa;import javax.swing.JList;&#xd;&#xa;import javax.swing.JPanel;&#xd;&#xa;import javax.swing.KeyStroke;&#xd;&#xa;import javax.swing.JScrollPane&#xd;&#xa;import javax.swing.JFileChooser;&#xd;&#xa;&#xd;&#xa;import java.awt.Toolkit&#xd;&#xa;import java.awt.datatransfer.Clipboard&#xd;&#xa;import java.awt.datatransfer.DataFlavor&#xd;&#xa;import java.awt.datatransfer.StringSelection&#xd;&#xa;&#xd;&#xa;import ChessTree.Notation&#xd;&#xa;import ChessTree.NotationTranslator&#xd;&#xa;import ChessTree.ChessTreeSettings&#xd;&#xa;import ChessTree.PositionInterpreter&#xd;&#xa;&#xd;&#xa;/*************/&#xd;&#xa;/** Globals **/&#xd;&#xa;/*************/&#xd;&#xa;chessTreeSettings = new ChessTreeSettings(this.node.map)&#xd;&#xa;/* CONSTANTS */ &#xd;&#xa;SUPPORTED_LANGUAGES = chessTreeSettings.SUPPORTED_LANGUAGES&#xd;&#xa;DICTIONARY = chessTreeSettings.DICTIONARY&#xd;&#xa;&#xd;&#xa;LANGUAGE_CURRENT = chessTreeSettings.get(&quot;chesstree_language&quot;).toString()&#xd;&#xa;&#xd;&#xa;ROOT = this.node.map.root&#xd;&#xa;&#xd;&#xa;/* FUNCTIONS */&#xd;&#xa;&#xd;&#xa;/* Static functions for ClipBoard handling */ &#xd;&#xa;static String getClipboardContents(){    return Toolkit.getDefaultToolkit().getSystemClipboard().getContents(null).getTransferData(DataFlavor.stringFlavor)    }&#xd;&#xa;&#xd;&#xa;def showPGNFileChooser() {&#xd;&#xa;    if(guiPGNFolderRB.selected) {&#xd;&#xa;        JFileChooser chooser = new JFileChooser();&#xd;&#xa;        chooser.setCurrentDirectory(new java.io.File(&quot;.&quot;));&#xd;&#xa;        chooser.setDialogTitle(&quot;Choose directory containing PGN files...&quot;);&#xd;&#xa;        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);&#xd;&#xa;        chooser.setAcceptAllFileFilterUsed(false);&#xd;&#xa;        &#xd;&#xa;        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {&#xd;&#xa;            return chooser.getCurrentDirectory()&#xd;&#xa;        } else {&#xd;&#xa;            return &quot;&quot;&#xd;&#xa;        }&#xd;&#xa;    } else {&#xd;&#xa;        return &quot;&quot;&#xd;&#xa;    }&#xd;&#xa;&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;def switchPGNinput() {&#xd;&#xa;    guiPGNClipboard.editable = guiPGNClipboardRB.selected    &#xd;&#xa;    guiPGNClipboard.enabled = guiPGNClipboardRB.selected&#xd;&#xa;    guiPGNFolder.editable = guiPGNFolderRB.selected&#xd;&#xa;    guiPGNFolder.enabled = guiPGNFolderRB.selected    &#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;def getNodeFEN(aNode) {&#xd;&#xa;    return aNode.attributes.containsKey(&quot;FEN&quot;) ? aNode[&quot;FEN&quot;] : &quot;&quot;//: PositionInterpreter.FEN_STARTING&#xd;&#xa;}&#xd;&#xa;/****************/&#xd;&#xa;/**** M A I N ***/&#xd;&#xa;/****************/&#xd;&#xa;&#xd;&#xa;/* Build Dialog window */&#xd;&#xa;def s = new SwingBuilder()&#xd;&#xa;s.setVariable(&apos;myDialog-properties&apos;,[:])&#xd;&#xa;def vars = s.variables&#xd;&#xa;def disableItem(item) {vars.guiPGNClip.editable = false}&#xd;&#xa;&#xd;&#xa;def dial = s.dialog(title:&quot;Paste branch ...&quot;, id:&apos;myDialog&apos;, modal:true, locationRelativeTo:ui.frame, owner:ui.frame, defaultCloseOperation:JFrame.DISPOSE_ON_CLOSE, pack:true, show:true) {&#xd;&#xa;    panel(id:&apos;pMain&apos;) {&#xd;&#xa;        boxLayout(axis:BXL.Y_AXIS)&#xd;&#xa;                &#xd;&#xa;        guiPGNSource = buttonGroup();&#xd;&#xa;        panel(alignmentX:0f) {&#xd;&#xa;            flowLayout(alignment:FL.LEFT)&#xd;&#xa;            guiPGNClipboardRB = radioButton(preferredSize: [150, 20], text:&quot;PGN from ClipBoard&quot;, buttonGroup:guiPGNSource, selected:true, mouseClicked: {switchPGNinput()});&#xd;&#xa;            scrollPane(horizontalScrollBarPolicy:JScrollPane.HORIZONTAL_SCROLLBAR_NEVER, verticalScrollBarPolicy:JScrollPane.VERTICAL_SCROLLBAR_ALWAYS) {&#xd;&#xa;                guiPGNClipboard = textArea( id:&apos;guiPGNClip&apos;, columns: 60, rows: 6, font: new Font(&quot;Consolas&quot;, Font.PLAIN, 11), text: getClipboardContents(), wrapStyleWord:true, lineWrap:true)&#xd;&#xa;            }&#xd;&#xa;        }  &#x9;&#xd;&#xa;        panel(alignmentX:0f) {&#xd;&#xa;            flowLayout(alignment:FL.LEFT)            &#xd;&#xa;            guiPGNFolderRB = radioButton(preferredSize: [150, 20], text:&quot;PGN from folder&quot;, buttonGroup:guiPGNSource, mouseClicked: {switchPGNinput()});&#xd;&#xa;            guiPGNFolder = textField(columns:60, font: new Font(&quot;Consolas&quot;, Font.PLAIN, 11), mouseClicked: { guiPGNFolder.text = showPGNFileChooser() }, editable: guiPGNFolderRB.selected)    &#xd;&#xa;            &#xd;&#xa;        }&#xd;&#xa;        panel(alignmentX:0f) {&#xd;&#xa;            flowLayout(alignment:FL.LEFT)&#xd;&#xa;            label(&apos;Language&apos;, preferredSize: [60, 24])&#xd;&#xa;&#x9;&#x9;&#x9;comboBox(id: &apos;guiLanguage&apos;, preferredSize: [100, 24], editable:true,&#xd;&#xa;&#x9;&#x9;&#x9;&#x9;items:SUPPORTED_LANGUAGES.collect{it.value}, selectedItem:SUPPORTED_LANGUAGES[LANGUAGE_CURRENT]) &#xd;&#xa;        }         &#xd;&#xa;        panel(alignmentX:0f) {&#xd;&#xa;            flowLayout(alignment:FL.LEFT)&#xd;&#xa;            button(&apos;Paste&apos;, preferredSize:[110, 24],&#xd;&#xa;                   actionPerformed:{&#xd;&#xa;                       vars.dialogResult = &apos;paste&apos;&#xd;&#xa;                       dispose()&#xd;&#xa;            })&#xd;&#xa;            button(&apos;Cancel&apos;, preferredSize:[120, 24],&#xd;&#xa;                   actionPerformed:{&#xd;&#xa;                       vars.dialogResult = &apos;cancel&apos;&#xd;&#xa;                       dispose()&#xd;&#xa;            })&#xd;&#xa;        }&#xd;&#xa;        panel(alignmentX:0f) {&#xd;&#xa;        }&#xd;&#xa;    }&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;/* Handle received data */&#xd;&#xa;pgn = &quot;&quot;&#xd;&#xa;if (vars.dialogResult == &apos;paste&apos;) {&#xd;&#xa;&#x9;/* Update attributes */&#xd;&#xa;    PGN_LANGUAGE = SUPPORTED_LANGUAGES.find{it.value == vars.guiLanguage.getSelectedItem()}.key&#xd;&#xa;    switch (guiPGNSource.getSelection()) {&#xd;&#xa;        case (guiPGNClipboardRB.model):&#xd;&#xa;            pgn = guiPGNClipboard.text&#xd;&#xa;            break;&#xd;&#xa;        case (guiPGNFolderRB.model):&#xd;&#xa;            dir = new File(guiPGNFolder.text)&#xd;&#xa;            if (dir.path != &quot;&quot;) {&#xd;&#xa;                dir.eachDirRecurse() { dir -&gt;  &#xd;&#xa;                    dir.eachFileMatch(~/.*.pgn/) { file -&gt;  &#xd;&#xa;                        pgn += new File(file.getPath()).text&#xd;&#xa;                    }  &#xd;&#xa;                }  &#xd;&#xa;            } // else no folder selected&#xd;&#xa;            &#xd;&#xa;            break;&#xd;&#xa;        default: break;&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;&#xd;&#xa;} else {&#xd;&#xa;    return;&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;/* Initialization */&#xd;&#xa;def translationNeeded = (PGN_LANGUAGE != LANGUAGE_CURRENT)&#xd;&#xa;def nextNodeStack = []&#xd;&#xa;def nextNodeStackAlt = []&#xd;&#xa;def pgnNotation = new Notation(pgn, PGN_LANGUAGE)&#xd;&#xa;def nodeNotation = new Notation(this.node.getDisplayedText(), LANGUAGE_CURRENT) // FEN is retrieved from PGN notation, not needed for nodeNotation&#xd;&#xa;&#xd;&#xa;/* Determine starting node */&#xd;&#xa;// Search for starting node with ancestors first order &#xd;&#xa;def currentNode = this.node&#xd;&#xa;while (pgnNotation.getFEN() != getNodeFEN(currentNode)) {&#xd;&#xa;    currentNode = currentNode.parent&#xd;&#xa;    if (currentNode == null) {&#xd;&#xa;        break;&#xd;&#xa;    }&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;if (currentNode == null) {&#xd;&#xa;    currentNode = this.node.createChild(&quot;Starting position&quot;) // no matching node found&#xd;&#xa;    currentNode.style.setName(&quot;Starting position&quot;)&#xd;&#xa;    currentNode[&quot;FEN&quot;] = pgnNotation.position.FEN&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;/* Walk through PGN */&#xd;&#xa;&#xd;&#xa;while (pgn.length() &gt; 0) {&#xd;&#xa;    if (pgnNotation.getMove() == &quot;&quot;) {&#xd;&#xa;        if (pgnNotation.getResult() != &quot;&quot;) {&#xd;&#xa;            currentNode.createChild(pgnNotation.getResult())&#xd;&#xa;            currentNode.style.setName(&quot;Explanation&quot;)&#xd;&#xa;        }&#xd;&#xa;        break;&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;    /* Parse ChessTree specific comment parts: Odds, Freq, Opening */&#xd;&#xa;    comments = pgnNotation.getComment()&#xd;&#xa;    odds = opening = freq = &quot;&quot;&#xd;&#xa;    &#xd;&#xa;    &#xd;&#xa;    odds = (comments =~ /(?i)\s*odds\s*:\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*;/)&#xd;&#xa;    if (odds.count&gt;0) {&#xd;&#xa;        comments = comments.replace(odds[0][0], &quot;&quot;)&#xd;&#xa;        odds = &quot;${odds[0][1]},${odds[0][2]},${odds[0][3]}&quot;&#xd;&#xa;    } else {&#xd;&#xa;        odds = &quot;&quot;&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;    freq = (comments =~ /(?i)\s*freq\s*:\s*(\d+)\s*;/)&#xd;&#xa;    if (freq.count&gt;0) {&#xd;&#xa;        comments = comments.replace(freq[0][0], &quot;&quot;)&#xd;&#xa;        freq = &quot;${freq[0][1]}&quot;&#xd;&#xa;    } else {&#xd;&#xa;        freq = &quot;&quot;&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;    opening = (comments =~ /(?i)\s*opening\s*:\s*([^;]+)\s*;/)&#xd;&#xa;    if (opening.count&gt;0) {&#xd;&#xa;        comments = comments.replace(opening[0][0], &quot;&quot;)&#xd;&#xa;        opening = &quot;${opening[0][1]}&quot;&#xd;&#xa;    } else {&#xd;&#xa;        opening = &quot;&quot;&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;    nag = pgnNotation.getNAGtext()&#xd;&#xa;    &#xd;&#xa;    //println pgnNotation.getMoveNumber() + &quot; _ &quot; + pgnNotation.getMove() + &quot; _ &quot; + pgnNotation.getComment()&#xd;&#xa;    //println &quot;      &quot; + odds + &quot; _ &quot; + freq + &quot; _ &quot; + opening&#xd;&#xa;    println &quot;*********************&quot;&#xd;&#xa;    println pgnNotation.getNumbering() + &quot; &quot; + pgnNotation.getMove()&#xd;&#xa;&#xd;&#xa;    //println pgnNotation.getRemainingText()&#xd;&#xa;    //println pgnNotation.branchingStarts() + &quot; / &quot; + pgnNotation.branchingEnds()&#xd;&#xa;&#xd;&#xa;    /* Handle translated notation within chesstree */&#xd;&#xa;    if (translationNeeded) {&#xd;&#xa;        pgnNotation.translateTo(LANGUAGE_CURRENT)&#xd;&#xa;        pgnNotation.setLanguage(PGN_LANGUAGE) // language is needed to set back as remainingText is not translated.&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;    /* Process branching */&#xd;&#xa;    def numOfUnusedBranches = pgnNotation.branchingEnds()-pgnNotation.branchingStarts()&#xd;&#xa;    if (numOfUnusedBranches&gt;0) { // Branch ends&#xd;&#xa;        numOfUnusedBranches.times({&#xd;&#xa;            currentNode=nextNodeStack.pop()&#xd;&#xa;            nextNodeStackAlt.pop()&#xd;&#xa;        })&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;    if (pgnNotation.branchingStarts()) { // Branch starts : at least one move is assumed after one &quot;(&quot;, no consecutive &quot;(&quot;-s!&#xd;&#xa;        if (pgnNotation.branchingEnds())&#xd;&#xa;        {&#xd;&#xa;            currentNode = nextNodeStackAlt[0]&#xd;&#xa;        } else {&#xd;&#xa;            nextNodeStackAlt.push(currentNode.parent)&#xd;&#xa;            nextNodeStack.push(currentNode)&#xd;&#xa;            currentNode = currentNode.parent&#xd;&#xa;        }&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;    /* Search for child node matching moveEng, FEN match is assumed */&#xd;&#xa;    matchingChild = currentNode.children.find {&#xd;&#xa;        nodeNotation.set(it.getDisplayedText()) // FEN is retrieved from PGN notation, not needed for nodeNotation&#xd;&#xa;        if (pgnNotation.getMoveEng() == nodeNotation.getMoveEng()) {&#xd;&#xa;            return true // found&#xd;&#xa;        } else {&#xd;&#xa;            return false // not found&#xd;&#xa;        }&#xd;&#xa;        &#xd;&#xa;    }&#xd;&#xa;&#xd;&#xa;    /* Process pgnNotation : node text */&#xd;&#xa;    if (matchingChild == null) {&#xd;&#xa;        // no mathing child found, create it&#xd;&#xa;        currentNode = currentNode.createChild()&#xd;&#xa;        currentNode.text = pgnNotation.getMove()&#xd;&#xa;    } else {&#xd;&#xa;        currentNode = matchingChild // matching child found, advance map processing&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;    /* Process pgnNotation : node[&quot;FEN&quot;] */&#xd;&#xa;    /* Update FEN from pgn even if matching child was found and its FEN was correct. &#xd;&#xa;    FEN counters, enpassant, castling infos are guaranteed by starting position search at script startup. */&#xd;&#xa;    currentNode[&quot;FEN&quot;] = pgnNotation.positionAfterMove.FEN    &#xd;&#xa;&#xd;&#xa;    /* Process pgnNotation : opening */&#xd;&#xa;    if (opening != &quot;&quot;) {&#xd;&#xa;        currentNode[&quot;Opening&quot;] = opening&#xd;&#xa;        if (currentNode.children.findAll{it.style.name==&quot;Opening&quot;}.size() &gt; 0){&#xd;&#xa;            currentNode.children.findAll{it.style.name==&quot;Opening&quot;}[-1].text = opening&#xd;&#xa;        } else {&#xd;&#xa;            opening = currentNode.createChild(opening)&#xd;&#xa;            opening.style.setName(&quot;Opening&quot;)&#xd;&#xa;            opening.setFree(true)&#xd;&#xa;        }&#xd;&#xa;    }&#xd;&#xa;    /* Process pgnNotation : odds */&#xd;&#xa;    if (odds != &quot;&quot;) {&#xd;&#xa;        currentNode[&quot;Odds&quot;] = odds&#xd;&#xa;        //TODO: wait for OddsView class, implement here update oddsNode, &#xd;&#xa;    }&#xd;&#xa;&#xd;&#xa;    /* Process pgnNotation : frequency */&#xd;&#xa;    if (freq != &quot;&quot;) {&#xd;&#xa;        currentNode[&quot;Freq&quot;] = freq&#xd;&#xa;        //TODO: wait for ConnectorView class, implement here update connector&#xd;&#xa;    }&#xd;&#xa;    /* Process pgnNotation : nag */&#xd;&#xa;    if (nag != &quot;&quot;) {&#xd;&#xa;        currentNode[&quot;NAG&quot;] = nag&#xd;&#xa;        pgnNotation.getNAGs().each {&#xd;&#xa;            def nagTxt = NotationTranslator.getNAG((it-&quot;\$&quot;).toInteger(), &quot;sym&quot;)&#xd;&#xa;            if (currentNode.details) {&#xd;&#xa;                currentNode.setDetailsText(&quot;${currentNode.details.to.plain}\n${nagTxt}&quot;)&#xd;&#xa;            } else {&#xd;&#xa;                currentNode.setDetailsText(nagTxt)&#xd;&#xa;            }&#xd;&#xa;        }&#xd;&#xa;    }   &#xd;&#xa;    /* Process pgnNotation : comments */&#xd;&#xa;    if (comments != &quot;&quot;) {&#xd;&#xa;        commentsNode = currentNode.createChild(&quot;&quot;)&#xd;&#xa;        commentsNode.style.setName(&quot;Explanation&quot;)&#xd;&#xa;        commentsNode.setFree(true)&#xd;&#xa;        commentsNode.setDetailsText(comments)&#xd;&#xa;        commentsNode.setHorizontalShift(70)&#xd;&#xa;        commentsNode.setVerticalShift(10)&#xd;&#xa;    }&#xd;&#xa;   &#xd;&#xa;    /* Advance pgnNotation processing */&#xd;&#xa;    pgn = pgnNotation.getRemainingText()&#xd;&#xa;    pgnNotation.set(pgn)&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;return 0" ID="ID_694370434" CREATED="1578585850653" MODIFIED="1578585850726"/>
</node>
<node TEXT="updateChessTree.groovy" FOLDED="true" ID="ID_728751355" CREATED="1538315999856" MODIFIED="1578047832451">
<attribute_layout VALUE_WIDTH="134.9999959766866 pt"/>
<attribute NAME="menuTitleKey" VALUE="addons.${name}.updateChessTree"/>
<attribute NAME="menuLocation" VALUE="/menu_bar/addons.${name}"/>
<attribute NAME="executionMode" VALUE="on_single_node"/>
<attribute NAME="keyboardShortcut" VALUE=""/>
<attribute NAME="execute_scripts_without_asking" VALUE="true"/>
<attribute NAME="execute_scripts_without_file_restriction" VALUE="true"/>
<attribute NAME="execute_scripts_without_write_restriction" VALUE="true"/>
<attribute NAME="execute_scripts_without_exec_restriction" VALUE="true"/>
<attribute NAME="execute_scripts_without_network_restriction" VALUE="true"/>
<node TEXT="import org.freeplane.features.map.MapModel;&#xd;&#xa;import org.freeplane.features.attribute.AttributeRegistry;&#xd;&#xa;import org.freeplane.features.attribute.AttributeRegistryElement;&#xd;&#xa;&#xd;&#xa;import org.freeplane.plugin.script.proxy.ScriptUtils&#xd;&#xa;import groovy.swing.SwingBuilder&#xd;&#xa;import java.awt.FlowLayout as FL&#xd;&#xa;import java.awt.event.ActionEvent;&#xd;&#xa;import java.awt.event.ActionListener;&#xd;&#xa;import java.awt.Dimension;&#xd;&#xa;import java.awt.KeyStroke;&#xd;&#xa;import java.awt.event.KeyEvent;&#xd;&#xa;import java.awt.event.KeyAdapter;&#xd;&#xa;import java.awt.Action;&#xd;&#xa;&#xd;&#xa;import javax.swing.BoxLayout as BXL&#xd;&#xa;import javax.swing.JFrame&#xd;&#xa;import javax.swing.AbstractAction;&#xd;&#xa;import javax.swing.Action;&#xd;&#xa;import javax.swing.BoxLayout;&#xd;&#xa;import javax.swing.JComponent;&#xd;&#xa;import javax.swing.JList;&#xd;&#xa;import javax.swing.JPanel;&#xd;&#xa;import javax.swing.KeyStroke;&#xd;&#xa;import groovy.transform.Field&#xd;&#xa;&#xd;&#xa;import ChessTree.Notation&#xd;&#xa;import ChessTree.NotationTranslator&#xd;&#xa;import ChessTree.ChessTreeSettings&#xd;&#xa;import ChessTree.OddsView&#xd;&#xa;import ChessTree.ConnectorView&#xd;&#xa;import ChessTree.PositionInterpreter&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;/*************/&#xd;&#xa;/** Globals **/&#xd;&#xa;/*************/&#xd;&#xa;cts = new ChessTreeSettings(this.node.map)&#xd;&#xa;&#xd;&#xa;DICTIONARY = cts.DICTIONARY&#xd;&#xa;&#xd;&#xa;ROOT = this.node.map.root&#xd;&#xa;LANGUAGE_CURRENT = cts.get(&quot;chesstree_language&quot;)&#xd;&#xa;NUMBERING_CURRENT = cts.get(&quot;chesstree_numbering&quot;)&#xd;&#xa;NAG_CURRENT = cts.get(&quot;chesstree_NAG&quot;)&#xd;&#xa;CONNECTOR_CURRENT = cts.get(&quot;chesstree_connectors&quot;)&#xd;&#xa;ODDS_CURRENT = cts.get(&quot;chesstree_odds&quot;)&#xd;&#xa;&#xd;&#xa;/* Globals for odds image updater */ &#xd;&#xa;mapfile=this.node.map.file&#xd;&#xa;mapfilePath = mapfile.parent.replace(&quot;\\&quot;, &quot;/&quot;)&#xd;&#xa;mapfileName = mapfile.name.lastIndexOf(&apos;.&apos;).with {it != -1 ? mapfile.name[0..&lt;it] : mapfile.name}&#xd;&#xa;imgAbsPath = mapfilePath + &quot;/img_&quot; + mapfileName&#xd;&#xa;imgRelPath = &quot;./img_&quot; + mapfileName&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;/*****************/&#xd;&#xa;/**** Settings ***/ &#xd;&#xa;/*****************/&#xd;&#xa;&#xd;&#xa;/* Build Dialog window */&#xd;&#xa;def s = new SwingBuilder()&#xd;&#xa;s.setVariable(&apos;myDialog-properties&apos;,[:])&#xd;&#xa;def vars = s.variables&#xd;&#xa;def disableItem(item) {item.enabled = !item.enabled}&#xd;&#xa;def dial = s.dialog(title:&quot;ChessTree settings...&quot;, id:&apos;myDialog&apos;, modal:true, &#xd;&#xa;            locationRelativeTo:ui.frame, owner:ui.frame, defaultCloseOperation:JFrame.DISPOSE_ON_CLOSE, &#xd;&#xa;            preferredSize: [280, 300], pack:true, show:true) {&#xd;&#xa;    panel(id:&apos;pMain&apos;) {&#xd;&#xa;        boxLayout(axis:BXL.Y_AXIS)&#xd;&#xa;        /* &#xd;&#xa;        Text: Current language is ___. Check tooltip if you don&apos;t agree. &#xd;&#xa;        Tooltip: If the language of notation in the mindmap is inconsistent you should edit the mindmap manually to make its language consistent. &#xd;&#xa;        Otherwise change below settings and click on &quot;Save&quot;. It affects settings saved in Mindmap properties, Mindmap content will not change. &#xd;&#xa;        */&#xd;&#xa;        panel(alignmentX:0f) {&#xd;&#xa;            flowLayout(alignment:FL.LEFT)&#xd;&#xa;            label(&apos;Language&apos;, preferredSize: [120, 24], mouseClicked:{disableItem(guiCategory)})&#xd;&#xa;&#x9;&#x9;&#x9;comboBox(id: &apos;chesstree_language&apos;, preferredSize: [100, 24], editable:true,&#xd;&#xa;&#x9;&#x9;&#x9;&#x9;items:cts.SUPPORTED_LANGUAGES.collect{it.value}, selectedItem:cts.SUPPORTED_LANGUAGES[LANGUAGE_CURRENT]) &#xd;&#xa;        }  &#x9;&#x9;&#xd;&#xa;        panel(alignmentX:0f) {&#xd;&#xa;            flowLayout(alignment:FL.LEFT)&#xd;&#xa;            label(&apos;Numbering&apos;, preferredSize: [120, 24], mouseClicked:{disableItem(guiCategory)})&#xd;&#xa;&#x9;&#x9;&#x9;comboBox(id: &apos;chesstree_numbering&apos;, preferredSize: [100, 24], editable:true,&#xd;&#xa;&#x9;&#x9;&#x9;&#x9;items:cts.SUPPORTED_NUMBERING.collect{it.value}, selectedItem:cts.SUPPORTED_NUMBERING[NUMBERING_CURRENT]) &#xd;&#xa;        }  &#x9;&#x9;&#xd;&#xa;        panel(alignmentX:0f) {&#xd;&#xa;            flowLayout(alignment:FL.LEFT)&#xd;&#xa;            label(&apos;NAG&apos;, preferredSize: [120, 24], mouseClicked:{disableItem(guiCategory)})&#xd;&#xa;&#x9;&#x9;&#x9;comboBox(id: &apos;chesstree_NAG&apos;, preferredSize: [100, 24], editable:true,&#xd;&#xa;&#x9;&#x9;&#x9;&#x9;items:cts.SUPPORTED_NAG.collect{it.value}, selectedItem:cts.SUPPORTED_NAG[NAG_CURRENT]) &#xd;&#xa;        }  &#x9;&#x9;&#x9;&#xd;&#xa;        panel(alignmentX:0f) {&#xd;&#xa;            flowLayout(alignment:FL.LEFT)&#xd;&#xa;            label(&apos;Connectors&apos;, preferredSize: [120, 24], mouseClicked:{disableItem(guiCategory)})&#xd;&#xa;&#x9;&#x9;&#x9;comboBox(id: &apos;chesstree_connectors&apos;, preferredSize: [100, 24], editable:true,&#xd;&#xa;&#x9;&#x9;&#x9;&#x9;items:cts.SUPPORTED_CONNECTOR.collect{it.value}, selectedItem:cts.SUPPORTED_CONNECTOR[CONNECTOR_CURRENT]) &#xd;&#xa;        }  &#x9;&#x9;&#xd;&#xa;        panel(alignmentX:0f) {&#xd;&#xa;            flowLayout(alignment:FL.LEFT)&#xd;&#xa;            label(&apos;Odds&apos;, preferredSize: [120, 24], mouseClicked:{disableItem(guiCategory)})&#xd;&#xa;&#x9;&#x9;&#x9;comboBox(id: &apos;chesstree_odds&apos;, preferredSize: [100, 24], editable:true,&#xd;&#xa;&#x9;&#x9;&#x9;&#x9;items:cts.SUPPORTED_ODDS.collect{it.value}, selectedItem:cts.SUPPORTED_ODDS[ODDS_CURRENT]) &#xd;&#xa;        }  &#x9;&#x9;&#xd;&#xa;        panel(alignmentX:0f) {&#xd;&#xa;            flowLayout(alignment:FL.LEFT)&#xd;&#xa;            button(&apos;Save &amp; Apply&apos;, preferredSize:[120, 24],&#xd;&#xa;                   actionPerformed:{&#xd;&#xa;                       vars.dialogResult = &apos;save&amp;apply&apos;&#xd;&#xa;                       dispose()&#xd;&#xa;            })&#xd;&#xa;            button(&apos;Save&apos;, preferredSize:[120, 24],&#xd;&#xa;                   actionPerformed:{&#xd;&#xa;                       vars.dialogResult = &apos;save&apos;&#xd;&#xa;                       dispose()&#xd;&#xa;            })&#xd;&#xa;        }&#xd;&#xa;        panel(alignmentX:0f) {&#xd;&#xa;            button(&apos;Cancel&apos;, preferredSize:[120, 24],&#xd;&#xa;                   actionPerformed:{&#xd;&#xa;                       vars.dialogResult = &apos;cancel&apos;&#xd;&#xa;                       dispose()&#xd;&#xa;            })&#xd;&#xa;        }&#xd;&#xa;    }&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;/*************/&#xd;&#xa;/**** Main ***/ &#xd;&#xa;/*************/&#xd;&#xa;logger.createLogger() &#xd;&#xa;&#xd;&#xa;&#xd;&#xa;if (vars.dialogResult == &apos;save&amp;apply&apos;) {&#xd;&#xa;    /* Handle received data */&#xd;&#xa;&#xd;&#xa;    def language_next = cts.SUPPORTED_LANGUAGES.find{it.value == vars[&quot;chesstree_language&quot;].getSelectedItem()}.key&#xd;&#xa;    def numbering_next = cts.SUPPORTED_NUMBERING.find{it.value == vars[&quot;chesstree_numbering&quot;].getSelectedItem()}.key&#xd;&#xa;    def NAG_next = cts.SUPPORTED_NAG.find{it.value == vars[&quot;chesstree_NAG&quot;].getSelectedItem()}.key&#xd;&#xa;    def connector_next = cts.SUPPORTED_CONNECTOR.find{it.value == vars[&quot;chesstree_connectors&quot;].getSelectedItem()}.key&#xd;&#xa;    def odds_next = cts.SUPPORTED_ODDS.find{it.value == vars[&quot;chesstree_odds&quot;].getSelectedItem()}.key&#xd;&#xa;&#xd;&#xa;    if ((LANGUAGE_CURRENT != language_next) || (NUMBERING_CURRENT != numbering_next)) {&#xd;&#xa;        // notation text modification is needed&#xd;&#xa;        updateNotation(language_next, numbering_next)&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;    if (NAG_CURRENT != NAG_next) {&#xd;&#xa;        // TODO: updateDetails(hide/show)...&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;    if (ODDS_CURRENT != odds_next) {&#xd;&#xa;        oddsView = new OddsView(this.node.map)&#xd;&#xa;        oddsView.updateCharts(odds_next==&quot;show&quot;)&#xd;&#xa;    }&#xd;&#xa;    if (CONNECTOR_CURRENT != connector_next) {&#xd;&#xa;        connectorView = new ConnectorView(this.node.map)&#xd;&#xa;        connectorView.updateConnectors(connector_next==&quot;freq&quot;)&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;    &#xd;&#xa;    /* Update properties */&#xd;&#xa;    saveSettings(vars)&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;if (vars.dialogResult == &apos;save&apos;) {&#xd;&#xa;    saveSettings(vars)&#xd;&#xa;}&#xd;&#xa;return 0&#xd;&#xa;&#xd;&#xa;/*************/&#xd;&#xa;/* Functions */&#xd;&#xa;/*************/&#xd;&#xa;def saveSettings(vars) {&#xd;&#xa;    cts.getSupportedProperties().each{&#xd;&#xa;        def value = &quot;&quot;&#xd;&#xa;        value = vars[it].getSelectedItem()&#xd;&#xa;        cts.setByValue(it, value)&#xd;&#xa;    }&#xd;&#xa;    this.node.map.save(true) // true: allow interaction&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;&#xd;&#xa;def updateNotation(language_next, numbering_next) {&#xd;&#xa;    def notation = new Notation(&quot;&quot;, LANGUAGE_CURRENT)&#xd;&#xa;    /* Translate each node */&#xd;&#xa;    c.findAll{it.hasStyle(&quot;White moves&quot;) || it.hasStyle(&quot;Black moves&quot;)}.each {aNode-&gt;&#xd;&#xa;        /* Breadth first order guarantees existence FEN tag of parent */&#xd;&#xa;        def fen = PositionInterpreter.FEN_DEFAULT&#xd;&#xa;        &#xd;&#xa;        if (aNode.parent != null ) {&#xd;&#xa;            if (!aNode.parent.attributes.getNames().contains(&quot;FEN&quot;)) {&#xd;&#xa;                aNode.parent[&quot;FEN&quot;] = PositionInterpreter.FEN_STARTING&#xd;&#xa;            } &#xd;&#xa;            fen = aNode.parent[&quot;FEN&quot;]&#xd;&#xa;        }&#xd;&#xa;                &#xd;&#xa;        def text = aNode.getDisplayedText()&#xd;&#xa;        if ((text != null) &amp;&amp; (text != &quot;&quot;)) {&#xd;&#xa;            notation.position.set(fen)&#xd;&#xa;            notation.set(text)&#xd;&#xa;        }&#xd;&#xa;        text = &quot;&lt;html&gt;&lt;body&gt;&quot;&#xd;&#xa;        if (NUMBERING_CURRENT != numbering_next) {&#xd;&#xa;            if ((numbering_next == &quot;white&quot;) &amp;&amp; aNode.hasStyle(&quot;White moves&quot;)) {&#xd;&#xa;                text += &quot;&quot;&quot;&lt;p&gt;&lt;font size=&quot;1&quot;&gt;${notation.getNumbering()}&lt;/font&gt;&lt;/p&gt;&quot;&quot;&quot;&#xd;&#xa;            } else if (numbering_next == &quot;both&quot;) {&#xd;&#xa;                text += &quot;&quot;&quot;&lt;p&gt;&lt;font size=&quot;1&quot;&gt;${notation.getNumbering()}&lt;/font&gt;&lt;/p&gt;&quot;&quot;&quot;&#xd;&#xa;            } else { // &quot;Black moves&quot; and &quot;white&quot;, or &quot;none&quot;&#xd;&#xa;                // nothing to do &#xd;&#xa;            }&#xd;&#xa;        }&#xd;&#xa;        if (LANGUAGE_CURRENT != language_next) {&#xd;&#xa;            notation.translateTo(language_next)&#xd;&#xa;        }&#xd;&#xa;        text += &quot;&quot;&quot;&lt;p&gt;${notation.getMove()}&lt;/p&gt;&quot;&quot;&quot;&#xd;&#xa;        text += &quot;&lt;/body&gt;&lt;/html&gt;&quot;&#xd;&#xa;        &#xd;&#xa;        aNode.setText(text)&#xd;&#xa;        aNode[&quot;FEN&quot;] = notation.positionAfterMove&#xd;&#xa;    }&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;" ID="ID_709436432" CREATED="1578585850729" MODIFIED="1578585850744"/>
</node>
<node TEXT="copyPGN.groovy" FOLDED="true" ID="ID_520278260" CREATED="1578047737614" MODIFIED="1578047866316">
<attribute_layout VALUE_WIDTH="250.0 pt"/>
<attribute NAME="menuTitleKey" VALUE="addons.${name}.copyPGN"/>
<attribute NAME="menuLocation" VALUE="/menu_bar/addons.${name}"/>
<attribute NAME="executionMode" VALUE="on_single_node"/>
<attribute NAME="keyboardShortcut" VALUE=""/>
<attribute NAME="execute_scripts_without_asking" VALUE="true"/>
<attribute NAME="execute_scripts_without_file_restriction" VALUE="true"/>
<attribute NAME="execute_scripts_without_write_restriction" VALUE="true"/>
<attribute NAME="execute_scripts_without_exec_restriction" VALUE="true"/>
<attribute NAME="execute_scripts_without_network_restriction" VALUE="true"/>
<node TEXT="import java.awt.Toolkit&#xd;&#xa;import java.awt.datatransfer.Clipboard&#xd;&#xa;import java.awt.datatransfer.DataFlavor&#xd;&#xa;import java.awt.datatransfer.StringSelection&#xd;&#xa;import ChessTree.Notation&#xd;&#xa;import ChessTree.PositionInterpreter&#xd;&#xa;import ChessTree.ChessTreeSettings&#xd;&#xa;&#xd;&#xa;/*************/&#xd;&#xa;/** Globals **/&#xd;&#xa;/*************/&#xd;&#xa;chessTreeSettings = new ChessTreeSettings(this.node.map)&#xd;&#xa;LANGUAGE_CURRENT = chessTreeSettings.get(&quot;chesstree_language&quot;).toString()&#xd;&#xa;&#xd;&#xa;static void setClipboardContents(final String contents){    Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(contents), null)    }&#xd;&#xa;&#xd;&#xa;PGN = &quot;&quot;&#xd;&#xa;&#xd;&#xa;currentNotation = new Notation(&quot;&quot;, LANGUAGE_CURRENT)&#xd;&#xa;currentNode=this.node&#xd;&#xa;currentNode=currentNode.findAllDepthFirst().find{it.attributes.containsKey(&quot;FEN&quot;) &amp;&amp; it.hasStyle(&quot;Starting position&quot;)}&#xd;&#xa;def walkThrough(aNode, isNumberingNeeded) {&#xd;&#xa;    def children = aNode.children.findAll{it.attributes.containsKey(&quot;FEN&quot;) &amp;&amp; (it.hasStyle(&quot;White moves&quot;)||it.hasStyle(&quot;Black moves&quot;))}&#xd;&#xa;    def numberingNeeded = isNumberingNeeded&#xd;&#xa;    if (children.size()&gt;1) {&#xd;&#xa;        currentNotation.setWithFEN(children[0].parent[&quot;FEN&quot;].toString(), children[0].text)&#xd;&#xa;        numberingNeeded |= (currentNotation.getColor() == &quot;white&quot;)&#xd;&#xa;        PGN += (numberingNeeded?(currentNotation.getNumbering() + &quot; &quot;):&quot;&quot;) + children[0].text + &quot; &quot;&#xd;&#xa;        (children-children[0]).each {&#xd;&#xa;            currentNotation.setWithFEN(it.parent[&quot;FEN&quot;].toString(), it.text)&#xd;&#xa;            PGN += &quot;(&quot; + currentNotation.getNumbering() + &quot; &quot; + it.text + &quot; &quot;&#xd;&#xa;            walkThrough(it, false)&#xd;&#xa;        }&#xd;&#xa;        walkThrough(children[0], true)&#xd;&#xa;    } else if (children.size==1) {&#xd;&#xa;        currentNotation.setWithFEN(children[0].parent[&quot;FEN&quot;].toString(), children[0].text)&#xd;&#xa;        numberingNeeded |= (currentNotation.getColor() == &quot;white&quot;)&#xd;&#xa;        PGN += (numberingNeeded?(currentNotation.getNumbering() + &quot; &quot;):&quot;&quot;) + children[0].text + &quot; &quot;&#xd;&#xa;        walkThrough(children[0], false)&#xd;&#xa;    } else {&#xd;&#xa;        PGN = PGN[0..-2]&#xd;&#xa;        PGN += &quot;) &quot;&#xd;&#xa;    }&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;walkThrough(currentNode, true)&#xd;&#xa;PGN = PGN[0..-3] // last &quot;)&quot; is removed&#xd;&#xa;println PGN&#xd;&#xa;setClipboardContents(PGN)" ID="ID_1319786068" CREATED="1578585850744" MODIFIED="1578585850747"/>
</node>
<node TEXT="compareTrees.groovy" FOLDED="true" ID="ID_627302378" CREATED="1578239373684" MODIFIED="1578585827221">
<attribute_layout VALUE_WIDTH="250.0 pt"/>
<attribute NAME="menuTitleKey" VALUE="addons.${name}.compareTrees"/>
<attribute NAME="menuLocation" VALUE="/menu_bar/addons.${name}"/>
<attribute NAME="executionMode" VALUE="on_single_node"/>
<attribute NAME="keyboardShortcut" VALUE=""/>
<attribute NAME="execute_scripts_without_asking" VALUE="true"/>
<attribute NAME="execute_scripts_without_file_restriction" VALUE="true"/>
<attribute NAME="execute_scripts_without_write_restriction" VALUE="true"/>
<attribute NAME="execute_scripts_without_exec_restriction" VALUE="true"/>
<attribute NAME="execute_scripts_without_network_restriction" VALUE="true"/>
<node TEXT="if (c.getSelecteds().size()!=2) {&#xd;&#xa;    ui.showMessage(&quot;Select exactly 2 nodes with style \&quot;Starting position\&quot;.&quot;, 0)&#xd;&#xa;    return 1&#xd;&#xa;} else {&#xd;&#xa;    if (!c.getSelecteds().every{it.hasStyle(&quot;Starting position&quot;)}) {&#xd;&#xa;        ui.showMessage(&quot;Select exactly 2 nodes with style \&quot;Starting position\&quot;.&quot;, 0)&#xd;&#xa;        return 2&#xd;&#xa;    }&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;original = c.getSelecteds()[0]&#xd;&#xa;modified = c.getSelecteds()[1]&#xd;&#xa;merged = original.parent.createChild(&quot;Merge&quot;)&#xd;&#xa;merged.style.setName(&quot;Starting position&quot;)&#xd;&#xa;merged[&quot;FEN&quot;] = original[&quot;FEN&quot;] // TODO compare FENs!&#xd;&#xa;// TODO add position comparison, in case of a position match add connector&#xd;&#xa;merged[&quot;Status&quot;] = &quot;&quot;&quot;= def icons = this.node.findAllDepthFirst().findAll{it.hasStyle(&quot;Diff.Added&quot;)||it.hasStyle(&quot;Diff.Priority&quot;)||it.hasStyle(&quot;Diff.Removed&quot;)}.collect{it.style.getStyleNode().icons.first}.unique()&#xd;&#xa;this.node.icons.clear()&#xd;&#xa;this.node.icons.addAll(icons)&#xd;&#xa;return this.node.icons.getIcons().size()?&quot;In progress&quot;:&quot;Completed.&quot;&#xd;&#xa;&quot;&quot;&quot;&#xd;&#xa;merged[&quot;script.ChessTree&quot;] = &quot;&quot;&quot;&#xd;&#xa;mergeFlags = this.node.findAllDepthFirst().findAll{it.hasStyle(&quot;Diff.Added&quot;)||it.hasStyle(&quot;Diff.Priority&quot;)||it.hasStyle(&quot;Diff.Removed&quot;)}.each{&#xd;&#xa;    it.delete()&#xd;&#xa;}&#xd;&#xa;return 0&#xd;&#xa;&quot;&quot;&quot;&#xd;&#xa;merged.link.text=&quot;menuitem:_\$ExecuteScriptForSelectionAction\$0&quot;&#xd;&#xa;&#xd;&#xa;def walkThrough(orig, modd, merg) {&#xd;&#xa;    def origChildrenTxt = orig.children.collect{it.text}&#xd;&#xa;    def moddChildrenTxt = modd.children.collect{it.text}&#xd;&#xa;    def removedChildrenTxt = origChildrenTxt-moddChildrenTxt&#xd;&#xa;    def addedChildrenTxt = moddChildrenTxt-origChildrenTxt&#xd;&#xa;    def commonChildrenTxt = origChildrenTxt.intersect(moddChildrenTxt)&#xd;&#xa;    /* Check branch priority */&#xd;&#xa;    // index distance of common items are the same&#xd;&#xa;    if (commonChildrenTxt.collect{origChildrenTxt.indexOf(it)-moddChildrenTxt.indexOf(it)}.unique().size()&gt;1) {&#xd;&#xa;        def info=merg.createChild(&quot;&quot;)&#xd;&#xa;        info.style.setName(&quot;Diff.Priority&quot;)&#xd;&#xa;        info.setFree(true)&#xd;&#xa;        info.setVerticalShift(-30)&#xd;&#xa;    }&#xd;&#xa;    /* DEBUG */&#xd;&#xa;    //println &quot;${orig}&quot;&#xd;&#xa;    //println &quot;   Added: ${addedChildrenTxt}&quot;&#xd;&#xa;    //println &quot;   Removed: ${removedChildrenTxt}&quot;&#xd;&#xa;    //println &quot;   Common: ${commonChildrenTxt}&quot;&#xd;&#xa;    &#xd;&#xa;    /* Check added */&#xd;&#xa;    addedChildrenTxt.collect{txt-&gt;modd.children.findAll{txt==it.text}}.each{ &#xd;&#xa;        def info = merg.appendBranch(it)&#xd;&#xa;        info = info.createChild(&quot;&quot;)&#xd;&#xa;        info.style.setName(&quot;Diff.Added&quot;)&#xd;&#xa;        info.setFree(true)&#xd;&#xa;        info.setVerticalShift(-30)&#xd;&#xa;    }&#xd;&#xa;    /* Check removed */&#xd;&#xa;    removedChildrenTxt.collect{txt-&gt;orig.children.findAll{txt==it.text}}.each{ &#xd;&#xa;        def info = merg.appendBranch(it)&#xd;&#xa;        info = info.createChild(&quot;&quot;)&#xd;&#xa;        info.style.setName(&quot;Diff.Removed&quot;)&#xd;&#xa;        info.setFree(true)&#xd;&#xa;        info.setVerticalShift(-30)&#xd;&#xa;    }&#xd;&#xa;    &#xd;&#xa;    /* Unchanged: copy */&#xd;&#xa;    commonChildrenTxt.collect{txt-&gt;&#xd;&#xa;        [orig:orig.children.findAll{txt==it.text}[0],&#xd;&#xa;         modd:modd.children.findAll{txt==it.text}[0]]&#xd;&#xa;    }.each {&#xd;&#xa;        merg = merg.appendChild(it.orig)&#xd;&#xa;        walkThrough(it.orig, it.modd, merg)&#xd;&#xa;    }&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;walkThrough(original, modified, merged)&#xd;&#xa;return 0" ID="ID_506753474" CREATED="1578585850747" MODIFIED="1578585850749"/>
</node>
</node>
<node TEXT="lib" POSITION="right" ID="ID_328124690" CREATED="1521562135185" MODIFIED="1578504823289">
<edge COLOR="#7c007c"/>
<richcontent TYPE="NOTE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      An add-on may contain any number of nodes containing binary files (normally .jar files) to be added to the add-on's classpath.
    </p>
    <p>
      
    </p>
    <p>
      &#160;- The immediate child nodes contain the name of the file, e.g. 'mysql-connector-java-5.1.25.jar'). Put the file into a 'lib' subdirectory of the add-on base directory.
    </p>
    <p>
      
    </p>
    <p>
      &#160;- The child nodes of these nodes contain the actual files.
    </p>
    <p>
      
    </p>
    <p>
      &#160;- Any lib file will be extracted in &lt;installationbase&gt;/&lt;addonname&gt;/lib.
    </p>
    <p>
      
    </p>
    <p>
      &#160;- The files will be processed in the sequence as seen in the map.
    </p>
  </body>
</html>
</richcontent>
<attribute_layout VALUE_WIDTH="250.0 pt"/>
</node>
<node TEXT="zips" POSITION="right" ID="ID_188436602" CREATED="1521562135191" MODIFIED="1578504823294">
<edge COLOR="#007c7c"/>
<richcontent TYPE="NOTE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      An add-on may contain any number of nodes containing zip files.
    </p>
    <p>
      
    </p>
    <p>
      &#160;- The immediate child nodes contain a description of the zip. The devtools script releaseAddOn.groovy allows automatic zip creation if the name of this node matches a directory in the current directory.
    </p>
    <p>
      
    </p>
    <p>
      &#160;- The child nodes of these nodes contain the actual zip files.
    </p>
    <p>
      
    </p>
    <p>
      &#160;- Any zip file will be extracted in the &lt;installationbase&gt;. Currently, &lt;installationbase&gt; is always Freeplane's &lt;userhome&gt;, e.g. ~/.freeplane/1.3.
    </p>
    <p>
      
    </p>
    <p>
      &#160;- The files will be processed in the sequence as seen in the map.
    </p>
  </body>
</html>
</richcontent>
<attribute_layout VALUE_WIDTH="250.0 pt"/>
<node TEXT="templates" FOLDED="true" ID="ID_1849114914" CREATED="1521565216661" MODIFIED="1521565216662">
<node TEXT="UEsDBBQACAgIAO6JJVAAAAAAAAAAAAAAAAAfAAAAdGVtcGxhdGVzL3RlbXBsYXRlLkNoZXNzVH&#xa;JlZS5tbe1c+3faRhb+vefs/zClOT12G2D0HKk2yZEBx5xgcAEn7cZeHQEDaAMSkYSxt5v92/eO&#xa;HiD0INgujrcb3Nggzet+97uPuZpyPDPm6IY6rmlblcLIoXQ+NSyKuJJcwoVXf/vu+PtisWejG5&#xa;MukTcxXTQyp/QlGtpLa2obQ8S6oJlpDRGMNDetMXLtkbc0HIpOV6ONHHuGJp43/6VcXs1Rcu2F&#xa;M6Aj2xnTkkU9VCyy+QzPc8z+wqO6Q8em6zl3qHvWfq9rvV6ncXLZq3crBZdO6cCjQ7ZABK9YJ8&#xa;uYUXSutS61ZqXgOQtaQC3tvF4pNA1rvDDGNOqT6HdjTBcUvdOal9CWWuNCeYd2k4W1Uzv3brZT&#xa;O8Bm1e64vCkUw6acBoddtuwhRb36b71KoTqhrtsDiAuo2a5qzcbf6zW92/u9Wdc79dNKQVt49s&#xa;zwzEHTuLMXXmlKb+i05Ni2V0Cn7WatXoNVGFMX+jfgbaOmi4RwEoc5roCqnbrWYy04ied4oigK&#xa;J3C4gM7btcZpI7ghYsILsiqJCnR490a70H+91Fq9Ru/3SkEqYTT3Cq+OJ7b9MVTLuTHvenfTlV&#xa;qOB7Y1ND2gozHVXXbHjQOXuou0aq/xrh7pOiZqd+CYMBtqat1eeDs2UkIN9BbQdPXV8GhFN9Ce&#xa;PxC3qcFyaiUPXOb7iemBBdk31N26Vhjynwtr4K3XmGiRkAiaeYZp5ch0Wm8VItahPgIdar3qmV&#xa;7VuvUVAYJL2sVFp/1bAz7Um79H98pZc/uC6vTTAprEZl3zMKDokI6MxdRLjeFDmi/in4f4ydQY&#xa;fPy6iC//vxD/czke2GNM3oVLHd9HgsNyz2GW5MCJrq8u9Nbl+Um902i9QRVUPrga/nxVOrgqXZ&#xa;UOXx+Wf/zhdnj0t+8u9PP2u7p//+ADbl8X2a8D/ze0+vdB6TVcN4qT6w9cUbl+ffj6Fv6tLxxU&#xa;2GCHH65+vvrh+vV60JYWzHlw9eJq+Af3UvgMY334x9Xy+g/8kv98uJrfsj2DiXcBDKOO5Xd6PX&#xa;MXh/94EVv/6yv3pxfBUoN3MP5qtvCPQ70FDHDA4neJBYvSmHo104UwfEeHPXrrHRyiSuU/KDHl&#xa;4XE5BCxDC+WkGnZR1Rf0Ui433B4s0ueLPockwvLAbkIxzFFchOBupWItptNDFIro28pR2J7Ce8&#xa;Q6fZ/sVVoZrVuKrPYtvTv48dPC9o7YjP6bwy3j/hF+YMsH+0Iz0E9qdR8SA14jADnUYukndPCh&#xa;v7w+RPAOCIgYC+Fq+TA2Mlv9rOSa/6K+hhDeXFGsZWpR0cIW86HhUVgCLDAGxI4IZAw4sKc2mB&#xa;uwBkb80Zjb7tGyH/wtzj5gYP91Ri9m/K3FrE9XXf22/HXJsxuWR8fUAREBhfXwlUo4evDnNfcL&#xa;Tq4n8dFX9krgwxQe7FX+CV04kPVYHmKgBK3R0vQmiM7m3h3yjD74suWEWsj00NJwQWLHgXwT/V&#xa;TOGG8D3zUDMlS/ofsXMRhDArxIYJTgAnt9zhD4C/JuWxEK3inljR/04o/14j6jIvxguJZY3eeg&#xa;7+aMyfWFZA1pAQr1+yxTXaN+nzcdV/jnMW7ofzSr+Bbj/uoxzufLtxj3LcZ9i3F/xRjX/1+IcR&#xa;l3omrL8dyx59TxTArcYEUlz6GUOd5KYWIOIfStL9rDoVspuBN7CYEvrLIFNbRYo+nmDdZaN2F2&#xa;fQRKWBvqaiu87mn5+jCtcaVg2RbcGpme7tk6K0nObccLuxzF+8DAFrDZdly/qPYpfq9vG85QZ/&#xa;6mUpjRobmYhcuByED9NblReF9ddnXT0mfGPL4bB53BlTVqwW7cr8UlN+BBG7/MprMGYeJQKdg3&#xa;xrSALluN03bnXO+eaRer1CJRO+PFsHgGE43AmaEujM8u+2v58txzh4KLMi06LKCLdrfRa7RblY&#xa;JjjifeajX9Rb8fVOK2jBcVE1C13Wx3KoUfsP/KGsRfZ1Dm0xzTmKJLC+CFMc+7hXD9rHx40m7G&#xa;qo49mK0axxnoHy1mp5X5DUpDCv5+6u66DuURU63Z+xSzMTqmwT/Rqm/fdNqXrZoe3Rr5r4JfGN&#xa;ZhvDeg72b9tPcUixxNbUiywNBZHzoc04gdzHfo7EIw+GBqL4YrYUaY/cD8gR0E4nTq1V7QeNua&#xa;M5a668JDA2EJdvFhJhKMs1Hk2m4c2RYfV1S13urVO3kVdHTeaOnvG7XeGVzC7Npt0jFwfGRY/u&#xa;DlpCL69F8mdQooHIUroJrWhTfddrNRC5qvK5tT/2FBUL2M5uUEsaSyl6QSWVZkmS1sK2MCmDb2&#xa;STvQ2J9D/YbgGsH2nFrMtlboKZj9bAaVhMG8obYzNo21bcdFWzndbEHXNpuaMZQE8i9rl5XXb9&#xa;mTP3/7lWsikA983EG9vidD59pvEZo8DtW4g2qVzaCzi8SRN72nxF3PcJgjRJDdm1vlZtk35EjT&#xa;HBpnCJVH7ZN2p1bvRK2FsHF41Z9dbzbe1vV67U19XaTYoD6+J/V3QSJ8HJcZqVSVYRu7pTUvzj&#xa;RQFJ9Mb4LBauZoVNKGQ+aqkxrKmADjgYITBhJEGf2s3Wn8vd0CA9DPtc6bBkCOQxyDBu/qnV6j&#xa;mnE7U0trPnJZfOSlTW1El7+gozA3it+OSZXMFNeJIktm0cllo9ljC7+hzp0e8PCGxkLqU9uEr7&#xa;wOZSFgN/UxMf966oukupf6LDo21up7qH6+oPYd1HfhmLZjenc7mh+j6l9Nf5FUu+qPHZKBDeMT&#xa;Gt49M+DE2ZBH7hO3nTTJCYFLJumE3hpjFicfl8zdMwrmq9hPS4PL8fzuYcniF5WU+LRZYCizcz&#xa;OPySvzVhQ7j2MMBtR1wbapW55PF2PTcstn0NBwBhNzYEwbrD5SWheHggFi7qFHZ5DksT1qij7h&#xa;iSIO8yLmBFUgG0eK2MkhTuUlIvDpI0U8FnkBtgGPkd4xBxNWB2Zl0d7vLK2s1Xtao9llowII3m&#xa;z66juEjifUGL7yi2DsUzn6eNy3h3evwuLYq7C6VqNTCrs+/2Rc3zGswaQUVtb8JsfloBOM4o9+&#xa;XI4tIgHcKlW8WKWK8dNM6UQygpOXVImXBRWn4ATUZEnKgpMIIs+lnZe0dl4PRXnVLyRU/NyLY/&#xa;U/fexbTnkevlYF2YvwVe60Tn59e9LqoCV6++vHT35dltuf/jQ0Nma0bAdbKjQwLOQypMMji9Sh&#xa;JcSe1iBfUe7EmE5R+CzBL62vpfWr625SSw9mAxXXCiYEyypkC0pawTzmsZRxBI9XiUgEOddjni&#xa;WClhRoU5XBzMAMJcFv9a571jjtxdoVOW6zocjvky/Jon0/LNRzKa9DpRVcCqwNE5glcWBRknmZ&#xa;FyRMstBSsEqkXdGS+BIvgiyKImMsc2BlTwnCMgSBT4HQGggxr6AoPJHAzaZgEHhCRFZSScEgs3&#xa;OduV4hBQMpMRRUhWBBUlXMZXOGDxmjclhSBWgqfQ3KpNF6Z1LLMn784dY4Yj5gw9uuSizRIVhO&#xa;FQVwsslDsAAmvERFzANTSqFWBPYQnz2YA7OWAvJkwCaEuPGKSEQRfkewxaI1O2LdYg8UHlduWu&#xa;Ub0ZsYTG8Bh+DhpOtjNTeW1lasOKyAW4J4JGUYoERUkhmPRE6WxDRYYsQxTiacRPgcv8QFrUA2&#xa;iVcBeEHaP1gxjEYxZw0aVbEo8GJCeoUHxwQuI0t6VRVEFqZ3tLvQWStEVATIpdQcAuHAS6kCII&#xa;LBxcnPw+5ihELj0lYqKZhwMidx6USRlyCxUTIDnyKDe0szSQ3tSSYKSAhWlcMkKbBOVRLAtQui&#xa;IDwWtSzC0Ns4ZSC3VbEgYjVDTJFIipJxxB5jgQi5R+xT8R2HUhFgIAjFk5z4znNhQwFQB2G4rx&#xa;HZhP3le99/jw5a2pvDh6Zlfi4I/0GeSOPF7BiJN4rcKxULisDJGRk6kXlezEhJfAXzcprHfBQ+&#xa;wMsQWZSVHCKLUTvC9geYPDrq7kMd71nSHD6qvV+qnI5ZOVEs1IDECA3+Uth0y0SUILnG4DSyVM&#xa;Crfmjf0S3jTcXkuOUiFwIcxiqOBDaWgW+rXas/AtyBdC9Ev27u2jUH5tQEsxpuDwkix4Hjl5PZ&#xa;PdMjJ4uikpXWqgRydCEjE1MCjRGwTUXhuJwEtgipWBhJMcGqjHn+ibKLUGaYHLNEkc/mLku00t&#xa;xVsXIP7oYJlAL5icgB7eWc6JjkrrIn7sJW5tmRNz+lqU5tlz3L2JYVw3ZZBkUKGUoE4ko40wEJ&#xa;KpYzthCiFG5AeVbG4cWcLUQxivoqbIdFhZcU8rTEhZRfFQSwLyWHuRnWKnAEyLtzMiyLIRSQ4o&#xa;psL5YNBeTMAcEh0QZ3wEl746387HibSKvi2YxjRKf/tpKXCJA3SiKfw10u2wGJPOHS3CVC6HQF&#xa;BYKrnFtoIqHPFRVJZT5OeGKfC/yUwWAy8wUO44xtHDAXtqk7l0+UCAiVFV1gq5PD3HDfojBfQE&#xa;RZ3BNzx8/X4aaJezplpXbqeTa62Z4v8MAzRcohLp9Rtwm0mJEtKGFCDd5DlmFjlpctAHODGAnk&#xa;hlSF556qFrGKNCqk/ASLmU4XqJuINAJLfSDqcyreC6+er0MUY7yKwBOJIrFnKWoOeGoGeIShJ+&#xa;4DvJMx/+zQ6+ejJ/ISB1CQbOw4Pg87YT/YkWeHXcQ8KYN5mJd5WfA3KpnoSRnoyTJReLIP9IbP&#xa;NxxkgQf2B/ktFsQc8EiOz1P2YrbD5+vz5AzwiABQyIKSAx6f9RUfAtBV3fIVH386piPxfpg6jr&#xa;2cmtbH6DR59fKkUdWrl5139dxzrOCgeh2t1b3QOvVW1a+bYva9KK2eHhzzUMNPp9p5g303Q9ew&#xa;3C51zFEB1erdXqOlBQcefEpiiYiQN/vnW7QO3Kw2Vw2AkkcEHxVQvVXbuFFU+aOiIh6FnbROp/&#xa;2eYdeq+23jnx+VOjzE8LK4E5MykztCDncIzihtqmHxHRNZYbvA7AyLhFs+QhTCwc5W2BPj6PO1&#xa;YrLtmFhKSQps31j1IU9HWQmhH5f3khC2Rs83tJAMhgtY4GVZzK6+AXp5GSGkivtAb0yfb1qjZM&#xa;HHEYnFipzgwp5hZac13D7gaxfbzw69/hb0ZFUW2fPsPPSEnLyG8P8v6EXcUzP8ngT7EQl26jng&#xa;ZZVc4S6Wcs9N7WObQr+OO2wPh+4KVF54KeCXInk4edVUjSaY4EsPRmWeVxRJIZs6EhRVBMXJKf&#xa;cQ6EgB75rOH5RScF6XI+yL6dScyqIYFYxlBSyFBOcA9lKduQfif+KzVXM2Rq4zqBRKZXira8Oh&#xa;bfWo65XZ/6at+5Cz5xBYJKW5/zWHu5Bul6etz/fNzJjD3/8CUEsHCDaK9B2DDwAA61IAAFBLAQ&#xa;IUABQACAgIAO6JJVA2ivQdgw8AAOtSAAAfAAAAAAAAAAAAAAAAAAAAAAB0ZW1wbGF0ZXMvdGVt&#xa;cGxhdGUuQ2hlc3NUcmVlLm1tUEsFBgAAAAABAAEATQAAANAPAAAAAA==" ID="ID_322848721" CREATED="1578585850754" MODIFIED="1578585850879"/>
</node>
<node TEXT="lib" FOLDED="true" ID="ID_1750925238" CREATED="1522351097503" MODIFIED="1522351097505">
<attribute_layout VALUE_WIDTH="250.0 pt"/>
<node TEXT="UEsDBBQACAgIAOKVKFAAAAAAAAAAAAAAAAARAAAAbGliL0NoZXNzVHJlZS5qYXKMulN0JkC3rh&#xa;vni210jC92OrZt27bRsW3btm0bHXVsW53sXmPttcd/9rk4p0bNqnfWRVVdzVlzPKUgDQ6BDgIA&#xa;AED2UqgUQP6jYYNAgAhbmDo7qziZmjLI2bsYulja29Eb2xg6O39NgoDUcMNoZB8tsPyhvxy7Fx&#xa;z3E7g/4pun7ZIGZE0ZIMIkDoEMCASSUdHfOoqsj2yTh2W27qjfeLHWrKxWNqySismGV6z01Wx8&#xa;NJapbm4MWSHFtfoj1Xyy3HxcN5q4J3x+f0uY7Tib7WR4mh//7bfv/XhNAzWoaEUcUN40HzOiU9&#xa;ystYkeFr77kliHDFdo5m6mVPmJDPuiZne1Zes+orsrkL6DFyPyfJl2gCfKzZQVxEguaNigE5of&#xa;tgJgquTP2M8AzA6ME+INjJTTb0XFsyzbu99JqJs4zCOOodwLgTty4yKOWC6jIC5kBpbzYp8jvY&#xa;R5a1/6Ng/iID2NIjsVudl4/HrnesBGfFqE8qVCvUj7PFmNy2mWjLFDRDsrKJeND87I1NBZEgZH&#xa;EGImlaG18HTmWXZFyWFs0R6ajpw08hms3QhQoG39uYUmeLsiXtiToptg18XAil+lAoza4AV3sS&#xa;DRz9CRltElIBApKMAEdV80hL7ykJAhlamSV3UTNgp8PqwtXRpbI6G9L6Vq+UlInpKdUXt8T+DS&#xa;2qjHrYeHi21xHbfJtmARHo32mHozSXvuwLnDb6HutuC1GK6bse5RCvpgGIDHqiExept6w2hAn3&#xa;0MRZkdC8LlgQDm6cl6w9JPpw0Kfm9q3QAaakPHlC/QGgiFPrnKDF46vgoLHmlyAR9cGQFhcx35&#xa;jDSydhO32V1Yys0qEuosyEbdSGOVNMUaHIo82d3FTCWKiDD2AQ20xMixYat2HMqoX/1VkfihCe&#xa;VhYt0DWmqTE7ObWnzxYWzytbQTxc5Auo9nQIr2x6SfVfIUH7x0So03cGLVEtNvmfEYJLWNJwoO&#xa;ex6g/RteFmo69KeMaVaQHSvRdO78lG49QcF+ss11oNq9N2FtTLDx3amDOg+qKOd21tNWhTBU88&#xa;CsDyeSW8O+UIOHdLHpN7JudQrOc1n0uLMZmQefTn/lJWM+ttTrKTEfF64CsGsbEEXJZTioG6zl&#xa;JaT7jEN/Smzr/jImlAPuxvGbeIsg0q1MI1DHtwzUd/4mVG995pI12Kcgac9CJbiiqfvpt5FxKU&#xa;3GmUEQspmsIoTj8OWrJFCtjftgNIp4chb5QGF9Tb68nY+30rk5JsrjTJJS2nmLAOv5KBmOXlDD&#xa;qdJxEDJNMZvQfUjnli948A5rCPKHANXE6QF9O5jhyvCdbWD4GLsTowNz/lbzVfIli2WU7hhmV6&#xa;5PFu3qxo+bTYW1cIfR4uFZiTuxV6Kse+FD8EAVQnI27h0SVJ0GjiFMWEJjYzrfhXE9NyMsn2x8&#xa;VkKEEGNw9CotkuoQnWDNM7+FQkxRKs4tIb/+URFO8/0LTyurdzJ8EzbfyEYCAjEKNXwy0Ar1vO&#xa;kVCRtXXMtEDBClQ3psWFFjdvv4DL6+ns0/ve28x9b6l0t7D4eTXXp8HsojU9A3Fn829RrMDLu+&#xa;ffoQ3ZVxGi4CwU+WEoVVGj2qgEEYj3WfzPaqI6iB0sDKSQbrst8M8X7uLd6bU5vG3a9RzXU90R&#xa;qntyBHqxE8fkXNe8cDBaBYPCIm3RdQxkNHWB49XDwyOwp+Z4kCK6Coye9xCoP0JxQtP4p+WqV+&#xa;TPZcpSl9Y+tG3D+DTxwdsbplj5NDu3AGKORST1xO7iqS/ODfCx26NSVZXPpxvWP2svGBvCo7mV&#xa;3hSTOJd7Yz2vVezsm8S/3KENupbyjuVBFcnxCNEQP/e+HVDzw31fELp5JtFOAcfXXU/ODa+Dd3&#xa;vr++J0XItsLduTKvXHT4MOuWjsMHvFc2tOQ9LtreHr2DfWMRCzZP5dqEHzLk/GbwRWPjpqmZK6&#xa;g7ye6ogus27tWGX0yDP0F9mLopIX8b3CR6sukqFzmlKPtqGOMiQgRa1fOvciUNN2kCKDf6DuF1&#xa;dLyvFLOpMtfY3J4nxye834C4A8u4uQEjlYHCuAFsEMl9tYK5etv20mabSRVi39FABTwPvAzUCL&#xa;wUdjJzemj+DKn5N4t7KUs99rQBYxK9QQii/9EzrRXDwl4fDMqe/yKbzbnF1k59r93m8WjM4ZYs&#xa;AYK2+3LCEJvrsp2tRbm1TUHU1nJDTa2nNy9bGavr8nKbyzJb7vbCllJTjJiThT/CjQlSS0X6OB&#xa;wSktvG5ZDKs9mdIJYV7bTNRmuU0EE3JJeShjstp39u7GG8WSjNvhDzR/azrs/bxsv7Geo7loe7&#xa;bv2uj/4bGCLJyQPk0KcjYZfexkgI5GUZt/K2oGxD3j46BybJGc9aV+xNT6zQlDP2tClj3IAPFB&#xa;w2rYnC6C4rVNnFLco96NGBKxZSGBR8NqkP5sizKHw3/CTO6zrkm1fB+rU5soHCgAFTkBSUNLYK&#xa;DiOamSJ5sBHJuAH1iggaWf/0BELQtCP1jf6owU/IQzmno1o+ZhXddm6zXalX7BKaYi5fKafQ8z&#xa;KL7OPKo62MblfIwe7HZeVVwb3eImsiVLzYDVV6njfRpL+JTvlDTVvtiNbpn1JQ5owaI/mZAbtd&#xa;mQO4UNY41cYOmOANtrxBWlDmLOXG9QEDYlBZ2DZmDohBdPDlanMXcbYxzy9K88z1sirBnw7OEw&#xa;s5UK1TDQ+enuBBYlDaOKxMnGkuGOc7wpONaJCdAdtK6uwM62LuBh7lWYN6SxM3iuAfh4N+jhFa&#xa;w+TncCMmFQJzuwjnQhkuBa3PNkhIY5fXT4OMbtGWHM4YhDhKbvwVzxtmL+sq026/6bs5pSVQve&#xa;I6mCIdKdYGDbjBFR0WhAcEkXDAGYipLWdKyEyxsJy5COffjuknD8GN78l0iE+FKuHa5GshJjwC&#xa;bYbuQdTb75y6E4Ovjim3mmmtO+Dj3O46Zo3nR3/RxugR2B+y91jU64whKfMUC3NQ8Lu0e6GxxW&#xa;q3DKch9HBobmB386Hcpatwg+8xYSEv9HD5Jc4bEVQYOdHqycRskjVsDIujlCqwPOsGayqJxEyo&#xa;Lu8L5U24KoQjKfz67D7Ux8MJF/H8FGqc3uGrXHYtRqUucyZadk2IVUHCoEoo8ehmJetgQ7j8gX&#xa;dB1naBYUr9Ehx7unIU/rCG05a9e587JtlJgvub/SsJ4Yai7AiSV8oCV520R6nIOMUwlyif7/qW&#xa;6bBqGl8dqSqNyQ+mAsSJBEMA8jOF7AjjZO7VZOZ+cLQsHo7wMxIUc3rX4p0N4saE/7L9FqeiNX&#xa;lOyLrbcjFV/ks6IUB/zL79TvOzlCwbfaXffkgt9xUx5SViaRgNQ/xIjNtGfEKycyLPvFQ+StyB&#xa;k1WgSWxabmUV3h5z5faErIi/m9IpQTbIN+H6xefWZI4Zf6r3IbcuRrnAYtf5NcmnHdUf2EOlmN&#xa;9r/pdjoAreP3aOZUJ/nHIKe0L1W7vDHfuVpHeY1V+S4Vdj7d2PY7OySyLzcpvYx2HlAyXLjE8I&#xa;tmtvPXEMLFocfchkR7U01xjfHmrtqoMbl3aNMLyKZ8leVDRimTH1nw7i5ZUrd3HLhwbCM/xLV6&#xa;RAx85x9AX9soj1eQF+2e4KUl6ObUXv8P1wXRbG/IM/r8rX9etirkWYEecSIUVNWSplB33UIPDr&#xa;ezseebE3pw5lsUgRMoZhhZ1Qy/iXZdMl1pmxNK7VpaD0dZZE6ifqBc4WnKtl1p5buLuub1xuF+&#xa;vivtzLoizK4V+iz19m3LXWypL1xJb1fhSGizruwcLZtSnzWwbM62cbrI42sAmdZigN2wlf9bWK&#xa;5NkcyQC/TvYs/k8qcpuGl4sNHa9080boQVj71I+cq6aIdcrzVD5w/6C+ks2CFGII+Zxwae6/xV&#xa;pSO9s2cWIzF6uYlkdQX7j6pRplb9QaMrtB9DWDNXSj0gi2vaN5QS3kWyWn2WhG16Gt6PRTpIFT&#xa;VIC4qn/vyYx7Xuqu1FnxqpGwp9B5BTj/EaK+mhskmodyFHnf4NhuUvSrk17c5lZJ28vTuKclAV&#xa;nOO2voSOPRY0ZRAUefLDQTZxPODVP70x/1hnwWu2T+U5BJWlyHd2G8X3Z0Dr2DoYOQsFhAHtE9&#xa;kpAy4KXiuko7thQEvapHJm7ebPv4zFnI7ZNOM1pvIP/pPWdWoLVvoj39NPjyLEh/36+git1SFC&#xa;rrR4Ig0dx7q7KjR1ceKL+p31I9+DRh3hhqiC9ONTrXqlodW86a9Neq/+wsdban5J/x0MR5T9Xw&#xa;XHfQcbyoadldH2m/bWmbHrVx5YKcAKqr2GmDwqxog7DQNSC3qlpg29UtMJzqZoEqUxzq8g2lt/&#xa;OY1lJO5ePA/QKoqvIVd/TZmlwr2SO/JraWlsEl1MdLTsQrXBVv2jjzMYDOK/rl7pnclPCS7oTl&#xa;ErNyme2UDYIKlvaI0q/9VZT2U+V4bwAPRm5A/pw/fij+vBdgC/M1Tqj7yfBLprxmH/cHfpEGJD&#xa;n9vI5DBVw2PScRLo7/Tp6FDr1fLfrFW1juYYcWGz/kAGTYOCUhpb9Hgs0zYvK+jJeT98BgU//i&#xa;7KE4iSaaAyn8EOHdnR/pZYivib3dFfRX6kxrn9SGXpG0EB/EukRrnRvwgMb5Yyyjyyi7g+bfZJ&#xa;XdkRbL8nLveKwneVya2/gIbHQZfJ3cYjuY1pX+rwUX3c6StvgSNOHJdQQTG0OfxkbW3rIVJ6/a&#xa;WbMdOWaGGf2kbErpOA5/R2tR1whVElEqycy+dDdd6Wck/DC87EuQt0OQgKLbPXQkCwMkDagSGK&#xa;TXPk7BBJoziJdEtGwiSo+I2peuR0AmuPM80kM94jEM5e2dl40ElyC4j8hPwSAHaNnmdQJ81nfF&#xa;13QX6HUxln1lxA7hnkYZYYF1cgfsXBnCKRD8EmwRFZ1bGGJV+nqaFJhrKOdCywmCPYr1itObYr&#xa;b9IpQFe4CHHaKX3dNH7FBZTrzYdpLcNk15WuMja82sGB0fdI/tbitZHgEJIGkyPa6vQYjTQRQ3&#xa;btCF8AudMESSMOQWZ+TgGcZzWTZSnAgujhs9bk5uvMhKiQfYePuavVswkAND+HNNOVFL4BCTGW&#xa;lONwajJteb86vN6/pIYv68I05YoOrEr/ejJhf6bbHtXb5/r7VQ5z6ePezIys5ZjbXtSGP2uFVH&#xa;2t7OWfPnjG1nyqbOoRcYva2zR+w87FxRc7Bg7QkV3V30POrcwYzIyEPJsfHtIcAnhVTCuv+hJT&#xa;/FHT+XXB0/4Ca6HwlxHw90DikIdM6ZdcB4bI8S8Vn2t0WVW1w/HLRg21YYkTnt6iv1KgQPw2Jv&#xa;mtLLUewVyzKf8HURsgienySeX0rnAFtrgYItVTKeik5lfjv67Wfmc092Z53Ej02NYnbMiRigCl&#xa;2JAsbtJ8Xpm27/w0f+jWK5hB2mgN19snI1jIceTh8Ryk4lVTckjz/RcV0p8xzOgS1wp/SwBvW3&#xa;E6w16Jx1803c4418hbfyIb2it/Sw3pw+2YVSlQrUgxLJHZeuUR5+npls0oQhbkyfoMkf/LK4bq&#xa;bOJYztMyWKqUaT9jaqaLePKnMNlmJIc4fXPMuZZKvciR7NVVrPa82tLNuZ1MzsmZ6fq/jU/fjX&#xa;My3Hk0mzRzs81rnoXoQwL6kKpSf2xlZ62LefuohfQw8MKImVJ9oP5H/ewkBzh5Otwz7yTdBzA3&#xa;xQ1ppEXFzC63WFb/nrdcQcf2tmb2gyrXpCB0Jkye0wwv67a0b4kveXQzinfbLd9zc0HYkD4Z67&#xa;obeTTKQW4DpiArwbAStWKCVSs0iHoG8tVjFBMZHYjkO1TU5DqIBWIuVeqdIvTVFLB7FsABYQ31&#xa;gbYvXvlTUYZ8B23I+rA27tiJQdEieM0At50XKkUMXW/3vjqV6wC5Ldyn2A4gpgs5ob6Nx8M4h5&#xa;BVm+phdEYYs+i2HYHHbu7jAtH6xodYVhuHyUDvqNKdncrygzNklaEUkAqZJ2JIg47XI46F+eAg&#xa;cXvti17CTY8SzPJUMYslXVPDefcU+ExNYNe8YrYQ96qL9SOf/dmS/IRqZ+hEHBFcQX2/GT5PB9&#xa;szLnHOrnCELhK67FLMbA6rDOeUa5czvdyTgQdnm5GKWwEgJTSE5KdTATOo2xsjQoy09nnH+8Ul&#xa;673FxD4qAoW0JuVqTG2JTaRsqsUDYiMlirkUTwKwnc83ULhDo8MfMBdVaSAjc5+TOCYwIoJRuL&#xa;kg1MRNNdV63GLFOQFnWOVQqYgCnjSVDj9IeUoUXU6ji4h41etJCMF6CWLRmbtcKSlT0oVxCOOe&#xa;uel9JNlxFMlRaJVpOKbzYTm58kZk1am5ts3xn+TcoZh1gwaIhonzUXraZoDGqvM55P6/qiYde/&#xa;xJZBhAr5CpSaSFKGNNVQEte7KHD/Q/YeFci3Q6HPuPxCIUJ1EsofklB5rK7IZn8EWNOWnvLpni&#xa;4N5T8tYoHhMuJFg7s9xBQM6sLYso3XrZ7lD0zJAyNVlFZfDCT32a/Mv+GkX/qVOaWqDCsgDyV1&#xa;CXUU5snaRmIxoKgzYtCSXXYo+wBZo+a32IlJp4PWfC+/28med4Ndm1YYc/JJS1epmj3cQVgQ0K&#xa;QM3c2qQIm+IlmDsI9N7am1+gVtYVWUXjhaOqxNUhE1I/hjwHn0xjTSiX/GFmWjUMx34xiqoUOR&#xa;VmLbhjI9DsALMPyB7CU52cNG7a7s1jEnO95DF+PaZLDNHLC1ieZ0I7G5BWTPS5O9RtlyRS6N24&#xa;WEHmDZoaiy1Ib2Hgox3kGWeoIyNMp2Ry6dlynLLFiiLbRLc4hZEUI6wDrRdID3lmvsC2t9BMJm&#xa;H3v+uV42+DlY8YUfG6PFDFIZli1hxumKTq+YIvDOGo67S5CeefCjZCyTaYC5wclvb7N+z3a9Th&#xa;UtvUFHW4MT9o264p4XJjqyOiF6oG2IBHdbFKY6Z/EQEj2M+5QRa9GfmBMs5xbosjDVkOU/FA7u&#xa;gLIDYdiNQOKBTz9aJ4yeF9ajBfMXbpDPli5iBSzN2rFdqAu3dvk6qKqlbA/3CqN9tWDANVbUoY&#xa;MUoM652p8SK9e+4QhS67gl6By3tAXnUOTM5zPfEexAuof5Ws4C+wOjw5DOFNbhWvoQympCHrPT&#xa;GcCAeuba6owlOQbjWNQEC/2zYv9h4wq7VI3P4rNq9jBqgnqHh+UV8oKDiYRBYPFicUduaYllVZ&#xa;a6bv1MCogQVp4dz9Mr/zuCLBT0Gyb6+pIzdCgmQCTqwQmnjALtBQLnGsMh79dHEIb4HXNCoAh+&#xa;8sTW8EtE8N+vY5R1Wp5nCD050KpBJ8KhqmGBzOUu+VQvqC1gsR7FdB/32/P1WNUdboI3Sh2mqD&#xa;Sfy24L6+jNpE+3mh/q/h/QqiUEIIIaFYIeJatFnK4XbhdfeSiQJepEHmOOjrAhj0J1J7VQw19I&#xa;5Cun12hbKJD54izyCWHarCPix/R0Ceu2i3uxA5Wsk0ZGylAYelicTOaQOYsT9kdwoyJPnWTLdE&#xa;CSBe5Ct0uhewnyjDTqXw21wrM8EGbkHm7ShThzcq2fOIUvJmTvEdUiVRTCjwpihRzkETslOk45&#xa;jRszgmBtECXSi6aFOzXGvGhIkw72+2VIgrUReZIs1070v9IcyUrywCPG4MfWhuOFESMK2Sl197&#xa;2VyfSSkl+fq600uHDYfIiLcK/HpVzeTMJ30hJOzZtQdf8dqD8t8eisWfc7xyYnhWKH7czazX/U&#xa;2s1dKnkRIkw0cogX58q/rv7btwJeeuAOcZoSrQ6rNcRlFam4no9u4j1KcvUEuEoe+fTXuHpJzq&#xa;w0yZ8xpDuD7FtA7R4pF/ctjDnRn+pN8g7cBPfOXHcfrToibORhlP+ZuDgY6occDvrNFCvCu2TQ&#xa;/UCeYFCYMh8fvRzfG+YBylsA2o8Jr3VxSOMEfErn9TAWwueG6tkeK+ZZX7Ii5x8zwIcGZZZ5Uh&#xa;xTwgmpLw8FTIYksm8Lsfs4c1XJbROVew2xlOxxqWY3ZpG4UjQ6p/vv4MLwWnkdxz+KPotF2wid&#xa;9hB9Xq8APt0bf8zS21OAX1XNF4rPhj96n3f6T0CoygJ6L3gpXB6d0Jcw5jxEj9RdAqgBLsz61j&#xa;M8J1Lb+0bsYEecIEtc9BXlHXtXea8uQqHHwM3C8MtbneEd9Kuw6HRR8NTTmyX/9yA0c7U/on/x&#xa;qvY5xw9Isue4N3exVxZ6MRb7j58iK61nwHhcp01Hn4EE17UolS1z42eaThqcto43e7DiQQLpYf&#xa;ugfsXjh+b01w+zvDLpQlA0fWKXlktd0oUWiq+A+RmKXrFTa4qviHkk2U+4ghMyL8XCNLL3EpG+&#xa;xNM11B7aBXsZn6D5G9MbjIgvooUq1B6zfe3gLypv/8RTV7RvqVOE397KhW1kDX1Zry9meRFyxD&#xa;0RI0IiaNLDQDRpjFyzfX5seXVf6T0ciq+oO5mVvJJbH7Q/Zt39w9+MeuWjU+h6Jvtd0T1Wuh1a&#xa;J8pO8zmEpviMbCY6Bbeoys6MtcxslAdHpalDHiG4+sZW9KMtVp82LbWzyy6jeOjfMaXHZt2S6x&#xa;PDM1Zf+Gx9ojNrVW9QbH/Kj9sq/ZLO86pW7ZUvslZ8ojL/1B67l7+psfnnZt4wsgXdhUhdxyd2&#xa;LS3DYrtXvOkp05jgK368pGuhHPScf37IzAx59FVgsPTK1XTtLEvh/Mm//CAOsVdzsWdqOYu2Z2&#xa;vBib5hbdGMvlH8+7HyGVTKHnZnqJw19mpI/l0UecOEZs7CN6uxVUrC8V0TCasON5znq7DB0hIi&#xa;31+i7UO6YUnZLGpLOOMu80CQevHm76pyYX1kC36DQncLL0PuoVLlE8lu44nJQ6q1koq2sc++ge&#xa;sjAvdKuJIaF2U/ciNQIK0t8uIbAy/WHkv/ApsemYamB6N81jDrj7T//kNBGhqwSQADbYgDApLG&#xa;DQKi8H9QzbVBjux/ohr2f/b/RjUqToZ2zjaGLvZOZPou/1ub6hvb2Du7Opky/TfISVHTVsdTRf&#xa;+SQ8XGLtVBlYiAbMlM1ckHXd4AEyXGFAFTFapAt8VPTDKxSB/IgMH4DuAfdrdJKdTVy73U+iql&#xa;d83LIA6mqN89mu647Onr6fPVfJjr6/sLusvrM8eYSe88pcX2U54Or9XKOrTXqrJTVdF2KPrYxn&#xa;7O+S3SUFWWjyKAKViq1PDyugRYqSdVso0F4xdqOERbci8WkLZSmXJfPF1pZ73JwzbnapdYIyRb&#xa;FEK8CPAeWjHG5pz6CWMLf8UGjWM3wqx9XnvO5WrvHHVyNTGa5XGQAoZDAG8rurQ+O887dCTj+4&#xa;ume1y29uSNTNh9GTX2cAljpRHzsXAgfpwVIROLxiRbR27FRFJ/8mh8UCkzgNfEImfRZSbXLJ0v&#xa;7abMA0Pf+DQitT1HjSal2uwBZ0klovdOw6eow15P6J7MPsHnXCKh/FRYIxQpDSd0duwkMxCZhB&#xa;nMQ3iA3KU16RlEuJ/eGvMtvsMiAEUy52eRlbOzIGUttUCoASm9sLicQLt4YaNBOBV2LYdjl+Ti&#xa;32VQg1NrqYrgC3g/o+QCjtVmI6PwKWyhQMNDIXhpbAq74ZZAvNPTfoASPF9MvNAYY5XpkkehnZ&#xa;qETzYYufixVctPBxVIRFfRoS0+O1qnS10R0S+7RF5FVM0yrbT2Gi5Vib9id8tjOt6oI3+98lEp&#xa;yhlETDsmC9BM2q1gSx3ER8nKo8dm90myOFoIvN3mjoWMSvOvFWLJfaYdJF0Ec+ImSqltrlsCNY&#xa;tNp3fRIHVPMVc4xpC57aWlXpMFf0bO255yN4QSHZzcOELmGSqOgjHX7mVWwaY6avNsFcHGHcs/&#xa;nxsQkGXImsYU6vK7Dy50T1CPUGrxcIghNcRwrVTbWnlNZADognmN2/b4VhxYTEOzGpQHuWo8CH&#xa;jLnNcjjBwVyXlU4kcqqfrqyh8Y7LQGi9ZGY6f8lgAj629iYoiVgQz1JKh55u1OUDGo7dEkqLCE&#xa;u9J7phnvfZoVP1vbgi+N9xVdf+P2vNJuh+7IISpJhmTCc2WCWzJTlGYJblhXVkSk6mPAPUG42n&#xa;3dJXYe5HQxZ86mVW1mbT3akdDQP2aaWbowFV3s+JQgKmG64MIgemfH6rq7BkgNK7KlxoAFZbNV&#xa;muXOWWLEMhWSCDTVYwTY5WHvCbTRZkb08udDC57I4Cvvb0rQB+tpyXJth+U1/xonfqcEizi8dd&#xa;bBybCIaCZz6jNgXLzfpTQf12qmAICdjmV5SMvobfTEVD1SuN3Mz55cQrTn2VlGeiLHndICa/OI&#xa;UkOD1kaTIvKYPH4d1mE/Gf/wX8z6wV4Du+4PgBOI+LKtbLYkxwN10t8NIwh2QOCXMYTzCX1Bea&#xa;kvPaMp5oKhORhoB/QaQxwBBpzss1dagJ+xSdX1bKL6htKONg3gPusGknbNZN6pbrw3/ETn4O0h&#xa;m7lhTbkrBcOgfLDvfiLa+8juL3lGfEk+EfSO3uElT9Ms05RIt2+9B8kgxc+nPiHxwZBS5GwV5g&#xa;yH9QgSEbstu1pqxdKHme9DaO3nKlDzWDrfBHhRwc9PcIerQb3DzjbX3vuPc7sRZbzeDWVUnzGE&#xa;WkgK71HomPokHgDbO8jIi2Itz1AwlG7nwYEd9dPkcv1Pj32FPYoD7cr+m1M8IhRIb8SQxe//Cp&#xa;YuuOLUExAgIEOw/xksBf8vrk3y/xEs/zswtmTD+KCLdvb3WVFkzDIGF0MHJFi3J00ES3CiI2MM&#xa;EieCJApElzsyL0lCUSwZxg7nA3ZeIgo9/pzUElFB3Lj6ts85b7ve+Hq3p11cb7bZr223hVXdVF&#xa;VmnJ3l1jLf+t28kKpur/z5rqq8qXKu9Ot+eoOrA+nHP6KBGOVwuahQkVZau1jFPnPgMiPTStwT&#xa;ARLK4UlyIINhZA357nV6cC6otrUaNxFKdhliBzToSg6d4u2e0fx2vraGAfVvqNXEJ9q13qm329&#xa;54optKa+Gg12xyGkpMmcqCsYh5tsFEuaXVXplvtLrKJL/YBLSv0mpmDO7LSCuuJIR6cKZopZyy&#xa;AiDwYkzUdYfDz7f3ZCrptRuLd3DE2TTCO7tpz13a2opCS6HADm3ATHm9uKb50LCXNDTKSregTa&#xa;TkY8mNzpQB8FWVOxL5TlppuXaAsYOZhuZesgx445rzqkqOn1ikSRJjXo+dgMkyhV56aPr7QSrO&#xa;WXDY6OdAKD6kdgPazDCgvZmqDfPUcV0lZvIs3NgQZ6VpNxYwvxE+j6KwYXGbaZiCfXJL2jo0o0&#xa;AXJltF9fLXfvL5frHheuIvqGG4oYLoY/4ggSvFjEEEVQ2TzMsQIhkCxBUFYYNWGXFnMpwLWQYC&#xa;iQsVI0nWrazVhp5V1Fux6NwdByX9Xja0WLT0n82ROVchXJwD4E0G7DXRQuA2x6SWBWrnZ66SRe&#xa;rypQsLLPiPP9NH4B4M+GrGI1SSoqDIWalK2Ex+yFHUq6gNPQowlFIW3mFb6Za6h7LcucCVMn27&#xa;4k4QHstyGDQ9umGL6SBRspNxRcMB8E9URKp3LeuHwcsGlbQQORBUcJMX+oNsuVGuhRgUANoFFf&#xa;kl3JaPYdz7pyUsgGyH5pothJh148XfYmUnWsSpjfW8dWvcT8W54QYU1pAY6xLeExmEGtAXlhFh&#xa;xhENd6jYqkcWXwj1CZOt+1RCcCPe6AGqIZWeSFyjoTch7JxZXE5odLFpUKQWCnK70cQtHcTHqM&#xa;EPlvSGld5kCECHU63qwFgzthF18kUvrCvQUx53fc7chTU3VGzdlkoFczVAyqhBE3SnIZztXndX&#xa;vrFG3J0Q0g00TKb6vxqlpKynPiWLTxKNDffVgjESamzvlBjPrLQFy7OPF5VDKaOYbxNhXY8Dfk&#xa;Yn9ko0eTprih0Jvj+kOb7IkjEUythyt2zgjhVbPOiOE7U0Rmz1cUWkNyIWhUq86mn0MTy3qoiQ&#xa;XGHH+FETddIrSSxuAMOzvoR97+Uogj5zG6K5MvdUac/rnT0BKskCOX/ABFemYEAFV6ZowAV3On&#xa;9ABh/raJS9aVKzYwfB3csAiUMEA6HSErkYNLbpyPOluiilsIIYd3nRABPh3MIBDGF9V+MGEunH&#xa;2Q9KRvvwWvNOZ/LMg1BKmOx7/ztu99slQg9YBxxwIE/Q12TrUYokgbNM6+5thu3Sh0eWXyqmPy&#xa;LC8aIBYUBiOApHIjZL2P6r+HZ4TD5aztjmUL0G+ma5VJkPH9YHLbicHaYfil4hy+sUhNj8iNDA&#xa;lu4Bp3G42YP6HpvWYp3nABxpeUyfXL5V+QUexyfeLFRH4f3Kwv4+Sp3XKRwFQzfMn9t+lFf3Wk&#xa;59FYZu2TUC8V0CHZFjq6TZGVlXmqfg3GICUO6p9v05FzIpisE70VZPorodhD/D8MpeBcRxdaga&#xa;MfST3Q0ieQ2iY8N2pFbac6xlSZwRiLb9JdIV7r0uAH7cGL1X5F4OfL5fN2jYO+Q60iaqXFSviy&#xa;sZ2E+DSHtjrDff/d3KIZ5z+JkB841wsSvo68L+sPxlHf7BBKeHEjxdkW4H6+hxJZ2qrxg5elBe&#xa;Kq8IsKxIjy7YdxoiIX+MnMyV1PfcOenr8v8SmH6joXWxwGB8wY2tLrFE1DowY46ufY+uAS5uZf&#xa;f0wJYq2WF6EiXH9l2pQszeWHykun7rd3M61Rdc+jvAn96MYkTB+o9l8204Z8F+D2e4tcB+D1r0&#xa;wOrXH26qBmaROJVKOXhKpFZAtHGbFEltXV7YpSTveUdJOfgKpVaaQEj3CpOT3vmGSAF/f+QA7/&#xa;Y+cFN2DyVxVZihipZU98uqMNTSRjVg19iX+qqZVWwS0qJJDxrYIU5SEmM9OBtFyZM0+NwrTJi9&#xa;27XJlX8P8QIzZgmvVSdknh3ypCodhaRN9u8EOBOyPlUCWcAzqlF1FNNcccRYBaDFUpYNzyuAGT&#xa;EXtXpDEo3LIDENRHt0VIxhv5hxfuJrjz2dTQSABCkWkuJEjS0Yn1WXoineqqi0gLhzyMwX1pHm&#xa;Soo8FUthKvpStab3F6vUEU7smqAeMDNxhZ9WsLL3Vc8qV8hN+8DESmqzPCYl5EurAwlmXIajZY&#xa;A0vwUuej8EU2jHevAQJVFy1hgVQqJGfiVcryZVgMipeRlYU2D+Rv1RXsoVLeJDVAXyIjOAfhx9&#xa;NJHaCTSEmHevsEnd48TbtzBUXgFqhtRecSRW6DypHxByZcK/GPP3Zx5k4kRJNc1/uLD6oQXAcO&#xa;V0gqFkD5N4AUWmCsoeCoEDrvciWRKcgzLGk9mS1p5sXtju6xgZIhAcMBOBc3inJ5QvVRDqEwfa&#xa;lgdILmHKAQ5EGHGurmXgexY/3mm2QkZsjQvnKk3QIulLbGWovOi59lyTbcbAMIFXA2+hcjAhjY&#xa;Zq/brAgZK3YaEWuUFOBhq2FuBZI3XseYJGpFq3AHtoYwsb8LfR0gXZprCBXUGvBHPSeWkMkAGt&#xa;fJ9LaVuMglCUocxIF8YFKFfnDNfCnaDTlLMlRfM1LJey280eGTWstF4Ivsmsu/ne0FZFFqTf7v&#xa;SR5gemjL+Vco4gTosxZOgXGVQXeUg/bLi0oCyauKm4uCArmshtw/UQypDYPVyqTOuJE8AV5rWU&#xa;Y54PjOSltHt8Po1wcSV2gRRCFIsXVld82fIXIF/b9dpcYHX64hrGvyIbs6s/SuUIwe+aSN1Ebt&#xa;C2IK/rViXvcqBlbhppYBAwP8fG61Jx4vZja9ns2zG8iG4nMgZ3Kpgm1KZ0SezIwjjGTNnKukHu&#xa;uBw8Y81aup5zB3ykQTtGmDA3iACXfuNEDdcPgnaSz6NRs1dAcp3BC7dBMeGzF3GlSFYdGhbL9o&#xa;hL80sZ9Ga8LDS0+2faH/u40G4LZLw9Y0u6cMhBnBpw0RjcI7vwxHBNf8bJjqk7hh3MU5Ny5eQo&#xa;CpLksO6HzNgxgCESKMHzSOevNiBFJoCHcz7zM91306X5UKKShtl0wIP+tJki136jWydQaii/Du&#xa;62mDIFjE+1BjDr++I8Vtrm46M+smnLeaKN59dtOuGiBnNvaiKmDpkSsiuAPlAwI5YmMbcv8A4s&#xa;uCmd2xbjx1CW7LQcpXAEJ3v9SV2bL0cCyNBPVzGglWm7dKpcRS+4UtvNOlL9ZY/EAGKF+0JzUI&#xa;ZsvLvqsL9QxLBeKzhQ61K986LTLVOh/A2oiXaR/kVjp5zOjpzyOa4mFoB97UkpOTke4hcplLjo&#xa;WJC3SdGhEzp+ZOpnmHWYbeJnqm3+MA1L7mesrYcl/bnaWm/kXebH200+j3ctD6F0ZkKROLt7nf&#xa;E521qPKr2/w3W6fHwA5rkVCJ2j1SVB+HJKHOCXzOxAbUD5FR1MBA16hwXGEnlJEj8y8xVNMgUw&#xa;+bazFLVJ6iQfCEU5xuysVJrgp6uRIHpkiKJoZaDHfB8snNCUIB4xPe+PKV7QpmKtbpcZESIfMQ&#xa;ViOmGlVWiUw7dVtzKTIxhLF4w7oDekjNMzDxaGmJpi4Vgu7FMpadr8YGfPZAZVvdPkqk6Kr8Q3&#xa;P3ulrSPJYMLknWX2m+ofvTfi5zwQsCUraoD4nhHFMcdZDzZCo93QiJUzSqLdCDZKglHBSKYjJO&#xa;xvCK2tRdB5XzD1+lrLeP1VKSN6FkjiF/HoAqZc0ukcyKKoUMlOqWHbYtJARMCkWjJqJZmgUWM6&#xa;j7wSOrWqCYXQcWkzVdgu0EqJGTP6VMt4PUUbmmmsiY4Emk4J9ASNT+JVVHGC/g2ZejaimbrmmG&#xa;DqlSBJT6HAS2btcKes6CPRursvDZh2Wa6lLBRFaAQNIXDlhmFo+5xVos1O0rZ8yxGlbYsUECiN&#xa;WzNnk5podqygmAKTUUCh71xtBEmKzLXUzD90MxMLtTOnKgfOpEJGJkF8qN5V0qiWrDB7ZGrXC+&#xa;2xT+2e0TZNFI5tmWBMZlsvHNAu2eGcVvNPHGJO90jyispTqZLb4Jz2ynAZncVSE9gCk1fobBUo&#xa;oppUsALuLVEuTItgIMPAJHuaan+fymDlysXljiKh0Lonb5gvfYBk4cfGsKNSnS0uSTvknhPvxp&#xa;akvjyWLuiFwr4ceD8LaKomQnRL5sxY0ZwW6qoufhok51xVSv0AVbfnSVJKgSvPFFHpM7Atq7QZ&#xa;OpTzUU6JUvFaCCYoWVRWV/09ID98KmgdaqeULP3KlJLhgGMldQTrADlY4eOmvlcWjlJmnlrphB&#xa;CgKNdCwdgn5bBF3dk4yOlWZ9l79IzHkabdsVBlo7hPqJCcBbP8o8eqzanq6jUmz4ircxQu0ylL&#xa;/HfJ1rWq0eQx8/QTItgB2Zc7jTfPpO78uWqtcm1ZSXdYb634jzDLa70jPwta4RCkfNyJGfjmsi&#xa;VVMDBjUfP302MoVoieKXODGY7Fh59b7K3zv/rDzd6VdZXbOT74GplS59dMvLgeTdhH+nKzbEnd&#xa;dGU0EvmjpAy7tFP6damakmLrcs1Ik4prGGuHTBT6ISGkBhD8vDLF69zn4WBpCeUOYJF4ZcZeca&#xa;nCErD1peomF1yslL3qoDwRfASSxc+2QZbHr6PhB9NHd4lvoZEGg0sV6v96pqNb+abuuCoTFrn7&#xa;xYNxIoJpQPX7lPar1AaoCMAs1eOxsYY0Wz4R23r99UvH4ZGpU1uuj4cX+kuYjrx4vLvWcbw25J&#xa;AI9gGih2AJdzsl9KltYo40ZAQJVRBwN6Vg1EHaB9ZX3dz0savq1SbriT+UlH8IpyFAcxi6khe0&#xa;D4X1sfYImX2ZzkWRVckjaM9lSKB7SxXJB4U1cDBNUbTgBtI2cDb99WiJwYfyqZ3UFMuM08OK/+&#xa;Sy1g24mLXjh5iRtShja9GS7imFEIbeqx5yiIXD7PysXdW62vLKDWTT09hnGEh+OP9L3qLVlXHt&#xa;ThCKCCH1t4RKKZIk4V2LLtJIi7KqyRp5/5I4bU+o7c/2uXtRoOGrJXI0761JzWoUhLRJI5xq37&#xa;l7H9TFBpLQZF3hKqvVzK7+j9SkjA61Cw7phBmDfFllVvJD9x+BUe25zP4ZFWXwTzbmGO3tuUeq&#xa;VVf1Z+UrbvfyP8MWOz0/CauzoM+k0zm/Q+vSGtX9Ja//Mn9d7998JQr5r/26h8yAs5otupiv6D&#xa;B/h72FnKZ3ceRlv3fywNV9wUiH1g9pMmC47KdwIeWBm+v3e6XBF/CdS4LilMjcQ47oN1yFlxu4&#xa;BhSj0ZvP/EImqP1Fo7lE9CqCJ/Kr+lfV7QTkU/melQ9wQOwRRifIyc6nC/PYnHvppaHDg5GPOv&#xa;1Bj/RGba0ArxnPyunKVNbWWqKroZfij5bFB4wlx8qHLvGVGUtPKh76JqpUcv4w3bqsnSi1ofGA&#xa;28o5A50NrXxIs65Evci1iY3C12J20nb5E/uyF/fX1SxbarxbmGa4DZS3hnHFXRphYNe0mLoVe2&#xa;e8GwfNN+8TbV28W52suERXnP+iHZUF3fphvZNpjZ96wUdV+cfJL+1T75L5F5Z5uKNbVERrhoP4&#xa;V1ib4DUDbh+E2rC1BjYfAr4QDoXfKMc3Hae8QsdMDEndaaA9PJmentjTFOTTU/TroVwVadJ3V1&#xa;+f8R1J3jh6+72++b2hKwk/nwYupVeLkI70pNM/CGd7tbYwFgkFN/kj/eP2QF5FbFd35Jm8lZ39&#xa;U0pMumDwEJt7ll85gQ4MN3/Am4Q2QJdv8b947a3uujTRp93thucXrQpKzAtK9pCTj8JmhaQfoM&#xa;W9u3bpstN3RqmPCMqD3A0hu6HBb/kug+0Lt/kFUn4we9eJW4N2x1/pP0a8VCasqyMxe8v/8rYE&#xa;VTAGeF8QXegjzMddBWn1IqUSK4fy2nLTmhEq0eg8Uni6wepEihaFZEUo/6HBpagYEPTw/ePnUd&#xa;RwLIstqQy9V9M6Cn4LxT7m/tLw886RHQ54lBcwhyAOBPQQh14gVdYhtiy4MVG84stYcYPV+tYM&#xa;sGerOoqVUFPow5qk4PEp5BanJaJ4IR28/M5Zsx9oa5psttmTCmIbX3rDxj/kD74xOfprAeHGix&#xa;X1d9tA9pTxs1/UXEL8Muy2iJYdkzgzJs04bI9yKHhZfs98cNpvD2yMuRDOP0PbWWYnWh85y0cs&#xa;5J25fSPUkoO1raNZn6MtxeLHv8Eq75/b8oejrWLjR+YmUKqF3+h09WuZB+CvS8AD4g/X2vnzBe&#xa;kQKPXbWW5lTGXFXGUFQWXl5KcqHxhkJ19ZJ5WOwFt44pDPsKlTCcUJKRBaujp/DGIAoifE4Ce0&#xa;dI1BCExqVr4awArfRXtAkYJzA2IMM3DMWaFFw8x+h9n7QWxH2yC9Bx6XDE1xVhysuX/k+SmBes&#xa;xs13LMahfnn1Uaszncfm/3Y3Os4v+itNKi2XvfZ+9eoxWQKJyw29ekcAuEb8Jp3xk+nmTM8jzJ&#xa;WpdknjbbCqFwa4RXrlmnpnDLhK+qT3GqmKBLcmo1qmXsWCrJzod5HcdRqpYJZpNiioO8YG1gU7&#xa;Jpp2pzVZqmGVyVbkBRU25N3xKjVrc7mmXuaCrZkqBxj53IoTwCVm+9UawRHwFrdJYPuUqyzY46&#xa;Ze2akh80O9onyIu3qBI+vErWHUloqUfEtKUz2Dv4qDnExnWJjkYjIztkI99E10WVLj1Q3BrQ8S&#xa;gH3aQa7kgulajZBYN16UcoIutpStbJUNxa0OE0/vrWTOgyHFHAdeCVbKErMtmnGimLrtco2WS2&#xa;JLdlbNlRc+iOb1MfmYVHeqahZ1EPXicYqa4q7Zg7IUl0WBG/xCfDRUa+haNXoRjGSTbEA7yFIl&#xa;ci68uK12lRnjGo1SgHcxOMKMPrfZVsWgGbDCPnouvOSjaxAG6qkePIekFqdvngHqKR46j6tOL1&#xa;CJJLDGq3RIC3bCQdsmGddEMIySUCdatEMMG/LaLq7SUaRkgu6ajdIgHe4pE5wMGdJKOyiHp7qQ&#xa;ZykkttJZsKwIdCJFt4/Y1UgynJ5YeSTQfgowBdm3jQj3ZELbI+T6JhSXR9rngdiPKcgM4tHPxX&#xa;KbIG07Av1SiG5NKYepVskC/ByFpk/aZkXQvlGZq6VS74r2JkDvXgF9nIalS9fIlGE+CjCt0axd&#xa;A/yQhPZJ2/eF0M5TkD3RrDME+6oQkiHUypWjaYWunSBuU40ShLRKMCnVs8uELpUgflOMHoJIKx&#xa;Dt0ay/BI6dIHRY14ZJBEJsmIgMQmGT0qvH5BiRY4OCrFpBtMwDDCJbruQb1KPkgh1WCHghlvxI&#xa;TCLhppi2m4VLyOicIuHDkiqpGCfoFiKEidimy4mHdJA4/CLh35FMl4xvAXQ1tUowdd+p8GFRSV&#xa;Cp5JM7JEoeBVLx8Prw9RqpYPlowjBb6Lrv+7JBgKBf8INrKhdMk6+z/50a4QXBNvhBXB+BYx4f&#xa;ZvgalDI3hCXsYtnPEsQpL8Et1xkTRJql1kWHJOBrinhLJGckKP5rjYlCrVvnWflG1E2Eq1OPTP&#xa;EQLkkkLXoaeoeEkpw6hHtD8cba2QyHl1KsOshbeXZ3epDUvKhwD3uFDW6PagJoZL50HTM7rK/v&#xa;V2eJ1DlFtE56FyWKSevqweNxdIP1JsJIgWSz7yBfzl0gcLRDPM5eP7NEi+EqyikE9blLhUpoij&#xa;T1PIOLX78pEym5FTnbzEwVOevMSB8u2yR2P0O2pwbFHfyRDsJyeiK+VW4+Q9e1++I6Pod99Jue&#xa;hW50+jL9sw+Q70opzPK9Q8p59iae/JNEyd02U6MQuuPC94ntccjp9muR90PC/antdd7ambHtdt&#xa;D23bPC/cHtfuzp+EX1d6uR++n1eg9PdE6n+R524M6e8Bc3uKeU50YnGOuyBxuQcLD6xG6sbz5G&#xa;vUa+Y3hLKGa56gYh/JeHpqdloE+Cp2noq/V0qpB4Qnr311cr/+ZGi+QV0LlW/UbXlCAJl4yrf+&#xa;4oJV/YGwVehwf4qa1LUN33EX6GB5zb7PP2pcLJ/L36q5BBP1jPyKcyi3AhHwBAANkUaRjKPPJk&#xa;kVKnhk625/ffiD/hcisF2cilnCAgHhVf1PRBDXySn3n4iA5v+BCP6PUjZ1cbG0M3cm+78gao76&#xa;mzOaK/q3z1JzFr10HF1YSpVBACtdqJpo/i+BX1ow6JLUmMvtsn2W4Gd26zacwx+jH6uRbftXMr&#xa;xQkdFj8lwHcVxfHLGvO9eoSnhcAxmzU+5/vP+4//jz9TWHxA/aDqoPRxsXM+nT+yeVWYuHvPjA&#xa;ZDrBx5o5peUeUtsNiAwmS9pqSsCLMoN7LMF6rIiuAuOi8SzBaoowpVgUH/eu4zbgwmzMvEEqa4&#xa;kXi0+/U47ZbpZZe9FjDYZQ4znmwFyhsTp+4j3TTI4ckaZKtKSZ4cScikN37wZHNUEmuY6BhgwN&#xa;YcVuMh3dJGlgyuk3zmnlMfqCQFCYtb3EZAsOFlNDuhiB89uG5GCcrtU2XlF3rzXoKOa2RwbFP/&#xa;e1KI3ezbpcuCcSBJfVIr2GBKBLdBptdm8i211Yn8TtKlm1K9G1VlyeTk2dL9+mZaCWeOSVd/hY&#xa;P2IGqK6ZPnNCPUml8K6TkdZO9IKEC1cRs9oE8e6QGBGirS3cAAMfICKqP68kKdvlCoCMvnb8yY&#xa;vAu/jbWPunJXdyLMYRbXrsYj0+jVkBBg31La2CcFZYOEBFMRXyOHhq56If6Hbk1etAp69BV+9K&#xa;wZCN9nMwa0hTysAlSwYvpHpJvt1vk/HBcoqQpV0BwwXGQjg1JSW0Yw6/MVafOBOadSs8S8VqgQ&#xa;1f+LzBQhRSmWc73yCn3+a+oU8DG7fzdw0RO8Cmspx53zSqX/6ZAuPCMUrgRMZRsvhSZva312DC&#xa;dIPp+rgiE826kKGEpvHPodTNOPRom5G/kgERhlmRNeuzATDM+Z6LHhlNay6HgIvTEk2H5XFME3&#xa;0tA732NtYFPjRTL8p9oN0QPabKkABKe03jropaoG17DpwFwxQiU7lpPnM6OfIkRpTXF0YhnUIe&#xa;w6FTqiyLy6+/BW8LLpqK3+W2BCyhjcsc0Jb/KnUwSHeY6t6NvRKiCSgrVs10bJp1E7iWqZ1bdF&#xa;JpvMdvcQsAdew8Y8dIEcde7LfuItNWA/28DK9WZYtE4Xywh5q3jayy1m/jecbI6Mgux/DMAA7B&#xa;iPXnRuHibhIEzWjHlQxcofKakoZcNIB6Zyr6usptmsxT6sboLav1JvCPMy4+usqh4zKaDqvqkG&#xa;M0YwCwspaNzTWGDqgoaVQEQ3OVjLnRvZpMZ6ku/9tvQs4uL4hcHS1W1nhMN7Ug2ZRLbHQ67JaI&#xa;LnfoHgKhBJmw1CEO56e/kTlZwo8SnOzZ9CFiHnoFWQp74l7Ks3Sa9jFlYtYlHnrzgP7MWwwj5x&#xa;JYtxtXZ4S53EX03DNYvXkHfsLdp09U25cqrJrdlO9pWoYQ06HhpXs2jLp9VwRKxx/qc1nN+2bj&#xa;IYFtKtnHfx9oc41p/uzNjaDTBbVYe/yY0EJ9DRCwdTxMGsdJDQ6Mk06nLhvA9py+gYnSwWe8hE&#xa;dK8INK5rEaXN7TFZv9ro0zl+noYmQns/1R9JT5WOuccxxQTFEdmJPIzawZIdfIAaiEUmEr36IX&#xa;GKIuTxftA0L/KqNdOFMVuVV+35CYCyFCGpZkvY5tds8WXuL49Os3h9DeaguO/Jk+hQTHNTPkU3&#xa;h3hssFeboVbc2ruE8WoRb+rP4BScsTzxNG3iV5+m7grGB/RlKfPNBYO+4ZDM4Z9wyiliP6yMNV&#xa;xRiRNcYkc9iiS4BV78eI+jMqpmrWsEkaI2mdKXZG5NoQpc3Ntb2tiqJhs6SujsLmR9Lz66Kmg/&#xa;OTJ1ng+h8dXtBPWmxkcf6mqyyKgtB6cJkNfWDBaJoCS0DedtjKCcRBeW94GqcY7HW3BFO5GrKC&#xa;Q9tHm8IAb78ohxjLwtqbi48gdA6zgryhjvRN7l+NYEdYnjD+fbNjef5PMP9dRHivOW4uz4hXNO&#xa;hPkWZdKQgnl7pMvzRZ+eAFDMO5cV+c4BPV/iepoHYJK98qemt7ait9JTHvqLIe4nBWMZ8rbUmj&#xa;X37qSohIFwEsAFEKQ1mfKNK75z8Kc+uS+HjR/mGkV+aON8E08bL5x9UfeLKw9ypVrCQ+ntCSlB&#xa;fnUad078IR4b0q/sG7zH+ZAq2fKAHPp/Io3SsjL2fyaFsHSh+6n3xY/Lv7L10ewv4UA6qzsoK6&#xa;1zRa562IjOr+X+Ld7UnVfm9gegTL4AnOHsaD5mXftD7P6fbqr9rR35FigeZ3zwwuhif285R317&#xa;NwnLwS6n8+EA8Sbu720MVPPmO4QkolQPQ7IZHzoQluUXDPXKDy5m/U7ayS/zufKbJP7bpDgYAw&#xa;If5nPquHDJD5z3zG+v83n/2PYP2f30Fn6mjq6N89yNmM8OGCKlYtWqShEBH5Las1I+HJqA4RRo&#xa;KbnDJ6g+uMSbMyCl2/V+20um7+7tyU0416dfpUnjzGnZ/5sgjDk3mBzGZ4Puzo+r/s/Jnq+/77&#xa;RfmL73N6Piv7uNV3Y59HUbOk4+BUbCfWpDnQMo12p61+nTSAqfmEbim7J5GqXIwv4VGOjJXxMV&#xa;2NryBDk68m9TKYwTQFXjxvL4LYzkHa1aO1cGG8vmDUsq5stN5XM0ESwFQ9mSnZomCwjiWrq2Ku&#xa;ytB4oIzVcYxfvn1Wu61EVJRBrNI8TdKG79THp5pzRJ17gMnB6vergM6Iu7LIeiLQanNIbNYkvO&#xa;TcbNYZkrk2S6yQRPpdiUIYUywJ3ibRiL8cr9M5fe+20chfRGX7AN6axPMagL/YOQRNK11C+160&#xa;fXI+dqwuSuqZdYgGFwkhCr06ATDgHYo92vtZm0+QwxzoISQIp5Ul8SEZms9SswnfpURzwRRYzm&#xa;acim+HgBfMWjKGXPs0OZ+NgtgtH1rL1bBa4QLuyjcchOt5EhmfMD9Sr2iD1JGYO0B8nX2bJSaI&#xa;vpnZAL4NT+B6QUY8Oy9gaqSBV7MZyr1AUwQNIyTvoWQhlRUy4RfaOyaatUrbc4rfse9AzBSvGh&#xa;WcF8wLfx99brFU5pGrr+cmSIlxOdLEnDvAd14VdiIu09SvKjzoZ3Wg2aKwP+YMf1GYtNLxKpQ8&#xa;LYif6AiyvAWao2Q3q25Mbpx12kg6TFnouHQtE+Mk7moeUpAEUgnV4EQm5mA5jhq78Bj59ZK8iV&#xa;VwUUHtgTLEHHqLKhyF3Qk0v+ucUf7TE4guBsluDKtWJMv6ARN66oQjMEgNZUqsEsePKGpdeKXH&#xa;V0LFGcPCvIj9Aq8upHrLDDUyEIyNaZQjbeW4jlxiEQ47ahFjEXVmpKyKfQhMYHeeFU5UvIXVwz&#xa;gzA1wEaQ2Q00OeOOihO0XiEhdqZlP5ocCYvouEZVc1ZrvR4vqmNeFSb4FSQpwXpuK0nLqHzV4h&#xa;l1qKnf82XsfzheCMy9RRn8v57C/cuQNLYCwigvtftLxjdKbttqadVJKKbdu2bduq2DaroidGxb&#xa;Zt+4lt27ZV/b5rr937W1/3WN39Y49x/bp/3+OYxzyveU2G+Fydh5qNxuDllKhkTWC7NGx1o5lW&#xa;LoutL9wGirmZnohIn3gnhXHBBO9ZU5nNrTzxOwZouTfWpQ73ZU9QhTzaUocrpRXJB9Rm3ywP9k&#xa;LhaK33aHIwYhiRczF78ZQjBOFuehTiLTPwKDTQpJjWO/E4Jo2clNdSmwJ5yQ1ALxsVnRZD6aS9&#xa;Lz77hiJAruOCu9m8yGcoU+yfCyMAPGax34sk76WnGdRksd+xyV8nEyZnwEmoxdak18+iuZnfEz&#xa;4tcg2KTTIvbj28HrFqMLX6SL0iQMTZuyLJYPOaN08udlzJJeS1f9gYwqAxQAKnDbQDdRL8Zlef&#xa;i+BtOIwTvOmQTm89Yx5vM6zj7S9raHFSrCN+PcXCcYE4tMfvUed0/DU0NaR1xGl7ZsvnI6tn+h&#xa;KTzewMattrzkduz6Vj16fBg1pRYoXuqNnvBXaJ8vrGMDXfkhpF1YZ1CS355tO//m7yjARL9ETL&#xa;MWmyzH9hL9QZdTzm6R8zGU7tzF/tYueuzue+C7G8/9xoIH5NtPeAJ1RzXRa6JVKQxFfku57Nzw&#xa;g2GK1xexmOhclmUkjJhq6ZMEmqXUHp420njDeYW9OyvryOnDEsxXUDK1LHEjO9OTSq9gGqEbnJ&#xa;MqVQeLVj6kuQ0F+440LCti0E2RVyS+HM13+100/POY+0ECGF29nzAzvdR6aIjOVWkVe/MSBZiw&#xa;tlqsRk99KIv4tIwuUy0s7tPegjBPZnL1YeVeSzkXwwWF0H1eTr3kPDBOb2vm701lDIz1pA9n3r&#xa;Byd1FJ9QaxSnxNX+HHhZtzwy6sy1F4aIJ+GyL6y+qTARKoVmzkTR1f4QOPHNob7vfYpN2+8vh3&#xa;bBRH/Hc/pdyd+k6VCXOXqNXTpz2/8YeWKb/HOeDQECogD37/j/f9vPsPwn9s81USXR/sijbNRW&#xa;YmEYLpSXKouiREvY0NOg7xck/qpSpltLZxgHNwbat6+WPnzWV1U1XT8f+0vaIZ+f7qvyl/xUU7&#xa;yeYECWegDJdLFwPxLwf+Z+fe7Z/gNeiyvIajsZdS9z2Aj0Km8ed1qm1zFJstyiW00qB87DYIm+&#xa;p5qsp1CokgNxZM06cSGEAYWXUUVyPomxuIsyY8fO5cm6mTtlqBt7Mbt3s+liqMA1Hl1efmaAWy&#xa;xIIdHEjJ7oYC8F1pLp8R7PIOzGbvIoIpNYPvqyY6R5sakajZ9Gn3mYBa7xYQgK52a+XZF1J1nN&#xa;wX2hEZGo+xQzHa9WY4Q9oqginc9sq6nnk0KMHtkoGLwCTsEZjrFlZIwTp0miTFv+uA/+MFHLfF&#xa;31fXTdqxNbeI/IR5l2HxjOWp2KOEgFVjMjjOpyHICjUhm5XweefiZd+o0ZEMdrUBkXf5EfEUAy&#xa;n95SweDxRgfD5DWYu4xrYjkK27VFOeiwgDGD3czeu6b+E60QJYRILg5EtLahgzXKDo43GY0Sgv&#xa;luJrH4mZFB7lESZ0+qMRdWGpSCSirMSB2IR7si/oN6EI7WBN6tqE6y6GmdttEeQ+dZuRa8X26R&#xa;GJ3Mk4ujxl9h5HMO5HpYVcSNUzRXCkcU3FIISGGLQS5qtsFQzkSJa/qrA0DnC0AQ4Vt2vpR5mB&#xa;ehhYlhChZn9um/vN94HGDDG2RGx8azWPksHTiUK9Fyj5Vr13N8iMExK2eCmGaiw4zmhDTJNwJl&#xa;l6ja1X6oOBHVADo3RgQSmobRu8NQecYIZzzOZBCHGrspuNP7V1pyhWRGHDutqeoFlRtBde3tVZ&#xa;7gpfOlRDvnkKtgRoWXzeKwH8dGPbr8iCtTm2JoRfweDbj3VG59Ryk6ydWOB8oCmabCP3omanms&#xa;eTK/33cKJ27LY9bdu7Ad64WuGU7RF8nptpiGMMs8qjGo0xqhYaWPRBpwRjl9V09OvMQy4YuKVP&#xa;sTbct0EclP9gPx3IiaklJkvpPloZe6lj2qFy2mS6bA9bQcXQ1jQomxBh6M2NxSPSRS9kGHnwQC&#xa;pro0FU3foD+494lHPkqiiJa9m9pzO98SxyDKnf6T2xPymgO18tlyKf2bf2L2sxYY4tmGqVbdjl&#xa;RfaOJ14CUcDqoecLi1fI9Uz2Tl5pfTTHKlpNduq36TRCx3jPznG7Xo8TezoOZzJz1mL+3GoMDp&#xa;Th3sXEmAtdlu7kOA9QueYWlrACMmuL0BTbeGE/62krA5ldoeeT01hyhAlU1C5qOR6MCg2fK272&#xa;wAyuMDld1CEz+BkDECsWo6n5AahbYmN0EF/RsEcp6UUGe8kBg6MGjJRisg7KP4Kt/Zlrib40Ss&#xa;p6CG9cGAvqDJ5HtFh+it2B0Cj7srpxvb4H2Pkb7k/GrGHjfwWWzf9JtW5HCdQadL4/qvaFdK96&#xa;xG2JEsJoJC1fS1bmjMCF80xITwgMJucnzFs1lXle10hZP1a2NJJGk/Sr+SuVvDOnscxY3BBFCy&#xa;g2jF0tjilURPVfL4xTkNRXhpRAQZMsEZf+wq4gtibymVACLpijhLcnDt7bCS6Xu5BAPLboEAPw&#xa;0WBWcRlYR4WxzF5fGybD2yYODJ4+HTi/P6/jxXHqS/MJdAUECZLlea/MYwjBNPECtwdZ0rLXUI&#xa;VoScZNJ44RVGY5YmkTNh198dF9NeRhE4sqxFcvMlwsp0QF+UKhHxMyNOG4Rj6JGeZ3rwsVRAwr&#xa;WikPeRZDbxS8ZeI+5tE3ODjDYc6WSJkOoZ1f6YYMOIH6knaFxVgPcz6n71+c3duMVxl7AROWvI&#xa;5meC0B+/E1bPgj8EFKHSD3Z3ASJ/ukuIoxAdF5dro9nCtE5NzxLKLvj1CItTfd0gt7/I2Tln/8&#xa;CnvROSq98kRLWPWLFWvfzjAcDs8hpB2F+Ax/8XwFeD/SvgOf9PgHcxc1VydnA0c3b1+k/Ys/4n&#xa;7K00cdWx/O0xKORK6KSt+mSq0kWgGqmLlmAaYU4xoJUyGEQWueTs+3+khrOi6lTqeFwi3vI2y7&#xa;hcOL2aTt9KevleT8SJxDtTZbI+T3Vd33VOd8h9fV4/C4JG7YECLb3T1p/cIu/V/FL2YwpwyXmz&#xa;W9pcFlloN5yX7nVWGyswCBN6sYzJx9mWl1TNFqmK5raig4mAYVZJKunaO+PWiwqvKhqLjg/q2e&#xa;0T8PZlCIwL7P1wXfL+ip7WcKEeoJTE/bUOuEKAhvCLiPZi79yjFI3WIzm2HDh2Quq4utiAKma8&#xa;MfvYCxxG50hcnJwfJxHrMWcnOu2Va+5DVOlwo7bjll51chpu81KLZtKGY8ej/bbpH3QsjfJngK&#xa;tMC64eyplpYXbXhDxegz0FHfoUl3ZgCZ0sOYUCOcC+ZejIQuRvwVfVjRgQRkQYg9pBAu5shXWW&#xa;EQEEsIk7C38I8qxJv5sB4hoq1+FMVjEZ6I3LSB008O3N4EgySEzDOHiLO49DEK+TWulSSeAAAR&#xa;ituoUZeSXkWSgxzODh8gCw8GQzlrDgKFA45e2LIXuFhocI1q6rv8RdXYkWLT7Y6LuXulvjoU3n&#xa;wPVV2pE4xLCTyBCUSuKlxfN8sfZRObFRYoSNPL3mq+/v3R/GTryuhmG1sbuNUaqeQcS5qsHEEQ&#xa;koLzx7JKcOyrKRPGNt5ALj+Iv0+gABEmNe7UfaWeRoLfJMk7Aw54dEE16thwW0zmgP08xhNKD/&#xa;LNh6JnzLhKHNM8xcK5FUW2kuqn7+EwMr2dNaHAoL3BiGWk3WNHn6DMJlFxB9goh2X3/CG3CuhD&#xa;5hoqKnhx4iK7oTozOKRQLZF2y5E9Pa3ODz3tJHpFmWqe2a/dgZeN5K3E++OFKo4X4cFmgzEi7G&#xa;oHQ5xB45n2iXCm2BMg195EXat5gBNZfyjdc5y4XO2giacDbTyykIRcC+1Df2dH1VAvHrl3Z8nk&#xa;hBbB9DodQOSwSWiiMuIRROctmwLnqCjZP4iH8/kga/uUL3S6VeyKxCbanlGhuo4JQj3SxJYDET&#xa;Ng9uDJnSoaz4fLqqZlsgDR02womq60HaTuZphMHOoKz5IpVeI13CEXR0XAH80JHccEJrxW0ElR&#xa;J0zuyC0/hs8yKKA56dgBJEzj4s9vONGZgTr8ptUpSbr3wDqbxa+KwtCienuqxmythHu6eSp/bm&#xa;jsviIrn9K6XzVKUOTk9hxzImPPPlKMXjcL12rsEo1kNFr/i0HV7RQUjp1hrSGUxYLMwMeeT3kk&#xa;fQdmS37TKwUhqz+MhdEP6eohZcqHiMGU3Ra08qbr47rNDY2ND3/tEPh5Nr2O23QfqD65M0Mkwh&#xa;xpgddOXNRt4IzVOFC4MC/d5N6GNhniLk046RmeiTUAJn5owP9M8MKYRlx3oAK65tEMO36teg6g&#xa;CtTV84h/ajnhI/3CriqPl7OpTuVWSdEAnItMk3c34fAr3BkOKXJ/Bc+kmyU2j5wUXTDCyHpQT+&#xa;rmokCqbT8+hX76BReTlJMEHS+MrduSFRvVEEQfESrioje+J3KE0A5202E7UE3STWthBiVb8nL3&#xa;e2UexOPKzYjb9+IeyWYSlA/Dn5TmLzdPupQ/t7ewHhV8DHBGop7KzQHTMMbjfVJ86tuGKHNggK&#xa;otM5oeu8C2pRj7TREXU++0mhnh7RIksf0RNNdgiUQMihLhYRLMkGlbiXBek7+Dks2tLn8MsR47&#xa;Jz6tf1LM4Aoj0K+QfVr4Isqo9RxsZfmJP/0Ot0NgxO7L/oywf7764LiP89ff95SaAFrYW3iP+H&#xa;XyvVKI2sNsMGtYAZ5RusKWoU5i1VADgz3m/yHYpmrguEWvNV4oaG8PCmR0u7S6tLszXry7zmJk&#xa;hQ+d6FgtC1NWtG3aan+qfuS/2M9K+tCUeIsIHrdYetP13PPVt/fB0If75+QYJmUk+haBksW5iy&#xa;XCYbiQ3llRqtj7o6SAQgUbWrbBdIqni3c86t+RUht6AfwNBdNsm5TAt4dPUFDLvft/JGL+pgGh&#xa;JhbXbb6drovh+9VRevJQMum+AzCr4FFO8X2aLdLHMuNXE2Ny80DxbPNNk6bDW2VdUVCf/YKlxc&#xa;A1BruVXR02ecr+mugx8pVjYvLUuW5NpZV9lVxHJcrciZf771cozjMdHxWpmGJY0iwKUm25FR1G&#xa;AkmdpuKgydq3hTzKdeMUP0yxcv4oZnQBcoTpuTZFvRFVAOBpFNupripZSotLeP5LUpCF0gUZ1w&#xa;2m6uYmjNsa2WTprgFo4KCqYprGHC0NFk2JfeIQTsxRsAq+dVyyznOKzpZUuKKsbHPKYqtTjsKN&#xa;+jpTJfsPckh6A4rbUAh/4HO2gBG/V3CPCyTuWEApkSNlLIyscnk6g8oWNjFrM6wFMtcq+sPCPm&#xa;ZDQknazx0iChRWmroly5XsoUCBkLnj8P5PBGamj5eEk4EUpEZjVJ9SEAY492gx+P0CQ9hbTZLK&#xa;za41o1TPK15t/rWLlF1s7pBDl2bANcjiVYG+6OZQ6n9+suu8mqOvNPwdtZBMQEP8WfR1iPoErB&#xa;7DvHXDN+bG9ZpPk8XqHB64wfjGE9Ffvhe9PYSNEUu96Cn1HMy2F764A2iKySOun4gGOkXKZWVo&#xa;eK+eE61hHqzlApUW2qpTTRkdrBko2lm9OisqbuqWfY0KYXtqVD3OHpW4EcO+pG+91ZCqyZpwjr&#xa;Hjir78Rzv5op5KfFJkwvmz9g8Xlmft9iICU+kITkKYLxuktgrD0VC3C4xt3x5vmdr0r6KBGbLb&#xa;96qWfT8uBaPNz45qYti3aBNtOuv+6g6JGhOamC7m7pSW9wPHx4Ej+H/qoMMaaI9dg4o3WgSRsG&#xa;a5uT0WTOBrQdt8/G8ifrLdX5SZIhtq/h/Ku6ET5cOWMG0haoMkNZS2T/hHiSPGu8luFh8biQmZ&#xa;Do3obS8SFFQi6v0mtJvaqxvtXdViUOEdl2xOzear1yuafzDXbcPKob1khW0IKctWdi0x07SnPU&#xa;Ku/DUpWlgtkOt+sOqibldYErraDl8GAe96P1uwNfN7lcatxkRF42no0c3JUbpe45+oYQuql8zt&#xa;Zh4da9Jdaq2gYPYabzSx3MH4xOdffQjNIYW6WEN5HBqBDvZoVb905RnNcsnG9QY3cf9gH1bU9q&#xa;ENd5y0Nqbrx3EGbzjfQ5PglLNwad07G6N/4pt63lOAJUPmv0reo7iXXzKyav2FZMc4Ci+fiH6b&#xa;vT9bk+DR1FfEPOoVXaFygI86hRgJ4GR+Si6fpy/Cn/EUNQpJ/5XmsyahP90cMGTJrtfEu3sRUf&#xa;dgzOVS8ljBOuwGixEKoCuPUpnMyUlq5hXsCUQvkug6/M2BebmQXFuAErJ9hs/XGXjmpt82bQtP&#xa;RpjsW3LEJFbk7ONKV7bFbUwRS38bJjBTfF0+bRdCaycZz7BiMRC/jnds60d7bSq8XDWtNmoaDt&#xa;rK1pXZE1OVyabqnSwQACU9qN9WE6zVummh5dOZsiVn2rYtV3Nd+0sM3izZK9igXlq/YGSS/CaN&#xa;3vpK3ahEhU1OvcFTUN7izoxBjRn+y++hTX+zgw+tHd0k9+o+AhgtInxpBvHHlyOW2agx7Q4vgn&#xa;1PDpsrdgbRXPqNfYbedCgmQLJtgd6h9h9hsilpdj9vwmZGofYkC+lBsLnKOOmWmvAznB6JI9TP&#xa;AChhfaraz3aDGW9Zo9zuAM/hcPMelTDcbDj4AfCbBf0sBvKeuGL2ThsoarD+opfD81UrB+mpFn&#xa;ailavHfAY0PRfE2hcNX1tYRF/Kw3k6Nzy2hPOhkje04Y7ym5GJh0TU9mr4qKSDmpCsdn/b2zpl&#xa;ydNFCydakp5wwnq0Vm/bSS0AHcQ1mOVc0G1z83m17lFkVg3vmcutxqPGCGuI4TEI19LgtMKeG7&#xa;WlgrH9HsK0mQcbPjT5sqDaxizcGk3SJQU6bqSpKjVOvr/q0IY9CtVvdrAUw7tF0rpLx/OmG6ML&#xa;131awB7WQVJ1W0RflIZDZRstyHQpzObB89MEmebl/35ECbdi9xHwag62HRSMjItqfWo0WsMH/D&#xa;EsMcPHB6AUrpGE8ydROJYspeJ0WXrJM8ZkUJXyx7mk41DA9himWuECMogWWqWm3J5o2POFg/my&#xa;iHS6/A1TxO2+2rnMGnGWpPfrihmzn8rOuLOb+UEbqmh+pKxirNsFA8b6BuvD+Lg52c7GL+evEo&#xa;OVmJztlMpvqd0J374u2Bdf6vnwolCyn+cQQbtkv5fshri2sbF5PLJMY31UmPwtD0Ic+w2T+G04&#xa;gYw6nTQAAny21NlSftzrOoWHbZuTmn/p7LHqcv4ujGqBKOUERaVr31XCBRw03j+5KaZlQ+DSR7&#xa;d5wig4SIQHV1BYHII7JtWIi08xSVtfOs14wXi/jBYTQPff4ETPAAzxSmC8KCMelUyrSGCKaS6n&#xa;f0Gl/0bALe37DYgZGFBEkBkeXAZxKVXUeCAdGpDuuuTjARvISSIKXaUeRkRQ6BymwyKi4GqrBl&#xa;z8Azx2rK0pThRyc9EWF69YC3M0fxIgfwlKh8cof2UvF58SSefI32tZhInYPweCVa00PUFY6MGd&#xa;mimY0E5PYj9JBmbhEXJPEOWrWNqV93LtdtY6QnK7NuWCmLL+VDfXzlKgmEY4gD5a+rxPhnXGtN&#xa;r1DVXL902/LGN+3bzu3xhAMVEF9FvEJnzysXqIiLWAvDkB8Iew8HFDRD0ULVf/wATwPTQr/D78&#xa;/GSdL10W8BLChf3OexFrpvRatUXxOSllHvXFgjVvQCaYg0hGfrkPV4qQJSyONoBRPgPBASTV6o&#xa;1CC4YXxNehCOnynEcX6qK2zJjnBH8E3FcG9htThR27XofSn2SkpmEqeJkFeLo7+K30CV35JN9a&#xa;tyDd/2DSq9+LlvQE7HDK+wun64MZgwgrPx9Y10TEkzRSuBfnpAuO96i8DUbcGtw8ZpDHtEaXkX&#xa;lZE47rfyFkNI3j7scE0ry7l8y1tRrxyh/MN2l+pwl1pjZN9DH+dCuXADtcXOFZyRQUMA/NbGE4&#xa;g4kA5wchkkxsNKRMEL4AN+FEDRtIZkBWC6H7UcYDrlZ8zKcSYNEYQ41LLimaz+GI2jRX1Qq1Hu&#xa;s8tfo4Uh3HsxKpncUFhvn/iW7fy6CzNH6Pq1nB7zE1LgaDfU88exuniT4BQbzmCWANyUiDvm1d&#xa;NIcrxUxKxevbIvhYdGuc/NqnaIX18otptpNfyeGuM9A2naWF34FhxeJQJc7J4SQjMglBnlKtGm&#xa;wMRGHh3IpTKrnfgHxLduoxdsNpXxRoktGfNFhS2Z8EWGrRicIHxooddkFtm3oM0ZS1HNnYbhqo&#xa;XsyoPs6vmvQy4hu8iUXY0D9NQw5qNk9qdj9qdhNsUnHLqv3KP8oZqAOYY7BJvX6TToT13nT1/n&#xa;T1vnz4j+XqB2MY0gcD7CZAB36IFhxfC1HSYYjCx9g4gCtwstfcuoArd7allJJXhD6J9E3DkiDP&#xa;+Rsh1IzDfdR/hC2BMi6tm3O7HHAqcBWdJVGz5aEYa5tDzDzgLnEQpmE0jCiYNQCRvBh4AJEdKf&#xa;J0ClhpDSLkpH9YHnDh4yJIwY8YrXrj/hqoTmtIKLBorwvrm6eHUhkbLzQwmcO+r7YP9JKk2ng2&#xa;d5pXM7F66SEp2XUHAzQHLgjtRYnC4OVYBOA6H95Y7RCLFnSrXLVqrSG23wgwClgpCib2kYCQvZ&#xa;ppkAmZw5Phk+Un3XR3wwMVHPE+0evS6Q2Ls4RRAXSpPlEXWgXKRuZUcPNvEP2N8iz2XWlO/9l8&#xa;RnY/27nJzx/yJG+d/EJ+saSF3TsCwR/cahZGzk8rqQnXFcuvNoUjqOHJhg9BSFQrqaI9MSZb9L&#xa;yRJmXLfvRd+yKOhvrRRSFCe5P5X5syipEVYoQnu55xK2Jvw8zK+iPq5/9vyB3mG7YiZroN1oPq&#xa;abYo1WD+CNsVe78Jw9UlCuSHef3LMgZwJoDbJMPkbLqbPTpFW2kBKPMNnqJEWZJ79E6DSwdiep&#xa;s+L5JVlUOwXplgNl4WOZgLvJ9wre9nCS2cIyIsHEUgNYDGR3LQtui6SsDb6RNlOW5xmm57QQLE&#xa;/MtW4A0ddL5Mk7lpbWvFtlQHbrZWlMtVlFud1xVP1o3FhLdHxKRXB5hkSxkeyXSp0UlKo2j8Xv&#xa;PBM5TtdjFGAR/++tEHXn7DxOg10FjSoN2HbgML1sUXCWNFnKmss9be7vLvmnNMqYxCABvETkXm&#xa;JAXhe5s4Ew3CeLiKdwn7+rW/xzJByxhXgL9twrv2x4/bw6mw1Ci/N38jQSk7BmgpHaGqraLskx&#xa;o1G0B+zv6zd2quaA7marRMdMMjVkFJ44S9pYYjJTOJJRxzdtbXrL5O4jOVsuPa2olAV2GGmRdG&#xa;EDdXw7s2TNlyz+Eg/lPujMROYoOPXX069gK402ayku+XwdzQp2AVVzrlStDYVNTpIrCyeFIezO&#xa;IaQZ6n6kQekQH3Qn5QvO0pAQf5jqxpLWgvZ4s5MSMVtFDRNZVxFWTWhMbBIRQLaLrSQGPyeEwx&#xa;49dgrTVK2h5c91o9PmR5ufnYF0DJGFesoz0QR5bTZw4V0c+cF4QXfB5ctDmKj0tgk+17YQCSPj&#xa;nriqBI5B5YHYUeHRHsGOZa8OFTbcogtEqUjR6+jL7u6XvRw4rmrFP5KzSrqqfyBwirUe4GDPl1&#xa;99KDFFBlIdfLPirNbOLLaep+PKWSFP3ZQIOOfEKWT85r7QvqO10I4iUPh69/ELRcBapTvltMj3&#xa;Hvrrh3ZynkjB7p+ov3OTMSkarf53Enjahf3LgQOSLZRmQtZgdUbWkuyfEtX9J2Q6ZOkI8jOxrH&#xa;iKjeG55HKAq2JNFKlXldXG4kX16tzvsgCwN3B8P2suu/biFK/Xcm1WGU268UIvEdIDLdSVxlNP&#xa;DA+2bgpwml3VdJ5qPDvdqpuj2SNU9RtsgRQnTEM2cntJ6u74uoAaK3dTanVjtozEDK/FucVDmh&#xa;xUTBjGGlzf9ub2Cfo/0XpMNslDNWdXT+iicj79hV9azLILtNxB/hCtF23RJmqdSKdVYHnZv15S&#xa;QfjrLR3bt0UZ869Y3UDKVCg6sBBmHnW92wOIvEA/3fAIoIvmgIhOBwNSrYKZNF+AgK+bSUM94p&#xa;+Sy2j4oHhDyp1kC/IVJp5pTwNn6DoQG0lcfFIOVmJvkgeWkg+ihPjMSW/oYLpSRedc6sOv8s3S&#xa;uKCYX7mwSDa9wzftsH/4q3hPCPqh9BmJdoEI8/qersi2W6GPN3ztEbLyt7fgeZTZ1Heo2RHno8&#xa;1Mc2eUPv78xFHGE8+85+/wRc1MyPAfUVLlMRUZz078Of5R9rfNMachH2B6ig67+qD/iE0Ic2Ov&#xa;vnUmIGSbIu5QYIbtdAGkETt7lPAjrxgWo9vnt/EdK+AeJARfwAZHJZUw8wMWRBM5/FTf0Pcysl&#xa;0qQMiu9o8ET4rOMWh+JgAPTMTOZ0bbOoWq1fOFV3XvkUhewJNjmaSg/hGb+LD+gcKFRVtKQbyd&#xa;NGT4OzaZ4w8j3CCReVFGkqQsuqE0tARlTP/zj7EUbG01cBQIEBCyf8lNlD0y/2Vtzf/zWMr/h7&#xa;momlj+9lAKWBLBfdE66DYDSMFQOjbidsQkRWKNYo0/1l1TN4ItU6UtKEqrNjkvzS+7n1V7CprD&#xa;Hl1f1aZPY89OfSwAWETeIlxyVxvv3dMdgpx/vp7fc0Dab1lFNX0j1p+kI++1rJIOYhJY6925io&#xa;7lOyxvr0IGCaCj8rht0o4mBrUMWOvrWj1I8gBGKVZmJu1pR6o6szGvKhqzjs7zfBwj8PZWCIop&#xa;bNbYHAysa4dlzBelY6zQxAB1K9bqw3u4d9LwhrWoIy933zu65aytQ97L8Ra0kVILKHS6hl760A&#xa;kHqURJ7jHWjT3AlA82DrC5gJubP3vZ1mdkJBVuVmxwxItCcYd7PizJVNpQpghqVyszQD7uGtJF&#xa;Yop7wrGVZvt6X/2dGlDsmMxLgjiaCXynky2g8ia5tKB5P9IUp/TKODCBjUiMcNNiJP0FD8dbMX&#xa;5MDTFp+Rt5QBRGoyAvppHQHIpHlTvDyMPYjF+C2loqTTxUV/S7WXq/iVKKrlmpIjTYlg08O9tA&#xa;0FuDizio7EpfrbQtYns8wRaRh0Kid16VCA4Nx6yC2NkswB3ghn5OlheUBxgbqOVQQc5D1WdxJ5&#xa;ZYRWWgZit6/FYfmvcubETuRqvp+MbIoyf1UNT07VCx3+C7l47LQ5ly9iFmOcNJcKCfp9xQwYqi&#xa;n9t15zbbvR4rGV4uR/bsnbg/H7BWgEWZIJJRrA9vgBi7K/fI/Pjkp8QCpZAb6u/BSIyiYBRmHO&#xa;2F+UPx0oU/i+gkMaQkNmCmdLoGo+bMpNIevrFOki7D8Xkh1spXoqdScu8qrtCKqMphyveJGZjo&#xa;c6qqcb3M2EAsIy36o44JLclB83Jbgz5oPtIxpvIf8DiDelmmYWqyHChhGIkQmvzlPGjaR3Y+jx&#xa;dFO9pR41zR0IitB+WBx0xkCNmYLtLgHga0cMo7C1fIwgrwRn7MrHYMLkFyg/HmQ23DFjBschGO&#xa;bmOPwvzXzoWBaAZoE2TeDJW6mfYJ4r4pZxiTnsVw3KdaAywM/EvxHX4KUBZlZPM6fdfheC2iI6&#xa;FE82IagaYrmG2K/leSVNUGNSeP6eKX+68kfSpMIZlhQfXzDc6W0Kyy31dpTQZbIVgN45wI0EaL&#xa;IU31+mlZGIiLe8WEX55wnLSKFNyQt5HqHVQU2BklOzT9RzujPc5GqjxOvy+EvBu135Kik2hhUA&#xa;DTyXVRqpHwzeRsxDKOYAQGzLAJd0gB9M/gknKaD1DTeOyREt699XL5w4pYOim/olNjKJ2EjyFm&#xa;P1EEyFHcfDabm+gMZTa7C/4xsVK9G0kerqsWUWOqN7gsduUkk9S6JDc2ST05ZpXg5a/CR9UpNr&#xa;VDOngqbf/K6zxHp8MjmO4SCwnnpIpCAb+dmFYsjMdyUpJ0zt8yKzMIGzgX8cNEaGNIqIBuJai7&#xa;Jhe6/F1hXxxeR9F5Ukt22uHULophRv1hkyU2GjJwNka/pbbsXshO1o7tEZejZSG7m+FK01dymi&#xa;oNhMMYtjkiMkWjakXCwvgRqurblQxWTZ7+KjuZnOmJvqXEyIBUSXtXiSr8s5gDKY7Qg6ZtNvBq&#xa;fUU1KMaLTyCW0ny1spVZL7Lq6nJLo34FQOkXaXfiQu+veK7eiFr4nhDuM9/CLcTbb95g0dATSt&#xa;IRXSDseVMJ110Gvq0W6HC3i/199lAUBoxk4Hug3EtMSgF1dfFeHvv3WzSA7yR/ISWbh8Sxox78&#xa;R6CSK8HoKi6WrOvGIE4dbyzrfngG1nkqEPabyo0Acg5ibUw3hCd+GoE55+/uqzfcb4zhbP3v4M&#xa;e/3RTLtga4vk41WsgSY0rb9flTosqN3NKzP8t/6yFRwNyEtLRViWkspnz94pfrxrje+WjFCdvq&#xa;H2/o5vo0eBh8flv5jSv1J4jCe2p3sUfa6IVhwatTwBcyZUj6kf4uY+4pOxSp/731grQROXAkVq&#xa;ZYIFt+o2/RaQyY0nLzd8mg/9R3+Xn2udMMCCYULywtsP0jRrtaA+f3Bfl3zfCn4t6b+6tmHMP9&#xa;u6z9/0XR/znOUqTx7oEqjvZFId1hpv0mNUZ6V2tZ6NUYjCFmC2oHBM6hNVJXQTDbJ4yCzW22d1&#xa;CrqfnCCnyB/AGJ6dGYQTl8eZGeunXY07q+YCDOs1L05ivJSstqc7n2uPa9l/96fW4RBMEbeob7&#xa;LRaQcZTY59XJI+M0TmPtxZrI0ZY0lejaYHsjDB1FHMfp6udEbaDS5Mu3Wyl1w/JwKiGQPdvQmZ&#xa;s82WpjlshewTW9b9E2BL+4t3oWgwHQt9nDd21mvtgCSQzm+M4IasKFqWCgjqkOORHSVsFnAs/J&#xa;iqrNWyQ0pAFIFm9SO4LjTWjyUrjD42xN3gXCsYgT6Ke7T/CIFhfpDMrlF6YfpSbPY+ePAkJ22l&#xa;BCqM90Oq1lpwpd0/nkyLBWyAFL++JVllmmrSt6BtHE1az4aeYnMIdtSUqyRWqze6SAPJUySODv&#xa;8WjiDosUYp+Ei31FDpUq9x8lcIjuzA8cEOwsVbm406M3Ri2BdpbbIh3PNCeOEtOsL5Uis6Zh5B&#xa;nFpEk1/FUp9PZRVq4wiaRBP+0sAVVWu+uvhSQWbr+hgHVHcZx3rV1G4eTB4alewhNXjqIR4sgJ&#xa;yMKEwBMJ9JZkDEuD8WSq0xfqbNVxcpuIo2I4dVaXduYaGBJprpHciVPv8Io1cTuFHuFenAO0ts&#xa;IdpO+mA8wjTLXKO2pDVAxIHfQMdBL1Z9/UNfuRjfkHJ9AovLK3Ld8mqK+UO0n2zfBIz/j1Cd2I&#xa;ZLHyYX9st8ByA/B3ZZvYXaJLLf++UGU60am1eeiRarla1UKRwEawSx5CUfidzf/Irs70cH6mF4&#xa;5wB4esYnsTLxOY91M1hjyTdC78VGyVyByJkALo1nJXyf/VE5g0MKARtc8nivt7Sr3Qjk1ukUpN&#xa;SO81kV4FdUPF7tYICkXQBlQ9BYBvUa2dGzMUExBIrZf4G+R0lCNPk93eJPqkRYEIwsFEIy7Ici&#xa;6cgRjsmik4A10R+hrlPUfIrfBZzBN+TereunKHv5RlLtUFTzOPZoSEHKM08zJPrsv3qgpa2n6f&#xa;mt9iUQCTVwQ7aH5cs6T9FLTveZxdVzVZOCXLtR4eUkoAx86YC8eAMusx1fIaF4PM3K1lKJxCWF&#xa;NpQD3v4HpetNZrGWXCYqG3zBs4MQCrlGxkpCxMAOG0U0jewUmVE4xouiGWE4hyBDEWu6TMtf5M&#xa;b/QOzb9b/qt4hzVzTWRWgDJ9qQvXtQk1sciTzlXGRoc9Ym9OMRxge1ptWi1fCnvlIVlfent/+M&#xa;pt38o6liohaH4hxl207aSDmk0tSSInPB2vUfxQ/3vXIoI8BlTkkhTCSly2RJLPF+QR350Rdkv1&#xa;J6Q/+IUDDWzWIkb99ZC7dU9+jZfnrISfA0RfXrJl5TXo0wNi03fdglPDWsYVHtQHeGlhad9H8K&#xa;K0HNu+t/Q1Usu8J5CnfYg8YzZvZGId1IIUy4M6yW/xywTQSt/OQB/a867XdqyiRXJiv6L8aE9K&#xa;qkPbYRD+gJRdS74Yo3fq9NmMvyTQdbXKXzJ1VqyA5YDHBgd/euBEvanrVOa4hVaoEUElNLSKBm&#xa;l82ylYVimcNQHCqs9D7bpxRiNJXLBhbZWKZOf5fXMWErp6joVX6fMfhCDE8yXAzfnWTENzDe6L&#xa;U1jxz3MgP7BBRFmGuWhTQiTdwmDzQdv0hb6esvdm4Wmjb8ifcb94CiRTqa5RXiP1fZTQZNp/3h&#xa;DXbQwcH392JMf2CUZg1hU25/Ai1DSmHaFfV7Jfj7pvFJQQEkmXkorYeYNVUhejoz4jvDeUhbaG&#xa;Tp4zc4V/Wg8GbX5v2q5jUpiNCq01/8w+AdMzdJ88bcm3yXb8DLk2OnVwVe4IRPyTD78fu1Ozs3&#xa;8b2sotqyvYFUtOM4jpBtJBWKCf/34xyMlG3GH2Ho9wottHw6J8k6XPcSr4N+5F29lv4v/C/fa/&#xa;4J4I3PdfcM/1r7h3sLc3M3F1cNawMvMgM3RzNDVyNfufH13+l92W/5xeJ+NijvoFzG9t1FEWRY&#xa;kq1KiiUidRkRGy0YJZKk44CIkKxuZJy13xq9Gv3KxoOufm/5RpEq8saco54/7M4Gt6ngSHw+G7&#xa;OZyc8PP43LT7+ryO7QHhi8jBIpmlmz5+l58CKosue42xTAhH59jLoFHMlQ8eh7+K0VgcwFI4JP&#xa;ViWUvKA1MzYY7V/Njw3OzJWrFFANw4CthW2eqwr46/x+lOkjmmgPp6xxRW8tOyakwL9EydQGQj&#xa;rYYwC5ROOPZn7+HaSULeIoXyGEnJhJKwrSVfQWkAYhKcCvF0bOoHRD0qLfwh17Rjwjn1loRE+l&#xa;2ytVWZpcLkccdjVB9SWBJ8rIVzoS7rww0f46hsOLjVSTRLLTIA/Z1dv2ENe22cSwegslVxJAxY&#xa;lC/YiChv09NreCGeV4OuCut5FfPajpgpCRNU/NjlFhbJJ4AXaK0FGL3H+1oTJCpHShDyaVGaoJ&#xa;drxD98/x6btEgF1mE8zkgRWEZjhEZn734ezBEykrvhkJbHQhzFlQNuvobk1FoWRYxQPpJsJs5o&#xa;hCvaROThdJ5qJec4nx6/K2lG3lyQZoyyuCsetwWOCdwqElar3tOpFbWEZ3XlG5G2sQ488eYp+X&#xa;1jlK0My12RY/lZXH7MCuCujkBJmBkjooQnHVb3E1LEscA6G1/8CpOj7x4PhSJARWoLq7KVl14Z&#xa;3ymOz9d4SHn8Sbjm64n3Tg37LdKyj0zYWPDKUKlI/+l9D72LrXbtNhjkPPcm7Uj6UCl5rslqI/&#xa;XAizE/8IzYWlJBPnpSOVZJcWNxYVeIdFfauk+aXXNHkhUO/uu3ios4Rf0zmrfviYScZbHVASry&#xa;0GW3xYpqRMXmmmz0HlVMOFW2eanSO9U2XEW9dbfmC25LsfNDl0vbJ43Rr6Mrfd1P7XmuKgqXxF&#xa;5iHI1nHmKj1Py8RoQJ+XYdZs7MGe+2orVbJjaVKdkGrp/i8sfoQUNGFfpKOAhBUcdxN0bg06yN&#xa;AlSpnmMLFJUx1JGwMaJWboE4BiLxSsiidQMZP1apDbYEsa0cCVVGRkolorEktL//UaFsDFZdkH&#xa;JB5rn/7P2EdjB4G0n5DWxFNJnBH7yvHkvtlXYS1i61lqHH28SVlYtfc9wY0SqyKc2jNnNm5pcd&#xa;RKnKL1RMDBuiTzgCdBHRqALsy9Kzr3dVDTKLWZTo2+XnUovsiRMELAg8iiXbMBlVsss4Lusf9s&#xa;xkmlxox9z9jX1uaaJDnbOZLp4YA2eNi2zHm8IBunW5jllIZJ3kBb+k69K38iabfRdRtjosirjL&#xa;6GBTtKyu3x0RCEdGgCjqD8jAN8gDsf5hAb1ef+yaffjdw5JIuR+6z8eBz7DMkME2LN39vTL1T+&#xa;zA9sFlErusUn72xFRhZoTyYgqeLkO8BbaFgbI6A7f8F338edctTSxF5wap3x3SRVaSk2UV5bxu&#xa;eWnfiuMncKzKf7UqM6l+hCXvWxYh8eUWwShGy1a65Q5R8kRkH9fiRHzKryj1nxzHGpcX3OO+4e&#xa;QedgRmRzdodUyjQgGqjfzGuyOGIoT2PGxtK7He1C/M9YpZhSh+NXlCIUYWyTtk1KZdDayTPhzV&#xa;bwc7cSq35M4x922QUZIZkqB2ERdRo6g0SwQuIzsKQ+sPK3Ca172T4IiMZUsRYb3A41o47vAgeD&#xa;GhqfCQCB/e4M2TL4QmKuS7bqIn8PX07meLOxiOK0XKl8FT+yGbkWtzXQ2xOSbI7xd/ptxWfU7T&#xa;bUqI9e9gPAu7Q0aT8EFPbyBDyThKY+Xxhi9BX63Uhcv6SjLCl+YynVG9eOuMnOca89ev/BBtGP&#xa;0K4eZFnNQesLNEGZhXdPgWh2pJa7yloAiqgQ6KQjt03npSr58oHDPq0szIi/be+LjseUOngOHm&#xa;Fhc108TPBKbu9Ann8AOjYF4zdzCwRYm+tIEJYKKZB2HxQ2F9FU2iVLbcvkCjH0v9+6O1smHFJW&#xa;0tey4btcUeqFmFc/IU/5isqztVzcyqVY7fmI2TMm5+bWl4xF7GJQv4WRLnn4F1/oPxDk5Hey0n&#xa;iOpd4CkJ72cjxmqBuM0XLdcfRI157iDFL4qAbF0l81vtaXg9LIpZxpo9PlA3p4B3txZlcmXC9l&#xa;t+ZF9xJUbltj9E/sxh4kOxHKX/sU50as8An+87CAgT/L+rULz/5wql4GD6X1Xq/9ecZGno/l2k&#xa;vhSg5PAkeoWVy5ubolG+oURjllPRF1r/zl36gWabgZAAFgVI82QJmMt4MrdhFCy4VtMdaPf2Kr&#xa;d55Gxbu2JlFYqbDfHjZm2Y7va1uHa4Zv355/78GgRhFxJAmmZlUBYFM6WKPdzcdspD4nDb5pmn&#xa;w4DDIHiM9jom0UfHnVS+YwURlecmwzV14VtuuqJaFtVTkBuTt46sSp0AVxJtTY5uGV5+qcPK5w&#xa;ZY14vb34sQ5wcusdf5+KICLhVBS4gkdkVBWC5kTWuwGwCIZx8D7CjPbtWYVkqzI0oOUi4wiVX8&#xa;4+ICoxAt8lvDMyg1rQCbtLR45TK41QQEURZcbwEBbZLpZJMSDddRA2q0EaAUICCalS2z1nb80u&#xa;IEMQCbBFpyMc1iBSVnz36IKsk5eRwymIlK/1TseNHRVvhKfq4mzt96Ne6uFt6OhmRlaqaOWC7L&#xa;C77KUhN5EBaHo8AKVfvaOKx9XiMkj/O9B0o8zZqGSz0lkjgDRaHEdGYZ0sKSboTri/Kw4WSkYA&#xa;E5gxjT+PDrWOZXoB+4fgQ72cxKGIIrC5tsH/aVAZJCGqyHgWhKzzJ9kNiBCNs2hg4+BCTWWSnX&#xa;wJkY1f0cV+EeEQIrni/GUiZ1ZT0v17VzGbMS21giPoQkNtt8GjVuYE67MrsMbvV6K2DZUU6cMQ&#xa;bVT+MZEr9kAF63D9r4vFK5/O4+Ac4u/FbnJgAl73r4nEZhDx4QJm5hq7+InYUxlcmsnI+GtGmS&#xa;GJjb4U5/v4IO0E9zHZg4QyOKrclXZrmB404onPL65BBZMiBkblTFsVHtqidfvx91ocF6MoEcqr&#xa;Kx3smwwurjRtfOtFihw62n0NI8+YBCrNm100uEnrSylIi0DZaFC49WgIRIKUseV/pcdWapQ7A7&#xa;HhqOBjBHVbQGVnTvo5fibA1qt90SPGpv6PFyuC8Hk7WUZbKeLsX0NrdScy1aTzZS4yXitemYpL&#xa;uEmCl6AamN0U2oWGzjD13L+w+YkUpwyKzsOAFWZ9FMJXCSqIrcV/M4Kw3nCfjY+sDvhNGB2PCo&#xa;TOQ9VB2nxx5VO0Oo+Eea5A8HziwaalCtOFuhxNDM47X32KfqNwERXnhLjvDL5GOxltXByjP3n+&#xa;ELn2oGuv7NCHx/WntCpjmQe6fLLqbxRtjQWQ3uz7RDPw7gjUaXCJJg3eDZy7z8Bqggtye1x4+O&#xa;y1lR9cDjnyIFwjrV66SYfqzHXNgMFxPMA6jSb+5GThv+6tQKVGDCa+YRbiUepV3WaJxwEpHbrc&#xa;P4wprFDvzAGkvrN0+8IHVzfbYT7fKFoh506pKWak7OUfSh4R9sDftj9mdNNZ/9LjZ+dnZ3CWi/&#xa;QHSsnzP+IXOA2yhmlyb+he+JzDhaEbxlMESwluBQM6M74JPQdy4lA0YL5ZRwQfYcoxz2254/+2&#xa;rpubiDgAi7D+wiNlf3mliZJusDuwPTaSDBaxzlLZmp9pdgZ+T5X61V7U+rRCQSCIc9XG+rXCLl&#xa;B0+QdT6oLloQH+YTUFMu8T9OAqn+3jJVFN8S4EnekEkqkBsPoVr8wlveDA77EH5XP7gFZs+lHL&#xa;0aR3raZFG6dVGy37hSCv1Mt0YdRJr6DgUJVoM/Kq43QypIkqzXf9Kvf9CgHztDVyTraUHng/ha&#xa;LY6GwafEQuSmMm/SSNMq0lTsj/Bx+TgmjK5w5pR1HP9m4BexRHDNX6TLrW0kjWhd3WsaK0nxI8&#xa;PgDf6JaZBRMBhrnnT0vZQB/OxBEa3UIhAqvCP1HVbXUn8g9Gd83w3pieyL5wvx0fDIwxH/hPJY&#xa;jxaY17kJG/WCrdvLkmyMYTZjeOP2qJc4DU73c3z5xz8ypXx5qhOdv5qMBNj/DoSz/hfC/96hjy&#xa;CNzSMXQCZUJWWHPo7EQP2DUaYspFGc7BeKDMSCKws3tGgodqZcbunP3pzcawbDOrdZy5QUyo7k&#xa;nvCivxAerPQN1nckjfX4oqvHwZDyPwgOuIUHNh3AMGIc40+hSq/Xt16tTQX2cXawFD1mHt1h8w&#xa;7TYmJvNkaShyLK/oCrCzRZx9WFVm2ACS/8SUo8MGPBGxKsEEGrU5YKVZgZf4hjw8fcR38Vt6sn&#xa;vg8neg56AWoYsvuBfEDGhuQLHwinubBQ3pz3WmjeUOHKN+fyIhUQJQFIrs6vaANkszUZO82Nrc&#xa;Pdqsk/8TnEZxvphkdcQAUljsaFnJKB6RqX9phpAXwy8jq+h+M0YmCR6ENcUbDPy+EyELrgRXcS&#xa;qPgk2yRAiZQm+P4+QPWJOFCAq2I5mykmCiyNYppiDd5ELxhxJH3scZa7Yje7iB/Pko7MNz3NJP&#xa;ZegQUMRfXeGlJDcevOGLd61RMt1HP5Zz5fLfFk6XLPEyV18NUkyXlkTx3hT9Ic2VnIo1rFO4YL&#xa;j641j7KfByQ15TA1LpZHk0M47Nphp8yKn670ED6rk+vlsTlYmodPH2GvLRZZDwUgDRqKx0bZD5&#xa;ShsL2ZYVdnc4SjfC8tf46eruF6Kk5mLxOvVmEJEQlbw4D7LGGh29WXiedSSMYL1U0s5GZX3+xE&#xa;3foawcuqLajelyCt3qXgJi7nuXRbYvNgrzHBYijlh1Si1Uy8Tda8lG4dnCFKB2rGlC2mdqcHrr&#xa;8IDVFdMcERYMY3XmGdX70kj4cMaCnolpQnM005Krjaog9vpe8XcNhAeDgpSqA8o2eKzmtb9yBi&#xa;LyTEIEITKodceZ0g5ig/xiXwU+ZIwqikJjOHYG87hpQHxjKTMAjkZV/NIcZkTNFIsWRIrXt5xB&#xa;xzq0dMUbNf6rcDrWTwUlXShGdhx9XLrZbzAIV5S78i2WZsqJn1NGMdj0vXHh8kxFYbwMT3CqS1&#xa;NG5AYI3v/BSC7h+KyU0NsJf9F2y8KcwrKPaR62HmUjGhp5ld8VAFoNlYRRJhIsJ0Gqw0foxQ/V&#xa;DvK9FC80+VnKBG3ESpV6O0YBM26EvB4pL1PelY9rqgK7n9XQjL3GsHMxB4hGVcOxEZkv5LR/0n&#xa;X1UV5PUkNXCPtaiJziMQ1SyejsfAkstN+p5fVqu4VCm8agUNnNsuBS9rm1MuRviORE61nCAPQ9&#xa;v1+8wdffqsiKI2eEy99E+igdCIJZSuaBIxHCET7EvW263uY89LSocZuxlvaJJPFoYdN+ZPy+UA&#xa;zhOFCx4rTcn3SE9WpiZhRaNy1dQz+v2sa+Ln2X1eqV1CZISk2Y5oQSmiYHmddaQtcTUREtfQz3&#xa;NQ5nA8T5EM7+k5IfTQGJhQhAcIPJ4ZQkesckdPKe9AUTnHk1gExN+yPTtdTL4HPIjaoKASTyDP&#xa;wiTocVIQZHtBjcG3AhLf4pzqVSWnr14QhvLdBHOJDYYGnlTlir0N87Uzk5k7Ur0Bo1v4E3Y+t2&#xa;i9as3yHWHSqfm2SvfgT8bBDLWFnq5cb0z0e4xz4urYUHpP8TLEkQyfgOliqMtITM9GrKpIwdBu&#xa;/LD57TghPuwV1ZzAPyFQVbyeH5TUcl1ijVFNZZhUdPFnb6w3L9NUBEQr7ZEU4TC8wfSM0xMui0&#xa;VCvuLTTOFUL2uwRQ//eIQEiKSt2gIHAZmE+e/AKNt/YXRBA+1riimOWYzhHyaM74Y1o9ypJG5l&#xa;VI6GvcDDBdOYBZgAzRdlyR4VOpX3aWhKyZn1KKc31u/iW2x6y9Cze5b+BoeiP5OSYJrj9zq1tb&#xa;31T47G7EEC9k+tDBhioaZUrf7DhC3+MuFuFRoshp4dtJcxiS06nsOInWE0JkAy9S5Xw31ZvpFi&#xa;0dxXTCAOQEFSrkiOJZOD5lAtl5ym2WbyZgGkpY1oOAQ9UgdgZ2NMeCeP5c4HlhmIFYIIOlIr+L&#xa;vNfgJHoDQSdVl6Y77boFBYnF+0iniSWqn4jS7llQxzg8MLUVS18wKn2qw4UqKNz1KRB25U7uT1&#xa;xfQ3n25Mls4suQ95DiUi0Oo7x5CSx1o9fUtKHie4eRgZnrpPTB63wOBmozKdOX3KM7SRUns7yu&#xa;X+7krgRkahIcXnQj3xoRGvjrpYbdBuL4Cp6ZitMVdeHI3RciUCQG/alUF8pqBrBria+EOCZlZO&#xa;fK2mx/DdToYrK17YkDAzT4Bx/yUncTqQNFZF1BagF5YEyZkEAvEO3Y5mI5XbTQA5MzVDBQG20U&#xa;WWiYJ51QlA+Fmj+j18JMSym7+RBwaBdUHJKWwxXOnIbbc0gpRryPHAS6uhuFbG/k/neJGEYR+V&#xa;sjta5o8ZOYtiUyj/J/NBKvtWexMcA6A0+iaX+IP25rVHJgmnLURJeFWDRF0/owJLI8VQeR+kTH&#xa;A3Zk0FVxAnFglGVp2ZuoWpDpfLkNhvFSHXWGWYwKu1rgkTTSx3rzlk1grVX3zdEd6jvaDOFNJZ&#xa;j292qZVdAsaWBWwaJd5mss3H88dqTAfDCFG6Swu9nPNMUbA0LK0jteocpuq1MTOvyAQGwPVWOt&#xa;T0xZkwilUoTSwU3CwEmGoV+pS8t4ZDOWP8tafoWFz4AixVJ/j9f5qw1/804Se1kL9MuJL1VCO2&#xa;d+mfJjxK+BsPu4Zlsr2/vqRzF60OhhkNq3nEmQfd6A4rTNUtvrEZF8j2KJGqCkANt8B71oa/WH&#xa;0ciYmqNgqKleiLAkCnxhsmblZPdmg43pch3FegeDtzY4/TgOvBXwPjglPNVh4zH2hehAb5Yqxa&#xa;Y3BRDiXZNPupTl6/xM78aWroBXVDOQWvHPYb6MFvXGjeXSBZ5Acblzu9h4gFuUW16pskD0T0Re&#xa;Wtt7A4ZPo8TIbqX0PGJsAxAwov6xFJLJLoUR5Wm0nf1+rKhhuFIyg6+ZzfbPlsxksTRfbOG0U7&#xa;lf3mMhsiMr+bBVfjkCDmyyN7bYPIl9tyem+Js7peZ9TLo4X9NoBtnn1D99PPo82LybaTXfGiSb&#xa;848f2lD6m42LxIcd/zQ1H3cjHnIDqAt5GCGrwWlXGP3CtpZn18Rdbn7hLdO9LTgcUTXtrqBwSx&#xa;/e+sgy1pGOaNsuEOnkc/fXzE31E7xAgSM2WEJMrltK+sT3R7rZT3yeQPdHkOoD89MZeXG61//J&#xa;mjIhaD2RrgfFCRFM7nOgW1fSRyrQG5kOiBjNul+xx+/eF9St2EAyVHEXYiGVYpMZNMunFLvnXm&#xa;kwTJK9M+t2zlLWOYfhxJv1fllr3wmL3QO78J8sldLo8WxEVIdIHYSSDFsBdP8Ipcd4AigXFFnH&#xa;LqGSVBrd/PW5D2PuJGR9KzExAPWpaAk50r3sdezv7osuOQo4lQ7qgSe86XsfB8qtpIcLel2p6U&#xa;hJ78kHsEI/fkbfqt+Xxw+wei8sccaZgyf7zvrzGRXIU/YgHePGFxraFtPTNy5yQCHwlwAAJRw/&#xa;5h0VgmQZniliuTGJWvQZyR9exc4Tzzir4WA+ePO1/pwk+FKVqV2ZuuFLXDf8Tt3zjog/77TJj9&#xa;PxFu87cJb3JCw+EX86FI9WE04cgSzKAlCvzKR1qPAC8PLlZpdJKyj88z+m5BQfQF9jNsu049wv&#xa;0v8i3fcbqVHU/BBSQGQPi3uRAeZ/pddb9nHlz/9P/E731/iTGiUz1MbjJ1zp7Cap+KbDY6Yu9G&#xa;p13glCmfxIxCccBDi2AHlmf4yn0zCVOTA65sKCyrdcVPtVKiBMKJArSlMUfrypeqGi3Mltx0dY&#xa;9PffSOKSAY2Pl0sLzTa2vaGeAwY6QVRHD73slGHMmz9VU51TnL3itsGvl/c7UXCUnwikbSbEBT&#xa;+bz8D9ru+Tvz7U0ffJJKUsET27Zt27Ztm5WKbdtJxbZt27btmlPnfLqnu+fbvWbWmv7t+Qv2/X&#xa;pfz7XvTRvRMSFThfYKKqQ2UaeiRWVqWWYyeWYSQJD22IlHt0xeZ3pyGkzzKhUEIpI6TV8jBqhM&#xa;SK9aVQIo8Vq8XbyYJY0wOQ9TbkyVNmrK1r82WJQJL5tz1+7lZAz7xF3Q1MldcyHCdYaOQeyA9O&#xa;/8cpQ8QBGeoSMKZEPOFBvmuOsagK8rTx+0J3rvBhWRdkGObJuc1MiCKNFiDIzxZ2pAA41uJ+aV&#xa;Cm6RjF0ABOvqtRF3DMMTN4mbOuhRAAhp96EQAf1mhnKC4Vc0TRi22dHcfC8G2jbD8HMA4Kj4SO&#xa;xUahUZIymdSoQ5ciGszd758yIfk5XiMi2Tfm2+UqrwF9q1wQzdEn1BUg6x3vuDS/KEvBx39gmV&#xa;fXGIr0cASWT7SrZTYZjwskwvse14KpCE1wExrJOI0nqNWZMNLXWx1Bk4T2tgDPpUxBh7otFYc+&#xa;xnvSp9QGSkhXdFLpKOYJwbxl4JjRJkDj35O5tzxIfrxwgJUkm1F1iOoewQdZ3tjmgZFKq9FPYG&#xa;We9w+OQjlz1EfF+xk+gq70ZEfm3+6GlYxlgXveD32yShKo71hYfweRJOmS5ba9wFLSxceZSXII&#xa;MWXL4j/+HR7dsM+MbhdOP9PSn3QvwQEoIBul9sWTwNgcPVLCTPON7XlOlzy4xQ8ije0SIEPwn7&#xa;B5EgknpMEuPkb+D1QqnLFwQ+hI8HdJGa5AbogseXGuvd1lxOjskFEJd7wjpjPSWHft3ZL+Wyey&#xa;wuCMOpI35bhFRxuh3taNut5KpPn0I7Oy/feHB9Q9skvksvmh1qqMLKB0bnVElilDIv7icqMTnG&#xa;0clFDCqcKVMwjHUS3aS+a9eMMgoUh1TQsxEppcLX5JkhiQApuH4+EV3RQFon/slaF5EbIpqgCg&#xa;dPTJf7A85nP8/Y8oSDFjam+aGZGJrPKLf7cDdGtr/JXBoRdCaE7Tb5ZI/ZCyvlVHpiK0+jJw3y&#xa;Bv9S0eweH3de07w6Bv8opK929kAOfUWE8RG6Cqw2gO+EGiJDFOxCTxgsV/i3xxmzRRE6QSTXi8&#xa;J3grWemLlGMN7+76Fe6koPKKo4gUmP9tqBPcD+dTH6rVxTJ6IoHsOjqgPphdWhRey1K7S22GHE&#xa;eFHEXnGsnRfDoW/wtnvJKbuRaC70rRFw/T/xZpI3+rOySlpSZDqFS1Y2+z8cnzCuilxvV6MTEo&#xa;EKBU/dg0IDNTwlKdXodAcMsGLjd9XZc5CmSbbSKQeZWi7Iv53A0P0OTuIQfD8Dgxrf5b/jUHXj&#xa;dnqz200z63C/LSH/DLLFdFN4TcA+0iXs+G5zBTY2fqDpFYyI0DGbqD9N5SyuzCFgzaHcEnMLQ3&#xa;Gj9RY8ItzbJJT3j3yH4JnPpv6S7/r/inxZ//sMGBMEEziIUhL6lyZxKQs62Hpx/wFQgAFptnTu&#xa;Q3Hn6tr49AnXImptlW72meanTFXT+wQA3tjZQG9q4qKebnv1ff19Yvv3xxuXn+1Hjz01z+T4oU&#xa;KvB+XlCiubjtgBNS/etJokWP/hcRaI3uZIhkiJNkKHGLCReTZiNFNzLCXmkzLl5TV5qcGJ/YDy&#xa;GHG/RYGiLJhmvmH7ErVc1iEr2kFLjaXCeI2PzkV/F2T/VImfEnzBDQEQBiwxI9NQ5m5AGz2D0F&#xa;5XUxQhDOUZhiWMhexPxkWz1gGy1p2m0Xf09D2TZXsaJh3msUMCrzkDcVPB6WGyiINVx4uFMtpV&#xa;qlduD3QJphqH4LaEZJvWT8AnAb0Q8W7pmiNgfU9pQwZr0HDJ8dUPHryonGrWlQZbK9Yr4WG8ME&#xa;eToZD7gj8iHMKVEXsDubgpM9i0oSx0DwxGa7YmqOKZXnjTonxiJuNVLzBfmuUgK3x8MFYGskSJ&#xa;8QQrgGnh2AT7d8Kdhv2BgmXoZCx07d2MEwl/L7A/7SAmYmn1sEADA7Nkr8aVLrJsGLSbgFB79z&#xa;LBPxkwgiYOmBi65b8y4LaZynwkMQzOnCAWK6jyA1jaFm1LAHIkoomYAFyAKWc9idDNPBulqMO8&#xa;C9byDWZ0+ckgZP702lfuPnKrARW7hHUWUziKr0F8HgmDLgyvPOHDp7vOIEVHL3ztSeSkFWfBfF&#xa;8aG2l4Iki+V6QivPNyNgpue1/NeEJ0qk4GyMGtyoIUeDaJWfyCRvW26MjaOVGwqqSRS5las7EX&#xa;r4csWL/vRU+Lhw6MNxMMEXs1YQA0QMtESBXMCi4Lb3eXpSNKijFPAybKPD7KPo2gdvU0dwdq0R&#xa;GsjE9LloQ112b9o2WWPtgBRc1h0q0DSqW/nZ2MbauANyLjfHhoqyz2gDXJhXTzDGEFkQ2sRLMy&#xa;g/VVdjTOSqVYQ039KZEtk1CVIBikH1VDtoRQGvebQ5ls/JKrUWrxFoTT2EyC+5hDzlJPtk7Oxc&#xa;gJJ+uLOfKEZaofxavI6qWn7zKULfesga+KoBwtmZFGkF/5rg96PLwToD0nThcMr1S9RwGGqYVW&#xa;wVfYiSTSP/tarvCq5G7trt7l4HX4k8a7KQjIV9bkxxF/8a/Up3S1afYDMjMIqaanUu1Sq1KJyX&#xa;MiUYoX2wl1Vj69tKwdwtgG3TuBg4o6EX/gdVdjPS7Wx1RW4dnAFDHZnKgSG4wkRXHvLNdQtjK5&#xa;dCbVuPncyBkVoQOBBgrCa6xciaRL0WmuFfDN92JrJDDDwuXIywZfEb2UU8nSArNzRtesUNJ1ri&#xa;uj5zykxsrG0Q+6lXVNr0MyD6Md1koJKOCLvgh3CV2ShyfGp9lsb6+gLcKtDICukCKmukBohjFZ&#xa;q1umYKTzyW0VrM8PtfdvxETufkIIzichEolnkl+RnVLsR6MdJhg+4+jqA3hbg48slZgr3cySEH&#xa;H+bLcwnQsKseRZUiDWt/gPVSAXg7l/yZf5j3zf/qN8RWZUCTee/pHvOanO6TkxTxHd5P1g8s0S&#xa;uNyZqJzlzqms3xdgkTScIBMaHhZcF440xV4h5iNU3RGjIMItbryBT7AgkXY/q3aC52AtJVbvgX&#xa;/Ub0ECJma2YodyMf2N46Z5m+q7CvuvYZdsmbP3RwpNOK9ris2xMSgpT3knMNJ3bkZgroc9u5oQ&#xa;Ct9TgoFUXIktMRMG+ZIf+fw8OMLiG4Mfeiui54h/yxdPQG9ouB+ull60mO3aIPsv+XKOrOMV/I&#xa;/y5WE8Wfvfky/b/yzfhiIwzaAVQsRSRMki8336VkihfsCUNP/H9y/4bqNy5Mu729GqQ7szxeks&#xa;DHyKb9Afjse8UxzvGz7PHKP/nN/Ptzj9jxuUzZdgEffWU8yAKo7ixtL7SuHaJgVFHF6z5JdegX&#xa;/uAxEhogtVGKYdHbk2lWEmWU9xxcGbotNXSqoSDas0mpr5UJWbsr9xTss6BGghtzjvzA7MLPr5&#xa;LDoZtNhLOyJqQvDiCwRTjX6kt/3ylNjU0yi4rF2YpQFj1MRIV96V5X99a5+4//syEENwdOCfy0&#xa;CHZWU2clgmCQRZcB14dGoUdbaYq9+07lLCRcLpM4z0Y9DTh12E3K7oNyDFmfTJ2MsXCIXM8vuy&#xa;MjUrUZ1D5NSTJZ1hyJTGe1tfN6yM7RJ8XLfj3E9EtUUh0NDf5JKULBUEAJ2MhO5CvR4NWUTXUg&#xa;AEM5VmDNG731LyA8pasxUcG+msofZtJEIP5OxCVgo77lJ79cbh5YESk/onsIVSfV4AA8MI42RA&#xa;oiBfPGMV/iC9O+kTsfHJlmHG7tHpCLQ/3sCiKgB/HH6OYnQlb7SvzMT2F5WKIKapeR7Xi2dnQz&#xa;VgWBGm3VrzPMRFBGFbpNx9HgtZeqRwh9I9uUPHhPEBEe5RGwcbsrc7Oy9QAW7dLZol9qSVAn3Y&#xa;BsMI3wIua8BAoP4BxsxxfbfPML/QdiZB6iV0t6M0sg2b6WcQdmajv8SBsfSOEdjlCXx4x3Ast0&#xa;2a5EugwGp3ntpBc4IYbRqnzybVCzITY3HcMwheYZk+bPNArw+it6BVxXYXpzhUBk2qSUkX2iBS&#xa;+uBpGNZYF7vw99FDzmV/o1PRwUvES1Q9Nja480owuFIo/z76DXFcp979g+u3qLA1I5i62xsSbk&#xa;X5Hn/4vZSFjClczb795fT4Z9ifbigyp1YYIqVQvMMdsX5D9reggiT2GCaFyNwDaITjKmf4AvlO&#xa;RtWQ62R7aP1G52urXJeckU6J+GHl1wO64jwkx6oezHaKmSKLcyJw6vB/5Fv/ZKy6ebN86bG549&#xa;T4iGL7ytV5r4sY0VY5PxRokJoPnAr+l3xlzJPH/5Lvu47Q3/JVqR/AR5tIL7r18kwyChUPk9ez&#xa;ES0kIv5LvgT/yFd4QeePfFHrIvIiRCP+ki8pXa4bHE9BnLPpzl/yjWZ9ZC2K4Cuobj7djbHtb7&#xa;KQRgKdCfgv8h3Jgryh/yNfgr/lG4Jv+j0/bPdB7mRdhPMeuirob/kCQv7Id+Bv+VoyWxSjI1S0&#xa;vDigEfj64ZVYQXsHw8U+1F7NqKk3IqhuDd/CC4ZAjPH6X162FKCpHGQRayFYZXYRJu8NGbajcy&#xa;BK8GJKPBHZvK3qkZ0RtYRp+QYn+C58PdDyRgb78kt5wrm5ZRtS5niEuda2h6wWfTBJm/yRb8Yf&#xa;+Vp4BaUGWvyRL5/uhAlW7NyssHMtfrZUB4tKuJ39qgr4DI7OG8w4U+DTIjRySn7eg1PFxcvRw3&#xa;Yf2/Trbbycwht0FvNV/h0Zx0SHsDPc2wR0YspI4xuAhNC9gKC3Ss08odSxb8Xx1w3uPpbiTvND&#xa;VGyYv02K4D/9PEFzCrn/Pfmy/x/kSxuQr2xjhcUMyhyOppyIqtgoLm9FD9UkEzL689/aD51r/+&#xa;/lK/Tyc1e8bYQqieE/yhdtWm38X/JdHckgKVFE+UgFGZphpcE2c+VVYbw4VV7bVpAfntkPPU2U&#xa;CBYp0JT4S76W7UuAf5OvocJ0jYnMxedf8m36d/k+ETMuR2n0f3cxuOMMe29fimAuNTcuZSvkAB&#xa;tbyD5EzNnzXye9NjMPU9Pub5xwHi1VDr6kCCFIg+TBy6GMMxuvVaJqM64+uD8wYJ7sIUXHlNVs&#xa;OoSlBwT2AOICC87GGBqGSlozWCWLKg7vBAgAkmp2+eea7E34z6SnauJ8jdbiHivhrigI1kYr7Q&#xa;TSOhwwNify/3f7wTi0TaS8byblH/keZpWND9b8I9/zACbmo3+X79nf8nXc/iNf3L/la249oOvM&#xa;wCz1j3z/bj80dy8T/SNfzP/UfvB0EB8UwDZlf6Gu0FBSN3Ez3zpUNKrRT6TggopmNC9mUmIF5f&#xa;Opt0xk1W6GhBm21xbBk4X3UX0Owf67/SDxT/sBWglwGRb2d/sBr8eKUnbX5e/2g9YiBhWU2VQq&#xa;tQJU6BWDpMCMDleKxwVUf5U0h6GpC1TssNosOYZ7cqaEolmnLxaJVXUMOid5VOMv3dX4y9cDDp&#xa;TIl9pv+00sLDeTzJF7HeEAWnrrZBgNpAouZ9/AkOUbVNrRQFMW5gIR1j6T4AHRkgB/KuVxk9Iv&#xa;a44k9ZAmq/190X52UmXtQZbtWyhlmOudzA33lDdq2yocrHZLwfh15aU0Rysxfa8N5EzLRtO1Az&#xa;jJaO1yhr8z385/Zb6so46cKn9nvjB/Ml+hOE+iCYr+2QGl6PcG8KeLNxMx0eWaXrECfdF+YulR&#xa;ujHb6/s/mW/Yv2W+VH9nvr1/Z763kQ+U7nqD3LBWf2e+If/KfNXPfAn/ZL7fs39s/Aj/j+2Hed&#xa;37M4yQjwPAn/ZDwj/tB6OFP+0HjPGj43KmBG3Q+Ggp3tDMP+0H839vP1D8q/3Q8E/7QSTEveCt&#xa;kMMoiR1mDEKHRRhXWIvwrgtYU3nV9qEjQPVki80kgxyeqJPVOu+R6q1NWk3wGw9Xcs2nMPPqph&#xa;Me11NW6XWp3NGP3qroNyq+UaxvzRYyihD6XLoDUneUec0ptRlPB+tUD6i3W8Y3nPFzPVCCG4Rc&#xa;o537yIYNYjHPTydZnZtwsZE7wE8iMwXXZAplbK9MrjR7oX9nvnQG9v818+1he5jjF8gn9wRa54&#xa;HwoQJ6pz8ANmaX+dN+AP6n/QD5f24/xP9b+8HpP7Qfgi2RBumnwCBCQKq9EiJaSsV8halbA2uD&#xa;2kdM2vDyNCRTbp7cj3AdNyNG6NxzjfnPCouHzZXskyxlPrFfzh/+1X4wS/As4ZU59/3TftD4t/&#xa;ZDsxipfvmf9gPE3+2H5f/QfigJ+Kf9UNlAuxfAN6p/gPBA4s18B3+/b+x5jntEfqhX8bPjkCEd&#xa;2bKJ0/ucZJhuOkV47fqggxAFZttLQuXr70vvFvsb/4uZL8d/bj/IInLSS38j5o+gsWQpIvhZnG&#xa;tjY6EgTjdH3MCaKKmwT89B8A99zz5nzX4EXK9QirSX8a42fsjonPEy9ZOY6CvoTbnkfPq8c94/&#xa;83V/wu7QeA/bs2odNvGYOGSPpgf3sgw3FLt0xZMvpoyV9ZNNMm63kVuwzFdpffiDDsHnNEs7eb&#xa;AoKUW9Si+1/yPf10hRuHLLzakXRdVN+weR7NYpGNu4vbulCNLgKfCL+S2kYCKv2IQZ6RtgUIy3&#xa;+FcwF41H8c1Mrdz9uK9NMSjjBkZsTVrVx3Ah8desoY0jFFsHoX0iwCXkugKOzviS8no2PSWpEC&#xa;WeOX71gnijLWYajYYnXZJkYV6sif4zxE287ckUeb850LRfgr7q5zwAJ8zjynhRs7KUy3uiTvlu&#xa;2b7uB2tqxrV31IFN/LQ1L7GYc56WKIQYuixOqNLvBn92T2Phm3D//tCmmfN9AEJJ2Trg+P43Vc&#xa;GI0my8hlsLi0Fs/6hk8IqtffBSfM9t08F0HYU0pBJngOFjfkdgAkDnp2yifTiBNG/hhRS4qTif&#xa;ImO8OBPg8ng+3/RUauqlrD9oQF1Dh5CIGMA4kj44utNhizQyenCRnabh9qApGopgCW5mnDkEz1&#xa;ONVdaoORPVVilf2xS+34wBrkfZgzilYD7A0B8VcLjRe3aMo20+6KFtDHFqrOutZVxmmUZ1ph1V&#xa;Q8fUEBvBVn7xYsrLlWy5gjKvuWH7vfBOxsAIwqhQhthttrIdxE25ORvdk1yWy6jVRcRilrqsFy&#xa;mCLXAeSd4eZdn4YZez30DBn2uh+JuWKH2sP+QG/M8RCnOhdvFPEKG73E/+Phlwk4SyZRlaMrfa&#xa;Sz73AIUbYNvxlqD8EveIMn+uFkLaUjVhJE2jgpNNYAlLJpH6vQtrz01IOhesN6kwx7p2goiI6C&#xa;Kse1uu8LWNNPqGdNtSfwMm3vw2qLk+e9rWEB+vw5p3W+EFdqtSBzhd/7IdXFORM/OFb3q6jaBf&#xa;gvf3ffDmZea+94yUpZQv8EyE31DRoy/35SBZMCLEqV5ASXrj/bdQEp2qrqYDqX1G0pWntcx0uw&#xa;q4Spvhe03C77t4UjCFkmmFC1gkphssT/OtSwb4TQQfSzbpSqW+umiqsbzrutiHaX4XHjeJGWo2&#xa;u3CiMwHmHQrkRIqk4dMP3+Lmmy7LCORHgxJzVeqlNyvNl2ii9OatsIUOEiEer4VCG0IGyMDMU0&#xa;R8Zj94OOGdng9sJH+axkcUJAyprG0KpOoC82CxezLES8JxD9X2RsjwyPyaozu5tGh7T3g3cOc3&#xa;Csf3K3BHqQ6rBqvUHYZsQypnM0dxVAPhli5ZiPAOxePnY2FGg8inh5cClGRk59uRZr5hdJ6jk0&#xa;8Js6phodu2rPWsXmrVEvzUY0DsxfzCDzLwFigAeaJz9C8KVPCWiBACxf55FX/lanHYJH5sP0oy&#xa;eUOLcYCAXaQhLhKmvyV2Dy+4DjFG2vftegCHp7JvBXkUSifFHLUNWQ1Na/iFVubOVqau+pQq59&#xa;MLuRqirmWPCfu5MVuycv9T/USMuYQ1Vs8rdNT7DWNt4BS82PQuhj5Nd3iTJeUvSZ+F84pp99GE&#xa;8y22VNNdBUPEKtYKX+znh9aKw1PS6e0EZsjyq13Ml6SOI2i+QlIy1cqfMTyw6GX6envfVlTTvc&#xa;I//xb8HnVO/1X4vdUs1Eaf4hk0gulhwTfw/WAnCdw/axohqXSj72XNJQgtcprCpjuPQ5AQqstF&#xa;h/zz7xaax6VELd5f57DH/3gO4/z35/C/TlpNSO/ExUY+s+QJ41Tr7RRQcAWFb4ESgvor38QFUR&#xa;FH/YnhA5LYJ7wlREmZHExB9hRTzqwuDXWyVWdU280b1sJz4SPDW6wqp586m55Wn3i2yxsbGys3&#xa;K6g+c67fSdMCMUAOUq4z2zO9plufM72uONg8XueHs4nzgz4Q5xfWeGlwr0MtNE1smBFnQcLMrZ&#xa;XE13fxTce6R7o39TCexDyp1pt0A3m/a6QVPw7lz15yRT01enKsWplRYrNNcgckj64qOumaKemI&#xa;ESXMcTusoUhfDT0NFQdHXx0VJxfDFlPToEYM7UkznbVbWVqdr6+3a51xYa6ftS0vuS00NTYtLb&#xa;s22OjX2ZhbfWutJ4aPGkAiuU8Lj1p9/wzrGmPJ2+KkgT97Dukl6CbOviET/LlWw4drF/4gnNYx&#xa;OatuZ4KPufD2EXAr6aTDUEkGyBOcFT8kpxniamtnEJKiQbIzHbtaRvTtxPJayWwjohmFjRzVxA&#xa;gPRDRjQknC7TxpzUiFkvRsFK7kw7aFI2lIV5+IqbxLmuLh69QPiBMu1SsH+PHCvo0d9KDYpovi&#xa;ommYcyY0Ol+RsqHMA9BWT5RJVdQbzqXsMBJWlTjZAhZsObNMx7TNWn7FhtcpcI5DOREUhyPFjw&#xa;nUp90VelQmq+NFwJrXgiazcW2qYm8eFCumcwUdxS7LcCTSGCYKbYd1xYpvZ/Za1x4v+f4GauBh&#xa;h38ga5iVBVBK6lyDV4pFWMQBFT6M2sq4zApqEp8bA6PWII5uNkzEGnI8xP80k3gW1t38ac/Miz&#xa;6Pyg4BkpVl2muhOSfZ3DdzSIlWSZw6W7efTnlpS1tgqSEGA/Cgr2IZaIggw7xCV0KfXAHg+NSe&#xa;wP5eonctyx41qWjkXSnv9RwuTSeErFSL4ID4vlG7iYe7sOZpjy6VoRjEEIY/ydEwJSKzMGG8jQ&#xa;BF+pa5wDm12UBmmCdeHbDERMOePNv43TDv50B6FqQMuaX/189ACOBpepYqEsWs+VRgW/YnUsyS&#xa;XI6EBCkSlsIFlwUBLJ0FWfY5q2gSO8NjoDWiXvohlSULnq9e+/xvNjgMP4i3kKJ6bXqv2U+43Q&#xa;cqZ83V78VYRZtE6UZ3BFjbLZiyrvNp3yLVK1WmtBp+9ODNaxaEvUV8/zQo5hg2Y0oty6BNZHkx&#xa;ocwAavejBoYFlsWGYsAme2wdtcgcjdhIlPJQhIKWaAJK8aMA2ZAuOYHFN/mmlPkzw3DotO+04V&#xa;2r1kz6Xm7hmcOc62KRXirN8AE9HIgDxBHsoJepB2HPn1LGi5e2hGoAzDvZ4pb42Bs74UDhmeOE&#xa;Ek2HJoT5ULmCQfkkd3pUYyVzbOVibrrPhbYt+euSmIPOeQYtWmu8je01P6KqhI4hy8k7+tT9c1&#xa;xNOIFtRPcYmhw+F0LeQecpyF+zGbx6t/BHiE2GallGaYYtE+DaSlD7hDTFQLN9uKJVownseEjG&#xa;DbNQD22OEHiwBebt43bWxiJU5H3ZSJyYod6yOKELMoWE1UjbT1pKKob3bLi5x27ezfjnM8T8L5&#xa;BiBpnvx0Py9KUiAwSy+j7d8B6gO6q0oCblS9AETVZRlz55uAFHXtL30SZXEtOk2UxL+3Dm49gP&#xa;8NzW5Fuo0I+2S3ZemRshFtURTzO8bBSFY1s84TqQwXt7TQHqnsQnMWBi1e5sOPQnISItSqAT8P&#xa;ZnEpo7hN95dvPJBp/kLD8Mv/Mc5vc7N0E4pPvNg00Ypyu2O8go2bhdDsFknGU9dDRkE+xIA3sq&#xa;KxLqJ/utghzhlyZ8XvwE/TaTo7pa8Iq0g1AdOL7JSqoMDQrJdcLnfB9Kxpm/F0SWKlbcTlDp8R&#xa;HqSx38mkMo8suvFaQDZAw0MaZd+ZwO0vxbcPlvu9NKeHq5wDAB3UoO5JCSdBVPX9F1bOnAviRB&#xa;8KXu/N8IS7+pmp0G8NZXEcMBgqO/xZyKXn+bnEkC34NRw+8g1cj74d5Ro9YI9ygCj4NSo8mT6A&#xa;f5JYGoQs40NmjyN/phAluBLkCVIsnT5Qr0aAJDQNrrYMcZJvg5EUf3u3JhoC0lulvas4dJjTnr&#xa;z2+NWh9TWwOduy1zAk+CaMrOSaawr1zuZSY03RXBTjk5dNX+qARZA61As6/ygwFZA3OGWCHXn5&#xa;dg1DraUdLm3i8M0rnamdf2boukk73WQTAwsfdtAY5xdEWUNYLVBvV/6B9W3vL+EENhoNj3NrVh&#xa;K3GS3DIuZDxrgd6UNnSn9YoDcsBQij7Qp/glp7EGSizEOIDCLRdZOifzqgy0PAadKhnDZuN8I6&#xa;jtKqEQVei0OMs2s7E/LbTZkZrS4o5Ax0KK63TWgW2BxVkWy0ymliAenJRk1RiKGtAUsDKiFH21&#xa;dJ0Smk2GVrQJ+b0fecOBxoWoJMV0hWXUejNv5OmEFSbKZ3YncGKQu2DY5ZYQKYlEZg9d1liUrX&#xa;r3jaIjHWvHx5OpuFhCLP6q0TCem/peno3tjqPPazMwluYepCZlXM71tg3JGsXXRr2cW//iBo55&#xa;l53+MBl0iI8rM50Rt1htFfdSIrIo0Har59LwCyfUZK6zhh3dfw1tIofPrithOiO2upBYcrBjdT&#xa;DLmzf6Zoxf/Qeuw33rnabBLo2t43ktnt5JMYWoBRW3fJgDVbQX2akuPsHj62lqz2oPNZKsKLjl&#xa;/MdPXrLnXorHQMLedPsWWDQ7PSFy1O+9Ijfk39rmHRmxFV0JLYtLZYOr68CF1rO4gSTe44qDwP&#xa;u4srCFbpJCWQMLfAG9rGsG/CzkhN8d9pydz0ap9QgjSVYOpQQQ5S4ABe4cqUGE+ehkRJP2oPm7&#xa;NbqtknChCTHfZRDI9AJuEX7wgetAC9aczFRLFUJAUUbNqp/MmRPvwp1PzYyG/sb5pu5NGFmrN7&#xa;Dy80Z/Y1RPtL7VnGwbKOk9oFeheg3B5S4qeObSxzft07RAFQtGrNZX+PTJT6EDhpe5qptgEHHl&#xa;/QSWbNtWe+MxdcN8xeat9eBBtms+tYqUe+bY7Y4tdqvgBxKsJjk95csmPBSzDEItKM+jy10zvg&#xa;t36951z9qcRY6FhAV4dRqFwsLwaa10SUZARVjv5vQB160E9kdP4LxVS2fDEDnqbx40vpHtkH2e&#xa;IUinG1w0Pukcl/tObuK6y4QzQonIoJKM5/kna2knIF+2+wCk6FuG+gWJNzTZuW7z+K/BhAe6tM&#xa;Ifp8Sf46SnerDr1Ys5CHfpQgiVLjU/ylHPY6nFs7MK5I9Jf1ATu9QzfBfFWVnaw6M/z4YJPmIL&#xa;2iNgXhAmnA20TWm52pDZQZ1Xqcw7s4yBHQLRFCKvmMUQb7UOvI/acGnjjhKfI/Oo6AgOJZs/t6&#xa;3PJmLfJoEj4xTVB/buPLDtWR4pL2+IGE4KgZ7QklYKe7VYaPJL0EGMMOAsGvTyk72/KmHSourY&#xa;jFGUEDFrZRxXc40do1Y2uV95UggaXnqt+cp8jew40C8mHDs0I7EZ4h5RMMdVGVunlbwnQPGn1v&#xa;Sr6z2ndNRXGcEaEzXfPbr61tACpq1FlUjSBWXyy45OBbuQEjpqZoy2uvkDqJKXPKwHl7OQT4SH&#xa;7JpvQKzHPxRngZ5SiJaiDcAkMe0pjZFKWZp85tyKThI3JGj1ay02WEU8IajruzD4OaJWnE2qJn&#xa;KEmoVX+BRO8RShltkrvU5NRLEKudaEzo7BWlsEdhNBnYbbbBsUCdBowAuzN8+Lp4+JpDialt6Y&#xa;7lqx2pPib3WjpE0jud39WjdVcoTIqD0seozTXMHWlWMecchfsiuhFsbvgcns5t/V7sWcpxDSs9&#xa;oooJpWRc16hSVLw01nWUaMhllPvhRINuUC3prEJVhH/K/jC9vq4Ppvig1D+rcK29IHxceSsroc&#xa;DxW9U17HnuaT2kqJnF1SDBWoTb6fYOqon9P7+AZWLWPBzaTAzanZLFCCuxCBbwVem3o3R8ro+1&#xa;PWF25wSjcbQTFwAdZMEM+0PIfpfYTaaqJO2sZL1MeS2n3GmiknaLqWJc3x5tav7ym2H1eGXLhz&#xa;3bhPlLqua0ucAfNE7eKrUu9uCV6psFfFFQS+80bLNPrZ35scem2Vbtslfon/ukoP9SjV9gCUY/&#xa;U+u5+h8qRt5AtxbiNwZlq7a9r52U/rT9QbGUWCtJXVcWuc+E4djyrqiiN2h2q23iEGd0Refxez&#xa;MU2zYMf3ASvMjzf+DNk/0z68YZ95o9SEQXLxzByz6n/Qk5u1OnFy9cQOPrUjV/Pdu2cfS8rx35&#xa;++6cyOtlJTaeqyk5V7gncFO6YcfT5G1+YXE9UKJm8fExGqGSdwVJW5leZQrvowlF5VsY3BKvCF&#xa;bL2Qi60cP3NodlsFCj6dNO6n/9S0Q4o03ZyjP6KBeMbytpODl29dPJjo5rS4/EK9/4Ld5iIr3d&#xa;w2msCbs2AbTgi4cvPJzmS4/EJodDyUQ78z877GkWr/AWxR5vqbs2pKpTVbu+ELpnKo6sjjTrQx&#xa;43z0/OEg2vL5mlfOtvUOzt4bb5tv3opte8H2C/TS168XqVGLvkxnsIC/Ha/YXO2xFP0R4YAx6V&#xa;c46SLyZVmx6yLk2id6n4//9TxgTcYp/VRWZ9sonGdyob1cUG9K2EevkFEFxROqVdvkCVid9EZx&#xa;lRQ3Myu7T9bZDDpKqicRuX4Hex6KfZkeekqOFZmYzWJZAkL1gAKxF3m3xBS5QhyUCjn9L0KREa&#xa;d6cDsOSzkAH6VxFvcfLMqrXFCgms4Hxoj1PCibMsU75VgycunY3SDj7aQdHYqGqNu2UPuu1w3W&#xa;BW3NOOAZRtGgduufOzUlNSU9BEdjhQKpQbPaCuPmoYidCI0Jhu7mBrVgPPY1vpAolnOUpNMsWU&#xa;6VHRFlylUV/Hros+JsiBsUcJLnAhnPilywjM1/IZDh8adaSLPw25i2W7FykFjnzdUdVxBEKUTS&#xa;+T1KvO4QzS450CExVCTuGeg5f22xm2hJSx/4O1Qw2YEFDDqflokQIdjCjD1fDLdAYDwBQtIRIb&#xa;3iWxfU7D7OQYFPQ6xunsgDKs0+WEOmUEN4N3/5K2vZUb9yP18+ywfp4u26ckx1r2FRIyobi2Z6&#xa;6eicnE0y1a/5uhhWLd0SkyVuTVsdqfIKnoa19FzLcx1lIx+IYrfQs4ppBZ4u8POMhqU3WJa1I/&#xa;kEG5zGVdpc2XWZBoy4a9T1d+e8T+q79c+GQV+isZiCD14LjdaFBJaUtwegc/AKv3pBiPKzyMFT&#xa;YFQFpSUMb3BJ1ba+L9qcsPgo2+bfqdOCo1PLt560AhQRP2Sub6mzZWDHgyD6jnInTVoz21qQSZ&#xa;pZ9OcO1XNYTx1tzDKcwZomSbPSWbC4lKEgw+9t7rrRTB86wT1j1d2j3fhSqJK9Rk5xjl69nuqq&#xa;Wy/AxhKWDHSXFjtiHOw9BnER9GJYENCOfKXLAtAO67mhCN9SXikZMiocyp4RKE89s629ODt1xH&#xa;Fj2cXHV9wDT2RgdSenz0fDg9TyjVAQEUUvNI1ki1P7TDzG6XUVAZJC3cFWMp4xqSz2sANV98lJ&#xa;eAeNrLcEFiEsjgkc1pjgkFjNDBf4bFpM0XVOUqKm5zaJukPWHp6MbN5No9ac+UcuHTFs0fZmKW&#xa;M631+YJk3eS7ul5YoOpnfQIqMtepMlwxvcU9ttqOjrTPDeS9yOusPjAW0FFUx8dosAixIbJs7K&#xa;FhIHqibVi33+IF6cGFORegosDr1YFiPLcdnQbz4ab51j1Ele651jiElC/FIqW+ANIoe+uX5jCr&#xa;m5Y2jfLCiHf3oq44KeqXh8lxc+zOJXSKL7hin/CpUbkcTak0WpB+n8a0ztm07x3bGfrfIrZ26G&#xa;8hf3zORQjVakQbtyF+4JbVI3qHPzmB4wJqPlM0bj98i1ANFLBqEThKRuqIeW3l2MJDsQzyX1Pi&#xa;fKbZCH/LFmkM7Cu2U/XdaVrx799/Cxdj/f0jsc/uqyD5fcHPTzt19d8TkYD9VYD3xqr7S5eqUf&#xa;Mrl6ZR82uc3KXd9P2MAP18EP7WBefc1GnqMJtq9hXr/0R56rCLbx/vplPPJsZpT8HKnxZTjyrC&#xa;bU1Y1x97kZe43X5n2N9fCb+YSP/uB9JvaaSKgrBuaVl4Gcb5ECYfxEJZDJlEcLDT0vgpYhH03H&#xa;OBCVNMtyDiXdWYRUp1aCTeU4LGP74jn1c75Ir9k+dbeT21jzJe2tHxwhePsZNKsdVvaknegDvw&#xa;/4GtjXPEaA7rev6dwypqlUkZfH/r0yUEvOM28Q8LkuvkkqngZbH5ybwUkBu/6WmLt75jblR6oj&#xa;zgc+7An0nZsg86gAjziYM8uNUc/yeZ4QsC3e3vBPuG98AmCZ3z6I7XlvCHYweuSAc2C90V9EPM&#xa;AIhruB/mRTeI0gIQqIQEDv5P8xm3IOk/1PmxoJ/1M2JWds7PTP3wP/deHKvxZt2aw6t/OrS6IA&#xa;g9HEFgfN3C34a0IlzjSIKJbTWK7akp4atmGxZoB0oeDtvIf5E3bB64Uo9Sj5Y+PxjXJ8kXyhnG&#xa;Vt2kisyUt5Obq5Hk35eDtds70v83V/gOdi8DFQ2+AdtWpXT3o0kKVNPGJ82H/mZtc6emSwSekD&#xa;oOebTKJwo0yZmXBsnlWJlemZNVw5y7QkeCsOnRT0xqcyohn6CnA2DpqObg4OoimDX5FolzzXAG&#xa;fOz4j+gMUEBvrAM6foI3RPL9HxQ0PTMcPQgfG3o1+AZZx+xoKEtkrA3A6+xomlmf43gFMTZvHu&#xa;xnQNJzZfaZSlri6P0HcLs/OHtGDeYLBHi6sGqzTpPnv3DBsrZHepFoMfr/jeQM5z03G+zoZG5f&#xa;5g8iagNfK93oHGyoYIQkVM1gfoV5HTzvCJgx0CVNf2XKaI6MVTkG2nvYwLACinLarD9IZAt2AV&#xa;E0cb8uYfl9IUNnxn9rWoTBSxicX3NIhXxN6jeTaFkOvh9v1+/ofqBPu0G5X6tEcqSl2PgIgEUV&#xa;mssRtj/3w5S9e6CK50L3EoVY+3csgTLARIPAtbKXP87wWapNNeigCXXXWHlS5EgvVQUgyECgPz&#xa;bIqAQFssDTPCmKbCZJfAGPKkYtsoY5YMN62pKSEPGqbzt9zAjFlCI5wlNXklAQhSYT+DSRqU0E&#xa;AagNSAc0j5qcfJzpTu+pjjOkfZDi91eW+nOcotVOdeo80WpoprlK2TZacPMuni6JHGIcPOfrpb&#xa;pDSz7QE2yKNAQ1hHk1LcmS2GTRoO8XwJ8kWPLMIm7U/pIPgkQWVIBjEIidBc+EUAcEB4M6v20o&#xa;wiNRLPAzxCgvl4oBRMwqJwkuh6OIaVYxg/tEwj2a5BcO6Jrd19H2LOFitYzI4Chs+JWSpVS8GI&#xa;htFqF+W1bq8vN+mNt7YADPIsegBgdxUxDTRKIA1isaDXZtdilnUiGwPlRHwMHeQZgNZojNlpaK&#xa;AODxV3bECDxTSYJh+AhDdVviw1aq+hgH5AmV6jOMWbvcdKVkzIhxEZ6izT51me7fCq1ivATQF7&#xa;B+/i0qlWQ4LMtUK95vMj7jDQCMt0zeSAEqp5EpJQrsjCkog7tF8YiUiT1cT4JEiwjMYswUDphR&#xa;Ros4Ji06cyn/Yw/u3WP+4m0x8bO24E2plio80Ckk4mD/Mae5yU9ioqxQS7n0oYmYmfdpeFk6pP&#xa;vBfyIskBu5rKHXM6lH7bWF25ylJn3w560w1CbzLAarNy2+F699My/OZbm49zHGTc7zH7NONiE+&#xa;lMVhPJvmHnMorxq2IiVXsoMhNv/3lnjS35iybtRRzuxvGxjNGsJhuEvB9DNd7hDISucvuhU/X5&#xa;SMTeU/jtLjnjFv4UUhjDcMq9aC+KQxreLGAt8UqvokMYmQWW1mSlA5vWCKw+6TahUtVqEJJ0tq&#xa;kdXHyMAzY/RGXVPbSO2wG3+QPSb8aORoccbcLfHnz48fP9u5BD6fxmIB3yBL055IXCwgtd3mLx&#xa;PbK3mmYXlSSm00Es24miZNTk3RQ2RF6iDxyfdeMdsGzRUpCjUPdhNZEKSJihZlJTF9ke2cq0Px&#xa;kYF1V6eEpydfvG5uWhIHKGMu9PLACfWj1rIKyZgkoJbbVFEpvC3ZM0ceUrmD0q3PD8YBTMZVjQ&#xa;5t3h0VB1WsuFV6RF6rVzKx4DUjaXBEmyb4O/p1XRKFxSVgyN9tZc7isLyOwNGLehTxzuP7cm1f&#xa;mxQNzytMI7fZcQ0tHaycfX3AOjjHLMZoXkb2cdaYIp4/iru+06u+1cjLG/We5g+8eBZKO3B367&#xa;HTpPpTOFFn8cptvn32cHGCDmWfb+6Pop8oA8VD7qQNYOOM/HcoJflUiC7+geA7F2Swr3cx/Wi5&#xa;q1gPy2Tngm6sKMoMD2S0zcVjWHsHUdZ3jjFtetcT4rrJ1J56olYwjJNIzMu55qA6rwZcHsx+B9&#xa;VuJixLJ9hR6McNXOIoNeVpeFzyOML/KuVM3XAEj8vvs+3NqMB44lsJ2Lbv+t79obrQn6KwaeJ6&#xa;r/CwSZD3T5iD+/IolaTvRg9a40H8HTI4r3e7tVa/jXdJvZRwAVycdJswDQ4sPAjz+jZlDcMA8L&#xa;HAhoDfA/jRq6/2bU/GvZl7mBo7PT/+O9Uqu/5g66LymMdZsOvnWeZlw52FwhvCb8rKONeS2rTd&#xa;yCZQRmc4ZEW+pV8KaMRecuighYB1UpHo83zQ6FQnSKnGM039g+V/t6fNNPpfT51dEprmnu63td&#xa;0n92Aq/dMglZWWZyTcVOejjSpzgFw/hWkWjRHjKnlAyxrLvUec46jrFex/agY0I3mcjIkkWka4&#xa;gXf6BAugBsknXEz1SjY6xMyDDUV03mWUjd70DZWmVCW19xqNCXJrKa15tN5VMc4+AN5Mte6S9C&#xa;i6bNE9KnDewvAMubU0tF1cgj5vqhTexVR5ieZaUcstVpzeh7p+nGHl3i74Bx6al1V0bxVWqChx&#xa;L0FfL+sYBgi5YQDNclfIWAJfr+tWQQNyXN2lQGbd+JJpa7BqIlzzbWMH6GrAucOrkpG2I3zFpZ&#xa;UYhzlIogSqJIMfS+qxaBeOK5cVii1gZOqyQd2+f0wshfToi+FE7BwRU9T93x+xxS8gYrn/hrOv&#xa;O0aFadpLvHLFl4sTVpzMTY6+Sxvi61SwpgWrUyQ6jcefow+Y8H867BR5m75kYi2ePwvzJNj99a&#xa;yz1+ytfMN8csKiwJAhLD2nEleSFtEh32HiGvshsqEZs3LcDaZ2f8dMTjmzeVSO70kG5jcrPyPg&#xa;VeMDZZJa8ym4cdNcM+kmrUMg1kEpkz4NRtn1frVLVdi2Op5Qy7I33cwx2PtjxTTFBaTSXd050z&#xa;F8JNeFPNzMOjVEu89YUl5sICGLN7CfIUxQHKGQQBIC20qvWirHkCxChFbgUj85FqVPdzSurmWi&#xa;6T03QKwcJo+xLsvfAIp1d2ttr2xd0yAnTZCbfUb+iqYYZlnNQK9XVWeNW5eN8EqwTAyms0jWfv&#xa;AbWHqk2BAJZkjjJfPXZkrb4ml9dKwV5o9GSGQDSfnbIPHIEYdXQUEZHNg0zVMxYR6VLMUoEK21&#xa;k015AoFeaTUuOhsfYS9+z1zLKkKQ8Ujd0rq8JHgc4TFmIwun0UBPEsxwKR5lbyD8sF63bx9HmV&#xa;EYxl1gn/5fy+YtZeInL6CvuNU0IZGMlUTXrAu9Hz7IFv0fHlOfIvdN1Yxq9XRGkwbI/eTuGo29&#xa;08kpWI8Ak4HRk9kWtnE3ZyJmt3vzHEKQV38nCo4lkSIyg7cnccEYF7muDHRsTFbz/EVrLJCFj0&#xa;qnjgto+3+98fB26+Wba13RQGGXhVBDNJcRdf1Z8kBcb8sjqg8fIDqdghpB15Ac1htG4zY9f3KB&#xa;726BqmzGi1XW8qTfKZqjFBQG9k3jaUPCaJ+0CkZRrRLeOKVt2JyJDm/2dkoHg3ireAKfw1Mki8&#xa;pVpTCX8NJBnHsfb/GRkG4oAD3TX6V34Pw8j1XiwOoySbrGf0LcdmCluOvsI1rGZH5ZBO0s+7mx&#xa;WnENtY+M10Yqqz/DpzTP6H/Bb/E4qIsnzsJIusKjXM7hK7kJMmyPn6PP/in+75l6y4nQRVeB/8&#xa;+6jXlPGzkcMDncL1MO6ZSwPWRJOCzCVPmPw6pFYGfNLynygN2kGeSFxVAr9yHzFVdYebWFm2Zo&#xa;tJORG7DeQgtnJdle1z/fuZlmtbZXgEx8WsaOsxZq94VGUeQFkyOFSF2I9q285uEUGY94E+oW11&#xa;gJvZO9HaQ6WUOKdMHTbEHj6VQXK4B8zRN08gny5hni4jpwkrg30FiHV7R9My2JNkNwYxb5v8U0&#xa;Tnmu0pGSLmQRQ3nhfKQPweH5B3Hp3t8drBLoOHOfxrPRLIP7rtwTjskgRFPgnVN2XTofyOWjDV&#xa;hpkcWPKy825D2fgk71tplNt7kyt1YWdWzwbwat5Cb1e57EUX5D9YSc1AnN4qUVKvoWVDNwOf4J&#xa;bm2CPYfhfD+Ljlqd64buNIR80suYX5fKh5nxAJ3yDQgkJwQQiUFs4p5EwWXu/MQfy6fbTxfk4J&#xa;6fDnVevAY13uIJd8UXiJ8FT8KsEnEeqC+Oc1jnJAY0klGBBQG/T/X5Pg31axqHm4K6uh/N40jm&#xa;eTxoXXVecsUp4BShgNTPyJipmLKghCQIAPqe/H2jXRIYGbNZHR5fEN0lLHSqSy0TapTcVqsBNY&#xa;UxyzvQWlUvVc8bmyqlHz+RKOj+/Hc5eEeF8PWiCd2RXXs/Vz5jbXcRfZ1/sMEZDq3jYIS5SPKu&#xa;3yqabqZ7QxY/NwE6ya23G9xHw95rv08rgL2Zws7bVmOTPEzzLdZQdYmKWSSWk7n4Lugjxl/KOW&#xa;zkdIMovHtFdtH4GxSTPu9u2ybUMT6hTUhH1ME5D64Y/KmyKwyHujWXjkGbIhohrqOdcZbuM3ho&#xa;sTDnOSDheW43rnQHkC+JFHjhAw1AaZSO+UpDptqoSaJUhl1WPu+XqkKAumFKvRQuyf5lqz8+q/&#xa;mGHWZYt9tZPfNN3YaKztkOHfQceW1zHW22V32ggVUHeRY8pMY3oyz3THrZjnT2HX61nbqkYBg0&#xa;Qs7xHDqiPO/nccY8sxFIww9/R8gYjU8Oq8lamWTyelguyBQLTLDEj1pvLvUKZz5/VpX2tNFkLB&#xa;q2mLlwc84zaj9KPcGBHeXUI/w20t1n8YwyZEA7oT0YOIB3Q2SXA0+xn3pOqa1bdkl0c1q9hKif&#xa;zDoajFYGIIv8HlJ1NRkNS4eqZRBNdxVsSqnoOx6lCL29FL+ZKmNf3qWJVMe21YltAtsTJ1pBi+&#xa;ZCOpY64g3vLCJrNJS9tMwzXj19dl6Lier4UqFwrdt0zLR5SQJIEU71umqmnJM3CAPz8wao1UzM&#xa;rqqYgls51oF8Z08vExRgRtLn0sItnxtE4sZpOQSycWkDCFr5wHH1sxbAymAWGC/JiCdE/Fojhr&#xa;BlsnFtUSWgkf/41np2ZlDmcQogw7VuicSiE1LPXheRUfAiHRR8p4nPmeHGn2qFkF3pW/RsCU1e&#xa;xaCHokpkk6pA5vGEsnogbhVSuHOUeSRlFzZ8h+Kt7iurTOfKKhaGg0N+E5tx6FOCP7Y8m50nXY&#xa;qo3DrrjkkxeJii4AQ5DN0xi0njiNpsbGE8eyzU5A0rRSba0q0TiaGNzB/Cj+F/7CujbJqLZgjQ&#xa;W+lEvQC35dPJedYjzbK51fcKb0ZVcYLrQWZeMrPDd2/Nk9iQb+qIm3QTirCgwdGjlJg3OHIuEx&#xa;SotI7oS1WTIkR0isAv1tzre7NLBi95B0PJU6LLdSgdrNO2kWINA+4SNhs30txyrpyfhgNnjzul&#xa;/vYyoJ+pflp+5E0cH2WFsDqQfEaTsVTScbVFe6w1r27RUvWi4TokUXO3ZIodJuFRbuXOsz6qVf&#xa;8hvwHHRr6afTEjjXA+2C7t+3LrFw4VSGvezLN9hJh4HETg2Y1vsC6lUROMDNVMhIp3tEkPpyy9&#xa;9gyQ6zMjI5t2LgRvZ9Y1t1c8TLLSr2O91zMn/ikWaWIVWRePUJl29SkUw9ydVs7LZaL1jCqxFn&#xa;RpqtpWmXs6APiIEJFg9v4k6xTMXGIJBojHlaCL4iCcuyZpG9K4GQuDKGTsNDcF+ZcokNwGmOyl&#xa;r1QBuGSlJwJWykyn53UGzK4eXKOoD0d+fX1bggUoUvgZQrsy38oE9Z7dDkHUA4c2NZPXRd83WC&#xa;3qtnlP9tPKcKHzMjNnW3Num75hkJ7rilnz4+/f5hyjqG3zUCem9QntXAWk/omp7HNxWtRS0Bsi&#xa;xMK38LDWNYVCIq7z4HvWum1q/m4g36PDrGPQrue1rM4m0kifbwU6Mh/k71fhI+u68ZFFUXVAiz&#xa;C6lvvkVkOOUWBWP9mZY+IGkQT3wVb0x27/ikTKo79xOdL623xncsQ04wWI+mhlnxAPQYJ4HJAE&#xa;qqn464AVstWWe4+kYaonugGqyKm2zlilxhSyA9y5t09aAN9vuEHRiqHMOQwL4UgLii4gfXK85s&#xa;9daW9tRFY3H0kWAup28MX+ANdnZOfItE0YsSxPTetLBXwVmLaEb/xgWDzvqFhFZW/I27jeuQ5f&#xa;Tzs7rtT6Qz+zvbPsumRVcl0WjHNWOuU6d4axoaDF/L0pNKbNR6d2D6Sgjl5JEMajMl8SehL9xB&#xa;bPSzNBihaM8xFQPaU73Xhgy0aUfIdQPtJfjQpaEpfQMdIY0W6rVPfNSg8afs2GfFjyhmSTRsrh&#xa;ZEulg01SpUI8jng7Mg7aTSJGddyasI+d128jQYGCbzA9i2FVymsn0GI4sOV9BZRPRaBG2VcANt&#xa;J2l2BiMZbkymJcffml8skaMVaowMRgHGHS2gZw6gUUUrWEysSnVhPybBThWsL8NF5QouAU1UvQ&#xa;oX6EYX2AJiFGvnpUsY1Up7c0yKDEZuHVXO6O9JokL42OZw38ld8HXVQulNN+CrcWJYHQCPDEQc&#xa;UxbkERjJiTApUbl0fp0TWhM1+7OcfBP7O7uw2Uh0cClOv0kZ33yCUZfW+jE9MHAHKQZMNypYR1&#xa;32XX4aYD/h9R/C9KYy5G6AQV/5I2Niu6ExRQ+c58Ppz1p0hH/vwNLcYa8eN0INjr5f4yYOPrB5&#xa;0zYYvDQKOjxbLKtpvvU6YNFOCoe3HbBqpRzeprDHiUPpEZTU+6mzwDm2yOC/69u3I4H65aG8z6&#xa;dOa0pImHxDZQyTn5+2jf8dHslHXWC8ur8J5MvwI6knTcS+AcXwyeheoITK79TXOgm4A7cZlVlN&#xa;Qc6S1sxh2zpxI0TfGd0NkDWQZdNoxqDlGOKgprZOsaHhhekmlXDn2wOsQU8f0z33AmizRSmxn4&#xa;YEO8fnZaZVhPyNV/+jeu1Qa4BXd6VTDRinhcpSGWuYK39IcX+/0CpSLr6KhVfGszIfZuizECsS&#xa;qTAjSqlQJpwVCy7eFdNM3A2LqPA7cqfAbGF+MoOkJRZcAq5yZkakmATT0LE4zj50YdUtyRwwCU&#xa;cpcQy6GdcQiKkTHWiHMAtk9ob7noF3ZdLr2xt59hmjZL7ZzWWeP3t3PvReOfRxROYAT4wR7KmF&#xa;9zMDZUN2EEPkdXP03ilt2Vdoq9Gp75EWxN6xe7G+AQbNCCaG82NGXpMC9/qg5sct4OuutE576P&#xa;f0r5jtH+TMli8lE6zrQdE/UDxVwvT8/3lH52W3hW4CAghoAuF/ghL7/xco/ZetS0mq52pIavC/&#xa;N+E3ayow1Yoal8wUEvxEYzW1vJGJNCWBrMhpVlh1XO361mqw3NjIffgu+jUv3/M+N/bVFnClz0&#xa;/3lXhKfijLHV/RouN7AsG60XmZHX2ZHrExvf/9iFkuDh+Ts/FQ6zksR2bJd5h+HNbX12TvImtz&#xa;3OlIq+jjo8f4S1Xsrh+u8xQ/GSqoOJt4OJJoLVQZsiBliZnpG1ZlGSrXwfGWKW05Ex0pk81kbx&#xa;4kbB1CpLGcMP98Put2sMWaitNiJAai90v2T5kXIfZXCT9VsP4CywUfnnLcPJek9S3iF0US6hh8&#xa;ZJ5eYCKZdPGq9J+MHVsSmYYmmWOyoeIhWx/EP7w3zuPr7xGFHCCYZ+wkArSf+5V+s0o1sJGK8w&#xa;LxmHpwb943P/AUI/Qo5g2lD+QcbSfOyVYhdlsy6IyEYCVXh1YRRY6hF+50mDc5maDl6z1YP+vQ&#xa;uW2Zt1IIpc5iKo3Q0Tcfi5Dy/4HxxAt4qqWIiajXjZhAZc7CS6wJMhQ/i9YofGEhji+AajJoj6&#xa;xc+evbeS/qQAm6X7TfubEWkc0xcHAGuyDHKz0HAqwd5HUTZsAsNKi01UxjN2FGEhm5Ws7xOtEo&#xa;pXVfhmIloJi0wYCOY9UpT9rWivA3w4WR+Y/Uz8yrVBO7pXVbIaqEbkROdOTNbHIr2GsOtVlJqW&#xa;LIwUIkubGVmG/Cqe/Hw9btAyxSfQJQe4WqZTe9IEJOhg3J13nwDAcYzqPumCHCoYSGeZJRqYkN&#xa;j2GcYIQjhfJR0L5HH5hp0BxFAcyWET+uQiEQ9MwlBeGEpGe45XXZrtv4ZXoluMn2QT0xVMMIy1&#xa;orGm1Flrt1BfDqCBU/oVQNGvWn8YUMf6HQ7IJJzlEv5OJhy1L/X5y9Y3CuT9vuuWLbtm0nK7Zt&#xa;27aTO7ZtrNjGim3bdnLHyVrzf56935n32TO1Z2qqrrqqP/THrl+fR3efxyGSo+cTo5Q4lBi75M&#xa;XCrDe0leGkh99DbxPZNe5du20b5aaEoWSqtVM8dwebY2s0r36Rq3+v8ATqyY1BtfMEa4Bx2yfR&#xa;KFia8SVRaoRuKUbKUSwec+ukfN+q8XQTwmRpQ3/GP9YSHWAbrbMJnhAMGxh+JZ9mpUtet8w25E&#xa;T8EJTJX3ns18s4MHjOPwn+KktNM28MfY3JMXySk65koGQofHn5QetTTnaEH2mfQ4hqDoMhg2Su&#xa;PODtNpU5DAFBOQub6chqVymptve2JfJCAFuKGWa79/j56evVn4Qc8FNVAitfSXU7q/JomjThVz&#xa;ODF8WBqQ02xBZOITjdGzqWuV/IHHbbNhZ+g//CUY/TYJ2WRMLR+vKgoOV62+/1oBsIVCw3A8zj&#xa;jHuI0GvVHfdWUsN1Q5FC2LpDWRzN+5WQ3zNTk1ysjEe6hyYAEQrKRPlGnFV8VfhQksZEX+2lQ7&#xa;C0KJbbMMfjXH1nt4BBYIIvPcvyOOXKboe9EsGLDhDmsOSMMS4HWl4Wlg738F+y+SsZWwCYKq6O&#xa;ImnOW9Eoc/UK3DPOZlX24VRf4E+0se8OlXSMbgwlsto5TSDGwXvIzJRs2Qobu5C75lxiFPH9AE&#xa;LL61NYkwjJlX9Uex3iLuuuexPIYERdaXmD8W0um0nmZF9afSNcQH+J29cf/qJFVNz7vcr5DE1A&#xa;VOs7XS5e8arMsYSGnS3KEWbpryb00SH2o22f+BvGboekDb0XSyesjCfHhI0bUwv+S02kwC/mgZ&#xa;qVm/DyBunZo8Livgf3HaJRDQNs6R+lvOWDZDu8RQuQbGp3rnKHJBsszXxarhIBwzunieVaHPG/&#xa;5nzk8p9m6RGkQpW8R6s1mRYqU1Puh1b0VJELD46j4fiF6ULDURa/5DO8R1T2XQO74lDZtHP2Y6&#xa;e27wGK8gO60R/rTGJZ6hKx50Ipt69R5GH2HjDMcPx3QEfHkvmZiwa4E6ozouvvycIjUnWH+rFc&#xa;/8bcgDwk2YGtsy6OKZaq1nW56PbCyJigxN7XF3r355GhvnCP7g/UjGIAJoUe2p/iJNJAgVIzcu&#xa;jBfxtSH0n48lf+I5un/7ey+f/XbsDxfyarqW5poAvMcSehkGKjWDWjLPIawUeBkVvrFDI4B6nE&#xa;FrGUUbQ4h3/ZpeJOJJmlu0m/nkQA+aR5f066vS9PAyXdfQrIqWNSQDKTCH1e8z1vXW6PCgIDP8&#xa;F+IgWYnMszOI1ltfEoKpw+zcYOZJh2yvDUd/K3Fm7UpSzJpqs2eu+9HGaDj86rtTDYWnNoL06b&#xa;sJ7cSVUan7ddm6i0P/oJV3NP/J6sy6xrHE8p2T7mFD7z5I9nYbcj8ttotzjnZ6eBQQEcedOVpc&#xa;nA3zwABeyln6TlZ/eOurb2vO9TQHHc4Rcyj2zqiipkso9isyBiSJLqJvOxZI4ttSxcxtoKhCdP&#xa;oI1JR37fIkeBDLFvc+HwViVWitgCilg0juuM8jn0BM22cMN38e5yqxVIpYoUXhA3qNoJaHIpc1&#xa;NRRJpDJCpZB72iSK4ZsRGHVoALcHKNeePaGBlbppRl48s8oT7M4ICuXO7hv80AXthD4RnnCykQ&#xa;KasSSuQCyU4+c11zh+5qWANhfQLGfXVYceSEfdJat/pZLsSMQ5u0u596hR6sYfAZB2Y90WnjZS&#xa;IMjJMpzzpmId3Zmj4A1ePG7lfPNmqihW8l1DpmMbE0/7NygbF3B1ifBaoU3HpWYA+1s/YO5+Tt&#xa;jHoGXExRj0Y5rHTHrBKTjiPWWF0Vb+WszgBCD+MRR09RISGVDc0LCODN2J04WMdgI35ec8Ho62&#xa;diXgRWekg7C/kRwzYw2LOStiO8dB0bM09yU3d10rS80kReb/xCTG6vusy122peeaJG3cnxCbSd&#xa;p5U9jw3gKd5xpFYM0ns8oTlAvYvyPMfcMuyWA5d1LTHzPC/h54DlstqK0HwO06XQLqfJJmeZWy&#xa;/hlCO8qreZR0Wj/FdBtVs91KyDMFAhIJ8KZ67esJKhpeLKjxHVAkPuQABlDD8utURU9s1rj/hp&#xa;SovDgcXdhfX2EA3AxjTeEeZNi6GuJky4w+rmBMH29nOenpVd01YHaRu57RU73jqgqw7fXyS9QU&#xa;sWXj57qSuSfNSJxYAiEwxlyWzzVTpEvrnfaAPHPgnUydkQEAorevUXgDPF1jsCR6YxMo201SYu&#xa;o29htQWV3qi3ZyJ+Zk4CDoNeeN3ae2Ql3hcoBiGG4QeYM+f/jfWJ2l5Bi2Res0+Hm0Mjk5Z5gH&#xa;liIdGMYN83XDESOiiLRzmnhnnWSeCX1KwxsvoeeWCPlHOoQyy3eBCSRiUfn+UW5XvdGcpJa4Cd&#xa;qrEsZs7yM+h8zupn6m6TEvZzpdynG8vCE96HbaJDFHPvFedCsrSbu+P+ieTh5u92oN1THTJOhZ&#xa;PONlULb2hzC5XGmRVGMYf+LsgyujbcZzM4x0Jt24tH9Zlvdz4pZsjmH/Qo3JpGDhJUpO7wXeJt&#xa;++ul88eG/pJnZ5+IhcsiT6hzmCYsQtiiCjQ7ggw/9oJfqA2P88XGehKs91dwX7yoVx3l/zqrbI&#xa;z60zqGLecpIBr61hW1bPcBA9m9ykJKjFKLEUr1w6q8/Ud9WejYBlopkbcfWeY6S9TgXxhHk8Wt&#xa;MrOUw9Ad1VQMEKUCJd0VO86ifM29OYecpEPQZjiDk3P+56E9Z8tcrYCW8O5mG+pGEHsG5oq/DK&#xa;BP1SA2XyyLgSVJ+VfUX+KIR3OFDibGfnAf9J0BMrFo/YOPKKTURwFB8wrQpGy0BK0t6buDk/Tm&#xa;+1MIft8VEX6xAURefyX87tTlB5FIJZZV2gLhcWmOof782/lJSpNHDOof2A7D/u9gi/3/CNv/mT&#xa;umDeOFv5JUlyyRvdphvyHQN4ptF9tQtqBFFsdwJAup2xRnT9BmpjuOL2O7nAwpsTQkl0CPlgIO&#xa;Ks09mISHSoyFjIqIF0phWkcO6WhEEgae3AA31dS9QeZrztWds2OW8l3dbcmeLtHWg+P/fflcXa&#xa;X5fKm+Ur3mc/I6x68o5v7FmbLKbVS61K0KQHG4upG/i8P57B2WY6tfjQA66SkCI7Z86jiL0zOi&#xa;s05fK+Rcz4PY+lZuLRsp5E42cGzwWSkpjF9wZxpbIIRnjiz1xo6tHW23Zo4JllP8GzsG2Gdubp&#xa;ZrgxvbNfyRuQ3tGgJNFTeFJ2S7UTwNUqMrs6R0MVrlXAlYQrGRHKOfuXAW1gsJDbkkVCNa1UsZ&#xa;dqLF8Y58eHsZFixZIXJm1AK5Ye2hgHK814xs5sCRIqtpuTDXlszJrZ04HB3cLC8i1Y1C4wvObG&#xa;sD175gnSboe7mr2zaTUImIMiTKgfa8X7SOpd18TSbynoPYrCoZlxOlSZXVho3lgk0W8vb6N7A1&#xa;VW7+9CjNnMwzv3KtRqt65UbS1H3VdaTO3sdFYzIt1IF4GiWECZ7D9KamtGWmbKRp6hlYBhaUJN&#xa;lhJYWKoYK55noVi+8tw5LibiAphuXXDQhrrG2HP81XyG01LkR0aHum1LIln6bmq2kBWyhLj82L&#xa;g7Ikb+nwjhw1eTRs1qX09JbWJKpy+Cq/AINLVjwrVcclrMpkpDYNMku5az7eDMmQhLOa1C2QxD&#xa;WJbxVS5psGP5fVJGCrln7iieXFqKsQvOOJt0hmo1rLkPRKFDHIVVeQe6CSZEQn2svBUUF6iXuy&#xa;O5Sz0ZTMyvJlpsvLx94YMgjalGuklfNV3aGH9y5Sy1EYD5u1i3SrZx8UvsKWw9/qHhV3qdF6Km&#xa;XATY6VboaYWHjBHW7Lanby7VA3Zk+KMbCVLUbkjpwPssqvWtxZMi2VL70nuRNHPYg58gPE2XH8&#xa;fSgdbkbXb1PzpV6zaEqhwdsyPgrFEqxHEQQaqRZMERVRzT7VcAszEz4ubBZEw121wFjEfl+fRm&#xa;ECrtDJPItu4sqYAyk3qnUljoLym36zUAkZbcYJkpmTF2v5ydD71SUsmkVFXixOJ5bjbxTPc54q&#xa;5uwsRWYgvp3z2gjA5WMY8I63GNsYGCh5rwkIHpZcXZQwy/v83hYSJIhHOWJ3WkZu9RjFtzcrYi&#xa;vLgggQpgbChIlIFSlOVFLGGWZvYAtUzleUCUlmdy5Oiy7iqXroDrJ+xKVmCIa6CZSOsUngvXg7&#xa;nLR9WTlHITMWlMx9njcDIcq7ljrVJNkxZHVyELUASnbXKynp42+oi77s5kYCN5mYVCviqk3Hgp&#xa;oZsRgxESeJYaSvixn+bkj+4hrshtk/lmJZZjHxbQ0+aOP75UQUCayiKFit0/oUjI0/APNMQaKY&#xa;vCC9QOSexrZygyLHuKd7RLpwZGfP+y1Bn8w+MrY8shkR61lxu7WV1dVlWjep3bkUiyT2mDIew2&#xa;yKRT1ieYilZJApmfI1wJDyxnp2wNK1pBeF6UV2Jc85PK0bPJ6HsxvxjhLWL4K6en1cggbcZFgC&#xa;SRHeHUI79+Udzszh7Hy+MiVnZgMfEN/4Cx+8mlZY/4yk3PPPSMDkFNXtwEnKxgEFkYAik+lBJv&#xa;Vu4XwBM8NPLhvO5a3+0NaXO6OUb9VzjAh2mEWhkcF5gmU8G9GXPWF+2F7G0U7kCWa7wc4k+EBw&#xa;oXppyg+Mj8bCdJlmuWwZ6+tmVmp5d05ZSni6noreDdlAyiES63Q2Bh0hI4RRrpo7Fl8ku3sGj8&#xa;CrJCesCtUFAAXsN0T8BYV3ZYN8l6DdEw0wQ25JnIIPVtfY45zijtr+utZmkUGfX+9jxicBBcqi&#xa;63vVQccDVdzdvF+UBxm23sx12cbbkXqVuV71xDqZh87n4BGjcTjRO45EfeMSVJCnbCne+iZ1Lj&#xa;gehM28ADSji8zgwzKTq6qidqecDDidFl6dK/NXpv9xoX++3xhgQJYnBnvuHr0DYHvX8bDSVQ9W&#xa;TguQ/0uC8l0gpR0frKSBkNlrHzUqB0uzLOJyN6O5+Ksjm6p6dk1erS9oPSR82PG8Xzzl78AuxT&#xa;WtXg43lpNPFVGOvmBbvfUQY2uGvL2q8sAsmGTfrGm4wedF88VGPQHK7LS4FlbJIV1jQoRq6p1n&#xa;qqEOtSzmY7/3d8pF31XCVpmI7iBsRtQldT46zWMe77ahNodw8iSt4lh4kCWx0Qlokma7JhbwQZ&#xa;rWO3+iWay0PLnAosTPNHcgTbWXxdubEZS8usp1zybTKqPql+GAWv4cCNHcEcTsMI+6ukEkHxQy&#xa;d9NyS1L/PkRaSo1CruJMAuu2dliggrALk6HT6OfvDXKmtLkzuApnCCbxuuu5/r3cog+hvAg1lz&#xa;Q5nOHUiy+ata/AZ4nfYV6d09qmhuZ0i5/Px5xe6FUp0ee/1qZdn94afQ8Qm+dw6b7V6o4iveZh&#xa;0ywW6S9Wqkt5emP2F69KnD/rql1qty1ivG5oMJSao3JnrkYO2s/q9UfLEo8QBB32Y5w9Rlia1m&#xa;Dst+Pbq3uSuGDqlMtcrYIjt/RCbI0MfaQfmNRguUU7mGekLI3qoruiw6xHPhoKVSpKXJr9e08x&#xa;0Qm0s0EEBOatiLISQSwo+AofGXdplm+8lzVuI7P0tfd/gvimi5z09kiu86F0aXuoXcGY8jsywq&#xa;StW6UxnfkPeoWLBU11GGbkPUIrdW5pj0T8Vu70z7Gz53odl0InZ64SMBr/QXuqXYFrWrINmHLx&#xa;TzOdNdM8y5rp4CyRjVK6dFMjTLVNiUDzBpzHUAC9rnnpJSY81PtWs+jSJLnS9041uDFeaPbYu6&#xa;5Ky5m0howZoA1lD75hv1GfjSalRp8ri+7d5+l/TZFU3QuzyEzjKr2ROdlCN7VR+MQdtAmGC5XP&#xa;3wXJj7JZhwvFLxn3Pn2Pd6Zo2Cm9WWgfMsfDIfuhjuL3QHoKhDuCZBRJspzZI8esPA8qwQbitr&#xa;kZZseWcjRQpMuIhvINZCqMmp7vxjGudqPszJnEV89oiRzMbVUh4fxiV/tLOs0RqWtHjyNUeC8g&#xa;J87XTvNl/pnOU3rvX9g6zeCsOoaO9APvSv3NVknA+NpxSmsiFuIK+6NwcC/xnvmjJj5Yi8iKaN&#xa;gflIY0SVzomjsl0g+cujSRsrRfCx/uG3G7fl6BubYqlzxY8UV77FSXStwubhKHMFlLaBid51O6&#xa;5+u4Q2Zo4joF4/UrNSHhfknuLJdS1dsbHDACqPSDRxkp+YqdTHg4Kj5t9qIQU4u6rel9qemvfo&#xa;D7MsFJ/X1Tyk47ebjqdoAzGXddMfzoLGoQIM0/IzdhqZKm+AhD1D/d0ZDLJbFus1kqL7GHyZZy&#xa;vpMrk0XDdLTY5LVtVlt+ogQveVD+GBzmXPCwEWHHW/sq+vtqXO4L9+/8WD3q18DRsVDtxjDv6+&#xa;WvzF00Lg9ZMPUcU5gSDrZ109JtFMOILGlxhE6U+Xc1McIQiEp8gfDJY75cv9LmA3asKsbc20Ec&#xa;RnosbtfgXFLOZbvzFFiIe8xsUVcQx1THhCDz5AN7r3gEfxfEiR3MRyyZKcdDZmwA49IPLHBJqw&#xa;dq9RbwBBXzq0ej1yV0vV2cxSqylbHKushVH1BCHD2UeyM3c48WciXSkmpQCuxeatRFDckQxQVa&#xa;vF+1K6tEJbL8LW3sSrRqOaBlhTbg6mj5M96pugkLLya8CjP6wucLFv21z5A9g610+xCafNy8Ya&#xa;YpbWMSJd1TRaqg0fPukOjz+pgLL3FFk6DmIV2kSpDLaSi1eJWzpstgqUz7Q1rsqPcEZCWREhfZ&#xa;vhNX3pn8I69K3lIxlih5ESMvX6adn6osTc/4uKVhfv1ic8PxzN/RtDRR+QmBpO06wFOju6pGR7&#xa;xGy+/1+s8GVSbj/t0xg+9siyc3JWZ9WWNLrHPIx0GmSNzqBFUfw1doc50GrNqp1qJxF3uhfGPt&#xa;D1jdoiO3PPsypG7ObkLHIpSPzG+fSKS8YkZhCEn9clniU4mOJKAj8oi9u+wDJ1jdIPChhncEjg&#xa;W0gnqTARFl0SHkxjFezbagRdyqfb1QvedIw8ghhr792WVsRDmoU6B4B2XxFvwPI79nN3u+8ocJ&#xa;DKH9CfXO2bRHBAL+KupW3C3UEBjKjW2bbewil+hmaNIR0CnjZRxaAHeREOzD+Z/6PH1KjbHbHn&#xa;seH3JmPXa2paxtTwAmn8wrf/CJPb/ES+I+VqLFssVS31Rw78Q7nl9/BERRcsIVaKLZ+NIbz5jg&#xa;UWwaphBPRTOR/LWvhnqz8pBapj25Nqr8Zx6EygVxj0aPgjOjg3ZcdBPPocE9lTclN1F69/qcdi&#xa;GAlC3qb8GkR/jMyyrO+uR1oRce5hsNKFnhurEx3mJcXAEJuMjmnPC9gtjnU5Bn7G8NLPS70xDy&#xa;0l6sX7O6ztoeI3cxy0gudLOvc4LkgrQ2nt+qPoHmEUuDxerAtXMMVf+FTiDXuTf1BNE80zxdUY&#xa;of3jeDT5ldyJ+7+adHUSD1t4APbL8szgcUcPKNqyUhIAtu8gZaEKm2/MmKYfM5tRwBCEt6iLEp&#xa;U79k4ZOSfW5vU+pphdYbkfkexHiAfrMvWZm1V4H5h6FVJKOtmHaTI+WC6KJg+zdBWyvZJulBFQ&#xa;bEmJxSXuvvqO38hMX+fikmTLCbxDBe/rmPruiYLYmLfomL9nh7biaPnKY24TtPYH9DHDAAKUt8&#xa;/hBJrg4TrIGc1leHQieMHLSifJJatoGQkKpV8N9fviz+L71JA81L8xdClBWZ9Myq39bv1bm2li&#xa;XZuT24krtyCV9kM2lNoOwirfReqVOtxVDSMPFNf+dT+Cs6P8jTps6pC5ZW/MLO1IhOnsxcQrLh&#xa;XNH0fnhoD/KLSTRcmT/iX8J7HCQOgVCRaQPEe9bN5/WiygZs5vE9Hs7OXviDCNr/6oJsyIasFJ&#xa;n2TItuWNO6nmYhkWZJuI/HO7s7x9OmbnVFpYQLHI/Tp3wWymogkX7i0dj1gqkvT+qJ2NUJDlZX&#xa;8blO1FO4hWlGXMun/VWunZBXPmK0naCup8M7kfX4abKEsot6nTuj+7CrZ9/vWH87zegtGe+JSU&#xa;/NSQ8T72SLuTPKB1fIR+i+0O2tCAI010Zze+gDPadrPq+GnVxtbqo/JMS6iQChAO0dED+Ld7rD&#xa;Dk7aUhhzKxsQJ9suGEFCz/2bTc+r0Bi1yzxo4eE8EXJ9Qd8djhZA2rWtnatoE9j+ZRNqcwgXJ1&#xa;y7OTdEIGxfVoD0Q+/4DAms5uXp+UdcwB/qnykFjj/Wr8/wQDa//dB+RoAxuv5OC/gD/nN5rgA0&#xa;8vNdI4hEaA+xYW/O8wf85ztjUM7XF05QzvcXT5Du9xdE0NbXF0XQVt7ErRvknYvUrYfT6+e7QR&#xa;DU1xdGEBTB5NiXn9Dvo4A/tL/REIdSEG8jwfJdfi8hcl8GoUDF8u4jCAUS7DNA9dycOYJ+LWsv&#xa;zH19If+e+/5iCPLMHfD8/rIPev36shozXuvoaOxoMzRZ25RiCwgAfbeCQh07OPIrheu0CUvoyi&#xa;H5e+d5ocmbI/zPRjOZYY25WeL3Jc58zS29SS3UfsSd4BH87D1seE/zJ58tdHDvDO0WXnYnc434&#xa;EioiO+GpWj+yikviTZKJ2+AnxVd23p/dZLSEnr//thZxRtD7ZYT840cW6X8/paDT4v0PaxGe/z&#xa;ilUHJ0tXazdnSQdnAzd3FyMf/nT25oae4m4mjsYiYhrvC/dHXkadjqokmiB1DB2EHT7Ydseo2k&#xa;izhgD8gyFDOUGiUFrYJTb3LqJ4NoDDl0dT+sfqrf3GABbftV7VGulqYqPvi/5QXt564Zsc0egg&#xa;N42PhcGe9yveeyvj8LDAOhnMD32PAnpl2nJnNyK+bw0i1sAYLFW9s1mblmksbxW6EAm3RAxCjc&#xa;SJOxuvwuWTBLy2wWwPlZoqvm0vUitpuMZDyRdbrTbYH6wbvVpkyAoblqaxNUseCAl0s9J0OD4R&#xa;Lb41NM8BiX9dqX8ieMMWAUNxHevtHrpclH3T0pL6dzOuZFGgeFnTXMUmPFw9wWySl4ziXlSjwg&#xa;OdganoEgvXZTh0VVg8FWrIADG1V7L/RhgxWCWO1CXf+RBAP22JhedJeRdfnVtsuiwCIzsjbitP&#xa;kwwS705I186AVRRliCIcM1ewZKTrVs+Hn0MOOLxNdTmdxfhlqxHlsl3cNEExyEf2y+labyQRrH&#xa;fp1AGNrXzE5UFUz7LmXhehaROezae8aEO/2bSKxEjBMjlvYm4dyNyE0H0lwA2uSnsJizEM0OhS&#xa;h+VNHSGbzgMbQKy0/o4mfEPXJZKWZwmOJYdFwyqeKcIl/ZibTEcjN0Aj0qzgxdIdzXwnaUCGex&#xa;3wjQKOi2+iY3FIDmnKM1C9Fe+u2XKGoSQJDEL3v/4owCrjjbS7ksBYlpRGUXCeyXusRlTvWdbI&#xa;7pcCoKRUa+BYpzDql4cFNXhbg4Z113mwgSmVZdX5BqXbcxBkXRVGY5DIbIO9z2Ohq/NbnRK+yo&#xa;ffhZViD/VZ+LuGr1eiiXHSM7pIzNyAWjNsC+2MOWmdJf+iRBZ5R7VpwZ8MSq06CfOgwBWLfAiw&#xa;rjD+1xEWlHyIuu5TPze8qTHiUvJ838nVN3pF7JymgiZadXnH1FXWdP8fkvFz632cxWW77T2fji&#xa;iYvoNbdCEST7YcaVzFM71aWzXABFTo+KRoyfFhsDH3xaUfw8/HyLlKcNXp0Ntto9iWz3xFAmWZ&#xa;rMinLRn+1TrKQDL7tQPTu1tPi8pR+Xq8zTcUzCGcq/u0OaMS4rdT0ZBvyq0ro0T3MwF2RuoOnV&#xa;zHviPMF161iuvSVuKbYj9ym7zPWEtQu/gngziYQI9ohgdhJoEqpyaod0A4kERywRwO9dYY+2Gi&#xa;+6WI8VWqxDr6nUVdEYSJnA01Ax/B4mM3Ue+nKas2fHquHYtoEaxVjb+ynZZQuDQXV4xZLYvBj5&#xa;/MWqVM6PYxfN3lJYyjTuYofeJcPIEzjqqk5V07+8Ic7li9t/uDOAPDCDsHPymYotk8Z5FhauvP&#xa;/LlxpXqh+BTypA3BAOSB5mfa0j0VLPmCS3M7Z72/dh5V98D/cieVVRXCRIQxtV/1LJ/pziJeQU&#xa;c6y8nHQ9LMzPRIiZ3RuEuInWjGWN6WQBqjKfBaMESsshyQREAucTOyIPJ5SladxNRb2T/4r9lu&#xa;UWE+VDQHJijzST4ZHwHfNNQXIi/aGYC2/MXwYUMp+/sZNzZzpEOmvtlleB/MTyBtEbpOsQTfER&#xa;QR5scI3PQ1z8uuR55D7JDY0KpEG6sMYN10AjmfEB2YEOpkI5ToNu38aQ7DLAMdiZ1/xM93dPrg&#xa;86qi6QOJD18GukMFv1jq55RX/g978xNwkaRxm0xX5ERvQx6EaVxVYHFSLN1RrF+5dnNSVRkXYN&#xa;o6kPry9S5zHqro7bzx2PTAwrn1gNGDQxThvq/H7yndBIX+Ki4dQsPZEoOorksVTt5LE07+TvyZ&#xa;PcwnQjmpUOS695EvgGUe03hFHqIq87khprisSOhOqYfN7vKe9LHCaFa8a6v+E35Bn3fwrMmD+g&#xa;J1kF8f0jc5bMPiYE9CqGAxshvbZM2aXVnoT9jkrHe0uZfoX0YQhBlpIe8VG1Lv67ZSJ4MwjdC+&#xa;LHD+3/aJnIUyBT+u94J/t/w/v/AHmrNpyX2ppzfon/dvVKWksXHQhWbBJLwoqgFjJkKHgbBQmh&#xa;RSt0rREDc7pmNV2LRSudh6aRyBZ53aeU3lbcTQvFA9iWs1Pu8IiRKcpW1FaLRw5nawon0tn3OZ&#xa;n9UvktmT0+7secQPXaZXRQf/3vPB7L2SweNtfT6axmvwOsgnd6lFqM7xBMT/iccBHHXXaynU6R&#xa;rsxZc0+zGIsAdkdQWnJw7zspQmkJ1onrgfG6YL5pNWWSiEIIqKfO7STT5L4ZG8XYLnCGFpQ2GR&#xa;foqu1NnKu768vbG7RSyamydthFL5Ge9toKT0m7HGKoLuLy5HCT0Wv5U6RscStzi+6UcBGSLAaF&#xa;xKqIlKyium2UZrIUWQLUY5kT1s4e4jloq8bGJBC0vMmF6caoNlvijGkkkdUmERZtuQpe1sQOMr&#xa;5UNPTI00cosl/bhTy5+HRiMqOnM0XwamH6SROd85oXdxFhdYjCJkQa2Cwx0rZa81/nblzu8vBB&#xa;Y700efJYjsjL+wU3IeW9IZfpA5XxZpRoilgzbX6CMHMcnzkvW3Sc6QzlktNSsE8HXmysA+tVC6&#xa;Rdk6IYLdjxQK6blfFCCkIXlZJChPfr3weiYBt+Zi1AqqYiYHs3kGoRzXavt1lgdcmrxfnsVjQC&#xa;byiuGm+tskWthLaqJmzbPCSXv3gRNo5d+mkIzTgNFFddVgT6RU57Qtg5scQWw8+TPAuHzRMBJv&#xa;tsbwE9jwMGsqacgzBaqVmCQ2XTHTlQrewZd0VmEDKup2mlWDnPzt6FeFRa6UYtrP3Jg86tpPAe&#xa;g0e5iHPc2EWSUZf6dExFPL4aw4OPK6dUGcr+V7HH5bJURhdJpX9PrzPddVf54cg91wwKC+5NYY&#xa;43kacNewFmQypjGzJUy+SiHX0BVzM3BNd7iSvBzOrUcnuOR3OfwPrGoROuDUOUAas8cS6BqEX6&#xa;yq+fzb8jktQGHwxcaYTGVN+BVo3fWgvHOPahE8p0J9eWhmcSEinebOl0HoSEshbgtS0PrXEcn+&#xa;y8P9u9zzVEHJZe62EcW0T8lqMPb8GE05IT3WnK2kZi3t1e9uOTFmJFfuFsKMZTm5F+fdESgEdX&#xa;pkLaqMC8l0/0B7bJLEmr/KzmDyMjxC2lRw0O/LsQDJbIHC13shd4fj+7cwAmDEQxVv/zPXF/v/&#xa;mc/KO+66sd0eUJGjH+72jSoNaSPe0ODAKuug+SypwSL996qCnYYlzGGYs0Ll0527iDUawbRcwv&#xa;46vtb9hvWt/HNS/DpIc8fAvcXkPIJ/3cpBNGbd3ShZ3Fh/4BC6kVDYjCVcfg5gUb/yAIHg4xgD&#xa;t0QEQ3I6RDaTHdgodFS19BQAbGB7KsCnbleitCEk5g40dE0ZoarOrFq7cNBRhSKC0kbqgNJAe8&#xa;DY4XzjLLPM4b9jKblRFzwoAfJBw2Njwmq9bwPi1kDI5eXNzt7Z11zM3wrPtr+53N1YZJkkleOx&#xa;BWpfuTb/Owd0Hh2tsz0LKmm4HQMca4sK070FfXzXatrjePYEGfYH+167MTa2tpZTcK7fKU4WxK&#xa;jhhZ0/DipnCem/EXj8jPojliRXnvHk/uAr5s/HFior7YcChXv7XDnnrEeo0LV2gF9o53Sbt7VO&#xa;w0fCmEbFGoCPUPNMqDUev+VJ8R05JCSyg2bvIkhlMlF3rVa4haroJpTIDLexL5GUG4QQQapEtn&#xa;bNb07QTi8W3uEaI445vrR0jEn9g/oLs46hcxNcMc8OmsHekgDvXRJWC03xye6WxaA0YUYEKhlJ&#xa;AgkMKQJJDGkNXYYtg1Fg0A4eahqupxHhPvUY5sTtXftHvHrAOfX0umXqStfwW+wQwnhEQQhtQH&#xa;WuBIrHzHpt3Fv9C+2YgGiGyPS3wETf/Sjgd2hseK/IUcU6iknSqc+aP9T5EcYF660L8U6HVu/6&#xa;FI46WiHhcwmbGxBdwLqctuKOdunEmyt1idpoo5JWZMF2+OqM2hypk2ahlYRYP9xofDnL6I1zsv&#xa;GLLVs7W+uE7aJkEbPtg20malpbiZkpHwExoqzWHKm64TK5bAEhfH0EeW+q3uZOwpyGVzGjM2WZ&#xa;UQlTNSl/2H4pe7g4Z8R9igLVmRBkZ5fe/jIz74nINfe916NUzCvNezDX6h/K9YdUbb40ZGpAPx&#xa;/dSzNxyMqvmk4n3mqxulu/bn2G4l3PpWmZuLuZhNEZ4RqHWeq5kDunXl3qAtS0GJnnBtcjqGca&#xa;ponUw7jSfhrBejX4zT10/Cl/k+Q06ZildN0x7vVcZZZRYzTcvTEcOH1re/F+KGXUVHCF3HxWCy&#xa;WA+yvKdUvNGonEY/SwIRsC7aIBDw26y1baq4DTxCJ8UXGKTCw4G+cur7IPshNvbi6oXnnhYzfA&#xa;s6cdFlmXQYH1VWo7lJbh41hbBqb5fQi4G49RzqNZJIgzETbpimeMhxI9v5ysOkHtBNuvQi7J5u&#xa;IQ0wdLEWWojLlWMvW9pkVr2B8Xqca+7WD60u8f0KaHThRGP6+5iOfS4k0es6HtFmrNnVOuhbAi&#xa;Y560VRJyYQEUKXQeIZ68LibgcGgH6ORll2LzE5N9ti+ZbmQQE9P0Yz3Ek4zeTWhWED3PphUBju&#xa;OjCAEV/JhR3Nsc/75FmGD2LbPzvU0jYTSvVDiDTBpUx8+odEAruvY1ciZBFDzgxGrS4ezjraXN&#xa;yJ6umq22ipbSJ1nldu50MpWwfx8WbUHKcQyZu5tXFtWLVsR3mYrey67qA7RQ3bi8/bI9ifHxzz&#xa;/Pvdb73Dbh6EGSZaWIS/p34h9baPB7tHEhJVVHeDMi1yfLQ2OhX+hdAhVDin080FpPDJA9iKoH&#xa;T1ADG+xkNpTjWeXB1j1gyvaxwdaB/PDNFFTo4lReS5VyuQreybm4XFhhtK2peODpVyYUC87Oec&#xa;2SWNHi0BQMTEFoIiqVN8MYO6BMarqQRG+Y0NIvic6rZw1FnN2opgnabxJXTrvGiL9PUZLrp/cc&#xa;qyrO/bRMyqAbeIlgUjTdZ704lGMZSRhVr2BkbTNPyAnLWzaqY9vTY+YCT+uQ5yrTSOsW3BvqMs&#xa;zmG9lJ06hXO2xZvNDvEyShqPLk7G2rSspdHMFZ5TceMEMOqpFGOeAuBciJDhhOkKb5OS1SMKs3&#xa;96IPYO5aKvvMOr2FJUcneyWYJcDxuWZV8/UzcksSwY+mfl5cLrwW/Do0PSgtWvvLIO6L7DIjzz&#xa;AI3l1u5+u0E6QMKCpQWvXfoyhGiusD1g0YwZJ80jNTui+gQPERcltFYCsucTmk5i+Xu655ZcZB&#xa;na1aZGbDq1GcJXVLRrZTSm0F5pVdJMayadNU64q11y1Xlmq/Db1TbGphKWfHkskOnvbDmrZpfq&#xa;NRPBtpgV+r1FwqhW3SYodnpKqW7TFwNzygITyxRhF+ERBtmhuyv0sDlyi3x1q+JsphYk3A/RCb&#xa;JRCRbvbBEvXkOjzgoqoPCPc62MshL/EAOIsgWvs/EZfz351swSyVUtqZguj5fZ/BHS17RdHjzU&#xa;0fIrxpmyQ7ogCi4nauX4Z7HetnkhMGkRji5Llity9JB8L5wGTDn7MxjErKpYLk+IqkKlj/12ac&#xa;o9eXDB3Jk3310YeATXyqe3fNfiiZm7nwi9AptSNXrn7lM9sVPMaNTOS/cp2eU9lhDwEgLps7z3&#xa;b8p9VW3rQZAITQONhbwPwPWbayLSpWrHyov7eNYAp5lVPc5F32Cdy7SkgDPdtf7IfSYbqg1yTH&#xa;QJPqVz+1M8rtQqggHLs0AWDkDHbdkHBjIdEC3MXezzsTspwy/1GM4OSC9msx4RNbeCGR6nftSF&#xa;c5ciO6O0I6NmiNRrdd5wHtNTuf9wGIBYln5d4Pxgtq+IuLDwSS4GwrsvuKKjGVxiTv2SxC/sGF&#xa;et78hBPRxb1myMQVTDL/kT3X3+Eo1Frf1AhutEX5xKJhwaDzXR4nJKbek1hkV1C9JyLNAw7gz4&#xa;g8xAtXNkVbFk1bn/R6NGMyrXd9CZIE9YtiglnjlPXLZMNR4DyK+TBqwxhen9cY2yglG/yNNSRb&#xa;tLZwIk1TEY/3MtZlDnlf+WQYDKpOWtrWX9flv4p6r14VbVzVLp71GUhwWpY4XIx1nOsxDCRT0H&#xa;FAGbwgb39wmMynM/r7g7yXecdUmjk4mOGAntnh2ibrBXdJXoR4YMQR+YSQekyEdGznO/MSSOSx&#xa;meHxmrh9TfaIxK11HLAozVzFd18Oc1Rq5KWa5jCz1Iku+r6dZZHtFD3vm9kGHH/U/KPseDT86+&#xa;u/1Pxr67g0/BPqL9z6K0ZPoY4FEKnG7crwBVbSG9VUPNVce06PTJtBMA6zdQQGoTQifodz2sO0&#xa;k80zzpb4K3XZITUo4U30szpY0iGqJsXljbPYKtqSXFeVoxLlJsZQ+myc5PaxyBn8aVfEG85wY+&#xa;YfnlkhfyPnJe56VaMopaVMUoIwRRzWhUoLX9rQrDN/tffC34BlR/awyqkjaVyZwpWlEpJoUuMR&#xa;STcLErAnn8AQGoCH0KrXIEFX8vY/LLCsDnFv7mtgX4WxYUkdZ3/hQM3x1tBlYkahpPxPzE1WR5&#xa;OnjS2rM95s+DBhZ9CO8MpdIEoAve30Pg+2hvf8O/EajVhPzJCFBGLc9IdYUK2Q+cZbV8+YoJkX&#xa;lCeCH/m43DTSVGjM3LlKvAaz8H8OzrHm77IdcTS7kxGyMzlqtHqMxxZsKh0LSSpKbMp53KOSjQ&#xa;o9UbcDP7W1sZS+otjAmXX/YVsrYp8VuVCVcmZlmbgoH2JyNkudth1YPl6rI39aV9busXT07nk/&#xa;0I50aUvhFT24RCjTEdpx2VR1HvekPeunibydpGVO+kwTUvX2OM/YhDC5pva+96nIdJxnq0fSva&#xa;lhVT24rCNUebCddWlL4Nk0dz3rrtP9Pa0bqnDa5ftE0eVvVovlgnR1jwESIxyEC+IQugh8E+GA&#xa;ugQSnM7vwFUSC7JIs//UhB3frFkGSAiWJU5HuSZnclqAL0C2SoApdotkGEKb0pqAKMUYrjuymo&#xa;/nKoBY9RrT+JMoZVUQUYxgRJxvKThhVlgDQ8L9YFWlDAGkU9JKB3wTo0MDv3ESDm+CFGN5/hZ8&#xa;I2n0ExpOl3KFFYP7m7Rv65RvHAENVHssBF8ZEutpd+zofqr1l8Jw30jwogXkDyPyzvaKVY/4fz&#xa;BjKcsrVE+Eqb72JQBtB8YEfFTxSNtYr10D3UDoIMZ0+B6RmnnuP2ZH9xUPzjLn/MRe3UhxifXZ&#xa;UmxLzNZojVINX4zkZb7Xs7T8VeFf4BXaE2wYNuR/nLWvT17+dgfhEIRzxIP364kfx3JX6QRv0f&#xa;SpzyP5S4gqOb8b+UOLmhq7nb/80r51/JJ9g7VOCUABSn+0W12oxiwA8Jq2qGBQ25NBVQ2iKtFg&#xa;6CQRCJQTneLK/21d1P0Q+FVrjGujbBlZU/lJpb/hag5Ki1gsfTWWx75oGf3blf33P1/WBeYELQ&#xa;1wpzEyrW22msPJde5ZY8HpJ15L16ffupk3XXK8Tgm5b6Y51+DNrMNxtmvG/FRcKFW86WKd6WOr&#xa;NZJypNpCfp9nM6iRPC1rJrwGNglUTJz6vonNDglqBGwhBA5E8wY+jrBEvGrIyZ3+6rrgy+nCva&#xa;7m4+l8nTvjQEyuxwLe6pqeF+XUbpMqIvsWSJ48sj1JawyyX1x1V2Mj+nTqyMyRmIZ+HYCVrtpn&#xa;w193/69Y49U+WhgebwWpRlcMKF15xMgKxx4BgZ9jyJ+CNjFD+mMikLdhaPO2028kQjt52vg5NF&#xa;M7fBhPXyVJM3cD0FSpuSM/BUXEt7jlOSeBgknz4HQWS7TprdT3pVEITv0yxqFldX9LsiTOBEkC&#xa;BPJMq3i2u6rDToFr56J1k+1akDFfSeSpOxMzlj+jYNgq126b2PZt9aSRuJvAX/BkBeaYpDvYg/&#xa;8L7AiUVjBKEMa1MrYqUBwn5zJnOfk8HD5zrnFbsJnDpdiyObVW2VbipUKSAonp9LJIB6NgTvQL&#xa;c2rPgYVCmxA2HsNMdWbiFPaF0IHE002Xy/GdITkpecybm9dHngf4X74zdlBjin5fVBuvnNutdl&#xa;qkLwGsPZxa8xBBHQsfjWWWdY4Hsa195I/7VdL6t6A0eoHh3/mOEhFViikiOWqF4prQ2QWSmldq&#xa;o4QF+q/KBTcqgPRq+8ePshqgx/KBocV+Vbneu+Unv5cetuxlyczFZlSqbDyRzJBvqARUCBOwoO&#xa;xKgcIObFrFdtYuLPcYs9KqFuyoSGrxdZeWBRqEJKsfuI97s539A+SbZI0bYcxUthW0zLhTn2sp&#xa;XcTZtWnxmefH4U/RLpzT5RY+QdgXYBN56qJszJ55mZkzRyadEsgEfvgX6syfEhBEccK0D5bKbd&#xa;WZP95YJw9YaOpa4949zW14OCkJGffS7MeglZM+pIEu1Nf94RpKhGwJy2VTBUBZibQGUrLQk7Uu&#xa;7YVzCRAOmjbygzQPlwqKPVVlmygkQn8HmXPYJ0cCBe1a35zv4M6i0ox3GH4V7OYdaX5Xjp0KG+&#xa;orIbptfY1WVLZ5CcglNdrM0dHgWtQNOYOBwIstesI/BIEzRr3vOHpTDUVdycpNswDZ/lWco91q&#xa;64Pj2hqSZekEUd3JcPBbRV2tAX3ki2FMfNVZJmvp8IIbqfOX8nO45xYw/5cTKZXlkVV38KGrxr&#xa;y8tsH3RtFWQrD99X4RZt248hBqh2522Hd5xBV2V+xADYBbGsbMRiX7B90533UV6wi8IW3qH1p6&#xa;Recq84EZ/d8Xr9o6C48QfBetBEArkx68jw4FQ7CgZ/4R6Mah3xLOyh2x7WWaMEvpV809XxDvfL&#xa;ITbaeiEZupoiK2GvwQAhAU5olA7q4Rz9uKv88R/G+uSmYx22wCHe2Xs1Lcl3eJpPeLoUZFkpKA&#xa;NRW4MSOoM7cCr1Uv8hQzRFyMxg5t2xCVhtKloNJPJ0ZruwABHyxtilGE9nzqVn7NpLN5wzSrZX&#xa;pzZbmDOs71zqCLukdCqrtURziY1KDN9P7JRHPFnsiNi5JpiStczDzbs71VE3DXN1DBDdsuKmMS&#xa;YMoxiWT7wuwMWeT+S7dPm+4PVINPdfKvXhJQykh27qP1HyehlKAWLhB2PM6c7mbyTb0lUG/REm&#xa;h1h+ymDeT2gtVuRdIHsfx9BCb1v0w3fL40WR8Xf+Kq1//21fNnX4e08U4scPof9oiaDQ/M/7r/&#xa;8PWP4vKxl1W80tCeReWz4UlEMKwnB+XKkdI/DhAeslKHKEDpgybBGWMohNXhGDLVIJF4qs1IJ5&#xa;osU79guSUh5/P5vZC8dJaz66iaDGFAATnbXny+x0Hl9J/9/3Z88fXPeRxsz6h3Xdh075ei0CO2&#xa;z2dPmunRlsk2267l4yoKbnjLxtvc059FcaLFmICuRiOKN2FZns1/xMF+pcODo86lNs7d4u6brb&#xa;CwL5Qj3OgKKS01Mdo5lCTgBxUTiJjDGznrxZG5BAwCnvGX+JViEef6urv3MEwVElOFYDMNtBhx&#xa;zrpu25w1NtxGaVVc7yKJJ1m1R/XHRDHpo6hTIokh1cy5abx8qw1D3DnGsFXO9ga5qcx2ByYarN&#xa;mNJeOlqKL1EN+TU8LvFELFIM3+Q5IajdLXXhViIpAd4L21U4GXnAAMjUZNUH0GX9pcM1X8xvri&#xa;b0PKUnHWblXtjGZha1VfgJWZDquIuJkkvcm65/pJGqBt6YKDaqmFYYRgePNfxS44jzY9bFcaKR&#xa;bvvBA2PYuRPjbl9fRnedBhuRExUeJSXkRhDWsux4PQE4wzoQzwokzw6bdGJBgzzh6TrBtLP8lC&#xa;ocft3qoH9TQG2gNl7NWAB9dTMkhAcL8+mBQ0yA7noq5YPhwtYJQw2Z2nEngVhD70nIYd0dgoJH&#xa;qydjsuW2GMnZeO5oyJy9wqiqDkvA3gzjTxjh3myxmynRYI6iwSE6Sg/hbCko2RYyluqxrpfKtF&#xa;CywYHM86BbSDwez+EqCGEXTGMJ7Qa5N66EtUhChSpIqjqS8HfU5z1NNkrR7t5n+Fd7WlS+zBIW&#xa;F74CRZ3txDY4ATlnNjzm5b7VSF2LUZLOxqGQlyznRToohQA2km6D2KMNYNyJ7SFaz3AF9I9Afz&#xa;ipOyysSNJ9WQg8ZhhlfzGKi48VjC0VpKZScrl1DE0ziSnBHvUb/pMIwp5yaB9AFwYpkq4qJUQ+&#xa;dmremFpLQgNcbqm8PQvdn0vcWNeEuwRqWF/o2257cMgVnQ6hqq2rUbKEVJ7ZZHXDzVHdU44FQ2&#xa;NYpC0AAQso87aTxMLQp7Wze6zQwdaAz63PoZ/CWc5Al1u3rDuZKz40WJG4ZDmmL+tF8SJVQcE3&#xa;R2x5U2V672uRZRoiFRkMSVuc12TFVPgk6VaYkt9EnFmlIKTBsmndenGFObOALaCLNN9eGRcvIP&#xa;53zqShWOSqUMjMHH6/J7MD6AGCdSHXo1/cDt279AVbRJjY2iCkqARnemlkI0cgYz3nxBFiiR1l&#xa;hBT4Zvrpq4PRELjAhC+NHSrKZAlDATn1uiU5XniUvRdg1Wd4YJ87G9ZO4wNLF95jzt6WcAUScA&#xa;xtWHegGZJn2tlRNGYrJhdrJRvOMx1WObQpKKhGJlQkzvf7pnesIwXHPxix0TfI1zaLqoOtK6FT&#xa;oID2IDF16w/qDqpFpNVlAbJj0CNGwBa7u1JvwcoyyXNMDbHWcqgaXjbCuzqYz0raXgOvomB/QP&#xa;wzB0exwEi7bxHPd5bok1tktlfstuF5sTvRu9DF4BdcJRT1tFBEn4TmDNW4db9RN+N0foZVhtSI&#xa;spcgybTiOqm82gUOGRoEn2DS/7gRory7fc0D//GjEea/Ay+hi/s/gMfxn1ki/zVSNXdzs3awdP&#xa;2/jBvJ/xcDlbT/CuRDzeWO/Um5S63SKgEtHGtkW0vNIFaW+iO9EN0uB3GIBAeG7cJssOzV13ar&#xa;f8GzisFEv5d/pfUjR8/+NQtHNPEcFonH9XR693PrcysjJfDP9w3SD8sHMlHWtLOyxdSZ91XGIY&#xa;IxZtcyLQ0mrbKmGV+67mZUbFF2S93VR52mwqxOs8lPUpJxp8kmV+md7DPvWj2ZDxWPDbdYinz8&#xa;U8p2jog5TXZcbMS7nwI3v1hya6Y4YIwBAk8aMnTo2LNjS+0t5jNPdia3mGt5f/Ko9PkS0MetzK&#xa;Cx7KvH7SP2kcqqS3KP4bZPy2c/cXRMKCRd4QXU52XKUFwHTKRKbSVmsWDNthumzcTTgWV26fSx&#xa;Zdjr9O8BC8wIlkHGhYx7BYfqawgAKfoxggHRUae3QntbdHHDnisL+72vmnNyQ9L3Y1Px4sMfiJ&#xa;PQ+8iilv5+u0rI4tWxyPmqDUjyvtKf0KLjE3gUgF0gY0wst82kjnnEFhmlsvwDSyWfMQ5uM+iA&#xa;L4KKtCi9WqFAd7TWoDSA05n/WsbnBdDpWqsCT8DhVaktnhfJVQymDw9lQykjwiWa+DjcIGSwJI&#xa;KkMMUdTr5ApacyHyNh3JQQ6aehhbPDGT07nz0UPrzfo0H+h7xnnJjJOj6/4JinT8dTwhIjd2iK&#xa;1WDQm7am9k40XX0/m+YAdOWhSYP6KQoCEPqwcanlRwJ7Sso4cQ6lzqVbusc6E8/Q+KvHvtbKFY&#xa;LUXIqc8ScMBknFJKezOLz8aLu6r7uHjbuEP05XSHXIrDHolHoFN20X1RHnC7Yne7sxjg6N9Iqg&#xa;mmAUz32pO4w1LkkxjMDJeRu8rw3sKAuJKfwa9kvUbD3oVZ22eesBhhwp2SNbWSEOQ/GRFfjwFY&#xa;Eo6q6JEmH3JUKj7APBrseK0Br69GF5LE7PDU5dR9W+fmw0krbNVWafv2CrpnDyhtmojlOV5c1A&#xa;poNrF3tbXKtdPXVnjnoVzli58aHCAOQgodtgYVajozTdBwynF02sHjbrsz5DCvzZoSLMi7Xp0M&#xa;oVVjjetgZcPhNqOvp5JlZoasfNVq81zJ3QQp2Bgs0oA6STNABBMhjAo4y4bGc/R6w5WBXLQY6x&#xa;PVh8/yiard0KO9/63Zj4Hba+wt82e/1H4x2+4I4Cqt9oXTcLyH6sYiYS6xnj5mDVRgI5mKpFHb&#xa;gc/3GYqQHcy1kCTIxNybpuvyimoqT8UevocbIpPKUrb5BLVXo+qfXO9septrv6qlLeZ5cCcxNd&#xa;iItRkv2pp/ozhj47Ir8dJfiyD803dZF5QryxYLX+4oZXn973fKMraghLJOpW9XV+1bWoqJUk6R&#xa;vjphZhSSjGF2pvPpsYep85f0zZmWThFjt+iavRN9gDxJPqd6ibTCCvX6S6D1a2cwj2nbIi8Lmy&#xa;sW/YnxxU6ivkBSG3M6FZ2M3xME2+pyteaGfrVvcfCP+1KkwCQ1V5i+f0HbeAltQLjO/0NJEcKU&#xa;DsOf1cChZeI6J0wN6LsV5EMxATYGJ8Va55ffCBJjQygmN+xHaCI1cBiVL7SYqRiJL7Igx5TmNl&#xa;RZrYQrSN+CnT6j/SWub1oiviBVbSV0uyiNLGi4bnpYrwFeZkgra2dmfEu/ONPHPohnY3XXpn0u&#xa;ULdlfb7Y1KvEwin4CcxizKUyH4fEPgviQCTr6MdilCWTS6zF+boU5G5kIPG7Y5giV4m47m9JPh&#xa;C9E1NTEGyWiuMnhYIHXN3/mD7SSmwm/rgU/rHQ9Fh+t+wLCU+QP5klIQ1z+oFUflG8ioEZnO1M&#xa;7T/Rclm9ymgNhhKfha9Q0D5UtAQJS8eB8qQ+Ti37wefV+Lkf+nQN3/jwIVo9f3f5PB918FqpqL&#xa;sYOrnbGbowu5odv/HJsrWZubmv/fnmj9VwYfNu+/MviiIFplZBnn0Vu4CqmHQ6QK05RoxfEiJq&#xa;SxcS2cLERGAveRHgh0y6wyMqi60/t/ye5YWgSVwtDfn0x3Xvf29/b7a/8rgu8P4j6Y35iTQPOs&#xa;ve/EIX+vEW9VSc5ochmuh7a7XLXQ3ZtvgOEZ7pyt+VKdlp8WqGlkOv3S9q50hnpJ6qwXE2oIfG&#xa;i5uoytRXB9NQbfjaw2xtACl7cPAG+bNDRcNI4SoCXwoq6YUPRKjkTRwhxm22vWgTHnULlVdbbR&#xa;24pQx2P6zBX1QfevAGqd6PTOrDJfANzGJTWWd5Lu9vwbtqhvP0PPAqv5SptlXPFE4jRnbC7WlF&#xa;nulwLRZHJf6lxK+Ds8mO/wPH8dXhfbALMz7V7CA23j9PyC4aHCv15mdQ1RMchSIEoeRq2M9r1r&#xa;L0jtUr4Dg0mVF8IdcED0jLC5CQqmYIsjJ6APGCDOUAQlN3vhSSz123EcLP5q/kJRPejRdu7gsE&#xa;U+AIw7lhLmFnEwOfWQPWgzi1PDa+K+7RI/CdtAM7txHKsPYgCIFybncRy1OJ3JzeCJJ5jdKLMp&#xa;4FGFD3UG1FvaTKCtAUEKUgtkmWXuU35VdWnSfmGgFJLlSHAtr4Xoen+iy1u9l02O1z/PsaR7hF&#xa;/E9I+3k/PO4i/TSd0JR1QJng5SKu+5wNKYZWZIJqdU41cTD37RYI8R4JgW6hAKRsXkWlzozi7H&#xa;/8N/M+GdYnzZt8yDHqtwWiJVBNX1dVsI1fHxzGEq2M15RhmnbJKAzb7Ue5pQF+SitRXPQ3dhSo&#xa;W9c1jBodxYbTOBoYg6Wq3f9g9OCbQ9htX26320Uqw5s1niFT5vbq+2mBXoa0DvgEzCw2r1Kp6x&#xa;xbhkPsxsaN9F6wGwqgOJSXiuw7Ewd72HLh+Hs4ZskwclCn6VxKFk6n4ma/C8nZawMcdpwoRvAE&#xa;r0xlNrLL8aRIGpMrmBaYcXaBxqRyxpMizhIdzBCe9zYImKq70j9AbVcMllo/vNNZg72iiPS6JM&#xa;1VmHteQQsSjmSCTbxHCTzUXxXcawSJzwTbVAlmb7l6uuBtebiLlrnO4febuFIcNV+zxGSoShgv&#xa;+DtHeMsmzttjUzIkMrlGHbtm3bNlbYRgZX2LZt28qwjQybGcxQ1t7fd05V7XPqnrqt3f/zz2xt&#xa;zqf3MUZ/x9u8JDFRLewyUBK/2HBVS6wUwU8z7tbUT3QyFVlyZ9UzxSznGwIk4iBdIkAawgOmiU&#xa;vOP/u4Eu3nRgAn/OHGxeelq8TLoGESMZA2JWeBVBk4voFRokXyDaVmn5YPI5kEn6cKOlkrZMJf&#xa;+D1xb8LvZLs8nCJ2hq/5NyC3cr58W6CPYSHcZ84RX39EGn43OvwlRfMb9fUp/hVyNWhthPABI0&#xa;S0CvyJsfPv66d50TfYkmKQpGHe7TEL3pD6sgYxXuAJSfZM5ec0pUIBtBdDnjCBpBBHXwae7LeW&#xa;m2jeFeKr69kVDI1lnewa+Leqm8hWdRP9ZDd7n1cjXpHs91pv9pId3Ig6wuJIAgnnErfGtrct08&#xa;dLDQrkt65N/cnf8Fgr+Ld+uuWgBCyR7q2Gy6SXqKmUvT4VMmwGJEfrxdKdiHWK1VZI+wbK2pt/&#xa;0U/42+ZKAg17xPzJUaR6+zdqGRW+f+v1HG3D/A4aNDzNd/tWIihtfI1O8jZ3YlDYLlJ5dEKFNK&#xa;DLjujeK6FVWArYr5ANTYt2KAfvK3EIF0O7bEeT+ffmG14M99XZv3zu6j+O36LZhiv+v7nJ+f8f&#xa;bDX5O9XK8t9jrSn/d6yVLgTdUdiue1PlBwKpZ4V4c6gaHcpcJlZkq3waU7/1mjwnLv3Gyk5Vz2&#xa;eg/9XfVtfP+7daXlnfeNlVxjp5EJ3AX9y8nOrodjnmt3z617KDfuP3/rmk3KMUmZljPredSqxY&#xa;44yh0qGrxmlpdzQK+u3cc3wefg2q1GqZ5WN+WCzRzWg77dVjVfLtbOmSbXxIYVCx+Wxx5Apa3n&#xa;JVSnKZuab8WPpBBevWYev1bUWmOP6QQl47tL4oiH82pCw/sKABKqGAH2dSb77ujKHWJUnTc567&#xa;gCSaAgRVQbnsbqYx2Ndf1jE9TSI40A8PWomNLOKVYNZfoE0xdtkwCbf0jRspk0ULYCqx7jwUpU&#xa;b7MQTM7NY3Kb/hlBviHnFk7sTInI0UbHRLNfUC1eCzbklflKisOL4E2F0kt+4ALxsFzW4oIosV&#xa;zw4rzEUnFtwvYUgDTrA6OSDYUzXnY3OMQ+plRzDYOBMfCdDpr20JRX9ksNPAh7FmUWCXNHQYqV&#xa;t5rBVv5jexAG2ImdjQxeCfkxL5zSO+Mru+ZveH4QjTfIURTt45zjKBdAIRmWuJo8gbk81Nz/VU&#xa;LNFIKdNEoqzexZivxA3zn9oNEuNhOH4VgRjRSdPyidi7HF1rmVdihGvzI5EJJzZSst7MPT2ysL&#xa;voFNAuTEKuy6LiDm5ZgJ1fZRq6Nh/kabXXKKX3uZa+Uw1QcAVUKkc0A54szHtinCXT3IaRCngM&#xa;vPBb6DvvVsrAaLlEl+kj+9ntdZch9FjRh7hwRy+wClKfqzcnMeyKLuFnePWA8HJn5uuWEtit4T&#xa;wGgcx7sszfl2hm9nyxTD1FxWlbI3/9YBHj3FBD0zNTSlM8bS1OmmcPi7brlq3AGssyPmTe46kV&#xa;VnfCFjU5oK/sj90/b220FJdyzprQWZyZuO7oKQK6dO6rb5fPieLOT9LKNcXapbM2elVwMKY9kB&#xa;CyXEYuBkiDeERYhRapO1XHnNVxmeSnKrE4Pb9aSJfopdBolu+9iZtxYehTYl4slzcnXeXbow9t&#xa;vcDSod+IYGb7xXVeHOvTlvMta2zT3stHAauWmfD0VO8QYYPob1gvvSWu0bdgDig61ZOZKJX8pT&#xa;6m4vIWnukL3piPlD2a3ID3DiNlL9UJX/wVlo8Xe84aFw7lmm2jqu877cLdE1CDYCMmejzd1Bh9&#xa;ftJjDx2aLndI2/vQJsDZn3YrMwON+9no54npkhLLEbOWJM2euPxasznE1WTwlD1XSFZCmjSWMa&#xa;JpnKzNwLxzTvWF9G2E+JS/xNA7w0fJFN8hsjWPO0ywI+cnPGw2xBxqPrBLzop+jdGXDX9YHkEd&#xa;f1vb3tYkrIjD9B/ZkfrwJFsqE0O7axEsjP5Dt4OyReEF4UbG6/RlNkoSZMGYH/w0fCmeCXkoJw&#xa;Q7kfGFPF/F5kHkj1S9KNsx9QNQJeqJokXL4R3zUn9YGOdp8faLZJAUWUtRs0c1592Xsa+3wxFI&#xa;o4k6f1Shtp1Nu33Avk+k3SBKo18KHkI4Qtbt2mQuoQYhIRtkm3aJZVblkIYl/cKDryscF/WOlC&#xa;hYlpNiNRDiFNmVhnDjHrTzEJdZpR3q7+x9ctjQpPwNK2X4wQZrWPkwgnG3gaO415I7mFvm0C0H&#xa;j8ItwhVD/G0v/6SFtjc8GuMFgHBHrqfVHqVHcQdDb+IGSKNgeY6Xpdu/ggScx5pp5P9m3kA7jL&#xa;BdUuD7DuiERvYw1IuyHrHVi7LKPlS2Ax0yTxOt1+lPw1oDUlVCfUDQZMYBdpm/eSdIQwb9YSxF&#xa;4IZvDl6DyhS+u+V6b0Sh9kT97mtIOSQReImClyAQ1h2UJP3m5BIkJ9gR5iXzjlkV0CYo0SSCTj&#xa;jcxiJ+Te4njf6Q8yJNhI7+c3KJ5t9rYCHsN7q+/+WNDf+Rbi0P4P2HN2b5XzRvjc3cje1Nzf8T&#xa;+v9tJ7j+342MbU4x6CEYLip6ddrWcmKARL26bgt9qUxCwIoS3QYHPgWnGdNUcRIg1X999TO+V/&#xa;VKpLqKUNGt5l8DNksKGBT9W2fL4x2Xp/WT+xnBP59P0AGLL8pESVU/vP02klh4j15LHbpmhObp&#xa;6DNiyeu63HTt0GoqdR08ncWCkU4znvU8rLh12XN+2zLwzc9JUK1mzerYS2tMSfDjSnshjLVhmr&#xa;vL8Syw+mnrrK6Rzy2zebEkYzC1LszPKYyfUAEuFRGPMafIWQ+d7OyFdT698AGuMK7fllJqU6oy&#xa;H1/bVd0hVX6nXpp1yPCDW6yaz8IBR0iQKVzA91P7r+FaTd9uANlS9i3tbpaOEkY/+7sfXCxadO&#xa;r9uM+9KPRxpRF37OVJYBPEvbwpm+TFOxeDPwDDjkJjAliA4btIoa26NbfApN85xbEGbhjbIMYe&#xa;p7CBApjgnpRuIUnlgbC8h55DGg7wMd2XHRIwu2ra8tBQlmZSS/ZuYkcluzjIROLd9Ic6H3t578&#xa;/GWDC8s/4srlEkLbAKl01ZqSoe7sDiQRw1PVNrYzDDbYytVgR46q+UkCYcX9fv5cw69zs8pjto&#xa;9AkwuJLjSA58SlUZu3b2mwyIpy64CmF36UnKM2kg3Pip/VjLNQMFWgdGQXqCJjRdeWUle9lCXT&#xa;TTSh2Wqt9CrXl2Rn5D7AxABu6lmdcbeblP9zVfypIz67DY0DEgXCb1VBpyOMq1VeesVLv5BsxD&#xa;7IyR4/vMd4T1fqeK37K/t24nyefkh9f9Y+IclRS8mQfFIzDoCW7ajgNep7qcMKbtxjS+glPPwf&#xa;m2h0AByKJvN/8DopNVbLxPz9wBm0ySuyvFVjbjfqBwcFCif8m9moImNce0i3u9onLsXCq8JqBn&#xa;PUy6TrQdo0wuZwePyJpyUi3Eb8JLqYkGZEv3EsEzWs8LMQLvXkr3YbWtX0TGxtoLJh5lY7tyRG&#xa;3Sfex/gNatsZHZkWUBWvE8tXudNMleiPFpIfrB9HOjTOftwbEQGErLTrh51IPdSojNlQv9cvLj&#xa;/iNfsox3Fa58Y1f3bohXoXCfQkkzTeklpdjT9E2m0nNrSoebddbUbP0uZoq1o3q7frWSluFEuS&#xa;xEub/ah0BYXHZOxyiPRdhDtuYLXDuWQuwlv192XlJVRZNNduynQqBAtu1p/4rUT8GyENrfvZXU&#xa;9RBxI577QO2cm7YUgcxC7zcEcyN3+sg0xOS+P/B1ry7woEmZ4Ruu6iuX/TKp9xYMRxwo0F1qD9&#xa;2LP0ycW9E25Bt1l2PKEKRDER/EI18+Hj0vmMgcG1tMsOcJfyYp1WJMY1rckWFlj8gvwhGbJUr7&#xa;wtru07tXKfouyflDaAim92jSfnBsHgbmcYHMc4uMLVoVjFi8KNgychRSICVZAed3stbIJrH/Jb&#xa;Z/YUQf3rWt46+uH/tWEnSxrFy43B7UIvwJOiPipE+sG6o2P2q2xo58XwGdS9c4FBb33xy5eyIr&#xa;UohAE0STXffU3mzRzF9tG2FusD7U3d9UJPqY9aWwJWOwa60OVGuxDzSEzYXJY8wJKvAQVODwmA&#xa;T+4I8ANjgJhzLZTSrCqOrE9t+vwoddEkIP/dQ+RwVqq7Teo2BRFY2qB3I8o0O1K72/KUl/RJbI&#xa;Jz8LipeNNjoMPQs7iu2+62PMfLMOVxIb6yEq3/jXQjC83qX0vb9McvI/THKq1T8ByvO/AOi/F4&#xa;L9Jz+FLf6yy/IO7ub/daX2fwYV/g3S1Ep1naV4CFKjZQ27qAoVsnx2tKhW+bBxADY865lZUAnn&#xa;2wbhgkelfrjb4y+11XMH55ZtSwuheGADo+XMEe/b5s/HKcPvf37hBhj7MjrSaCY8viZTmrsvPM&#xa;r/dM/pNSnSYPHzmq7ZtOZXeSrh3GOYKFR3u0BQRLRBAtd3yb1gYDCvKmVNmw6lxNGBYKnlTGvZ&#xa;SqxOj/HmSPyFE+vA+OOy3LVY8nbhNQYfHN+mUjFkAXxUQwdHB/JJMCyzf8fsu/+OHpuogKblSc&#xa;lR3mKCUJaQpaG+sVZHpXZdHLe5JlGKw4RKalW35OFfXzg3WI0W2aCYgtAW2prXjrvtH/zAg/Ea&#xa;nLbrB0W4y7OsJP+Zag24VkZJvtniCNHxT91pabHaRipFVnP3K5Lps8EdCJO1MtNv0RD7a4xIz7&#xa;Tu+ruun39CEldaMLeh2sbweMYbTmVMq5DB7cRLKPQWoMk1G1C4Voah5cHnB32DcdK5vjKaN4NW&#xa;IRHLr+aFWCDwUj7ZZ2ukZw0X5sOG7Dy/Sp7B0hK5ufsEWqUyjiWoaX1E2sghyJ3SbgZttgaBle&#xa;yGCE2VknblRsqp8z3HcuuWjAeDQ98nWPrOup6br+p66vCGeCGEqZNkkwRN1IjE/0Rd4AzuRj81&#xa;5ralm3skBTXea+vgzMA2V6IhMHrYVZbcZsa2OTEEtjkaGN2KI9Np5erfMzL8VpGOTp7CSZL9em&#xa;HeVpmFgLco71LGbYN/Y0wW6OGkPGbffFN4dQNH1qY7jMMAd2qDAaLfFXGOSvjYvIHlEejXAi9q&#xa;R/k3ULHdmAYWzps4MD8KEGj+DdTOv4H6CyvzWmAyCf6u1EDZjMeV0sGuXeeWfzMDTmcS8ZzgTl&#xa;fZCMJGOaNtn5RgCWdgAKE1b6Pp8WckduuUxcSaVOKs09C9DFs7ZrKnr6pzKB27b+mBqJ7m2Sv3&#xa;5s7kXyz1K10HzVufIy9j/5ul+5kyydwc8Zjtf7NUhPO8PaYV4lh52Qkuj2owtr/XQhunvIJ6nf&#xa;HUitV1azzt5sTtpetHC/HcW15N5hW9JHA5T99EPiu3pnMkGUdLzxZs5QrQhFHD+xdLKXHhmv5i&#xa;qXdtmFjp1V8sRR6LMACkFgoc17dB2Kfoues5J2t4J1vpO8mCRwRt3tJ5rdfKwC8wO90iC8laiq&#xa;iTzv3+yjM37iDCnZPRbwjxKOb0nlgFd/nh5L+pMc+fIWNJsJuSt2QaQB4rGRRGHEjQXWkAmEHc&#xa;JZpdukSyZJ5ZvyYpJwenLjcWkTeLJhXFLvKgekQaM5ESFKuETMImnZ6e2jjuFzU7aGeuj/4ZzH&#xa;lKG8szLMgWDM8Gv2ej4I4ioAAZqcSpHjRmEwLlxEJUDGy+k5vnmq1LXJAmzUOh9WQdjuMfUaze&#xa;YwzlxY1+p1jgkosbccKxJDlgkCgfU6VtNxr2F7OxRu848mlPVhSUCNvQH3mR+xRgKNFk6sB7Ua&#xa;I2y2wTFE4DKUsEjGDs4Zf0yDgoTnCZyKGrSNQxTzPb+U4xm27RlVOV5zNvF9H2CAMD/UbL+gq5&#xa;FD6OSbVYJegevxwdSWX3ESd4MizEd4dN5K0NOUHCfb8dfDHFqnIcIzT2B2n2vJUX+4/uU0z45O&#xa;Xrm7627W72c5MwfSKinvAuy1EVHtjvql0Z/s3SxdIE7cO/WNoM+z8FvOj/Fyw1dXD0UjSxNjf9&#xa;b4GC/6c1iwXSbV9ai1JDFhHJFGnQAFYR90gBjACQ1NZ4FNBYOBb7UyGRGyubUX39hru8rTIV+g&#xa;a5lzqfpQxueRl7KyG1t872Tc9tfU2zbR6/Zvv6PsB28XotT+XrHDdzG7gUFTJjz09L53MWp/ZH&#xa;l/ZpVrOzNZiuEkegyZlAreaTbKuciZDLWgqlPX83Zj9KW7KXpvgMlWXdF9oaZUBFdXeHbvaOsm&#xa;6e/qtFoAIvyg3s2UxivRkxEfzg7jHQnghbU2VtFcHXG8fi9+K6d6nAaCiQ0Q5FsmnGB2bGsezW&#xa;PmhU8rTLzgqefruVKL8ErtIuDluWQpRO9S7St0LoVIy9w0aWSoVBEgbVCso9q+Cp0P50xhykq5&#xa;4gGLJJPObXBF+zPbklXRUqouHhOdGoNnFs1OxQwGL+R52tsW1coONAivp8mBkbrFuksZxhtgl2&#xa;464yGimWFiimyu+VpzZ3WWNgCsNN2zk9l1ahYpHcXZqt7dzObjGHO4cgjXUUiI3jDO4lidHipa&#xa;oXXFAGfgNrDZP4PjCnzFyG8ioFk6wCegKKU4/MM5KCIET3pahT44uTw00hvwKB/drwsDRqOpyV&#xa;ixJuKoT9uuBvfKJCZbrNVxlT1VrH+m4NQmo7Bc3z5HXhQUhR1UqfEfgZ3KnWa7KlLa2avRBbwQ&#xa;bESAvOWXN6KzWJgOvy2ldskuS6D+7tDzHGlV8kyoAieDeRzlyXzUAzH3vY2t3KaLZaZvhuulXt&#xa;6YWomVPQUKg4TR2GtCjKjiUQbbktzrS7UIymScPx6wHLaLzyXJAG8bk0CNhSIzQIDT8xg9Aj4U&#xa;yt4z7ee+4TFWRlZr41HA3dLas+QKeyP4SnrtTmXo+dvYX5dxzBZXz95yNPF3vUIirhKXEH2CuS&#xa;/tpJphvdtpa7rgLCiAK320t66khi15Ryh9qgMRch/yEobDni4gTDajfAng8c5Rcsxm2C0j6KW2&#xa;eRqKyWV8GI1zflu8bCkZqJOSfJAT57OIRqZrzv0hLk6SyRUlRKDVRaOkvWNBUzI+4hdhG/yr3X&#xa;eXweev0w81ZRhZ3t65bUKk6KAfKuKklbluqymPRGEvBqhGojGzmAltObLNbOAUpZm6itX4okiw&#xa;aX2tsrZ0TmWP5wZdYqo/DW3+xfueyy6nBIaMxjkztMjs9OeG1S6WIMF+GyX1UC/GnKt/NLyYn8&#xa;Gb9kZm1rY0BK3H+DKZreVm2UBns0+xmLiNNXuI0TVF7U4YGbsJep1f2HWYEMZEPa0rBVx4VekR&#xa;MVAioJJ3PXR7a6tmyb/lnkBMPO9rTLZoDZk6fhkJ/VG7Gc1QzbTitMfVoLQS2cwpNLuFHqF34M&#xa;EZp7+k0S2rQv3wbOcl/RkSF8/PM2noubXAFF8dYdxiVC/l0aUXirTBnsLc6fKzwuxJgvX5weLO&#xa;y2SLZukRzpZwnmGGQawRDMqx94mhWGhrwY0UHYLxKIJxIqXuRrL8rr0wIWPT60qosfWvwh6I4N&#xa;DAt09WiYUXZ72yxkHXjSTwm9T6xOETt8Ic/xv7BjX8t7Guj1vkH7i+jb4qJmfWNOiRAUbeLaHq&#xa;35PUUqN9J2u1cqe95Lmy606NIs3S6NU8ixdyB+ii+2NarFhfNJhgv3LVRwGtYPpkI559WibFsT&#xa;mmdw42b3AM3lN/XDb0eiJ6xQ+Z/Zn5S/j60I2V+RRn8CS/6Sy4+/tzAi7YD4P9FGvJz1v0MEL7&#xa;yPgGVezc6TKW9D3cVkId1I9xazvKQeI2VQvczIFz8I/k3fHMl2I1LIL1+a/jEmczLI+Ue7F/8f&#xa;9BU2cXF1NjZ1/ddE7D/vf4nQxbPE/oPQxTR5LfTji3QrWYuyypPUmkgm3AZNvjRAFqXpB6yy0x&#xa;q+UaI5lKVFBfNKUat197lyHbDHhk83sdnVSk63Tqxq5eDmzNTvZ4b2Wuh68gvf7fTUW8/qs0/c&#xa;zfbq59vC5JenA0Hw1m/TFansFpXW1kYbjfLklnkLS9k0IkhzzhraaiqQ4nnyOdkCVce2yGBgvB&#xa;byQ1p8Nwtx3DdH295g8rHty1csABja0MF0k5nKVnIhhbrVNUUUOJC51SKk25KWWkRFyTt/Md2a&#xa;eJI08khryha3jdiiJWRIuHATuyimUh4rLEiaJSe1Zk3Hvjxfa6VewBRGqhjBhSOF9dd5tkqzSu&#xa;5iKY8qURNZts4ROeFwBfUCEw+ZUDraHFfdRmST/JcS2jhenR2iDBA0m34TIcoc+qZndUzyS3tA&#xa;TU7IEBJx4rytWz8bOng5J4bgwY21cluLF3sKqT9PXSYN3JPsWiy+8RIxDRFSVJwsUFISS/gSbc&#xa;6FVz0ju4J+LfjELoUb6hdEvXVke9ZgMqv6iMZipjncGirvwUGfLM2GDvGI7eEI/xr+6OatO4CY&#xa;jSNRMAdl8HqzB4XkWjc6tqfUdo4JtrIwSgrpNEqmoDw3G7mengNb0cGIBM6ngTGarJNcqrb1Da&#xa;KZJRybcqvIxilydJ+dhLwA8w275o28uTCmBS957vKcl65g3O8Cdc6P93KiHOEiZD06UfVblGfA&#xa;5TG7bIHZdJKktwHzPbqAsi0FOV+IB+iOaAc9PzM4wM8DzQY5OQmZ4hu6vOoyNc92g2sN7GWcQ3&#xa;RWyPMuEOJmlJmGXcQ+v5Bg06QXfIhrxjMGBmbDBSc4q3aeohz+umvxEt1JRcjFjSXCsy7A/edL&#xa;xI/bVOu8X5X+P5imuktVW1kKwRndltCSz/QMcjJy4PY+5GDVSvCh7VJVP+ApNx2PKnroKdcFsE&#xa;ahb4l5OHzod2+PYTe/DX4TNZ4qW08h8lpd7Prz+RX6Gz7iwF0mjvlF5tJathXfoDSZSSyPgnn8&#xa;CqJNg15wACm7yDy3uqg9jSYT3XkRPwnsFnVrKPO385zN0/gOk0AtBXXOXR+/2CsXKR50XGfVnh&#xa;aapIlQy8H9VjHpzeGexkK2xF4Oa/RbEoI9iXtlgO7c4MgrM1jDdKsHMiEmUYq+G2MYtClud4zD&#xa;Z2/8LcCXJVryjlrzrrIKheBA455KgNTI8jcbGsl2JvPU7yVmdU35QV7FNTfbLXeeqFo0oGbjkk&#xa;zzdeRyAIgRXXoRM8aFBvkk+r2zeHqNQj8jS1aHwevX28tV0qcCm0x7OKM4E4hR9dsBLEcM5HLz&#xa;bJ0ss2KJQ2SPOGAFI+WWrHe0tU+htUZmUz/ra3g8/68/IsKcv1RfMHT/cJT0qm+7bn6o5FW3tP&#xa;PXWqM1csTr0LavQBVrTMZtTOEXODtbt64gk6D7LQ9ZPU5W2Ht0w2pX1U3ndJz/NtccsSrXUcE2&#xa;HRWomSl31eZ+HmpV8Ggux/Ep9W7/lncXcegJM7QUgAkrThtiOB9ykk0c8nOuW2iIANMUZnZh+a&#xa;hMo39AK4an1g2f2/ljS3ekMnD1UXKYHZB2B1cbgwnU6HJZJjHQS3O2P3rNzdm8l8Ei7ybbw37P&#xa;5t2+KVffgjJCZlzMFsaS9kxxuNK89QHItg8i/klY1jfZyANIhvYkOMJR4o7/VQNc+k/CBe8ziY&#xa;WVoM04zkTTwJn6ygLWEldc/yoO/HXY+SOzOU7fDyIr7toko3PdC7BXs4fx5tyCxzhEy7aSQW7W&#xa;IESM7Mq9aGU2l3Plmnwoj6Qb4cxknP6y/PlEB08CuhzLYR+ZnaZxH477JvIpTgh+RhNaM2+BUd&#xa;I8UUq+CEYZ7zPY4kcHNl48x8PAE5n2C7F98UvYLaH6EI8HyKKB4aW/fncEi8niVyB/UmfhY1Ux&#xa;CPg1aX8eZLubv8aQGr9/k+vOnKU1GtirxDb8M6ywwLaxjnnjB6FkYcx6j98eMF3wtWjPFvA1bc&#xa;4Rm/d5PLgnAp1PrghIhuM0LdmYNo8xwrLgp6LmbKXyBDvL+cJbA4DYGT4IDy9HRXb9VIjguvoE&#xa;kIzq0dQXQf4h+uwiRskndkXS2oaoEHE8g1iDDLqwev2e43kNpjnUhDUCyNU6iylAz+aE6ord+R&#xa;l2wBBilm27eG8cxJSTPOaT5NyqmSs1kdQTcTJPSGVsDdnxJZuc+sTnKKOY7+ISsuop2zwiscWX&#xa;AzCYxTVBmgszfdcbaAtFnV/X1dVM8NiN5ui+XATYN41z7yDIMdX1qTX1JxFG5nifdrVlW9QwLh&#xa;1iFw3GixmdcQEjLKiG/aUIN3tJhG3epI/2Wqj3DC8SgTLDqD8S6voLo5WpJURRsbhuT8QZO46R&#xa;26DpawjwHheIbmWL5OlPRF/NePQFwZby+Zv8lpgjdVZ6fnWhr8lEJl8Hr1zCqOBZDtwxwNt/Zf&#xa;0DT+CGOon/BAdFOrFvf9iN9I+478BBHMqXbEj5wydM1PEe2hcZJFn24dxhTf4GfLJhCzJNW8if&#xa;MEvJ3rA/q60ueYWXft11tR96lPLbvOP1UuLt3CjX6+3UPIwYraC66ssKVP981tw8KnuyMmxxEm&#xa;wRvNXEfVZ9EzVs4fe3/n5Y1zqmeBXnt/z0VvER0bfh/9cDj+o+w4pXs+/LBOv5qZ1s2y0G/PiF&#xa;2UYt4yF8VH9YkuLHjgwXM1O+y14UNx3nuK1oz47PmuOFFodcCyqO25+QgG0cVXHevsOoH/5yS6&#xa;Y45LGGXE3je7pKbmN4i7dkdUfntDehrZl8GaoiY3KGcwZ8x+mI1aSQejhm38pf/GypDN/cEWqS&#xa;0rTB/zwyqxESbApYhcn7HsxIdfevyM5m5dybMMyXL56o/5MX+WfEUsTKBejg+K81SkoOLi5WJr&#xa;bmf/fSXCScHez+y+C5RkPXA/XvijCR5cwMmIUWiRwYVFBsJStVGUCfbwdRLQ8mbUsf7pSZzfHV&#xa;qnRGDlYdGd3Bc9WD8LEjKJUE7lF65Rdnw5KfRSlxAXWV/mTYZdPJFLfP97cn+c/Pk7afYA8HPi&#xa;DPyh/yrDaOBIQrU4UCmOPTjhfR9pkbahFxZ/dbfManTR2+0py0UIpSRvBXrKDaWcZhWWsvilzn&#xa;HalblofzUTm+OkxP5Zp0p+dkZWrdDbq4vENz+3IMRjUHNmZbgaI7Ps5nXkvsDYIR0oHZ+hJkCl&#xa;At8LWQp46HS0FR/9DLpt7nMRUcGwxqViTIWLcT401bYBrBYOZe+I6HWqwPaRYpPtyqIjVVMUVt&#xa;EY9a8QK+wXXo9sU1ohvozW3AL3tcrBf7r9AlN0hesrnRAt+0feeLc3DOKNGftKtrJ5BRCEqmim&#xa;xJtMUd8ZAS9f048Pn3KFjn4+SiV9LMmCaDikmekBYIWpHlUlfTaPsAluc2GZ7QnWotOtWis0dW&#xa;uKroSmPuGKhIC8OzYQCVp74kBxLzDp6WMQeOn6FH4ZKaV1KIzyLpIEQSx6MSZEvSaAhjErPgGR&#xa;jKxdC18ndSGvelgRBFmIj5ROambO20KABLwQaRsZmCG/Vl3/bjoy2d0gscRNWTmISw0TdhY/MZ&#xa;A4TxSrYEZiQoHIAuK7dBIyMRBUE8ktQpt3zB2ZxcMa46rIDTndPf7E2qDc0qenikh6JYqXfgQD&#xa;Y+HP1761DaYepvDhZRIH/tkkgZLurEwyJwQHdFpHBHAa5lkVuP38LKKkHpo9PwJBZ6hxQrm/IG&#xa;Jep1puuqv0dJY3PU2fjaJdMo/XKuN4gppQJD/RHdLdgwOsuluqc2cwYMUrubhhQRZ3o6iMp66o&#xa;ntsH00Fq0bJJ2w4QIrAsRcvOcRde2pJt9DgDKHrBzykiyqmnOvy4NC7waoSyCqxu7RqEFCmg3D&#xa;Zf5IlerNjXBfaidruosWsFtmcZMcPuvkAZ9UHuA5x2EyxdbxGj3mVe4gnoyTXfrtUhJ5NlZN2M&#xa;OmE0PHjBddi3ygw2r+ExetZ0ON8xURAoBWB4oKoqYVa8blpN/7RQp/kVxo3B5kjGmmN7AJa6GE&#xa;pn/LMPQ0dqg26MNSu1cfxN1NruQv1LxUfmO7uTqyHkdVUZlU8xX3j61vkGIWYNcSnpdwdletDm&#xa;0dvbkmqcBpeQ6C2Sw0X7uAeMoQR/Vk62SlWeO4jKZJdcvRIzmB5eOsPmnEKl0nLi3UfALVzUSZ&#xa;ESnQ/CEy4YSyGUUyiOQ58IVQJUvSN/uLju52y7R+8BNNFFjRI1SrUdWHXEXpK/SpP3RrwntQrj&#xa;9RpyZQnt70LQDt4qwnJsfv62e9YOobeo7xH7E1zjk8ewxFn8Fp1L1SMG66qDIprVwYBxyYkK/7&#xa;FbR46S/avpy35ONpRAl4owJiI9ChzfbDpzlz3lL3a5kBNy3syAGzK2Iw8q0UQWtiHt7zJyIfgO&#xa;mnCqcg78ozgv2kndyp4jpGV6J1TJk5Rum+T7NLTFeGPW6dpzln6LFuIn6VIo+a057WKbqDEfF3&#xa;4++/e0kqAj5kXSUHpNDGV4th8AQKDZF1y2K4dWPoow7sbbWz601N94uOTHLzfcBduvq3MHGkVU&#xa;A3RlPQYwUnBUO7kUNhCkHqlAOVSUbL49R4zjl4RerFzaHZxdu3muua1le0rfQjLbOO3vK6Phy2&#xa;F1OZrSS4rY8Tma2dHBZV02FNP9pbQWex9S2MrSER8SeSL6aTXH2eqJgL/M/zNO5pCXlyPwdDc8&#xa;nlGDeUQlBJKlOhgWnxRVYkna5Xj0otIXX6DXOBStSocOQi5onSuk+bzmTFlsO+4cxkUC6M161h&#xa;2Gs4LNcDOORo9x5O5iyHEdujvFHXTq9fLwgUO/wLOZ0eGSGkGfY+BM8GT/1CUu/2TvX1soqrCH&#xa;8OqsvMx/Ds6hLki5NI3O/jbsRvu/orIDzWvHwVlUTztSxTff32t0BMq8Hb9/5VrPoj/E8CgfH/&#xa;IRD/oQCaVq6oq+ifue6TpKajRulIMGSIqeaB9UxQtlLMFEim61w/mJmzWFPHWoVSp4AQpbobpb&#xa;hWi6VvuaVwVhvN1LKwFMlk2yKZzdTSz+TbCy6vXSfNf5wzd96atVoh0l1eRX92d9zMfFx3Pff4&#xa;5Bm83yzOftGK+g6j5hGNfeaaZ4VVUHP3oGU9iEBcD9TZEEhuleO3eByNSd8D6fdThp0tF1nQuD&#xa;1wZZTL6naix7mRPbh2snInosCIqRwDqVJxOEYf5HiSl+EzRqUGw7Xv1FjU5uxQHb8hJoZeI4I1&#xa;aPa3UOdG63rALL2Rhj0UeVMVUEqKdoEQ59PsShJB/oG/3YpAywWUKPPt5s1ZpQoKoR8IbxO8Cd&#xa;I6d06kaKQfbGdhvwhbqZV27wdBNJAGat57Qi0BQzhRZZBLPy6FEk5mtGgSWLwahxnBZsUiLxdN&#xa;rEIPDeME7GHobjmTF93M5b3zAUtys88xGRWmr0pB+70hveS0PRWuPApB10vKpD3bcjFw1XSoZY&#xa;1ky03m9lskc641ROKmFr6DG95bLFpFflp59fCLMejgO+lWp6nIEWX0gZsfb7XnoqORlCLVEnc9&#xa;CG4GW5GbV81vQl5Zn6WsVthFthuK8zyVlCyjtciBOt8t72ScZcyoAiQYcZDQtNxEud1N2c2TR8&#xa;Bxj1v7ZMRhV/IrUIhDvPCDBkaFJItYcFO2i+XHDQQpQT3m4C0EuFxKuOvVwQPjuybH5lO+0H2d&#xa;2Hzw6PAGIJnA0A4iqdjt0XBjHGmBDo8FtY6ahdkuvzDMTSdMXSUsX3h1+HusSuxj1nJ4dng4LA&#xa;yWJRY6E62pfOat4fqQPQtQCfwklr2x1kx90J4GaBPrHOtwRmtcaXbXEmgEw8TGAoGtwVxtAcNc&#xa;bQw0iafWnpybqo8tCDXuEQI+AWpx6TwKoUwj1HhMceTt8dA9jRS4o5Njfv+RzJafK8YcE3KbTh&#xa;FInJff0OuNMBmrcFdYiEOzTZKHGANg6I8QXYRohxk708dhUWR5ie0WlTdTovh1SgezQTt8HZII&#xa;JPd1dpcqWg+9yX/JqAAMNcfSvii5O/inx4GduZnJ7Red148IDiXs35x47woExTWehVWQxZ9pUQ&#xa;iHVXscv9q0A8TMSc856PQ5sMBizu2YvYwj4dg8Yqp1pqMbs9WVbql9N6KOXuBDQ3xUEtZHG9nb&#xa;+BKCZvfufTP78vshPSDZ0xkBLycbRNsvjQGJHuybBpxvst126T5j6rfovstRknct1XtBVbAK+0&#xa;l8d1glPDkFzSuhFxMh6gOUWrOBDrBqyyMWHDsl4rXIflSZOA2RzwZ2+q0SM6erwfJ6l1FZUkss&#xa;B+PK6zs53YT033onp7UEbT0dMyWGKJ4nm9gypcwWCHzj0MYOpAlyMevjLpII9PItROgzRXcHxA&#xa;MjTZ1sqlm5bee2yHlkNSIvaqBnveuXgnWsG46yUYF3huTdmhesv7o4BNhrWF/t3dXt+ep2eT0T&#xa;b3AY59SPRuW77var4VTcMZNjiNLi8rzuUPxrdwG+WZy7jFQDq1JJuHVKMNSXsP4RIwbdkYbUL8&#xa;j+U4h/QIY3hUYX62vVHXc2Kzd3YbDOJ3Hgk7X6gdQd+GaaRgZkuWzeLAeioPWxZ+Je55Ifrn32&#xa;o7/5KR/mJWLwr1conW9kLFms0lnY9Ei659VGo7E3DwBfaYHUiPYbywYCKUsHCv3BsN7e3FJbim&#xa;cgkVWhQcFFXcpLlT5n2Htv8JiB+/TvmbiCn4MxGcl4wFHDjjZhDtPy8j1dxBgMI+Lp+/JUCQ4c&#xa;xsH97HXeM6sDRAUL0nP5slu6t5A+J1KQZxJ+sOPBMUkmhnSRVNI1HgI+L91kput7km/u2CoUy7&#xa;pdX8iRqtZ6k7WiUs03zkTbZcjruBrEaeHCY8eiIiJnawWUGjjo5VQmWo0uwNIxdTPUcmv9MRVQ&#xa;BqYya1CFtNwekTfCor+Wu/Ar4jQ2+SCcZxTC4kQNw7R4a1v81RPKpu5QpkvrVWz3ld1qix/y5j&#xa;NirqRlla4L6pjC/inNXnjyXR/v7LzqFLKah/lRpup5im6M5D2SKiPzds5yiyLrFaKmT2nfjLL4&#xa;vZofa8V1B4G6sRO6DqTyE+pRLsqEj0tyrMlEIN/RDp650naa6eS5PrumwbSs2lvEuZA03rfU8W&#xa;Wj3LNe8CQBytLBfZoWGRM8klGt8X3QJP3MD9VYNCpJS1Wo5YYLCpV5NJJY1LsClP2hI5SMH6hx&#xa;mOFJJcMV3GXLZb9/BAKcd2E+5F5LziznGVFX9DIlrW12LkXHseNLYRj214SI8jtaYGtU7nPGdJ&#xa;uiKhcqvZsr+assMFHDqBgo6G+VmdcDaJpVmG2Lzluwvx0gvuPqDgs3R2nOGW+G2LVSNmwbxOE/&#xa;jTUsflJ0mt15MfrBsaRVObF5Z1U7RX4IevLGXLqufse/yU8Irj3SvFXA4b6L3x78YHPeM3yy7o&#xa;a7AeleNvGDnuOnSA1aa0a+klXV26ExIg2JeNophvt3x5mlPPF0g56T5Bryhv19A8wE9t+MCmKv&#xa;iSlqi2TbYzkqKQcDJR4HHHfBCfa1/KZiEycqUzRWdgonKtFpLsbuU9D5H5L/dLQ3RqJE1apEdZ&#xa;WM6JxlVs2h6DUih1tD/yxybm1LRLRZhp7Za6q8IuMLpPa9W8LmQ7HqjvaiyxlchSaxvJM64PY9&#xa;SHaNqajI0ewJxOEkqMHw7DZyEOD3wp/p9/KNaulomM8h5aXfP+SSj/oK9leFi45QPo2yWmEJo7&#xa;tUBrO55BKStUQ9OH2+GKJ7aNuVvU1jyXt4ycHdpTrjPr4enn2V2sTv7J6G9yyT01UyY08dIXOZ&#xa;xPP8w6lvaZ3U7TolESzCp2RGgHuH0Q1RKic40UZp4iaJpxPvm3RO+hJ2KorofvgSdsoBc4RThZ&#xa;eUNUFqYsiwU0VG8kHyMODxLURyyRJG/pF7sNmsjcyCLFfpu9BL/uvQ6Zne2tlx8uQE7AZqdkro&#xa;uSLDnjNmyUsZ5t1CgHURXU/2bCLJM0eVh1kTxB9sPS+Ce8Ds3ursPLR+WoHCXps+5t35F7/Xrq&#xa;Z2FE/Y75kNtBjdgTSc+k22Lz7XHC7RuXXzM576BnrZ/w7/0XqiBIMBvnyBRvufTBTrP0yUrJW9&#xa;5f9WjZ2icaGKqon2ZxtCW0+jH/KOfkMFgRhH2KYGCCfWnBywREQ/x6HPwWnMfrl/DWWju2l9Nd&#xa;Rrk8e1GIffp3JlpFPWkncu94di7GlrOyBCLCTj0Ox5x2X2wGPm9/a7z5+4vi+XQ/BD12sQHtnE&#xa;WffAPGOLzCTsa0SdWNNoS68+9ukc01b2jKWm1KQmryyIUaW8BnqbV1+2qowM4NTPBCSzcC13ik&#xa;pdaoGCo2yg8ORMRi3zeNFYx7jd9FFFKGoV1go8jt7JDIFhWkEpGw5AHR7hiMRkDTsyb6WUXTAS&#xa;9aCs49q9mc5Ahagos6B23Yl9dc5Ue9rJe7p5BCk2DSGtrMl1pn7qNMgeOjhZLjH0E+srrnk5n2&#xa;066A1vqJZFOBnw98WmrCXIi43rIXu/GDZXqDaflCa1fhPBpp8V38T7u34SlajGQWGDVavWY1RG&#xa;w1ZbljtSwocR4xgqM1PXZBanuHRs26DwlM5gL43Ms6pRhvr9SUlU1CbBA/HLhu747RyZ1K2SvV&#xa;nJn0CTszFXU/C2JhSog4zKzdUGEPmITXlzyaI/+HV8Jgw3K/Ix3KqoN5GGRpP3gMmSNMJ/vS7v&#xa;8qz+NG1CUH3dT5ziWijjDyLoPYEhO4DPj8/m1Ok7VCvQqJKDUxVaMsxWDzAJWZx3eiTynMRYUF&#xa;342Yi7vTuXarUS+laOPXdUGNRaskXpupnufIJ8LWOlWit1hzTkvZ2ZvWDrv3XMZv00F2LxlD1t&#xa;tW7uQRP4HUvSzHWXG4xC3sduwEzPFWNdde6I1hUuNABpAOVHFz3tJLvqIDPYA9CpMJT+2ymmGZ&#xa;5kHZcB8TANMU1oPBY4VMvYTsoMKESYpAx6B0Rhe5ENxAZQRoARKGgMIiXIlssRY7UOw+3o6bLm&#xa;NJsrCuwyRvrjVo7A94pcD2tR8llrn0qeqzfqyCXC6Zp1ytwG1GkY7m9pKt3SGCQ5wdah8sKmUr&#xa;Ns6qT+muBVuYViUy51grRRIgVRjSDpMBxJ5zMrH4s+Au6lgMrN9JMnSpCoTGZmjhucemy92tER&#xa;CCSPmRY9ySRtGB1kTfMhKe6Kv9jauOfRC/7Sep8ag8HqcY55L1NxSdRaed9T5DuaX9tHGoG3tl&#xa;Qe6XtCp8hW/JX33S74hR5VMq9TzzR78pCWxlGxXlFS349Kybvv5768naZNK23B3Uy0BzyjaaWj&#xa;hPb9qPcCYJH7CpnJ1VO9IA2xMByQQnLLRQUIGmtp1l7wcebBbs/CqMiLVezCwddSjBmy2Oq+Hh&#xa;PXRiOD73c2UB0ZT3MMZyMChO0U74vzzlZLYW9anIYOv3aMO5GwfTc/kCasMx5ymTPPTMUSniwu&#xa;pOmhQKiERipb3SBQ9SS3Ld+joMsE4zY+ss0hZG3Es0s2gdzGSoFZGTdRCOik3V8oMNTup3yR2q&#xa;JSkvYXdZBEKkYVciOI+bq38oPe9mW5y7U2cQtxHoKFwySpPeLUirV1LtdzQ0YRzJvi+la+oapY&#xa;/tUWNeN8tsgLCvfXGvvXRyidWuFxUmeElFUn5sJreweE44YbDz5ZylPiuBPLev5Cd4yaVXUv3A&#xa;ZsKfTVCFXLOTTluNY2DToerj5FKO/IJ0KO+LGopv6c8I1nmJu7Ma+b79HPgWNefaQMmL6yv5DO&#xa;rwukB2XfeNdbFVaWxj/v6y1QUJ6R44dP1H7b+Z7sMcL64QouaqpVJuwMcExpRuYqeKagPGKX8i&#xa;ufDz3I6hSixNwxZQ2FEyr3R0mB/Y4/8dN71Iys/NPTPgs8MrcugY02qZ4T2oas6hp0kaoMNFRC&#xa;nxHN6wEjcOiJ0mnIHMtIeJG/XeFObzJwAYSxjbM/KzESi9ZI+6osxQ866Gpt13RG1G+cjRflXt&#xa;6Z5VEe5F4+H36Rnm8tnLRagCt192z6Uq06+xFx74e2utnmZCyGEOKw97EexPPxh658DDZXlNPx&#xa;jLCanDss7k/pVz+PgmOnkhsOhri5+VmHfZUXTl/1RJkh/iUpMQzh993AUT6l3lLpN+V3ciJ0SE&#xa;EvI9l/a0eL7EXe5l8FeN0/guPA79n/R9rxXxM7ie4LxrCu+VRPIjamAOkNoVN5KxviVnZyaikk&#xa;8SUuOYXEAmMoS4qlFdlH+e/hN2s04l3dfOst7/L65wKsX8nIzVPScjJcnj6f2ur+4wR80Uvsnl&#xa;zrKL7lyjEfv1X6slbFxLbVpFP0CA+jVtVWh7HuJHmPPTdCliUZEyi30k676nnBbbq6tOkzJoRJ&#xa;dKKxymqb5j5zxXEhMHWbSd80o8zBOWkzc3JSF+MNC1EB9y/R0P5LNJpSYkKoRB14JeDLDn6T26&#xa;nfa8vRMzht4+NueBULSUCLekz9rRlNbtNOzhYjJlKHmwtHKTzr2KkZOwv4pvEy5CJUZthrkvBv&#xa;jLilewbmWLaihQg13CBRZljSquUL8aGjg9Ya5eaMlzkRHxThGdcFDynBHiupvYd8TQmYMHS8IB&#xa;rSIE0sEvtpR6yF3/zoSYPndNoIaZvcSY2m59nC2+O5BUVktx+asL22AB7jcyIYYXzkZYxHljo1&#xa;G+VsNEniSA9cSsvO7gk7APPEQaWGw20FrKgh36perVAEOF+MMLYDkUJPR9mWlJQSxTDzUElalW&#xa;yXu/SeHHQiF+1+fm5srJnEbE6f450KGuk+1SASCxUc/2ZpE/tmZ5VyJHl2mXtMW6A5V+a3l65W&#xa;Cx70SYOdXJhf3nj4hZUOKPXA5MLVashrawNUlgdU6/s1O31k1+f7azI94v3Cn74HuRgyvRlBbU&#xa;7yo+rRrNGXqSeF9ri018P8aXAxd42t+5E6C2R4aKJzw8zr7iSbTRqO+Jxm3cFZsIiF919Gck3D&#xa;+y7FZNLNlDhIH05+y/hKxosyCu7DwrbTk8ZRE3pGVQY9O2rrTc21Dz+sAARWDhONFsWr9mduYd&#xa;u45VFTShlLN7NltlheSpDnP+DkS8VXS50en8TMSnYcC1/ijQkbsDyK8v0WNxFBeyLvkGC9QDG+&#xa;Lub50TedjdFnxoJiI0TCcIklIO8Vvk7Q55bCw8Uch0ZDf3s0Cw2sxV0vMBBnKEEfhcY4gljOSl&#xa;lpTBzbo75619SXBEb1K5796vfcrNnQWnnq5fdhhBu/q04gHlFtFfyYx89KtUG6vUh1a+S5bAtc&#xa;E84pWGFW0aSan9RA2gEfzR2m31ejv0jagpM+sfNGsve4sTjlZem+ThYDVJ0pauAZy7INumqzBm&#xa;lLkjpbLFKwDwuX6938h8pdopU0SPL9Yhzb6EDwp59g+qelhtpm2RsBvSf7rCK/CHr0C/wICn7G&#xa;IjxsK5Cpxt2dK5oMHAiMo+40ps3HrQ4fl5WRcsl47J9h8YeeZrRqfXnkF4b7AATRFC8FysnwJy&#xa;gbKlaUsYzfQoH8xXngFYuX9qJlVosyzIqPBlFtXhbfpnylVcDevq1CEAMwb9H5LykdkN/37y5I&#xa;ofIv5P1XHWcOKLX0i3kHzlk+YOlDtY5QbfEdfr8U2Pl6of7p/b6Adr8aOCab3A8zCjMd50YihC&#xa;9XbSqC8BEONPl6U8s/XOP7i7pz+Ayq9OQ+zpG2I3Y/M01lL16n9x7bm+ywgojNE8wgcR/dHxrl&#xa;PIDHUK6ccgkysYyP+3JcObGQrTCR7UvgnnTdTr/x4+LPu3WyBi3foF/dODJ8Em70SmV/vgV6c9&#xa;yifoc5cMAj6UC8Z2RJ94V1+0qbpOhomSuXI8mEInhgD3e3Y3maDCQafBmVRb5XuYV0W/x6l0KG&#xa;DvnTuyLl819XiTzxgaM+QHz54gD7PxlytP8G1f+gpuZ/TLVcMuIVZHlDrcWQm4Uym4clDjXsyc&#xa;FXSiHlIWmtc0CL7kzTyRnSYDcekDec3YKdqZPQ4kJUROe/hFd/Cb4o6p3uUGKioGjdxvNTWvbe&#xa;X/k9rb/xjv9MY3yH3TXwJZ3LzEyt5T2XysBq/KWKE9JPr3kMRaE3y9y0QyBrUQKVJxSF01lVhr&#xa;eZy0szt3LkXWpprsq96AZ9n9QqRGfHqxpR7SekkAXJqSxGgcedkaQ923gfAdtqKIRLSAnaSw7w&#xa;lCNqH5/Q3cEIVJ9/EHaZkTucelczeR4W1lk3FFzs0czvsZHxpmZNm9TKxXPESwqSkeh65kQsjH&#xa;+uxs74gbJD7lvYXW8YFpvKlDlXSRp9zPQORL31WUyVzZJbLY3YRzS7yr6CwXpUBoRY2JmU1Sx8&#xa;UnUiu0jA0kW6cw6+ZjCFhAuNpbQVLcb6rWX/UJ5Jm5PZXzPtqhVHHXrKdvXgeYrun4Ditj4tvD&#xa;rnRvCAfdBnFM6oNp323ozzTkT+Cj2lrciDkwoX0hTLxp/RqqdoJO76h92UylODYYBp4mr7FPaA&#xa;ofpWeTtw5nIic6CbsiydR6Yjk9UFssNHJZ+VR6snCSU83CQ8bD6GIHAni8cQoYp6mY++/nPUus&#xa;pfZoz/1EYCXHonzGhxeHRsdJain+KHhCmqSVOAfLo8K26OPFyWxoaYnb5bDCfP2Z3tjDtc7OVi&#xa;PX802qr5HL8aEz5NZeq6NRv7PPKrEnQz0rwQA6c1D5vj+qYIR7MrgNI4TUbTSbfrR4nprMwYby&#xa;VpTEn3gHGgxWgJbCzpvevcZuGZSqS6SOXqT+C1u+k3VUGxMtmldZHYSqCi3QP+1iR2CeXQAmuK&#xa;AoxYuVNljqaBU5nTPaYxPvuHOsTpWpSfMd1QUTJKairNhufQk9Wl1Jjp2iz6e3ssUTNkMaoirJ&#xa;iD2gkbH3l+mih95eExUL95m5Mhm4ciHmFoOJDEiVwNP8kzxFBuXrkLkmel1kwzuPkcyzybEPoM&#xa;5XRi5fwEX70g4U1sNPeBIDUp0ZqYlvoiR18cuTxh+07getOa/4cnYhR5lWvAxTyccWqn78IEYf&#xa;4GfOAhK5PpEZw9jJrJ5zpe3LFIO2mIgkqPhALEikRdQqlNS6/O6uzyTwPS0JFTNr460m9ZJX/E&#xa;O7ntc3WGJjW3NUcWbdMBvXoGCAfo3aWkYdgMxZyn+bVJ9ggOgBcqP57YgxWm2D07/NldbcQX/c&#xa;CRmEqtDq+8BkKlyGmT/euO37R3pL7dASYfYkZnjykRCozi3eBwixoGsWgWFMWsE8+YhvEcyjfs&#xa;+FF9aRS65ThNit+ymkpuXo0EGPFTOFcCHUcZuLQ7Fiek6cr8XrXNNge3vIuNx5AGwb1B3MHVNa&#xa;5FcynyT6yvHDB5g5yzpntSdDsuiFeCDUoHLqkW4L/v+Hvz71iojEGBiL0pwGaYqDP+OB6rJbED&#xa;XUebCHdo/iyt6QgOuy13lD4nuZdEdPx9QUR4kaErdfteVXtX8YqULSUHY6uExoowvHmWO25lxD&#xa;cG43U+jdiH6wtmDfKDXq+H3LEeAdsHyXe2FgrsZ81S8IQv8ttptnDzhcyGQusEpnYs+3UBLKaf&#xa;BKb6LCjtLKIPbLoSdX2w+AA0sEAWI1H87VHvTiNk/Dtaoe/8QlVgtpXQIROfHKu/N1Xi7OFS93&#xa;TrkL9naUjYVpHilZMWz4oXj5o0uLT3pW8ZkXGhAK4vel5DRiLOUQ2iMHj2COciCStEFE0QFIxp&#xa;FVT5cwd8XrD7duk+B7j1RrtPR7wacDGHKduLaUwQwIddC/U82TYKYBUxxxqSJATo0CXroyT8Hw&#xa;AR0EC0/OfgFJMtSYd2rDRH5tEY6KSGdubk6JwxKdSZA2PC8wlWFcPcPs0Uy2KV3AxnL5OQ3HNJ&#xa;+LSyclP4FdbPAixedeCAjCGkOmcEh+BPLvLrqxDjpco17Whs+Z8kaFljqJSKxnz4f+DgvNwJnO&#xa;n8cA7umtIFKkRMV8nSa/4UigZLC5pXwxry8nsRgvGMlWFPnwtVGnhfqey+e9NYVLMgmpuM4pjf&#xa;sOo12sSAr7tN1Gq6BzfixgyZvS17JuE4aLhHZa5Xjm4m4ys9CR/ArBMfAI/LVL4UL5R8SVV15w&#xa;oYGXVJux1EsnsqifIMdVe46zWITfsMSN6tUOmeV/W8V2xO4o/y8C+DFP0+kD7mI4rpZBud6u+J&#xa;4zA6s7uY+U73ilmDU+GO2ksTYRqZS0klaUiLD//+r9lcx97Y1xCov0QK8X8/vCFrb2UJdP0/ay&#xa;yVQ5LoyAhZx2MAsxiyZBtx3J08gltqWnTe6m82KGceTMfq1HjTV6yuyngW+8Yb+D04jQLCmZKy&#xa;L3d8rr3eZ7j7sr4Tft5hBvilm4SPsmw5QdnOFPGXJsy0x4yzebzRjzFLNHWvZh7OOG3iKJ5rT4&#xa;6vd4uDm5bLb6ayexFnLk+5sh3fSMGwiNHx4i/XoM0CuSl15hpdSm2i708B9s66Ll7W18M0IPYP&#xa;qNWOprFV83JtrLgQWFCnCjPzJfzILDApk3BsfJ5Vz2MzE4OROl5ZuhQXX9MFgT91Ga9sE68Ja/&#xa;AuEey+gS6HlY6Vp2xzlIg8yayAc7QfhD3x7a8qgcB8TZ0kHMUYgaXarpjNRIcji0lvx3gT52gT&#xa;xxqHGl8MjD3nAX8hboag2NVamZI0wA12RSRFGfQIb24/6oils09LR0WukdLszNDWJT84tsQd3M&#xa;nlD5oovt3tU3mlloUYrres2OVlbNe7dMsy+y73f7H2Flx1rtm2biA4k+Du7u7u7u4e3N0hTGDi&#xa;7u7u7i5BgmuwIMHdJUBusrKqdu1T+9Zt+7bzH77W3/49o48+5p+EYREAlWMxdkVWycRY1jgade&#xa;8Vx1ZiSmHNAmKXcq6W3WnKJCatxzmH6pjNuHD24mWUyqgnFe6cNW8iiohOTzihy1uFLQXHhdsU&#xa;XXQHCBoEy81cXr5jifqVdbZpw8lAXBg0jYYVJBs/RNCQGgsu/iFLNVSLVdCXeuQ5w8I0+yrnqB&#xa;12cm2NMB5FTbCaRZ5hxt320YqWHILGLjicPkSF6foHzjruX7tltghHkLHtuGj6isJrGdKiIjdJ&#xa;fOB4fEMU8pGQSLgQrxUmxp0nkxz13vHrZVkaT7x/FsemnKGPSYWtlwlzJiYDfRI+q/conifOz4&#xa;U5jm8NjLLLxqQn3UZz6hv4SA5A6g6WQQMay3ZtTTazz2M3nl5J4knMOogWpw1ojmVjnQZLMri8&#xa;SnXLaESGO9tHymnCUFwuWh9wP6CjdYGWzbJGcIfigBYRXzhSybrnYtC6YOWTrNT6cdTCiWWYg1&#xa;NkvVEs5ZK+KvmN86HooNnNX2urCUOBotimHkGRI5yRyPXCTQaLZdOUY9XiDGO2bMbR7aWPWH+R&#xa;Je1vZT7VArG6ifQFNxIRMRR6a0zzBOi1JN/w7SFhpjtUQrE/BBMkLu3yTPMuU3i3mhjkPhmQdx&#xa;Vv4dnOMjugntWuNwV7YALqYv3HAMOTlzlRkW1FfQPBVC9moEnZPqrt9ySmQPH+UKwkJ3RC6lFj&#xa;FYgX2MEOFf2D9ie1Q3+JOGsSGUjDvAB27rcE47U5TkQnsygkpOVocWpE6xbifVchGGufDMpX21&#xa;oOZc/aGFyKi4noWJT8J1pcxSdPBJycoA/zTUMwOhTo6kccVkr8n7i6NTzSB2iNRRFS6y2hvgcn&#xa;N7r5r486NylFmLmaJpFqkUZyg1nXhMuG+puB5W6ROhUKkT8hdOMLxym8S/ZaeAjJJPWo29a8mG&#xa;tXcOYVQx1dCZPfoSgonVwR8dmxouWHPExvG+QcrknkOGqU/1jBGTtCbTtquoy2oGvZAUYeO4qQ&#xa;9G1oL6yjs5k77XPPtyu+7LxQPoO0gfuwVYMmA9Vtu6ESouQNMoVsEVEx/qVVvZbDrVMB7EOaVU&#xa;NLotjUkkAf5OYD5s1dxevNHxAXforX/op6DI8p34kX+ISCglMfWhvtzqrys18PjCfJyAhIiMKn&#xa;j+bWHqcGDdFWh6Zv0ZMrSj3qEBqTC0oTDYrF/KCsFJOemV4TUsrE/Pi+mDN9l0S7JFEREviuTb&#xa;j8mlxwHMB4zqrjFaJTDhjEomZTsug/rrkEJFhvYaoF38yUOgR+zrwo1Knad3Kn8sft8oLab1rW&#xa;GyCWd158vyAjpWqDkovGXnS5hqLhUWlPUtXic51G2cn3dXesjdKH/6ukSlP1oXPGLbAcf5Pu3c&#xa;nCTcCOCOLw3ZS+Hp7K+21ez4COPIWfQvDH9cCDGXq9J2gb6amt3d4joWm/Mi+9k/bISlHX25u1&#xa;NpQ3BMNJ2eJzsAoykkgi/0shUwIqw/miV6o3lLgIYC5fXfGf2hm17gTPdch375r/I1n63z8f/7&#xa;YNxnPEpMej13Rv/xdasgQrrg5Z0ZBRqRNGU95l4pYuCcbOSlfSvXB4FvX9vCQ+y8Co6E4foJra&#xa;Mf3lHWyR/p6ZxX5Wd+/r2cn3P40zMD0WUhaV6077dlPzrCXK5R31JiGdLim7WBPsOa1L7S6DLR&#xa;qR3pPOxxzTUkYAfvS1hqWLUpsMbWmLV1xYY1CSmeZch/qOevV50Xv6TvuOERrFb98pWtlTU93p&#xa;VrF49gE1LgfA2omZ7tTY32yJVgFwsNPeudqxf5Om3zPh5mHi+DMeHPsMAt9Fb5L91lbeJcuq0Z&#xa;aZzJke9sY5+hQwIXdxqMAkNUxC/L0RcEoKEk1FmHesZQE0Ec0Cl8AH47FC4hetm4Hb19JrS1Sb&#xa;cr6O5ezhRDY8R7xFuZscRY7eM7SkwQKQknnjYVvooDBddjzQ9joYvEygG0Z1x8SZVeL1X2xpOj&#xa;e/m4rvsRbNfwwleGBBEgnYQVJBf0JuUKNWyEUaI4J2xTDVdHQN10o+RJV4olM9ZTEBeL06GgFC&#xa;yqDtcANGPd87gW6gx2OCIfZE8FijevXMdNjl4A7W4ocgkaHv3Fy5WJ2v5g5XPNEG/8GWOktu1N&#xa;c6SpUjyPUKQNGtn8y4cuD/YktmEwYb2XDX3ihnBTW/2VIycLnG69zaAJcFj3xhZHatneTwvPsP&#xa;W9r13c2h+CdbklM56KKahtzgWFov/8GAiZNIbjeJ3lykfYhkOtPH/NWZQve/2BLPjFeaSa55WO&#xa;+pnEyasVIL6S3ls4yvYVwQo+B3uOs2etJQbULP0D9saT3fKfxoktW3oJ+8vwRe42v34MT6Ppu8&#xa;WsZbmr0LjdP8IWao+AMjexrGL72m3SwJq1o8VkAjZGlCjpTmhFvl6q42wpLYnYa99CLd+Sofxm&#xa;FvY437rTe4AAjpS4SjXPjq6mgJ+5xTfbicb1ZlEuKETZ6E/mXXbxZcHWTKKFUW3AkwlokE4ox8&#xa;rDJS7//8KIZUAnVos/ivbAnf96qjjJCi5gRAadilXh6sPYBeuUCSBznJMWSfhgk0B1HoGo7Z2P&#xa;T7aE4xPZ09H7O0BiUWevhiwIMOjObY6OsBdIkUcukcVmae3Hu3q24baAbU2QvV6pVDRJhVHdU3&#xa;uBLRpmkNKGBnNsGdZswfhR5iD0U4X8dJdhegbuUxCVESHo7O4M5uYF5bHPJ/upOke0dpBmDAEy&#xa;BK5dyndEcVesrb+nvzgHZdKXMUZlTDcqwiIZUEkZpmcknKfGX4k6XLS1mPT6jvbCmwNwe2aqVC&#xa;t8OTeJKUj7zJEqPY9D1N3gd456YzStMY/dzOICIzRjOcHSS+xgjcvjqhhMo7sfNfdpzdpdSKns&#xa;02ckv3D0kRqXKGbQlv9X2ZYejpiv7ZJ2gV9nTSt8tFzgSEFbkxzYZTgkbJTFMRFSTOWBnoxEV0&#xa;ok31jWBw6ghpH14nXZexL6jbLlbjKkq58AURwHLTwCAYfEot8gz5pgp7l9ShJVVWukieYMHP/X&#xa;0M+Z9sCbt2Uyj3+eji0RakRScobKWMQE5Q2IBcNi8YJsSP+xguGHzFGRO3HvyEif2FL6QjpDmd&#xa;UkubTPUAOWqIsW1ZrOsBm4ccJ4yp50plqAvNV3jjtvpRJiECeNG1IPMH2DcahX3+zZbc/iNbwv&#xa;gfZPWfdMkHdxjbX7JU/XszaS1qEEyR9AmStjMSBnEwF6Uk2UjzadGoPFN+2p05nYOWzeT5OBu/&#xa;E41Sxtx7/jnnrkN9RvBbWIUbxzYgh+JPRQfPVf9vh0hfK79LM7xYs91McX7zvZnivW7++bbL+g&#xa;5x632gq5X081sVpZlxhblmKjiCyFbMSfcuvP9WuobjeErKAhL6obr8z56Kg45KTKqhOMK0QLtk&#xa;vPkHSpvIGqGaU+9F4F5Ooqz5BiNbGqQiA88cnG2rhqXLZ4imJ68IJn0UJEUYsg+r7LxcdHW8ug&#xa;IONRmQn6vU4Skxp+a/1DtOX1oFvuVXAGRKdtVOhWJ8cqSl0RsHLToplWsh7xvotIYewg0t5fHm&#xa;8ws5Q2CeXYtmEkUAVoFadR9/gEt4meZT3bTt8dR8DsrvgkigZRgunZz7QN2L7aINZzv2wWOXAo&#xa;c4cRQGoEeYq3+9fvAFMvS4J3pfJUm15mJtgfmsRuZn8AED/PpasYI+prTD6fwlQuBsJnq5ide9&#xa;jOOpCFE6s/+UHmxRqXGp0Ph1EfZowxk0eGeDhUOaKH9dNvh8Wc+3ASW4b0M1VOWIrvbLB3JL4N&#xa;p7M9oVSxVHC3tj4oH9px8PFDLI4JJEBUKMo2BO26tZlxwJs6k84E972f1COl3XY2cJ0JS++8GA&#xa;YESTiEeQLKSYLAHSIHkANYgAKjs/NT/WmFU0Iz+3H4nKdmFtxrf1JrcVb7nWx1ltMByNQqse9u&#xa;fXjqP4FW9Nnq+u3T2KAa6c3tQzbbtfMgjYfQ0cPhlH9nEwTAbTmJg2ojYVHdRIMbbl7aK13LT0&#xa;ks4Mdqls3HyMjvlp2bJO10WjevCiW20J2Yj33Om6j7ZawVtUrXrSSLila6CswEr/XpU7TAjEoH&#xa;awc0bcE2gLj7Da1+GzTHToCW6huhJIWU5my4NvfKPPqP4Q4soX4rV0N8+DMsMRH0QH89FhEYw9&#xa;C3VGt5zj5UaJI+nsslq3IkZcTTVOyxrCvrRil2/fcwubx7pX4TOPGt6xigZ+LCsj1HVND7FNd+&#xa;PmfDwOvWFZW2S/qbNyAgadtDohnrXWII9oDuHe2voRSnJfo4363jenJdJ0Qmlp3SabA6lM6SqV&#xa;nw36lT+k42xNaT+0+scN8UsDEjDddcWMDO+hzDriicu8TKveqk8ADfHZIEw3z8snZc/0zaQ1xO&#xa;rtZARG7V22Tg1gbvayiie64Hw90EJbSrA0qEO6nf1FhEhmb/5Kdj19APcxOSZ3y0vhkRNct7Nc&#xa;i/5Gd/8tRsaWA87j55lgSkAfIadyTQDKir+LRcE8rbJe4KRZJ4XF8QT8XOaeZjShQqpILgd/Zi&#xa;8nr4909BLr/L7MTaeAdqW04mK0H5G600kOueJKzJDCqkVUNWf2TqUkxjNPwopYLnUNES9DN+tt&#xa;GupbSI88ScUjv80KX+JErC/wDfFrzxUHLke8iSfKhZIPdJL+YN+7XvWFVWA121S1sLV4mR/0uS&#xa;2IXyEX+d4TTpfjvCN4mpuya0IA8UpQASAyuIE/wVecMqsuVd0O2KC3dQiO4pOHn2W7coDjxn9F&#xa;411yvPiSw0o6cm4i0AHi17wUQoM2ScdyO6PfNz2r8aRQ0EfEmJfOYMOMpsVjvkdnrfeMVEuPjM&#xa;ZCRGe9um+CCyndxPAJCHt1TMN3qEdE4m2J4Zc4ffR2LxgWwDIhhGtsxvjhSJVIui2XQH8/i+TD&#xa;90WhVZUbQ6YYTYF8Y2ovHunVM0whQJOZOXXCDyiJC50wSmbOEs7qw1EhoneiNixwm0Ajd2scqG&#xa;ZnzNh+i3x9ZaYmjSj7iGn7An0wzHB9rs21Y0YXGZAwoi3ug1wqtaxjUrxUhFLJIDDYWo4+7H7F&#xa;KadMC1K+whhfiJh/dNXts7AMhuyKhsziNI9o73JqSOsEfiZpA84rB5Nlw8quXsS5ltAfsdJLm4&#xa;IEFqeJU5pgxOWCSZfUh4STdQr8MFGPoSJcowzLzU9Nh4yXztfNfKfDXtDH1nG+yBL20xz0Dpif&#xa;6wfxa75habyxZMnSsBtkyLVc2AAs424nrNrxa3MFvAideCRTv55S3aKwhTKq7PC9+E6t2C3Qcp&#xa;vWDkBHH8A8YGPCEKq0GW4PjiDCIpbdp1kTqnlKbRuHSKIRqHPVpH1W6yxajaXiq3EceUTelt79&#xa;nIyYGR6/y4m6Jq2+O9SCw+gbkVpSBiPYHaF5EAVztnu3JHD4LYuie2Fd8p5U7wXlNTj16oTRcm&#xa;BBk2npcn9BvYtZUjXgJzPDr6+7dWnRbmL5cP4QMmyru2RWYeYgt9z9glYx+udfp4JwyPyny6He&#xa;vbP8jwiK8b89dkrGHvb//gfxb/DJ7jd88rcH0jHQbgEfGVZUEGD/CZ+A/0g1jVmvDE/+STVF+t&#xa;X6Daf7nz4mW0PP81S/qlk80z6L4q25eLyHgolgdWzwuWg/2OOe5vb42f7zR+67e5OMfPaE7fb1&#xa;uEkvTyVeixayuXXsJmduU74J0yW0afLbquSJtS59cNMyxbUUdjeBrMUvrlw7Z1KXrE3a7jxVut&#xa;I5s9ftjsoTU5kxzP2Df4Watsee/hFqat/IYRCdHJAiU2NeoI8BGUsSeetkznXBKETl7nfMf+1w&#xa;lQ6MsmaZSXBh+zxDqk2fesKqiiHKpMOhljM+xz3IMnjTkQ1QIRHGMEGG4hhX8hplQjiAGZz6R6&#xa;gJvhhptuFr2/al/a+/iPkYoROtJ6IIz6OiXNLXy3VhmVICBBZfrVIjejVsdK1ppe2PACAZmr4T&#xa;MnVxRnCyR9uGBQrL71BTcTyrGmWw3UUyiqIOCRpoAxG+86BrcNggV/peNWMKUcrSREve3ZZUvh&#xa;LwJnRSBjzzFJFgzSHz7f4datJdy/8r1DT/bnCkKH6eKvRjloi8tTvLCP4kfSwwr5TwGjVRmEtw&#xa;9A96sm8QLDa7eRGLyGee0ZRJLEAB64Q+Yxk4NFq502KPr4ulyeusw9PCJhyfdRXMKR+Z5+qbeW&#xa;N6cNrgoMjmDu5MXC0iVeEbrTNopaBgzyRs5W5O40+a/bLZ6EXfaZKC8hjqqCVBGQPDVD5hE0lR&#xa;CFT/qCjcWjpDiuYr8ogptGmqrV2jPE2AKhSbQqGz7hzobzDidBu+iy5ShVKgAhPeb4HEf89nby&#xa;iFVZR/27emNNIyBTsuxSW90culDSsKQAhkCTFaQaH3drGd/FJM57PTv15w2Jqvc/tt4rtCk+s6&#xa;Pu2NL1lNwuLcNleveEnlEOBy4RiT6wENrQuoaZY1YMOGPhxMzYxLw3v+O9TE849QUwbVGJLWUV&#xa;uikF3Bl5BjhInBQPLZlhpff5rRvrj4EatpR+kf5swUHBSWBM2H8J93l1BSP3LgtapMSefscJQ6&#xa;iVtytBwyLGLKLYp1Gm1qjc22meKar+IPVI56tKpCDjTmrxuDXgPN5nRivM7bFfo3KiD5brpkPE&#xa;X7tVeAzA5zfQG+8yibBgt9BM9mrGgeA7wsDFv6kBgU4tuMLLb+MFEom6XGv1NN736nmkQhveTC&#xa;Pwmaa2nGuNVkKgafl0KUUxSoXXJDaSbuMmJx0AeczGRFKd3vVNRTbRhPcojFfoAVTio1mJseah&#xa;rb8bFbYHoS8jfJAqW3NlwVhS7WbeNccMjLNuWaqQgnCyRmLEBK+hIs3GcM0G6LfJzQGgrgtt+z&#xa;+yvVdJZkALmBkXy5PFYg+TvVNJBvqC1EaR7fJp+X8JKx+WFQkfLTMTgONDC/RXflMtJnW4/8K0&#xa;D4HTZuvfS6yG0Ttq6lIp9dMSUh//z6pdw/Uk0R6DMs0QiQp1kg7/fVy3loM+6/U0318huLyNeY&#xa;dQ+cv1NN+Z8OSmbXS9yTq5bV23HjraTQl61yFArL5flXkSu0nB3tcwG3KaeMHEp98Kx92RzNAd&#xa;gXs5JesfwDP/oKu74hY8L3EHshuT3MkG0P++nb6mLaHJv8bNdihb36cSm9c/E71XSywwj3yuhf&#xa;EKBcLuENvcakSe3Ns60hs2CRdi9WjjjLaBUuwyYRZItBaiAmwEkC+V0058ZpUZe6/M1jh6EwOT&#xa;VMBh1rWCteiF+8kjeoUaqsJ1cZnU4otx2MAGFDvFqLfuuL1C2FpyXGfpQsw3ZcR9s+wTF5UXgG&#xa;m6wMDPVLC/SifgUqYoV+Dd/xuIHmfSfL8XgaLbQU3Cpcimoqprydhw+YVmnOj/cHP6hrWu13B8&#xa;KO4TcHfFjF3Z7P6SokI3LeczoeOVSRc0fGvhW8f/XIx3As/vkn1GS/o3Kp6dtOlAzyKYu3VHq8&#xa;6obHcRF+iuA5g77iFqKB83ftT/kzf4/5XM28CvnuXe5/RE//m2fjv6DTn9E8ShpT9mZJ8bi8EI&#xa;l8otAq2qo1mBWpkaUIbfliBE5pYuJHGR5VC4rqLUi/ecIdH0jN8oYuvjGdN4gA+N8V8asUSFr/&#xa;wp0uAgJe8fuoekyxxpd+uey1rNKDJjdWjQpnjylnPNPyKfglHA8Z7w1nnL+Qk5/6WsPSedFJhr&#xa;b8P5HTfIf6Pnv19m/kZNwxAqdouPsXcvKgu2d2ncL+O85UmRweTCU6PW+LpfD5ZmI1Y581TV9n&#xa;v4OX+/Y0HhwbHwLpD3LSd8nK0q7HQnlqUfMqVnAHmZV4uFJiF6mEI8FpQ90jD77Bg6zaUrGg1u&#xa;IsRW0C8zkliD82e3dbtvmOt7BHsKESdizmiMUx/p5TKDrgqnD5HaYiDwhDdiuZiV3CiQ5VYycl&#xa;fPSfFi+K65DRGNxznyr6ksZjoZRrNjWjjLLyRgtp0AKRzOSGEJynEGYt652uWdFMpRBRiDTcEZ&#xa;nIqm+w1xKMtecoX8n5aBtiTJRjw6CeJ9afPZIXxYlkwXWj4hUfl0cXZgoK714s0q8scix5L52F&#xa;7qTEKCnJUngwFRutKMZMEkMCIA5qmGm14TFsrHaLnqPd5hMN6EKgG5z17fvWzD5frnU/fk4Wt7&#xa;w8Q0zzTAEWSUHtHa2zVbPPTjRILGJH0JpNCzz3Ws0OjhTTu81wWF8WGeNUveRgmGgLpgbFY+61&#xa;l62NVPD6fd4TMa2oqu4oSGGDzDZ5l8FFsaZg6rP0Vz2Rh6O8MGXHB6VTbtCjQanyACCoAT9fcA&#xa;JzdxqCu+nhSkOpDwHb68tzH68aelco/M4ORbSsnEP2pqk8AyyHfhPNubzBNkepVcEcYMg1UzVc&#xa;F9TDRtLxUyPRarYZofH4LGzUuntb7Ip4UMCEeU9CuLOkFx8wqPXCDSbgIMbXKf0vcSawv+JMrN&#xa;18TRCv5X6Hy/l2VSZeTthmamh/ISd2EOlv5GQGYioWF8bfZbE3Ff8bOXGt1Pzk48yF189UqXgK&#xa;x/V/Sj4pcPrUVsOM5/8mUXxtBqtapRwphMG2huRjbACTgZlh/eourIuw2XkDGnNg00hpw8/C6z&#xa;hi1WLiu6SebxoiqZPLYCC3mOu4vKYW8NvQlNtOVpHO1mkcBzjPWq/w9FovcEtQkSLP1Ei0SWK8&#xa;h7p9+WR/O1NL1yBPL/TN8eqJyCt0k2Hul0Q4fMaAsidLKA/1vKOsX3dK/Q7rMDvBFTxocjI/j4&#xa;xXzHvlGpUjciuHS/fpOScv5I1NGF3l+Opf80wYIH/h/zPPhPs4+GPoT54pFZIY1vQxguA+sRXm&#xa;7eoRAen9zB1H7wTXwRVq1ciRQl2HUK+ILLHGE8TakK6AvyWm4eZI70ku2/CL25YTEAWrnyz/qV&#xa;4BuiwoXF6uMp8QWd52eyP6R1uOooBEK9fGwLrJG1gNJafy+qUKDZ5Kpwe/cG4wH3owiKFPVqVr&#xa;4OIq2FtPn45iAfWY/l/zTAsvf/JMwnfz3y6/Auq1vIOvC3Bk+MTcSJVKfyL8lWfqRdxlvE1YD3&#xa;6ixP7CB+oIWUyXbOuWKpl6jxWeW78p0vUTtoMMB/RfzMlV0ZdYWry/1cD6b5RfKVL47gbi3TvD&#xa;/8acyuOC/3/rKev/OQPW19Po+7RgMZtiLRUHo2MjTo9EWAxRBGUV2HKUoJewWCfLiVtlZ1fZjP&#xa;ijxm9HTtD9RaY5yCp7yb+C9TXzlwl3/xcTfsV78HL+5nPxe7mgv0nIhY3UpV1Yd3z0k/+SrUxR&#xa;MavRnvOIlsa9tipLqpR5td5mig8aTGBHk5226gGJ9oacZMFmDHivUKRZKak0LTmrtwAmtfVXr3&#xa;lmio/f29iKq3lZ2ANMkvtWwUQpzGoW59HLDLDCgTKBq8OzMKeIIwonqh2Y/eH18yxHrnT6VgYd&#xa;RcLi6Om249wdpmSF2vypJ8yf6QOVqmwvnflkDwATUV9O3GGowiG0DyPhwpADF6ER5h0/wJ/qaW&#xa;uJgp9kUJWX5UyOIEi6f21RaG+FzpScgFYWY5J+5p6L/YJf5HqsVDsQeoezRJxXAB4Lq8aFHSQE&#xa;91lDT0OmnMd4D9/qIS04Kj0JPLA4Hl6NfKXlQSa8lO6DuJFk+tBEHuPMc95LxzR3woO3HNxHPc&#xa;XxV7gW2Cri0Jb4EnWwgDovsUFUT5VhdzZl4i5+nbXt6rMFpaBVdgjpxr6RpPh56q9qWc4yR+4V&#xa;ijwdupIIxoq9w4qi72hGX42++umswpF8DJCZ3t8LdwoEGSlaSYiTVwjhrqqfjhAE6seq8UEqqp&#xa;Z7ag+yllUMCJxiWvrERXvO/fbhaR0qz0WDTgR5JuTV4dIbKZ/tpEnNEc1dXYbPpLbwh4jR8bm+&#xa;GM18WkarHm7zG00CMSjmZ6L70r3AE520VFUtWOnFMiuRFguht+rl5Wg64fH7dgGHaTAqtanABY&#xa;LGO38oQwv1v7ua9XMIwl7jmSDXdEwY8XVqgIOCPA4y03WRrTqcrHdj5bT/ivpAHVkQgBfNZ8mY&#xa;yJuz0TZBePMq1i2hIevl5B8pp3ld52PtBp/lA4dj0F9Jo7DNTiJWkoDSuN2QqL4ZD1rOd0kfYa&#xa;sSZ0cUliFqUzFQFbKrmQw5rt/J30qwzNRUSMJhYVIrclpl1WPx1466HoFAVlR1Jka0p3eSNid1&#xa;slnnpv5cTB+eCjMJKila24M/ZJ0dyebUcWY7XwGlu391R386d6YR9lxK5aWrY2yT05lwy/GpCf&#xa;JpdRbO9TJA7yrfRlhZZ3ZAbhTssIK8oMMxQnxtwGZ56q3c4ducNzJOgA8QNrp5b6R2CRZP3V+w&#xa;LQoobwuOZfvOPAwWQFLXo7fcbi9g9nupILtw4RISailulxHyl/3uRpoWp/bpUaWT8ZBqRciZFc&#xa;ZYuGaTHWP1e/541U1hntYgKMgswbdfbct3ZMz+sW2kU25+56pRjqZsyXQurmPrMlV4UjmxG4Vh&#xa;wRY78tkwWteLlzoWW1sa7XshbQIDw6ONeg5y3j2LIdZtJYvrF3FfXCKha1xvXgjB7HcVcJaHiC&#xa;G69iaDtechTiHfORzfl62EyftGzsyb2+bz+6/KKAp4U2xeyoXT/nLfJqjpx7Rb5Va2VERc0X1u&#xa;wTUitEbL6lU9IHj6wKX7ut5P3b272jzCiJB8nNF29IFTCXerMh6kPAjFOzhXR2w4uuCSq4Posh&#xa;+mzhIDC8l/RCKgXQ4AHDvJZzqjHlYGux74h3x+DnZ924+E/JbA92m101LtcmdT4cqz1PIU7Zf9&#xa;hoe88rmkfvGoeOHocbk6EPk2Mn07nWyd5xGG4JJcUIpqX9wmINr0uVhAqrdoONkyLGSIDtQd5m&#xa;svhjMaynOwG9GqovJ68fTbfZcl0zABZ03eu2FWnwMmSZAvX4HjSmBj6Sdx9Zf4C5fWYBYgU06i&#xa;wUYmi/V9k1C24UUP5VIi+WppPZW5uNNWejRLBK4rpbz5ZEk9r4Xk7pqo9obp5Feydrv2CavxyJ&#xa;KWzsZ3VYhZr6gH3r/st8P2i2MfZkf4g0XE8W2gtlosBj907e6OoJakMwbhT3lo7wsipb69Td02&#xa;NjlJwd7AyPxvl4tAteOLAh3igstdaEy2beA1u/xq7Msv+43j79yv8cd+Ty0zXc79st8ZgP9bzw&#xa;Xb/7BP0ObaRtWtVVGPIL2aNAOuowNfX51UJA6kKhgxdk6Qg2XlYs1XYVzkfCXuMT0p+NcDTW0Q&#xa;Iphdp1+yGqc9el7PJv4e+xL1WBxOa7TvflnJKi1tgjav0to+T9rjGhGJPqhGP0e7y9hbsPPXBj&#xa;c9rFpJaW7IqLEyJ8++8yALxlZJ0Zc+0QjXbO5I/NB12nGEI8vnl5m5vqRnsMrjFJzvNr7F48Hw&#xa;3AOwi5YjE8PmcW80xgo/OLehzZje2hzwq+nUfKi5vdBXISoMITKNqWwH5VRbxbAap9CDxGqovQ&#xa;xqZrkHWeZ1ezSxi0zika5/OXDmwVnlQbb1E8ABooRNyrZnFHDculmn3/Epzc4GzYdiU/Bbllhe&#xa;nsLbh6dSTkQVruzDBGSRVuDuP/w3DpkKi8dWk4qUnXjlubPPAJmZXDZrmU86axMaZMtPmcBUOu&#xa;GQbb3EvswywhJgEJOamLKdMOOVczHO8IkJtViBLWEak77Bdkswp/QperXGwcM4gP8qPLssELXc&#xa;kcAJ+2Bm2nFbCVxGKkHPRLsfsqmJKCQSCFh0diVi9Xwan7mUQntvQv175Ls/dfbDoqLlToiUmV&#xa;zP+DCCMzxtW42BaHs14yiJ3seqEzXsyYaL9PoBAywygcrTLP2gZj8ZV5Qx/9y2tZoeeL7ilx1s&#xa;I6anlhLQ1hiYECDXz9tGvMszggVlQKEh3Bpt5uG7uDdgWlVE30lCrHZTXbDu4SjHMenvsgRnv5&#xa;MS5eGkK0y7GqN8igq4CrrPCZaGMmMV6XWpHX6A+Bpwaa4R91kfm3v9JrC1jMaTsNDENCODtITz&#xa;/vgIXxPFtsMoecPKYJ+jdDN/4fa3AY/A1eniIpLx9P88C7TBNR/OhInf09kI3yEFkQ6ZfIkGUs&#xa;hqsmKB8h8FwM41Dza5a19j2JKiA36PfLV9qeCUC7ldPS1hn2uODg7yrapM1P6MfLfeK4OrgxIZ&#xa;kdUG/EBMYwV5IGPsSC2VS1gB9ODydx2Zi7kek5gDyxTS7IZtsqGEdQzHn8NO4AbDXw8oixll00&#xa;wsdSBYKr+C0uBZB5R6lTRPIr3suD0dprEpenUNdbbc6+Z4z1jT2PkumX/Zb6I6uWMGs4Eip+2j&#xa;X/b7jFPeiVZaOlmnWQbg3F+xxtNrtsAFJRUPY8lCuk4cCfWex1+Ml+dQE8NaFXaGU8+XbrRmbo&#xa;0dZxT52e6r0PSGGMsdWu0bHQUbQcLZTUlzlEEWUmFmjsIO2ll46fwtWoFFhhHYAiIE/ctnWJpc&#xa;lR8s1He2En6kxSO/twlQeknwQRYqx8VRMmtBv9y38SDr720CBV9xjV/umxOCGFb0MYMgZs4O+R&#xa;rpxTsMzNIn8RuC3v0jrMZgE6VW9FztpUqYOkP/0lVLLOHqSCrnFeEzLa/JG0WbUzBE1BbNL/cd&#xa;A112gHqCpfnXxLfPxybWiTLVN8a9viOwvH0ddV26prBuX5qGocjZwSdQAZZbBoZd//fEd7jbAs&#xa;U6l0dTqsxi0auBedrg+pRIOx4nXprmbWtLm/GbUOvz14tH3wQtOj5RKwUE8pyCBoy2+d7gPn7c&#xa;ddQAwK4DHmXnhxtGHqYnvGOoFMpcY6eYGB5FIzL//iCoHX3GGQpl1uCrakrkG7LHhIqj+EeRhE&#xa;jgBZ/V3+57uKLB5/rf3Pd/3ib4Lad/NLNZU9cRVxP7LcaetnY5pkthvSK/H6w1nryzYpENohOh&#xa;JVk22mw4Gg+XEq0xZfmewqa6o9M5AXxPJ09IV8dePl9PRjZvfY6MCy59TmAWG4ug7eYdYBCACK&#xa;jlc2f6yZ2APpaAepDPel1b6PI24fH2+vPC8OdxgOBPyE8+jun57O1lvFPB1SdXTmdqCuCmbXur&#xa;mzNVu6s6S/ict1UM/RMzJClT+vAtZvS5xjBu3DX7OF+LyrmnpOw3TcJK6HyIc5r3b8Wrt4ZkM5&#xa;x0cznvqmy02j3FPT4JZ6QTI5pKQ7lHETvmxrOu+wE6ScpRVxswOJvXRV4uT2Eb8Mq+HeV8tDzR&#xa;mdkoMs/AHlwMtdUlVQqXergaIYLjXtaa29X+vW3VY86VJyQcCUDUQR+1TNkWDes/YMD5oM+ink&#xa;kxcDatU2LGWnZXhgX0iuyaVz/yD2aopj8C6JJuRLv6rRsjGYPubUpRI1vcZDLZqQ/WqPmesFrx&#xa;PudFM9toU4p5cIwqij7k3/mgbE7NeHR//9jQEu8ROt3Gs4yVMX9dYy+7MkZkYafvcpe03QbwEI&#xa;txCMvfwjHPqlQ2+BbOgH3Rh29QwT1z02HOmuByB3nOI+Kls/QF6O+Zk0/KouKX2IDCHUFCUYjL&#xa;D+jmvLMlXxe32l8D+HBqat7pwp1LGLLuSF36MDHwAdbal0VJ/KUvkPip18ZPWnwk+glOtzAuCl&#xa;YF0Ic6sZOqmpOWbV/7BiEn113jCVWZPv3w/HBRK/2tziy9Q4L/B0FOk+li3oQkiZUoCxTzFzCf&#xa;9ktmgCGj33k639nBvlzQy+nyQTPwSGFmM7h6L8trwmDO01iWS2o5nT6EOyOzWYHV1kYtEeINLG&#xa;qUK/jh+tCfAVxPauEMlLiAp9+/PXc38uQfF0nB8BF0vtpzkqH9DZZVe94ZrmWTcrssSnqzESy0&#xa;wUZ1sPm7jQ8IWULidMaea7dAMPXuFaS/QwbqdEhhJuMTe9HWPUcxHw0I6onLQ35fJRkw05LyKJ&#xa;+JneH16WN/yx3e3ZIRmXoMY5aa5or5hPpnPsYeyPH3Ifgsk7CTJSGDu9R6TUqLSjO2/UUpBpKM&#xa;Z1lqrMCVz66aqMGTSBRQlSB17p2kz9ptRUsGoq7kkJAY1yw8V0zb23iGexxLcRM40CpbfXvNKk&#xa;pInxbEgv0iiBu+BpIG5vQ2QDWz1ZzHLuSfbb5AqF4S+2qNkD5KjTlBVgBjST4jCkiwbaOFoXSg&#xa;6CPMVRiFnzxdSleU1NieEXV2w+GExFpUeT2ECdSqJn90G/eW1AyPt9n/Jkd4EHRM8qWNw60RK9&#xa;XfAGCPFAtdn+xPj90ORB3CDCO6oTDkl1bjc/i+X2YEfDRBaoWORygIimhVpgLxxyMkNCt/g+kE&#xa;M/hUzT5fHqw80AgnEDR9Lf2Ch3Cd6UG/jXuS1nwrh7sfNP3sMO5J8E3lEktgcuKI97atJtEV9p&#xa;vZpQoKelewrllX2AX1I1zPOFhAwPsPaMYG+x2CRUk2eMVAwt18CrgXVNAahzm7N510B/9gyq8/&#xa;xPmQYu2NnK0LyJfhwQIIOeuW/oBUTt2ytgbKz02+T60sCRNHLVLvHGy4TdFPq/xnmNxOyfoEBN&#xa;BEWC7IiG65gJYFDumlwEYUeRvtUc3DZZgukd72MPojy6oDltXHFmhMrsLEBMTefnEdD5E4TrWm&#xa;m3DFyuoViQPfRWFaxGqH/mqzVujDtUHs3PWShbWpXfYY2FQu2cBqZyMjlE0N9P1lkigSPZk9pg&#xa;WaFWXno1fGDZGSapJ2vJueiCmSc7kHhbuyTpRfv1Hdmo6xmK89dbEt7pQmPeMpgqel1T6os7Qr&#xa;J4GrhkM9JAmvgY5GNEL2Jd3+xD4Lr+F1tSYp6fd3ZdAoxgFcSkOH2qMv3/GA+YsRUGBE1QluK5&#xa;QAFU6Oy9oQ3Er41J589tc7WWNq/JSSgbc3I67RxQjPSzqocVA3/3G8WG3tsQk4Dv59jRfSecm8&#xa;6gHThy6MDyBwGwWokMQDoqep/gP0KRaELGmE7NlkCpRuTWZu/GiDETXqJ/ntEtc2q4rWCvCViZ&#xa;WGCEli6Uupw6RLMFhCNPhnAAmVcYpA1TV6aZA6TRzCbSbOkeyhgfhpNWL9QzUi89g0DUU2emIC&#xa;dx0NTjQnqiE7u2tvSSUbosrN3XpfoUUyTmOF4ENeyKefGNWP+FcTF/W4AX1Ub2HQV5R8IYK7bi&#xa;8hrj/HM6443bECLCyuEN1hf6K9dsV24NqaRXNY3gkI48Kp97NVd6305wwz6zzNfCYYdNJ5uno3&#xa;sf3atPMlTt/0XcMtHIoK9/vbMpdwy1M4jO4y01Ql/s4X2bwjpHY4dSk6NYlBI7Uym4im9iV3BX&#xa;3mOwhxZcWUsUKnNke/tgDNeO02EXPzPRqrZ4za4ReaqinTvM3dgAoGpDI9IqK21BDfF7fCU580&#xa;17almkM428UbFOAsScq0Yd+R2imC7XanOB9PdkfYfD2670vXpxHR+SxbP9QzFIL8hzNFtZfmcI&#xa;hZWQG3u9KpyKYx37TUWHbwqdhYiUX94wMWZbfWuIeKXMp2Qz/gd7A76gRq4s/BcvBeYqNRcajH&#xa;82QHCxZSOUq9YtdFz3tfaPcc2SImtt1VGDzb7I6XDYa/KnesLtfuPFktih72dINi3o4YKyknDk&#xa;kwLwcYZyWcIQ8MKINmOT3xX41uaQyyKOYJ9YfgZ2UfreQ5WnrCNcJL2qEFUV1ilFmBOQG4GkNR&#xa;t3+G5nql3Pvn0O/euSL/J7/A9t/8grKbmdn/8P/1P3ZurrmgqmP9zCYzm5+c46BGIwWHFJVOTG&#xa;ErB2/51IJcx7GXsoqDtMvBb4c5Z7uxgVZBQrN5WcMq8Fw2jd6Ehr1AmX7lYLJwcWovKqJakn1F&#xa;/O3p/tSj94Uj4OfN2sU77yv8wbdbAOekctDNUDrLQbGUf4Zuqdv8AkWEr1juwb6TaO4kZkSHNo&#xa;enCripZTaHq58/sbKa7Hx4040EMDVflrMEFdIvYbrMjHVbBnsvoXjyegjWYAdkfTUWIfF+cH8e&#xa;h9HRpZd0YuZFigvlBaB7HDI0gzypp3agThmliorp1X98oedXLCTxqb8x7uNKSvmHV7rcHShGdM&#xa;9ez2yUIs04CywdkpJiHR1ifTV5lzK2YtYhFrfGXVXx64KjYjHxlC/ST3zaWNKsdS6AzA825JM8&#xa;447dCqNu9sfQT716HjHMEKRqM006dObskYhYIJkQRXHe6WXFGTvDwO/yCYpVVCrG/1W5aZJtCr&#xa;f6j8rNEom5zeK8r9vutJZObaXoEPj2jEHTGbNyoJwvIxLJHTNJyxMYnCCZBTmZHOImHgqQkAGX&#xa;I0G5ZmLHaNz2zLNKhUX93iwv7I/uJiekYNgd5GAOc5sNBuk85FsVd7Yfsx2kfu+gzfgiRQEbuN&#xa;YZwQI0ZW0ajlgbYLe7MKLXThwNkKKZjVCYdAxkUBSL3DTlwQfY34H9VvmsGdKB59E5ho08ZrK0&#xa;FMFY4gKfhLEZP3EMFsZnaGZ2iYRdK7m4jswwVi4ow1KKxfsuECE7dNgq2Unt2jaZNymuvKx2Ng&#xa;mEeWIPFmBgg6BofBiOcqgfTt0UrWUrtXKqED6QrqucFVvAqGZWFFZ0FVhdRtq5DOnYdBzBUGEN&#xa;07Kg5E2u0zkWjNt2MQwtehRtqX8Xs5qmhslXp5u2AczeAVOCl7GTkpXwR3lR9NHtDp6Vlfpxlc&#xa;y+M29j1QRXGKFoXwE5GqhVyiAL8NUZxmxJKhW1F4U2MJxKaqB6rxfqWjLAvuiANDJathVc7fuu&#xa;d1Hk3/TqbZ+ZTyQxqzX4ZQHQBTbf25YUvnq/mmjgWmt8gxUG36vcLng3zrJ9OiIv2/YC08dTXZ&#xa;ZZ824FElvzMgVo9SWM2jPU+IepNc22Pvayo1Q/3iaaco9inZrDue3acshpqJraYrnG9EgvDuFu&#xa;ogTcpSooO1bS8Vgz4xRuZWlsJs3aEhxLAjJfP5+cTg9H+WD9YD9KY4dyohF13dEhKR/lda8uct&#xa;gqPSM2OdisAlV+J0pA+l3K4oREIOFyBJ70+Dr0QIAUPcGVHfihrfs0xgNgtZQOI2oKdwVYfc+a&#xa;nPFMSPTKYUv6zM3/KuRYO5NuMHIvQI1x0RGdveH3u3PzJ/qZ8U/PleVlLHs0RZ+B6N1tkMCfzk&#xa;0CRIdj+N+dm6R4WD9/d25CzqYSIeMP/dW52aYwdJi9tTPkZasQfNHMHf9pel8MDoGDMmFFjEf/&#xa;0F30FTa6ZQErxLthmwCF24Ev88Yt1FtlI5/sVeX2RH7YX/gHSk6hKSK+h+MC/A6puu9nuG9m86&#xa;csBnpDhPepF7IFcCu9EB5JUWLpvuJRYYOhF2frq2dpkrTt0TtpmWtUMWvtzFezzqYElPzILpVh&#xa;7bxsSQVw3/rDEGNEp0VD+9FDEbMhaBWA6JT9EYmJXIc83DKlVFao3GNtR7UNtWprmra6ETa52w&#xa;sZLfe2K0tH7Hbif6o3eTjMK4dDG0c7WqCkJVdWMXUHPEdvSF/qzbIMu8Lh0x/92CLXzNCc03Xb&#xa;kAwHFgrwIxxFhBZv31WjXDfJQ6TWdHO5yT6uosPfBUd81aLCpkGW/9q0XCJKzE97L1pFTJxW2b&#xa;ZmYG5kM9oGbZNWkNYbSdseR+mO68DYsXP7cxFdsfPvys1whu1uQWnjRwGRiUejR4aaPam7Qt02&#xa;GfIOZdTHFGjLBJjZrscMho+tWbmzQn6kb31xYUCHM+e/zwH72OSBdUO+e+fzHys3/9fPw7+sZa&#xa;Bq/jnSIxHnWF+eah2JhML2aUmnqwmLURxIImy5wIEPSmT6fT8dWNzS7NHcGtpzi3mbbR3ZxLAm&#xa;sNj8nKln95COTdS3BQzNOhH49jYl8GPtd+3HK+K70Ev+wf5btNYz5cibhWKWAwndntFs4/mWu3&#xa;AUQhaLdr8lltIbnbGmCYyL5D6sjIgUq6mpYpkKZbnibnxYYxDDPE0Jm0uCYrkZ756uttngbKnX&#xa;MR5nWzGPr/OTGPpgi3G2zbrA4VcWtqp80nxQPncYiqgPn4t+tjo/DiZljcsk91K7v3RgFM81m2&#xa;p4Xx2pqlckssEWBiebf1T+ao+2Bv1UXfeku5rk8hz5Ygt0FHAsbhTCIB5T5rsMZ/RCAz3Yr8eB&#xa;GFCMvYIO5K/B7XBJ2HZ+d/Ep2cgbl+7X08DWopw1Z12etIi/6aBNM9zIuenFntbwkwbn69rHXB&#xa;0eqSvr4Q/YxF19M/XUFb+ehoyrgigYd5oV0LMOT7eucBCndzjxjtwR2s35l6WGaBOtXM6JD61Q&#xa;AG+4DipR1+4AUEeX45Y89VxiSZt8mjMegD4QORHJAibRQ6bW02iJLC5pNpxhPKi5E+UDnGOCyO&#xa;740qftS5JWstuZiemKYpZeLSPLaES1gh8SEAEwoWa3O+qg97rehLC1ynzDLIOzk/yKM2cGkob4&#xa;MUCT5Ru+B+3JOYssVZcPmBivicdRpDWeQOElOgXrqUOOEMeAl2OQ/0SMgQws6/Uz1GaSE8ormr&#xa;ducA+51ECSvFUWRr3gINLcWJXVsKXrOItDeRI9ymZBqnamAKC5KekOsstGmj6mGMe9v6lEswKp&#xa;3koye/SG2JmoKNFtWGAIfxGdWTQKpZDFK6WVyppdxCZHe77i5QqApjcQFoXWoOYVfE5rlBjoRr&#xa;sSD5zAQiXG1azDjxZR4AY9mkfGBVcCxlHUa4Ozw2pN19qfKkq28Ltod3GuCS5Z1CFpQMMjEOEt&#xa;8rr6IHfNNrIVtSU6rmTy1ubJiRL1RdpvpN9V07W0P89FF+iekrAWN+gHUYNoTGYvFrZ4qLlhQN&#xa;tSvkHw9kXMD+vMxFczNHc+b+RpcHBUEevt0uTuJzMop+zNiz6hfZ0Rqzop20Ya/WRtUoEP2O4C&#xa;lHkoAnFOuPpwMmkYdIIoWKXDq/gRqcfixT4nhCDFK2165Kcs4+kbeM5uxQxH8WYOWEu5Ztf8r8&#xa;qzcURSVqvRxG4juZwfXYMMqRQVHScMw6M96UZcl4V7jdNEskqEnVShAAl1uEz5DyBW0KVMfYFa&#xa;FgtlOYvZZEPxVaN3eGGoPWF+rBB7RUvoUClsXk//mVk+1fEFaQSFh8J2MWct+Q/zJqUf6JMlyB&#xa;IId/iRYXfq5An6sXUnQoZuVTzxP9F9TBZ366Vy0RKHbB3kcH5+fd1fL75nqiiz+yzQRScgxuYN&#xa;addEKfHDCs1ZEqiygg+rAqRRJ/92h8iG4oPtzL+AfnYo/wLkh+dC8gKqMejttYzZMsyhn2Ho+g&#xa;wvkcS8gHaNP2I6ybysSyvgfWHcOuV7I+tiOleu/PQaegOsCQZbLxVmf4rekkz1q5y4eGH5ccN1&#xa;0GDBJvP8oqDCWHUcbjhysO8FU+2plMK3fqexviRqhrWOZHORUr8KS/vdBL/UwIiaAUO3L8RN6t&#xa;qb7Kvk82qsGEiFBBiJdY+dc63MiwKPFQ3yF5E3QXaYFuxLlrumxhk6JtmcMCPYkXEGW+2SPc7J&#xa;VMx/trBMcIxWiToGxWIWeiD5t5IX4CvzZ4a5Szp8FH8OkyPbfjb/sV70TqdgBPULIEHxhDlLjy&#xa;3JM1j3pof71fRmcl7A+gVs/02CtBn+8ZKRh+kRbVbcl+8Rq9XF9TYxNK2QKaA+wvyGdUGW7JKp&#xa;x+n9Dv9YalGCQ3lsXDjwYl3o712R0uSdl/BfUi8G+L8q9f8c3uv/4+w7Ha3UY125TL04DCyOkg&#xa;09Df1ILInwLBGHdSbDBFkVSH99w6jc7qx1tTbS4A7xNueX1Au0dFdMz3/7Pn//5RwcDIOwbfTL&#xa;6Zf0hy6X/S6L3zfZfoJtEfVYrOTm7LTwmzvldCjtrx+OYrazWq+2CCjvkO7TtSrq7rsa0Ka7f9&#xa;35fZmtpMAso9GlPMEaTdXKQVwkLf9zUwT1ZNZ3VeuvCk8aGl8db61yeAYR7Ms/5OptKg/X2akd&#xa;4LQ++LQAEGwOpcqMLT8UDM1gT+tpWqjHjjyFn+i5xLjX5qoQFcbwTaqRMJ2OquXskDA6RuLiCI&#xa;4r2X2jq8SwWNk05q0otDlKsF4Tlej/KPURPHYUnty5OFPC+mvKpyLfHCSJOcApXD/BPMIGtlEb&#xa;Wh+vEUXaJtT8xi4gGh+ttEmHxswtFFEnReaKD+miB0fuay969KldgyK9XZFns0loFJKB0eEq2u&#xa;K5E+Skp7IEBC+6ragf/dlmdV4/bvcQklOJa4SXg7nNVwnmqulMs1BdUSh9SPwk4o5NQVF9A65L&#xa;gd9iz/X/IvbRBL/EvhLlHv4vsZ+L+yP2s5O/xV7Q8LfYq/8l9kihH/H6KgE/WlwFUQwKPSOsQK&#xa;SZnTl5890xbzx4YMM1F17njRnF01yU+3gMdFCUi9iSeFdcQVXaWQtZs3Zw25uPiwivKfjdSSjm&#xa;3+8QuqhN3wX9q9ij1QsO/y32tv8U+8y/xJ4t+d/E/kjsl9gj/y32A/8i9qn/Xez7xLGpP5Zfw2&#xa;xo9lG8P9GoI4VMZWIQcdfud2eD497D2smkF0GpYaGSVetGcefribF72K/MAHpc1kTZjPr0Taih&#xa;l2Ghw6OSrX6wc8Ne1d9OMFLVbtxSS1lf+sCYqaFe65sbp2hmYoYvyxlhXx/5JWncHaEEqyJsOE&#xa;816KToOxEWaPAK4UNb/Mi6n2TIkGjlwsVTqhENVR6V8wFF8kq1qGzd8oLGBQH4NI21jTYoSBsy&#xa;cYsEctNi5Snrk8yj0IjdLRWVsU7di5RRFpqLB5VBBWbyZrUgIHenUYfkmlt07ZfYb/xD7PV+iz&#xa;3z32KP7Dby0370EEpQMydnK0UQtfOwHmtZHzoIZAznlAE1LI/NIjVg3xe8iauAPUA7HKHiNJ5V&#xa;NJ7EPpEyonhCHiPA4xdMEGitZocY/t/F/iFzQNbDQPZ+0jL/nvY5QwKLfcGDnmTJMFnqnm+gxu&#xa;91sf5Y7E2zabiC8TPJq4ociuEZ89H19HmmS+qqaFlBC6rPZYNnmOUtHI+lfNT9HNX3GIjiOl6U&#xa;Igj1CpmeE0JLsiWW795FlKtuRFfwqxh1jNcQ5Xpt43Y+Bd0mHdklg5FcL7gxIfGT4glfxbOQBD&#xa;1IKDn2MR29CQJQDLAeytT73ga1hTUHkM7n8zJeJC4LJ3oW9zzc01+1s5y+suKQ+/m/X4Cv9N5J&#xa;vWr3IhChJUgiR/Toxm69U8IGcQ5Zf2PRoDQO0asyXYCnGx42gedq/SBtEEv2Q8rwR/yokoyYI0&#xa;GhwCCqgLWmCZjp7IximTTdztkTdFuCtIB4UJr+kE/7F1E9aQahTA/pDZcbarWfAHmUGuUI5Y3L&#xa;KxNXxIGLFrEm2goL1NnNw+gqKcL4cDK9b7axmWhCsguewHTjayt+UGIkCCXW0WaTszTAtsdrVT&#xa;JasG/9m2WROxjhmzguKJekIyw2lHDXPabF/xrJBW2fUWPW1h/kHQ5BMMJpL9RF+5Sgdk1/h8yi&#xa;fJmNK3X0160VeQg+lsj/T7FH/3ex/3tOpOXlq7aI/nZOlz72seESPJCyAYcoPS4YUEkXjwRmig&#xa;GOCg7G3iNnkBA4Jud5QwGxWgFTFmbU3Dyn07SoottZzw6hmrRKs3T+w97Ghr564+H+oPaM24Mi&#xa;Udr80+WP5oDvPh5Tr+dPU/rTgZpvr6cu7/Z3DcHbF/W9yeY+Hno/PZfVhOIhgaOGRqvbIc/PvJ&#xa;ibCj2cfNCCbDBjVVmyCh7s7oS4hiMtMYd6WRSmRymHdQuG5HMzLmxcJ7Rf7myyLOIboeO8jck7&#xa;53y/reQF7JTrm12VITiuhBzCCIzaC1Tqq0JLU1VrlT9ZHA/SKWv01V/jwGmnW1RZp2OqqVPlrG&#xa;w2msFkuqMZnKGiclC+WroVFhM1z9NlfEAVFHm5zg+cWHckXYOEd153JJ6AxL2GsDXXJBLBcStc&#xa;Cgdv/THYX0ecVwQi3zqFTfTJoJWPG7CZ6XALvBIfPmpzP5qFVScKaOssn4C5WFgFNh0nWlFxWw&#xa;EkScBYFkJ97kZxSNfpmXgnaYoX05Bye5vsZ3hdRRGvQAqFNa4CGV7I5m1M+KxWkZIPvEpUSk7t&#xa;d3dP0UKx7dap5ayFFfonzG6DgV/BGXrzbUoMMMPSwBsjWgycwZVZkegscOzkkSP0097HJk/RQ1&#xa;Q14dgnmaBAa0mssZ4WUnw8zqZjj9Xo0YSXuHPDB4cUZx+bQKGMN2Xc71QKhAQv1nTTw9MSCw2a&#xa;BJcdcVdTlben67/T1ooq5mPsNzLO001B1y1GGCoJavSUg9Odo1tH0BqD1xy2twO4gwAaOePjNo&#xa;+lQf1jcWNbJqMmjqwfWb8zfWf5zhxlqoR1jT3CKmdEZZQ2yhQubNYGMmYZbAaoYpWwyJmmTTEF&#xa;GVMMugFCAI1Y5qxfjKlMqMzjSvOCjRlEqUWxRbkH+UBwUIyDviBIADw2BjMdBhWuWy687rx+nU&#xa;YAE144jnfI+9uyU/x5hoXibqufuC6nOj2TIRuevBtAmG9AXpPlW4WcFRTQCXaKwRla94dT1JXH&#xa;gDQTukMfvZVYH+4mM8AEtoaeXdwNvmdfiGhbKor4R0k11kN7ua5gOrOKnI+CSYbPh7H3s3Oawn&#xa;WR+dMT9KCep3WTQ90+eqAtXDENlu0cwFqMa0sGhAtBcTNsSGtmKtuQAuQY4O8wPnfeDV9ZfH73&#xa;zWRHXRIhIoygM1mcVESeQHDpYUeab7hGUIwRp/1eMuhWgi0my0ygVDRXbuyuo3xMjTZP5VgaQ9&#xa;HVqWbnBbtwL3ZUiRmISzjMyvBl4LOlNBcvZTu9dGbAHHz7FaxvAmGhYns8mCRF8SoquLgpPToe&#xa;F/kWARy7hmUVlUx4i+dpcyhurkQvfKkTxT4XcgWuxRXyuWdKCw9KsR39LUaJtgZnjnkOwgGEM9&#xa;wrqWwc9f9D21s41dkv27qBIIFM3N3d3SEwcXebuLsT3N3d3S24u0Nwd3d3CZ7z5VvrnLvX3rvW&#xa;3edW3apZs96/4Pn1GD26WyIvzrOVYV2fPGfSv28ZRSDfwbxyWyspE8WrGOmL86jQ8OTRjNOuo1&#xa;ay2ZozhU6hKk8WDwW9fAUFZhTnDSTxd2ih9TfiTqQNzRwU3WIt8QVYBj8UXbSf61iM7RZCF9wP&#xa;XlmX8ViHTjsDHCMRVc/tmU9NKEqZlLl9JNqp4BHh9LXTKZKpDpkdLzRiqKi1z1zXJBz8ERgtH+&#xa;5Jo80VLhc9cmJoUbV3sd/pngVf0r5W7xzZ8MbceaL6CIK80uAct1PotYTTcLaGEThHde/kyqPO&#xa;Na0ED7W9Op9Bb/QJBk+dPfNjpjk0SB1qxNP1JhXFP0s3q78G3gebuWTYsNrbjxxYpvpbLkZ++h&#xa;2NU39S+Nq8ZMl3s3WZLi/OsR9+i7N3G1QQrKuL8uU0VTBCfy+fbGpwKR028LMdcUIXvQ6oiqLU&#xa;oCA8/ZrhvgJKdWQK+5tNQInRJVYkT28QwsdoEEycVctXn72+T3WYfv6eVS+lbPgopTkgyPk6eQ&#xa;9i8sGNquLqIBpMB1CJlmNmAxX5W1YFZuhvOz1EeK0MUseQRHuplOgWwAZIOqq1QUCU6UhhxemH&#xa;EeJcc0N2r/MDbv0DrgkcoT7IQsk6QzKpdbP1XdkXoLejMWkndVGe9WOsaCG5xqQUy0h7h06Fun&#xa;N8whGRcgy6ply57LH8EUJJqMyhQI1ZMmlBh2ekSV2lvXqw2OSJ0rde3bKX0a0M6Bx7lfHTRSb8&#xa;KqPTYshsqxHYdVZ1zMOkVnJKGuU+ayY+o55C/jFEFPUwgl00GpyqPRHb4VQ/oswiMSImKcNU5a&#xa;xuXsAxxcXLTb/AS9poXjh/SCNBRn6kqE26IhQPUiRtHiK7GIlvBkhsYqfQqthEVAy6pqxX0LJF&#xa;FGpKnD4mOs/PnqusxcYL5M3zkxcN7K+XZ6A6K56Lp2mZto04w0lAIceviUolU69Vt8StWLDDQE&#xa;u08IhwJtqQ9AP7+GB28Mr6hlKb2cQm8j4Ro/pK+Ci8nBV1Z90vHangWRQbVWjUyn1f93MSYQzd&#xa;oMOPOVXWLgdNcAW4DJAnVRyWN92lbq7GtM9rOXSHrG9k1SV5iPHD3rQ81ovh8Hn+kvgcxf+t4E&#xa;oOy8tufw+JwMvM7H5n2WxBtHBmKuuibP+oCrn1Zy//eCGyJ8yl4OfLfhZOQgc7+fsdsBtyeFD6&#xa;Te6BMa9RZV//IsZ1qDUUfmPjbugF5SZFzkj/Ptg++4f0avZAgGuJpz1k45N2tslaSMhPk34h0B&#xa;eEhIlozTWTjghNLNfVF/RNGbqQn3X4vSQDjuGljYArIlBxixnWQIGRo4ZnsiguESj5QOSGelOK&#xa;vblR8Rh1EOIl5fjOFS8mji7kfjPH9ZUjjlyMOW3rA/mgdEkpn/fyIXMQ2g0jRiMuHm5+3sqOlQ&#xa;qnNMzqeifP6lsEuZFQ/ucMEIMir0mhu6eQO21snjHprHqwtA7x1NCg4fov6l1Gy+gSAgI12uHt&#xa;e8D2000Cp4aaA1irFV7PN6kNqkzak+FteyxsKaWD+Dv0WzzOLIrrtMBu+/sDt2U+02vcei4sJT&#xa;e0M/QQSrtTdA/eUa2DO/6YOq1d2AOyPskD4z6LA7Q+nCQGpCrVLiHXhPPKuE6OsU3NFRCFx5mx&#xa;bcC5NoUHjvGV+0q7YJNX/BwpF05RkcYu+cgK7RpdfL2IQ5PkGB2ybVLmmlG7ioNNCq6MRaNEu6&#xa;7DqjEoJRN+5CQxmT4MbGSFfG2NDIqsHsQMnEVOXiZJ4zFai8VU6BI1o94ijKTeIj5POuUhe5RY&#xa;L/AMubYZ2aJRe/BtWGeggy46KL3V7htOunqWHWgOthh9mpzIdezn4RB83uF6a0mO7pWDutGMMM&#xa;jL8vQyo9j4GT1XYcgTlp/gukcWSXI+XD0557v6VR7q2uSCkL5penorsw8ne+6pPzSB5YNun7P0&#xa;U+M2wVs3674Fh9dv8RJTAa/fwlvA+3cWr99UX1lfff42dl/ZfiR2wXz6xIX+Pz8DoGhra/k/3N&#xa;b2n31dgwhEZCfhykZXcyadcIgiiFqFNSdM2T6z1N40mOTVxc2FTfwXghfZRhHNFOucU813maqm&#xa;13EAopFdL3DSOcfWxzTn/WJE4PfHB7RvwJOfvq1JOM9k6kQrt4XGEs9Xssto9WhD6cTnGraxLJ&#xa;YmNu3psWSlWrcciKFpxTo6y++ydJYmEhNPPMj5gM5kbUVny3g5czQxuB/n4SfYc1p8YzI2lvQ5&#xa;WvwK/TXGA9vcLo/PTYCoihXxUkMzOMOB6aRxnTkTtpzBoDBLLZeYxx9/0pd+uBPKJIxWY6q6Bo&#xa;kYrRMyWQTGpc42yqwZLFYXTn8Go6Q1HDMF682YCuvyOPYHmVuZaZW0m8gIy+QJA3cAn9ula4YB&#xa;c3ZyjFqAHbw6ZFnbrINs++BD2XAlUZoUx+AxaCtQgR2++KMWTAkub7jsI/xKhRQ0lc7FMjmJPw&#xa;ZmG4dwo6mWII1OIlL/d0jQtLpciQu12a0YA9PAOlWAQZUJR5Ilat+Qv4p9K5/ZrNQ0H9au5QYL&#xa;KypEl0DRNznNXWYFSTvGhiAoaaF4IslNqvb4PIkEIU1RBHcquOyNpBo53wTEdLUmKJmUlBa6vB&#xa;h8b1UatacgYqCHQw02HyPxUwAn6d4nHbJ361M30g7RHdQxgBj7I7d+swfeOxwneLj21t36kdNa&#xa;qr3cZKuWOkDagqWqZdceSqOZy5zLkhO1j2+E5uylskVUA+0fOn8PAoryPvqLFyjVnyqNmZPMwC&#xa;edyCBWYyx8ZjnRemOeEkTaIcJwZ/XCOD+nSD99FU1W29Jkwi0ylq1TJjhQ/BWOeCJkxE9ednLu&#xa;hdGFTa4fACMZebqvsZlfugBT9mxCV3E7zCF/zS5qXPpTYQeprtpfJiS50k4Mlt5AK/A83r/SDN&#xa;1ilIWUQzOAVEtfPrn0Be3c1QFuLTsKgw3yapcPS03h2i+ljHqakZidXLwh6+WUuqF+lKy3nKvi&#xa;WFVt/VFWIEMVrVroL53vbHCgtcYopVMZMZFII4tXjGkROugLCrEs3Gf8S+ePONO3ZA91OP6l80&#xa;n+0vmvKXpUlPmkDkdQKssTQCm7bKrKD57ATZXExXAARj0sea8IrGdPzTsXWNJ1XiToWEV+qEHv&#xa;ubaHk2zRRqmDVYD6leO39hMgZwkljgHzO1+33dyr0Rc1ZcsI3yG2NcR0PBQ4GP/EYl2CRRN/N6&#xa;VFxufn0XuI5oCkgdIpg/VrXEBqMdmAeRoqh/E0KYwHGIq7Lbc1bDUqjeQglWU8tdJk+TK3gGEi&#xa;18vxI9PLl/l8E0thz7RPpxkdOujh+R/4u2Y3h6g67nfudbYiOI26c1bYCvMKW52hwj4y1BuviD&#xa;yPj0vkFkpBurU0Ch5USGcpyPGpzqSFUgIeW5k88/hCcI3ay1EpgyGhotW5CY8DZghRxJvi8uHu&#xa;JIKS8kXlqC0fcaIGDFJVIR57G9CK3XpL4I9D+MAJMcsO9qyxYfe910HVkGXNgZ0tO9rwdWLZ8J&#xa;y/isKAIMjMtOGcQIxBbQu0mt92stNJjKEerKVk3UwGNMvNHm+TdPUCIfX4HqIFTj1XEA995XFP&#xa;xp9tukJ+hkMbj/Tj+QxaeikH5znXcrNHLYioIyGcYT6AS93ULINPVgvGLxGPgM1yCJLWJSIzaf&#xa;WI91wb+a5mafao896inCpGuJp+8NObzslNk6pi3Hjzv35Kmfs6fcSn6NLpGc7KLxIRWJFooMwB&#xa;3gHRGXDdToZ2FY3Tquzp8+YuWxjzUxjZRq9pTQo2l86Gf2gc8bmBoHdimKQspIWLIHWOoKmHFy&#xa;WX/Mrw0pZVqd33z3grUA5Rd4ACGGNHIycm4OXLBXuXUmHWxC9SIAweswtiIPxI8BShfo5+wUyj&#xa;fNr8+s/77uI2XXXBf+l8wX+r8/9vMf9/2neW/8HTbVmel2oU+QLT5v+/23eK/sul1m20CTV/b+&#xa;X8R/sO4R3h/Q/mCda8/x9LVxCd4Ck2bSWN5crtaNxt6k/I/vfnHsG3nhoGlkE80/FDLbzGH2d4&#xa;QcguYrTDTOSjnsvpB5NYa+n0x8ZjZcsdcuCGZlQryWw8Jcls9YUmb2gwCsH4Y/RlbWwjJQ3hBV&#xa;Cq3wedosyrsg/+zLnK0V+V6i8zG9hl8bx6gYKHFqxI55kagpkMjqVNqs3r06d2+wbYqtrF2pdk&#xa;qWJnvkWblCNhNhlXIDCNRqwfFk/GMM9zc1CnT2A1feesOsR2L/7BNZmr0YCpuDKNcmuQpoWVXE&#xa;a/hhyrTInYZxfsp02+bBhs3kKBSR98DZ8GU9I86fSLE+gIPUhVkDTG1X/wualSgfM1fkOtjwo6&#xa;JT+hE/h4OisarsbTNBK6DRlcBadwga82HY5hPFCj3YvOujh3mQWb/jYjBWByGc1NrViROcAOqq&#xa;nVU9GyQUh3QnGSDX7S/AWAg/S78lHMpaCzT6Uk48RcFfpMTjSCSHaVqD0yXShBRFeAw5cINVUl&#xa;uczQI/FlgkYqoHhMaj15WgpDoCKJ5k0oLo+PSz0KHxPpTRA3fiZETcInow0fplqBc5C1Py5qQ3&#xa;b5REfM53O0r8HSK+8vrg12k/UER3oM9M8Jq5E00a6ZgovWspqT2PBBdra3o23eNFUKqkFYbl6f&#xa;bUc5/cBgO0mEttCL9SSLAbJhyzkmoZhGi3UGrOzGIA62UXQY25kJ3gx+wANr0tf7dkMJ2qrKNN&#xa;mZuhI1iz+GboD4nb4DYWLCXQP/uPbEHCPQH7mA+29D11nIoktjrPztBg61I0oBi9pB2TXwvEJv&#xa;Ls+YZj3OPwITg6i9UI8mPSj9FjAStUgIo4aZSFbuDcmTrdXf5LEnItPb7io3pILquW1cDssaGR&#xa;oEg2wd0tUGe/HDQaLGYpK6bQGtubN/qlhlsGKaZl8pS51riX08Xu3MgOUgXCmEKhjbgGl7cQeb&#xa;igsQvGPnkPW5qoTJdkuB6OYn9cPrB5k6bDhl2HqrINr3u2nkTFPJCh+EPFO0okbi/sEf/hJ2ce&#xa;AEjFY+st/IPCn30N1RE5no1L1pGWXDWtdQGSZiRv0mur/m7Ny5E99C9lcdYdi05QB2wi2skaZb&#xa;THCE6g3ziQRjZ+/P+lelrzcS2aS9u5j5ei/0yJlO6zE5eKE/F5vD2GuSD8pgsUr06fQEbmbIZv&#xa;zT0E0vHE2sp26anMI0jtbh9orE99Oct4oKTYHJ7Ro5+9vQJYpGv/rb0JV7rDQreLR8SRdFdf5j&#xa;6M7oJkj+4h2I9npvDFtV3lE7l5zXkRx4KQok7fpO8Qf0tpN4Fgh5wauy571ju0T5MzTHuWxMq1&#xa;IFoRzIifmb4rHIymXUkFU+hXHqY/FnO9muarqnGOeaPV3LhqXPZlFLjwMIoScbrHja/6C8Fn/y&#xa;JN1u4ZMbilttbY0vy91TwnV+i1Ql+CPBJEwbMpR9DFTjPocoLeTr95itVuPHI7tFwymzRPinrF&#xa;wddTbkbqueiV+IGje5tG4te1OulTGjjA30i5cyhs7IqgP93KKdPYq8tE2+d5ax+43iDr73Mohh&#xa;tEXCAAxGZEZerNzvReiM6DFvgW3zxJtp3TFjK/corGErIh05U/w9B/fg924x89oMOcRRcjPEO9&#xa;RFmAtRnxgEfxG+2UgMtu+K0qMJIHZno5yQMMcF4qRe3MSDm0VkxDCxCPNfiNnd3YifEtlMQh/e&#xa;h9AxTkGUjrymvuJMzNNvF3Sb9U+jDGDcjEyTrI/OLcoR6EX3vR1Qp1fKzVDG9RQ8LX4N9SHTjZ&#xa;PsKuAXJYft+gVO9f73AuaLlL6osP9X0qP+F9L/70VvZ39V7Ii/N4z0++uIacMVT3HYIBiRQY35&#xa;lanUiuDEgnTL6CktPRY//9zt2mKwtK706ga95jXleN0TJhuuyT1kfshkN7FkIKKg0OJOtnq4XP&#xa;J6s7g8cuxc+Xi/4vWwv1HKo+Fx4Jr2sEfadRtnJRNBqK6nOEdyVlVSrPPPiWMyv4FLdVTWG483&#xa;/ShzBF+Iiq5oNyFOn8croWGzgAk0SOZDl1WniLLnuwhkSddfw5TBhllqUNzJtGn35eWVxnfPBz&#xa;cQz/VsTmPeoIBkhzYsuafiy5xXMtwBkpT8rOtUn3VSzi22H7crcGfG4tAu6G9yBkeDYcdjgCPO&#xa;cpiAIckk9Aq573cMvqBWplXYBibBQibBkip/Fb9sOZGPr+1jRrqsC0xqsAKrxEz6pjdLfJVIfS&#xa;B27P4AA9TTqClLrBqA/1yKUdrpw81oAzJ9iCNd6PCjHRHLOeAkh3H/QdXPpQdCAc+QnC81Cj1Y&#xa;Oecz72ayWBYNr3aEw0u6tU+UqpHt1fxRsk7AmzJDOf1YczqE0sR1cslzhP1jxl4xxwkONEQORq&#xa;aP02Y5ID2MtozJy28Lbr4kHawRRU8eSg6ZgXSrNOePcTqT/hqsTbWEafgbVLqq5M5sjYuNVvr1&#xa;+8EScYXwZlO+jCAmkt8oINWbu+RspTY3Gofa74qJd/KpiYU1xzfHRmoQRX0Ecp1suq1UNLE2w9&#xa;1/EJwH4xEJNUKZN6yEuhbag8pT/4wdPsWieEd41mG2aYbcMKcnDnIwKum8/HkgrdhdUxD1tVXe&#xa;W4dUZxQ9jIl4DwtyY1nOaSdT4oxdezPcLR9ZV+bwNc/FYSNOGv6Y3Ro3Wncygna6R+Tqft2I+Z&#xa;wUsYnNfPmSC83+x6E/vN1arA6rtRKExW5nr//08+PXzooCzqGqnKJisqUwp/j0umpEZ7oErXWS&#xa;Vfz+BT5wtFIK0RGEbB4DWAPV8dIFdEQ5UcHBO1fBXlGAkkSq4906e8p+0qyf8jHmzqVcKWWIli&#xa;CE5BKS1vGnWCby3EnBicgYvl7iBpmvOZTU0pmKjNFzWMNcpdTk17gEiFQcnOZti0PihmF15ZyT&#xa;7siT005W0qjwySpu05SenDZRbc8bqkupO4n+bqzrQ06JU872S+xKhptP8QA+JvwejXRKFBPqC4&#xa;hv+qMtEhufdOD1VD45s4JJPqMt42eWMN/VRpguTcIRUOo9AgixbMvEDcOHt3lYRTCuNIfaEcYv&#xa;xyGTpbNhdvggMewUgj6neBx9bssIUVYfCoGlN0wJX7qBKnhL1TUXTzpJ87fSflv+DchRQwxmgF&#xa;AVyMT+LedHHo5a1AMuZWgyeiwjF4n5+AnB/iNJT+G8oM361kO1JZCbwb5NLGe8q0K7LFHfA3LP&#xa;VicMZM6jj8uYALWoUIVcb9LYl4Ml74UEpjyttDM7Ewbe2w0yew/ebDOTrfM+ACQ/BqeDbPIOue&#xa;UoPMcCxSSRVXd4VqsfoMrB4Rp5tc2bAWMnmS7ODXcz3pCqJhuXJSUx2Wj77MV8DnA+rijPHpoq&#xa;oT5YmIGRYnd9rK76ylNFmXDALSRVUy3YpFtKkhWGiXp1HlbPrzjumPW/4dknCSnWyBakhjUbk8&#xa;UrFrFvpvRAjdIRi9wBeJWrk+JjrKsa7jh43q5jtPkBefKdwmkE1xBGGxKL0BE/2nktT8DOLrnO&#xa;1IfadIiL8j2rD48qFJpUnJTOTq4g2Ldha2mO8G9tdi3of+VMB+hUR/p/1zpn44wBkiaYbaXQPD&#xa;K5m1ZC0X+v/86JbLH4QpK3xrlLkhjgjdpbxkDvw1j99sD1Beh4UJLbd+b7CfIESQR/LIIvmDfG&#xa;Gb/hVmsr0WODuJzMZOrHlVdhv2YGcI4z79lblJA1IGHJRo910RNDSoM7YF/vnFw0o0Rf+y7X3s&#xa;zAv9yjNIlJVqCXwvHD4njELTHIptfE+tI7v+L8Bh98ctiaqFLEgwl/VrMxxWyjrFPIsoSC61ii&#xa;jXdE/0JF87VxaXepvipUqa5q0U0NjHZpsyOguR3m8VlDC3PeE/X5vfXn/W8hVb70KNwOPymfvO&#xa;BFc897CiynrSD2ALk2U3u3WGmBzjCpPN0bY8Hiscs8SXLw2x3o6jDPffin8LqL4qOl+45dr1bj&#xa;fwQD7UGXEHRQnz41/0swENUq9F+eG+C/zpnZOpo7mdvaSNg4GTvYORj/9U+q62is72BoJm9ubG&#xa;j8f+QF6X8KjxSp/HMBG7KWupoO8reC2VX2pNhcBbPKgwmhcHQYIRgDsDWnlXXSCH2OSxu7t89Z&#xa;JwgnLuV0Jqu1fxb/b+038Lm4wPhBQK8xuLhc8R3xHvEfcZn+fnlN2foUuQvTb9Q2YO0xuMvbaL&#xa;TaVpAxlLljV2Fgr2nIlVGRrKo52zrkqLnSUIFOEHbRHSWpB4jLN07nkVMyXqAsnt0MCyTsrzFH&#xa;U0pPOyJrtCjxpKmw4Hxhl9vYgWpWDjk6w7cGHIH27RYcjTDfEcokzUw5kzjmLFrH7ViyVxRdlB&#xa;nmBifoqrj2JniAEyBYo0wTs4rQbYApS5SaziGkjT1wbw+wwbSmgKctlaKyls0CSw4knouH0qFU&#xa;MmoDlttIfSjSiyGhzwKsspBzpuE20gxSuRV2h43YGkanUWgcxGJjF/D4rTWob7iQCVbNsjJ0ia&#xa;POw0yzV11I8V+mGUh86wEBFCSOKoIQClhEmWp2UFl4+15xRPuJThk7qoc+JzGYZ+NpKnWZLKGu&#xa;QFSK9UyI/pPMnjt+LPpm8U6RBawXTWZqoiFEUiEs9z26BQesAGZ+4cydl4wvkxbJOvYm2dxa6t&#xa;JHC7AbwkL+gjPjF+EWNyvDKo2eBlVLaIC98EjSKsURhElT6fpxFWAfm+JytGbV7SA40Mezk8lt&#xa;K7SOoLc08uwplCh3Do8Emp2GbMwz3yY5zF8OczXMn6yahP7ScqpWuZ8+dfFRMKB9485PHo4JG0&#xa;lovI2vrgdvYYEfmGhmVdjmTap5esxHtn5b43X0Mw/b1Qa2mIlkj0WeIgtJZv5TspXG++I1rIk9&#xa;CNFdTBCjLcj1CHOX4sIM5k557F25040Ry3b0+/E+iVAv+OXIT72Zr1pyKr0pqcjQY/MoTBd2FQ&#xa;is3xT/jvdFGVZwFGtkWjgbCa2HEiSs2H/ue8BBmJ2CDIFNcabdoJRULyi7ewQjs8I1B4tpihpX&#xa;gPBZ96TbI+pSqPF/zTfYYtZy7X8nsxqdRlSrCYcWKi486lLFtjfECLIO+4AsH55pbM7JA7nOC8&#xa;Io6rrMU2DJDLAGIe6NkeaoLMyK5FSGBpFK4xXwacrTfLioiXI8dZ4+kje/ZR3XQbeUr3FbS+ME&#xa;U6WPs4pfj2YKVh47DJ3UWy4ilgpjhJUYHWLt/9BoZPUGMTievn6asHj5RTiPh/gZ5zg56PHkmc&#xa;8d8Xt3mEY50/tHWJyOpsxLWwyhG9gM9mRUEPLIDkaLnfEPutXkn++RfmZrAQTaGspmMogQdvBX&#xa;29p5aO7tgb+OpTs65WzBfsn4QpunFIcg1ApSCGl7QdTGSr8F+vEBFmLLd/a032ShBXmLVcBeQ5&#xa;BJWGE49GfGqGAR+1zoXbtx+BWhY7aDv05eU0F55VK5w1bIgo8+ceILbX8SXBErdeW5PBVBk0CI&#xa;rwxlE5RDkrI3rOWTZhWJzyAZ8SZdm/KOdEXQn52QFs66KYAnf7x247z+vIrC5ln7CnBhGVE7Rm&#xa;5no600zt6zcUBY0eagAhPHm3nGRoLBKieh2ozh2FbFO4bxeUA+u+ve3dHkjHX1y7xGJSsR6LZN&#xa;/14BPpAj+I7C13BJ9Buaa7xbqCUYnMvScr9cIERy3Zqg79IrSjZsniBwb3N2b4XQWOUEixgFko&#xa;eeZ7b7DzZ/nQvlDkF8+lQK+/8nNv+5AaFI1fKPDb/BAQYVjGTnuvzUJENEOkOpaYlUmPoiDiMJ&#xa;42+25oRJP2KWKmFKXurVrAl6FXj5E62u4v9ntHoqC4tQ3E7w9aDrcN3rceMo7u3hF0M3GGf0FS&#xa;bUnMglJwr7URnTGJNWPzNL8dhF3YR55CFe1Yq7/fg299QZ2R9vhqGtjpvIj6kBw2pMsyWB2tyE&#xa;KOmxW/wLCylde+xspYbOPLUsdU0dTbHl+N085J+TKc/np1HuwRtsnLg3DMy4vxGUyViZWcc1zS&#xa;uVDTjRxjan0VlzTg7ScLRc5Gx5TzZcC7+JsgCVuK7PGM9HVQU8MqfsMzK4BWQurc5UTR7ZgaD5&#xa;P1cX58gm7JkPMwcRpxbnA6eSfsKBlahaw4iPHsHos070VCGd++pjX2IF04DcB8nv2bkus4yWse&#xa;js1L4ksWjxW61hm29inHXqZDggimadS6Bka7aKazrrp0Qi6hgcr6RvJ8By14BE8R4pl/2Syds6&#xa;5QQrurl75I/Q4WY9KV+765JIrUdAaHXjqahY7hwBbXHwQEedp7tmwAYbvgKJWJ+yot7xD6qaQE&#xa;xg6r3xceiCdA0nMrN7HCqjNIAo/Gd6lquJ3xpytKIOrVkRbDfv8DTamHIApGjgYsgec/QORP+O&#xa;tYhcn4QiCJeGM+jQpCOaI7SFJNRlcdZPyAX7s/8zIfAnYf0jW0EYcZI/uxLxMgcWqvvHsiYY28&#xa;x33tLEThrzk9X0k3GNxzdNn+vwahDpPBc4Blf6XblFYnu6Gh0AKb5B83FBDnWs6YhL6icja7jy&#xa;L4bm6ogQH5neL3XMm0OU/bUYMKlz1gXn2Z17DvpMvBVJ2kiFYwAe4UZVe+n58fzVH2gdAfZYhj&#xa;+pzPplFSDUMA1A1njIxZ6NFdhTelb9JB7NmxGo0nvpkRUtl5+rFVWu8enDEa6UrEUeHiYMdZOk&#xa;/GUOfnA1tyl8F3HOUApdesh8Y4pbXKqoOtRaY/yqE1FOk0ItS2KCdXoEp0Rb9oXbopcxM9L6tm&#xa;fCYav9KMneVXv16YNsXZnxszbpLi/b0AVQqib7LNQb16JLxWkAwThRn+bpU7o4WHklHwOicp9/&#xa;JEicmrIPkfbqSySY/SPTSdFzOe6GN89v1Bw2pLipMiM1EFUQsQxivo+mk6liPZzCEYpB7noJ7I&#xa;JttMWB3lY6m7R3GbNA/8U2KfMlTyYrbgB8sMwcssgFGxSZoeKJx6rdalM2S5BafFBdlZnC+UGm&#xa;Sq2z9yal/ak90ctKrq7YfHPQgC30N8cKjrF8VzPvT2gXm9mJhdfscV7Q3OZv4d/vvhTEHWYbC7&#xa;+c7YXtG57zrW8hmoce+fR9iPcrF1bphosbuDASy7xvOz+3s2Z/44va4AxMETkrWaAJneWodU9S&#xa;JbIlowzqTCIkK1Xk+KrlAzfyyi5cJZZgIaf7Jnau27dT6F7IEKes5GUdNeYaBY8wuzN1jGBonY&#xa;re9EyWqTFwRWxsHyMKeU4AgA1GDobBL/waBPuLr08bv6hXpS8A8/YLS6YIca5TsIn+glBiHRje&#xa;FtBsIqBud6fKZzeKnxrorvQjYG0oHoZmXx9umrYGFSGCbucNitSNJB6XcAMh0TWiLhcew45Jz5&#xa;X920UYw0489gt+1I2xNC3/gBH7DWrlrhPWlawpgT5zbeBbvthpdopQXrKpWYpdUl14m5Cvi+8u&#xa;4VvT8AJ+0tHuKZKtdFlQ5k+cOH/lTL8bIgYcX9mHoWrKqFjTO5jROQvKD8xJAz3Z30Xgd06+eB&#xa;6hoznLEnvINr8FMUSzhbSHxEjk7CzTq7xvv6Ahv0Y4G/Fk54nkE8Pv4cihCzDqKrp5SjnipVG6&#xa;bo9QvX/9w3PB7vxFXchPn/AB/47nXP/feP6/Kf6qhiKG+kEOwT6QpHc9Y1ZphnT7iQShUqRocF&#xa;6MtJQsVGSteMyEsEKfY8PK816fQBX0anNxRnBczacM6nF4eSrLnusemXucNIERREc45uJiqWdx&#xa;vHq/5HDp+tNRfYT2tXnrmc76eWNgv7zP6z1KaZFsciyxsWvSuz/fZBSuxbSwThVVwVtwGGUwsq&#xa;+NjAmcCzTHxKgeuAvnR5JLVCOdZ2zAORTWYqvjLUkMtzdN0Zils44fjnHIyggfrEeL0AyeoI9z&#xa;SYLDauJHzYUg6E+njgVU7sy7HeQrQn13OOdVq3yPK1JiflPvlwdRgqwlVY5YBoZbR5yTrkxLGT&#xa;j1IwBRdCJStaxscWrhg4X8NozCSlXPtze8IkQVrsYMz/HMWLeMqXp6plin8GZtJg9Mmd/9zpn3&#xa;ou3STn5+6W9LhrEhS/Tkr9To2GJF262nweU6gl/hIk56VOrj5bcVV7YeIBfgdfXPsxaRJyFhXj&#xa;SsJ9CxiqtFh3sw6lQRzeVdHdpudMBGaqN4+PIgJsxuFIlcSeHMjaCdqWtH9YU6MjJU8YO0rT5Y&#xa;PEx/a9TB7q6lN8kKRl/ToYInI6SUAGnA4nhUkNXJzXM0Nf1gD4WLYNdgtN/uGinULI3AWerYQF&#xa;2qhE8r6fqlxnLjl14MZ2onwCtGyeVg/fFZQizb+FhdRUKCkL7TQHNIsKGyF+yejxySDzkbw5f9&#xa;aSYGCGArtg+bzFw1emQeWRDS7OdKVx66DdwNJcxhrQhOTYhDHRC2y4QV+yaVKD2a6IoLy5C/Xc&#xa;qnk12VVCYHG0B8gaIMQF2fodcAYOwXS6xvNVRyBqwrWpHpf5mpVd0ro0UqiUIQjWfUit7G5KAr&#xa;D6tLi0TKvNlj/eu981zmKlZRolEPqVLXOj+eooYE+UuMLsKSVfRhOqLpu8wz6wzReGf2VzBj18&#xa;p+GbAE7CSNlgfWMtur5HsydpCO/Bx11hRFX0dA2zMeRitldhCPgIxCLRXRpv0BqhCKX3NdxWwu&#xa;34qLoisfOTkBFQ6nyWp+yalglgEVF8st314chEvCCj7PI4d7j4UsYYHvpWfLnGp4uwmPpLjOQL&#xa;80zhq7OE7VcHRI745py6zZdLdgbIocKA+R7YRHShzvsrkm4CcstCdfP36uFn/21OJCxHjBE6ja&#xa;1cbCiMUouuHvTw5BpNv5LFC11xIZ0UIq703Jbyicp0hu9OtUtzvmRoJP/ynx46syRLPFOnD1ql&#xa;zGyR8GlgSfIuAtmrKY3MhUndXJ+NigAgMqyf8OT9ycW0AhHXevmIWEwvml2Wiu/0QWEv6sj4UJ&#xa;CJnGUgf4aFBgVvEWHnN0UqzSid3Na5ohydbyffHdeB3szP8g9zer6w6T5t5xX5ULl7hQu2eTqE&#xa;6IeWnSCHS3LKh9xOJdmQFhlEeYeA8q5bWxENlWo8YPqDmKc9/Vu45eszXylRY1oa3VAjvsWd2x&#xa;6RrIRXnM92vFwBWj+JBzIeZVG7jyfPIFDPuG7V5xiU1ZWMwEiL65Ajf1xDDY2tv828vOzsMn8j&#xa;xYsbOGWGZ0r+cB7le7rdjLE7gvNDQTeCziy/VKT3Pe320VaALeQ4jAQH0KnsAA7nCCHjieCEp9&#xa;cLopU6ZAjHNaTJ0BfWiegrifIWFqY706hDx+XsOK58Nt+bXR5oD1QYnqgIF630I3/BGh+0PJPz&#xa;9r+hk5/RiUzhj3XtvPg9IwspTr8eIOzqQr/FgrYaR1oEm1u1NPNvew+oa9M8SVL7rWTsQFglMx&#xa;1yKmcWltcGRo7SG+qVmDA2an8InLrJNyK/I2K2wn5i0x5DDUSVRUUXu2FEyEBkH5vdF6RHhwl7&#xa;Dp89+h6CxiIKXMFaLz605WecjXLog/s0Mw/I7mgKL8ADm2SOrls7jajq7I/rbKuoChEHpir3qP&#xa;cp6X3RvSNWK0Q+jV8GRlDDkrMHK/g69C4sqh8+/44McmnQ3F9pRCySi7Kv5wbHN+n/cR7CTckz&#xa;rtRhmVJGfuag77581facfRrum/no3ofztWKfAvz4aggaOTg76h099vxN/9WUErK2V9h78+gLa2&#xa;DkbmNvpO/2V1fdb/SeJkcUb69g8qNkpmSIrnM4HZilTGlouAqwuZU1nP6TvEAwAsTib+C5tbqw&#xa;SzLuXa4menB2VVC1v7Fu1T43YJekUMPCxH52PN3V5p/5AAmD3NgJSvzpdtc/BHKztuS46sG+2G&#xa;dlkUo2yXcBmHDYfTwN6mrHB9c3yXsTbzdriQI1LG4Oh0wzWaX3XFJgt1QduiQolEhjyNP2zUXL&#xa;UtW1bkx8zVs2sH6ptbBvEcVFcaOHvslmPOsuGcsKIv/aSFMul/fRueTjtnoDej0fxk7uDtd7YZ&#xa;C45FB7iAWZrjBTKkpp9Fa6pkEKlYwSaqydSxWNG0l/EMECaN7et39PTw63G6DtYArrCBug4uAx&#xa;sU7ywAMWTwKpN0sv69/ugChexno99ajohEIO6T9sKcDcZCJ+5pKhJ/+r9vX+1QAscrcIR75G98&#xa;UhIVrejW4GJ4CtCZjE8yBTeyYIBSGgOwOmGh4XS5TJk2QsIJFsJlz4QQbPJaGUs0HZoVwzflnO&#xa;GIEiCoguRhy/W4a+647vw0OH4N42PZaJtf2NRINF7io5xR3sEsr8TKQunHc++49J3qTBkPy1iZ&#xa;1oJQGnHQUd94UwgweX12dos4b3cphxCZQqui6eZO2gy3Fg5lhOz8dlyZICTZ6tfLL2itZWBbfS&#xa;ApRCYYEqBnRMm6k4ZbS57pRqeBWd1euBzVpXoXU31JdkmI4fxfInm+R8roFW/LaKXYw/UDWo+Q&#xa;NGfxDFdwWo/s85i0ZpL5FFjTE/oNhJv0pTkuYg9L0dZ7ZLBsd5L9+834hFtj/hKbTjpkkUyUOF&#xa;hQc95srTQjHxi6n2CHmIgKQkd6bsiVIa+2w1tS88Ekj3mOXgeaYvfZQXUVm6jVDiFzngrmbSht&#xa;/WUDPItCXBSrnjYZ5iOOgIpD27jluhW7PdecHd9UMwb4VdGsiXVGLfHLuG2d+u21ZxJ3PbE1iJ&#xa;u/N57xzYRiX1S9tyfnCtQzBXCzTqj84KAv8C/3N++g0cydtDvnCpRU1wtFpoOVbvipPhDvj3AT&#xa;90kabnrhx+83xhxY7RDKBfDdyQsfKg8zXOIfNIDO360WZeGQDnSPFTJdJqzDiB56ml+wcbBtvO&#xa;y1QPBba+HBgxTYUnfrMHLuxeCELMGW0701xisGBMvocGnMFjOL1+ZougNNOMmhkpGK/YsXsAFa&#xa;dTjRk7bY5GLRoWF+yZz5F3WpLLnvHg15Wd7GgtzO4F6ngy7B+3zu7ZLtPKLddGfH2eJFLDHXsz&#xa;EGaXv8I0ofBikzASmDySUlhpyyLrsnEHwix2noGsenPA5092I/F1xF+ZKmSjvdHhoj03+WFJyJ&#xa;v0c6KjwRFxzenn4TxRsvMeSh96wN33qXGz0iRavxsdP+FG+HpDvdLxiODiyJqc5A9K3iuNYedi&#xa;PI+bYg5AK+gPaCpgmbR128jL355U2s6W0M5+MKmmLN4YM50jXsS6R+aAdka3SgzquiJaYCiQBh&#xa;tubwWgWCXXuqtz+7fVs0T/1gSEuWDtB8oUQZorDK1iscHkaE+suEzjGDzHN4C4XSKZVzU6Kixw&#xa;JXPIzuoSeXuGKiqHK8CSHr+cMZnFMZwe9wuaEvg2+GyiYL4qdIFhV53O+9Xxa+6mfuf8b02f0y&#xa;wqbuE9u7jFJ6po7vETmowexM0Cf+HtjO4+vCL1IhzII0qMYvMl6yzXJaXD2IEaeM6rmnRPOP+v&#xa;wzum38G8SnT8n/4rdkyZLI/0fQkv8LaIVs9R2M/gasqIjsf002glDEML0pYKy0VHvgcl1LQ0Qn&#xa;wCIJi+io6Qot4rb9CNHNM+hHPn3V58ja0GtU9eg4RjjhW0A393Jv+WfeJWPjAJduffx83DPkl0&#xa;c38PaXQPcH/DZulyFnctZBNAs55xRgNZhy8CvLeqfniWaeelNW+bY2LCbQSnT5cbdTeqXGhFnj&#xa;t4hgal4/OktavvZuvejCCIRivkXrIfiU1g46RvCYlCW2MwDadjn6JL2JzahVSxmi5CGy+ud0A2&#xa;SUPyWwMyY0jyxufAIrIhhh72Uel6HtiK3UTC9UVsJNzsrHhmRVgX8Csjn8jRfouG4Pt0RrMha8&#xa;B9CYYwdSq7GA82uT7wUy15NLvUjmfUMXrQOcw++06WkWr01N5yzDVwzJWCuP2Ad72cMyWSaOuc&#xa;0dfBbCFBZxIebSwAH12MTth0lka6iQUmvOFBMHvgNKXAKpuKqIgr+jIeHO12BEeYi/MgIHstjw&#xa;glFaf1fAExfV6qlRhQDR7aXAmI7X3hlZUQslfovPJ1mFpe8ow6WyxeMWO0ACLWVg0TINvqAwws&#xa;GwlnJGFSaaOsAwOV2GC0NmoXZ1LMYKdoCZ2iXvnE4ydyTIF67YmD/i+n3njJvRjPgsOY5znNTb&#xa;MYLILEHbRM/KTnPePqScNv2I1Ij6sq35QKBTyaKGmcxiHRH0wE96VE1CTxNYzk4eQX/10P/FBa&#xa;56Emu1bJi9ruORdM2URhoyYN6t7rvXwXIx1MMCa0eIFHVdy/j0Q7nyfkTfj5aAX1r0ZFCSokHl&#xa;kr2vAA/jHOue1CoN1kYFy5ZwfTTgT3MzofoftsRUtXPFanYBgqCoaQIsDJQ1f+lLz3AzTBGdQZ&#xa;nI5+ClXAvMYV/PFhk+NAabbCgx9hbS+rQOvgubTCvrm/ztxF0ZYOG0CELYCFy5m1rqYiSHI2sv&#xa;jXHBT4aMPvuCp1Dkk9UPD1TIU7DhjqkCRrPzxbqJ6QxXiXkGSzq5KcuD62LN2yzq1EXGMARj58&#xa;nZp7VOc0hH0GF2TmY6xM9WNVWmGEg4lBaSM39Fj2M0Wpon5aBvikAksrDZJHb3gw1iYNZOvcP3&#xa;X8BXlvU14LdLFCrQME0RkVTyvnSjhPM6YrHVK1OrvK78L/QjsUhJO5vRNPRuVe3UXeIWc4KH9+&#xa;iMaAmMz8nGY8HNdKfE1j/za7cVBk6WnUbidcLwyn9qtA/kHl6Ux0IqHh7nu5Kw+p0hmcOPEMDm&#xa;aiTBibz+Wobe4EGJS9ygHBmcFjrDcGoLYjQHu6DhnMaQKOLJ3pU31dX20C6/ZoluWNr4mMG5QD&#xa;CXifu6/UmnX4Hr6uQMM3ou441bUJfoSoobYY5Opq5n8DNMxKOOA9NsXs657HsgyRihrntbO/Dq&#xa;WPa3fxWifxGFv2WWYn5NZDN3ynUIrThvvsrnVww+5Gj/u6d4/tMRYOC0uJN19u9sNic+1zXgsB&#xa;0YHFi892qRMgnRCCSlJ0KeM8JqeUjIR1Tzi6qxMhwpjbV2rvbqLC/ICuvKqr7QprkQKrkLdlq3&#xa;cED4mh4KPDDAb2GuzFhrBihAmK7Z+3PWUGuqKKdAYrNqe1H4EqaqJOWmNx5akrsQ3tzTL9U/I9&#xa;HsdK5nU4EB4xttUc68wGTJfcMHTCXei7IOuaoqZKMUoed6BVGuylG3vkkqb8YUo0BeiKKcPh3k&#xa;7j0BOeIUVBNKjMLz11cz7eA7CiqAQEiX/+k1SyiMYucrBBrx652MHkgnVyGvCXbPMgZdgAmhVL&#xa;U7j0+IGLvr4Vj54+9B8iuDMAXCv4pbxK//jrnU/x1z7RzMbZz+/v7P4+Mq/1zmK8TjxBwU+0mS&#xa;QZItOVZe8dtZkW/QsgHptCRiRKl9aiYpsF+al6WsQqCXYJenkzb8u5tbneVzRtu8lwnUF0an3r&#xa;E0xxUPn9fbC77fb69rBJ/Ir0mA1LpH0fW0nFMTq22lhaMy+ppVzQw4cGvmMPx5vkykln1NBPyj&#xa;bE4VyWOvDLD5AJKm0gNAe9+Z+9gIpGK+cesh+dSEfcTXjYMkvigWAMblyh/qqtRo0af7z3Gf0j&#xa;A7EdyKC1IEtF2hAW3dW1ryBOa91C6rbO36O8sERSKJsh20NtiiPIEumf4qjVjMg/LQbo2C7vvC&#xa;NnKP5AGK9AlBQbyfX4N3zgvN0y5Z++VfKHdnMnbQgrOVo9rdOmco0+hzkIRKYofm+i13ZCE0mM&#xa;Wzmfsc28NRZZE7qYmP56YDAsPhO3qndxZlQnYsbkhVCszaRr9HOIBqKKmSe7GQxbJMQpOKNH6L&#xa;M6lZnUDmBQ7gxj9RKsAAlmTRcvxpAmmq7+iIWkRammcHvwdPuL3uKeEN+brEhe/gdQwjMo0YOO&#xa;gatdKf59w/QIGVYNFfELcKNWeW07H/cpM02exbY77TqCOM0Lj90tijvUEC2//ppnpjoZNi1Pit&#xa;BgTrAMiKR+lyuP3k5sUGZ4ipZo+HAjCsHjMcQTSZy/Lad6BiUprJUNaGJGDMTBG2vmPC0eywq2&#xa;bzDI1RXu8Zxp4sOMMdlI0rlFtlgy3GbNj48p6dIUkA4/C0b126o7SuyBSFtXWdXYF9i5mEkIPU&#xa;rDTUS9++DiVh4kjWfkp/Q03hjpUJfiqH5a8UhsBq6haJP2tpXU6Woll2+FC366zSfzqAwercN4&#xa;9lUxgDc8556uGus1Tz2enGHm194ZoLNt5Xd3af8y84FgHvRqd8zCIdWjyLDLAa2gO4NF5eARi6&#xa;CeKQrBgFyqhwW8TFBnBb5pQGgtxaJsdf97KgC6RWnINZ2nJazkoIwtCuHfctk8KR2K/N+A9H0j&#xa;Md2Muqj/sS6bppMU4RTw33ev03AZMbInO7EZUTzvT+GX5kBB6DTtJtqbW0oKYuawUBc8gIqMAU&#xa;Cdnhy7Vk4SJSZI4z9vfE+fgNZKhuQ3ZOZ8fAQ7YoReG9cisqwg+WNqSSauo76cESn3Lc84Z0p3&#xa;ShRFbfZfgXDJaVuCPXu1oOVQ4zvECjiHAwrdj65O8Y9mGb+5fMF8QNJWloqW1ys4r8gsXoosgB&#xa;e2nn1S3Yg+gfhWuU+NPlfu8UnWBKjJFQ1pPx36FFeTu868SzL3cGmfZ3JBIxOyUSJV4kqaLkw7&#xa;GaopC2vI22utosffq7zSP0Wb6Nx97Aa/Wbbb9a6TlT1kf9QonTnU5b6aUAyTFqjHcJN3ds9J5b&#xa;3FCR16+1dB4UiYMj27frEJXppSNLX6AsSyl2IKuNkEKh3BUN67CWF1oS2g1WoEynqL/h/TqEsT&#xa;6BTFZDiRt39OxEC53L4UScgn6clat54XA32xj65RPX9yaVdkVwqKtnnaQcVaI+wQu88A3orJ4u&#xa;QvQqqOlQZmSY567tKbaFDjMzc6dS/odoH+tKwfT9q5bMh/l3XGP777j2P+nWJan8s1sHAx9JEg&#xa;Mhr/wSiYzMGr6o+U1TfIZYkFKQVi8DPiHDiHF8gAdF6yPwI9a7edVAtf3lSXnp1Nahkc/F5AuY&#xa;/9eu9dZqx8fW13PHwxwfn/fPPXC8huKmo+v2yZBHJ+YgjCDXzZ02xtEIcg7XzdJlWZnrmafL82&#xa;LwIUQamLVN7+yqY1WqrBs51EAsUSsFSZzvfikP6QnwNmHpB+kgXq8YkNYxPQMr7SrmJMPq3+Wl&#xa;5V/lJWTJTbntT7sT9V4qM1NOlRoW96I+O564jflmZ4GmoCgZm5a9EJdgBFtzefv0vErqLJbMCX&#xa;YBhzCM1u3k3mGstr3oivbiuLLjaBZLNOtgo6aDfrdaoewT+5Mh7Tq1W7dbxhx9PUvUp8C/CEja&#xa;v18LLkBc/oeArmHt8YGZJ7dURE4GdqxMHZvcTYRUUBslENf3VUQ30yHeaESZxpjc+Gk02AaY8k&#xa;i9bnCm0yuCixhYxDYrTphVpnKlTLulLLZL4jD16ArWI07CCP3MmZNSED4jdq0iNXS349NL8UBI&#xa;+2BGhZ/TGWZlMWOYivYwMO6z7ZQTWH0/2uamtOltpdHuqTuFBeMFWc4ry+mfxufSdbjY2y2xRe&#xa;1ERGDVqEY8juaatHfairaxzS1A1fNPQnF5ArWLuJ52YfkEg3BoS/YJREazOIYeLsljfd7Ftsqh&#xa;/nJYq2H+It1Q9JflE2htB6jWtY1qAzqdnrTOQpFDhfcOOirjjmq/5icZv7GyK21wxos4XWfB8v&#xa;+q/by33IX7ZIJdzFi5+1X+IjPOeA4i2SLtffEa28RODdldDojRVqRlioU8XKkP6Zg4tiH/Dm9H&#xa;YU+5urPHAQl355pLHAG5ZU+iDKdrqIhPqyAzEPU+yLcMIWEzx9V+zM5RvtlCxHlw+k2uJYmTuK&#xa;5A09+UA79YF+qRjP4Ido6aSr2I39EhBHYRIdFXbs39kVBoWq9L5QZzy1x9CJhWe4VF37H3Dsuu&#xa;jClupt5LQqU066hLE+XaJXVrk9bWfenodLGv7Ygix035rfwsWpSiAD+VCKPOa8WoPv+r0uJKHa&#xa;54nzLTUIJbJ/aP9rriQYL5JvaWL9+hkj170OaYzA1H66w0jJpE/JdM6KhFYlhkx6qwpPKRtUmz&#xa;67T15B2/y2C+VWnsKP8iOp28bxYs5CEFsU5XSl7M/YK+JzytDNMYZXrfDYvTwbbW5BNO/eHrxz&#xa;0ZJRJfFrf0J99gnUuX9hsy4LN1jPetkUIRkwRiD1dHyK8iVbNHMP5CFq7XUBMiW/Le/gapDRJf&#xa;9RKUsip+/1Q5Mp+hbfjgM/Glm5GvbxLQ+rxFCp9fY8BJWCGbicwcwnGFS+mkrr2nvH6A4ffTIW&#xa;TusAAgvyXcJzVzw1DibD99yeODsMbIO71yLbhSgeITdimqhnmR1E0/irjQ242leKihYLveh5iJ&#xa;QbpCWr8hTtAp+VwNHMHzxIJ7D300wtPtdA17XZnHcRrZ4EZXq6+2E2gMWP/KQAkjjjbzjM4EqT&#xa;FKQsV/zXFsjHcc5n3Hs3jo3b+3YEb5jO1mTqUk+/tl22JoDDbWFebd9n66JaBP14jxF9QMd7iR&#xa;1Y/4smdYbvvmRoT2X3TcaIo+mFW/JHNMIxJVCmwDq8yWH5cV/kHJRkwDxP6/KOn9bxX3/z0l2f&#xa;7jaCHmBgUMAECi17LsStOkIAQevV2EPo2u2JiYK44Y3iATMkKEBcdyMi4svLbK/xjy97q4Kp3s&#xa;f8wVbqVhEaZu+6c4Cryu1U99dP3zpIOb51RuccS6vYn15IK9VP3dTWY/G4hBFkfriKvTiAstA2&#xa;GwWRSDjDE42t9aA2FxPt4Efb6hm4RofNp2BVKl+bajVAWXjdNYTXpJfecU7k+Qwc37VfRz/4z5&#xa;3/EICumUNeMMJY/F7p927rr7pKxMrIeVDarUTFqyRpfmCKw5a5VFHlouYhZqLxYpqD/N9M3ooQ&#xa;Nxg0nSThGydsb+DJ6IUWZaV8ruEzA3DOOpOcLxac/imvZpNWHGp7VRXx8gBxHpOb/Sgkm04hJJ&#xa;F2Eta/vjsUn3d47amerq1kJ38iW/HmLCD39dRxMyhkuJWWkSpUYge0E/U4LHly25K4RRa6aPV9&#xa;3gJCYJbMZ0/0XxlOkvi5uE1MsEGTK9Kt0sR2l2J2bLIryeL5iOYAJ/LI5cy2aq8pMDhbwT0osK&#xa;2JD8CSglK3xdAjA9na7aC2ckg8VsO5WkJupFJBfB4kZxpksSlhQleIEEkE32+Bkl58bTGmj0Em&#xa;pq2sEDUaeQbtpOZyiiGLbzv7iGERlN10ZnAetFbn80KRMv/8JCNeDr3Ls3SZ+ESObvOiBYWpQ2&#xa;XalT+664NBbPsnswUojXJ60x9aG0vsALYhkQD7NobGo+hlnVPaLVz8yTcJ3tXq+VEv2d7h9jJy&#xa;OKvTSCZ4vMWLEmuoKn69jKyZS8NGoEC0PAgotsrjLIpPLr5qxe9RqG3FiasCAXLyQIZMtM+pix&#xa;h1zs1VhBPZAkPCH2eNFtRpkqqDpkPf7Ss6aMNq4vbTWuJDnwsKHhnU9N2luuYblSWWW2Yb9xeD&#xa;/QHg60iWVHjlBRq6+yToWsThYeLQqfC5waeXu4ZNaSPL9R8cDabD8q0jJLUXvLRU5Gpd1l2eni&#xa;TaoMAEqpe1fqPO8uvX9TqA5nhmVEpd2ucv31ChjezM0PRMMif0Hbvy7S00DHxBhMn5jOfS7P5H&#xa;GtdVYwJydGoJRrHsM/ySH/onBG28ZSshIsfqkxE7tDRffwqqTJldpsDEjY+vGD1p5HPWziCewI&#xa;MJwbxDTXIEzusfAtjZFqi8+aU2atKo2YekRIlUazsDOzkbppshqHTDaJSlgky7t9ehofOQkvt2&#xa;vizDiOaf63LyV3BxeVxNSa9BHPjMgF9oQqoijKQ2dGKBwHqdL7lL2nXgvTYur4u39C7dCzupF6&#xa;uITBIkrCoc8t9S2JBUOu3yoLZ5CLcFrxTHvoXDZmVrHCTxwYSX1bUnGYcuU+/+mKQMJHKKp7ZZ&#xa;8GF8pnFlkbvVwB9++UInv42L/D7/RdJ/yXJ6y3O53fJFL6XKX/TIQo90r0MXYVC5L4iVEG5i5f&#xa;xMk3U5W3nCsYYQpSE9onuduXJ4kbgYN7B07LQhjT9JH8Y/Rvhq/WHT6SDEX1Zz92kY4eFT76Wg&#xa;80m7gDXTwuoRcKpX3QJp8/AhM6Iy6CvEcCTgvSX6Qt3icvXszZVSV/QLY2cEZxQWeesqNp9JNb&#xa;4lOM4ZsL1NTNA/ZZ3yIt+H1iEL0i3MWXFPUo0DVKmKmfh4350q5ADDUs68aA4CTSuJUnpyj9AR&#xa;4U9BeDcX8tBuzdV5NzZsPLo8gpvOCElG34PmBop3qGHZN3pXuCOfpVcU/JE6epucycewaphiGz&#xa;R9ryCb5RuImXXQe+fMFTuM6i+OfcH5lXLTnJXxo88t9qcJr/KYX/NYkQ/K9JBIUfIkVB/20SYb&#xa;HpcWN1SWBa16O0yffg/kaJr8QnoeQiawLZnxafk4/C1OS7yWXnVqfjlcvd3zaoHkGX6XLW+J2i&#xa;+cA+L78epUkVHWg3vOxwykzrQKNRL3GUXE5cD0CXUKyv1YXOQPlixKvBFbetf8w6PtJise+qQ5&#xa;WyO0lX/wO0ihpDcMTNgRZxVI78AABNYZJNzAL4ikDrtOmZQ3xogsE9wFjSJ8zFhR4DM4QSBuqU&#xa;JNjEuT2MVgu8cNqt+J1h7uAXAxELqbbFAH3+XpmqijdEoOFMr5KB2f8q7azjoszev4+E1CAhNX&#xa;SDdIeE0j0IEtLd3SmKwICUSCog3d0NSiNId0gj3SkgPsO6398Csq67zy1/oL5en/fJ63zOzLmv&#xa;Y0WnGpCW9fGFAm3aPqI3aYzTQagcZjuSZEuOs2R0RFcYOIkChren1+bJAEfOq9lcZINoQmcfOg&#xa;txMSBnqawdXRYmErBr7lt61iPYu7PtcM7t3SmZDgkEX3bgBJGGjCx2Uu68YnHIRTIzUGwVszho&#xa;CrRkHU7Jep1a0YmgqMyLW6uslfLcKVUlUh+zOj1XPl1GYmUfutqlaMauJAJJNaliV/JWN7AREe&#xa;ydI7yRbhtu7kLps9LOMGDRk+Ipgrb3iFQQoEgiYKjRtfPyYy2qbZFSG5p25Jolcs43DAzA2oqo&#xa;uJnGJK5T18a3ZfSGBx96j57Z5cx1CT7YaRgAaJpL4SNi8heMRtnCEq7Z4D41d6oWbyyBbqR6cM&#xa;LyYYYlmG4/nz3dTuWlEzYh8ONAOqsWSU2byPOX7nyYdMB76AEIIAU7BOaPxZL18gvgJuk4AasC&#xa;lTu9q9yUwaSzy/fcbFg3mcPoowIp+smyWfX32tEqMGOJcYX2Q8tcssUxW774MUjiZj2x8VGPMh&#xa;AUlWml6f5qi83E7PBgdZE1Owsrz8scG4frxF7q9aoMNPqgW4McB65+/uBqiFproMvHV8guqmJs&#xa;nP7Fz3xJa9WKI5i1EDVQhogQmexZi90OI1/DHAm3iIjaYmUH8bHOPSSPMn0c3b94iBeeyhnPQp&#xa;U7vllYJcvBU1ZISR+7ke697YvXF2RodpIq26GVn9kMvSDHn7Rc4eESeTLuk76k4BaiTaiEZKi1&#xa;6+W5oThltQq846Ni45GmV7p452X1NqNkBhIj4oiBjCAOwff7Zf5lOVHbX4TrknYF8lnQ4L5FEY&#xa;/slAdJ0/gPukTrTpBDM8zyP7CaSw3qrCR75EkioI8plIYRWme+ZUo8Oy/WuI3oeEzbMpzr7j+t&#xa;WfVSi1nSSASGVWIrU8/shZNY80NKYd88LTyFgG5nkryVM0VXs7jY7pC4/hXtV4REIA4s7mzkLk&#xa;ygVHvta/1t46DirF19Na+UWI+DF7ioB12Oya+h2eHXx5hWA76oIyS3nKfr9CNz9T/Vk8F7n1pw&#xa;b/WhQAzvF7TVvFet9413XFSshTNJY77ByfngdfvW1ilIYGjnka5MyiVrztLhHaXEtzqtNzP2tZ&#xa;kcUIwvy+Q6DWR3ayFKELlTPkTM3Fi2kfku8azIJ+R1t6tIt7Fxn6vU821wbUM+LIo7RkMduyO1&#xa;3t4oF3Zw90zWco+LHnbd0XYQ/CHzq/NVSfMR+rDDTfbzQvU1SzzDwmcs9DrS3CEFpn0PD2F8hF&#xa;3QKWUS5+GYwDtxG3BNe9yrOsalGOfMfRkE66Jhd0edGdo8ydCDHbt0tolA7oQUjoESajih9GrW&#xa;eRc/07N63wBuBGtP2QOPOV93lfojvlU3kswvo5hgIueN8nGmWzHTjM03Ymqhn1/GIwEm5XhrGd&#xa;A/OYLx6OMxyNh6KNm2SU7itMTME1WPTMnpHTjAGTHhBBrm4H8YCBvZH/Gmta8ilozEwje5IV+H&#xa;5S7KJmIMuxM8A54cbCfwdQhZSdY64et3TmG3Yl+oPGsy9zb4HuyqQc3cp1rLtqGR8T2n+yBVn9&#xa;QDnuu88Tae8fZ5AgWzC3EDjwc396tYfQq3NUarRzYCmtCu8zDsks3oRB7C+OqmU+J7xoqO39if&#xa;gUoQWnHYn9G9iRQx8DCGVz7548XB6MPETxcXsEmg/GqpwPp5qfhzUXiC6EGgBPwuVxw7ZlFued&#xa;9Urbw0Qkiqwr3QATkt9ZEEjG8/BYPsSpgySngXxZhTSU03CAkLC05eXkS0Ye6poJKIlBcnqZ0/&#xa;UgD8FPXUkRdZwOTg9yOn4jEqfAmW9wuxXNZTp/Xfnd9H+2nXnmpB0ZWqoZSowecK6QZaqu6U8Q&#xa;xsDiWZZk7rbrLOA9kmiKdHS5qkeO5ncxAMWS/Z1TjhLPUozRcVaKHscS0imVK/68zvuR/1roKh&#xa;/24gL7uLu0/F7RRLsqWhiGFFGxnqd2Zdb3wbTyy0QcKVDMZHbY+rtMw/ENA2azaUD0XPYnf4Rw&#xa;/bvZ/6LHtnIw+v1BLPDJ6hTTGB45M5nd+kwKGXuxlIznigGw9lKMlQneOT1WpFnDJb+IoMr3Kg&#xa;ZWxzHALDhBaw9dGwJKraDubIY0M6gXJbR6jbeGeZjXFQqywTqKhfzLZbJomJQ/oLz9KeOKWvO0&#xa;yp1kwUGYhKF7zNwHL8NDIjNxa18sRy5UWKrqTJqYEwIx0IhWdFRiMKvQuafn/ehODuc9SysmbH&#xa;XPBt+bLHwNqnkwoNvcX3LLA+2HJrOZgh6VAZIUbfZXeJ82Kv6LKKRRNgt9TPhC7PGwJwm/gTvh&#xa;Z0FOEY/OiwFmqprprtqZxpmc2swZ8m25EBzY2+c7/ZBoM/pdHuMw9hUO9Z6IDQ+ZLKwwfv3iKF&#xa;iRjKSkSGmpESqYEG+wrN1Oxo5x6gdL3Q3jlCykJPHsCfD6REPKV06NbzXGdlEx5uFUCxF17r5K&#xa;kObLdjUPtm0jDW2E6NAcJGXGJNYVwkDheUZrFrdbYCFtpHv+EHumUGl+uLlHEXVyj7J4DL8hom&#xa;GXO4Vds2gr6BUOrEF2pVLBLv2iZ9MNZSwaE/2feRQlcd076lF3xa+M6XJRL/U2z5ENUOv44RB/&#xa;27+M5yuG2zWrHdfHXubjTWx+30pAdCRsgszd2a0KXaWvg+n9D7aXwchaX3rOHJweVG+e8cUock&#xa;xON9Q+rlbwlQs/t27PkUMnNE1RiVDBmzzCo4bDNmGeo+YLylnxSzDu1CiLTr+Rac/aTZj6tw9T&#xa;CtpC4WKKth/+W1TzmtSrlFUEUsyOyh7/yiS/joVtcL+szZUUTR9KyaTEVn2nA6wNiwHaF1X6GR&#xa;21t1eWlsmr7dPE8N3wrZdfz5nGVUI3nNBtaNwQ/ppZHFsKQ5e2GSCJ3DQQ0yyy7RYOTvxG+YXp&#xa;5/9tQIPJK4dzdrX3Jqox1A9GwKZEzoK0tCzGDgBU6XrGwbCW7QSpqHGbjjCbcg9uBwxjsXul8x&#xa;8FvabOEy/ho9cat4qrinYhPAtM3wG40Ci2HG6iPiNmoKLQHgc2LH/iSBPFL2z3d9QmI5YFsTsX&#xa;uIjX2okjQ5v5FLQiU0GH8bDezBAkYn3t52XUlzt80Bw+mPc5e/ZdhfXG84rlIeLh5bSAsk4v9a&#xa;cv+JYdenVcQqNb2CeSck+ieL4DjimEYzu3XE1JIaO14G0J0FN+r9VJDf694HdWF0bd7q2uXORI&#xa;htUJuNNoSH+j5fxe5aFdu7djo5ydF8YexEAmiVN4HqOJ7LT5IXbylVaVG5r+wDRDrjD6VkG2Cr&#xa;iVH995lw7ppY7iys00WA2WIV/BIUcaJ2dB+28to/Bbn2xUwo8vEROX3Y0GJc8trAoi8e8gscdd&#xa;x9m/QCdTqiJL5qYHd2QqAw2MXNFIW4fm3+4NaUkEC4k8fxLT/vldzc7+jmwZaLbEYdZh8NPI4R&#xa;k3iryMyJPVsrGpKCwruNnU63acYM86Q/zkQTbLSnlQicxSxhTYwbjsEFnDFkMLBxzDRtqZIZRM&#xa;jwwqyV1A2nCZy95s8L08NTBqdLDGeppY1nxMw2NjE+EB29f479YWSnUOSrfi0OAY854fc4NL4W&#xa;glyTp1mJ33fnbfnQPwgfx0SUfC8kqvUJdDwbeZVhowr1rFUbdpFttwO0ziHqBtVDri0NZnpU9T&#xa;IvvCxVryDZlu4A+n5qZPaey2BUtxqhsDd/VJ3onRd2FZ3yp3np76Kcne1uW+NlvdswmnqKasWI&#xa;Z2ZeHfpFRJozNjzHf1Xe60B1+IEhUFpN2diqHaS61g9EDsyK8Bvxw3PhmTMEw997j+kuUCAGxX&#xa;ZcK5RPbRavHF6CObKH0XpqgTXNOO+JmoADSCli8EDbW3169GFAyRKWt4ZPqFbIzGdZyENodci9&#xa;TgagL+/OPvkUB1s8fBbmST96eHRa0cKG3QeVtjM8pP0dfyY9aAKYWLRGVsetWcQOuGI/5loPLR&#xa;mSjQKAhPzh3Bvo/nVEN8yIRGogB9lLGwPYzhx5cGeBzBdBajOs8io0gs+MnEBKk0fxloXQ1DU0&#xa;xF6gp89JkzERW+8hhkUKgbCKadHrw9NxG1aG/GnwHkckdIdumXfU7x18EmlmC7IfXOM2PdwdqJ&#xa;7rSHSGXXINBbgdzQpUMZpOJQNRk0iwB/u0WItx2CLIdBf7hCRfQw/TiRo4CJhFxsBZzGTGlBCa&#xa;OEV2VhUV+nc4NgcFv3xTZBomEK5DH4fQ5K2K1Fr0KDIFVl8XsVUIBwxGlmpkaIzWDBadjV0pzC&#xa;wyhJXcMniNEi7azXh37BHGjx9X9OoAsrK1Kq4P1j1S7aaERalUjIalFtIiQSrBVY2xuVqqA0+E&#xa;uRzZhyn0DwRCwLY7wS4kZm9eJnKZ7VOsOoJaO/gyxYMjWDXpM2vuDIbHR9aLjX1eN92n9I4/GW&#xa;cBGQ0uy4qg5FQK2/rjPQ2KRgco2r4B4aoviBZRl3wZzyxqMtReKy6gbMs3ejY4+nZZeaI6hv9j&#xa;4oOqo974Jyr2moPtQV3OFN6OcVppkROOcLV+aF75KVJ+4m3mWJHaaltwcdTeS4XzwE/8qeuqrN&#xa;81Fit46FmDnzRXPGZB/VbL9ZIXpAz85vCRUK4GqORNzZzZWHDnFWnna3jkbRqYwihe9lFAj57i&#xa;ZKPHXRB+Gp8owC8EqBBAp6RBHTwXZvkZvqiGPyaI6MNaMNedeSQ3Nj2Nt/7Bc9n5NtxuaNYq0k&#xa;MvJHcGtfJDk4p1bkWxyqjM4Mb5tRgWDW3Slvj0wOYbiTAsjTtXVu13F402dtEzNH5fl0B8B+vE&#xa;YY5HNzQaF1DxxjZYwRRzBGkwcYlkSh0Wf19RqKacYEOm491LKgJxkQxyxajv5tKi5XAj91JZ60&#xa;E8Oughbafc1HXz3yj1j3pZdvmSTNbXTNfxW4P5A/h9nNGIszVux1AtGZTmLnBh9Q26L0wb5deW&#xa;RVD1pOWOELNlW71g4guS25h4FTtOhqob9enOfFR+Oa/N4wWo+kI5ChovmYW3PSmCbVNusvl36J&#xa;cbqfN3Y7mc9bTGD0j4TsNmGcuhOW+9BU7Luaw5ro+YTTLa4CecSRk5z4Ci386+yEEUr9Suvk2b&#xa;+x4ZfvJAkDb3vEBwFF61RsymQhxbaZIzgKl6ImSOyvV2wISYjfZBRM1mW3Q65iEWKq1eqmC9FD&#xa;xORZfyZ8B2wOO2NP8Kq8fSxAbrio+e7WzcHdllbwhPWGuTxzr9YKlLrueRwmYRp+cR6JCWnIH3&#xa;KjSftV7YDbzD389h5pF+Ut19LLAixlEi2ddlZhS7I6zwuGsf9wGVbNZXrfmM1KiYLTZPUAynp2&#xa;C18NPPpmcB7CmZ+mdgh/ZjwpXIVmKJApZzEbc6vOkPrmmYWLOzvUoGRVIIhyTzBUczW/i4wd9x&#xa;W+Y1xbCazqdPJxdvu0vauubkOJs8iPdAK5FEnVk5rdJtEmYG76yD5fmGWvJ6PntRm+7goCLP8P&#xa;Top3c3GWOF334jp6yy4+ovUK3M17BEpNrV+mXeA2v/x0vQj9Y7RY6RoKDicS9bZ8FImivWWeCK&#xa;dQZZO+hevP2haKdrZW+h62BtR6Ht8Ofvhv/7z59O8ZpfnH74zMV3G3zv1XZmEaq6KAJpqJB5Xo&#xa;QyaX8ArBqiL7QZATiW2YFVmPou2nTP8Mkx0FM8O2J8cT5cs3N6MC2el+2hCTTymd2SQPdn4+mn&#xa;PTzO5+dLI9O34lpQAThzyHzRsYU8r4JVQ1aXo3h0c4y6HxF2WsnyeCZYM6SzN3UsWk6Re7GwG1&#xa;l0qmkFA7Pfvmypw0I0BMh3djezm8czZX7V+FRRvJeeYuy6TstVJftmb4KXFleoZbOm7img7Yj8&#xa;XlJAUpI/DSFD3BPFaKVXk2VVovk8OIHG9wMyMNszdTNZK5JCqJBQ73cPTH5Jb2ViVWQaUx7ezV&#xa;1Vt9fzxuYa1LAalVEHvBaRJHUZJxEvvVduKf1EgVYUIcX2NmfTo7GC2Gr7t7OtXt1F8E386bxU&#xa;kiXDAOe5bF0KRz/U0XIpqSMwr5H048MtEPkpwVhbOWeYGgM3LflzY9xxVKqvqS+o+OhSCNowCQ&#xa;QtOTYEkhK71/jbHm3SL/OA65u/B4MUSjgNFwmtUGMd7jkYgCEbNnBMhM0iiuSeq3RcYFJes6CU&#xa;iBQwDV1EuKpXQ8EUER3MihGTdE+DdTh5OazvpRU4XxiRaRaASJmOtZ9cd5ufm86NI/kIQ7jH00&#xa;Syazg6rkHJDznQy9XxZWrYNqt3suoY5dAX4Yq9bNsZ/Hfy20gnBhpQpuOFJQImqrdVZBGjaWqj&#xa;lch7CtKAao1svgrHYqktOS6yrYYAZlgHhVzbNiO9hnLlQR7vkG/3P+MhVocvIwXnb6XO7uS9cW&#xa;4itxwbexcgLDDey5js+GZGFJricwThYshqOhkWWXV6Y86kVnL40IOndogpijQiRK6x+M6fiypk&#xa;Gzg0olnAFbgh/nGMNsOqrN1SNSqhzT6hx+AXbuz+im/1EIhLP0i8OUylpZGLbhS14L2jVYT5ac&#xa;4SyObSBjOVnk3i6/PE5VV/odKEph4Is5Ji9Em/FK8vVlmaUgnP56H8johVdHk29UKOldHqt7bI&#xa;qnBfiWyyQw+hyQU7XTmacgofSqogBc96uLyy34y03BTgmoapafyQQkqao0OkAYv9cdzdxQSxIk&#xa;GKc+u+FJFqRE8cAD/kBY8JGUYUMGQjJcfnyDA3Wb2BzAoxilihgRbLnfGwrfHwLobyweB9+2Ou&#xa;WTYPLVnY9yRqpxGmtDq20FhlY2QRkkPDoiFy/uAwX7vHNRzZjF/nq32sdos8nEImzmVMJlOYs5&#xa;YcYnCZK+ItpBgMR1NTnZUW2HPxWX1VMEIbHRpijEPDlaeGj7E+zyiywOzj9cE8Dzh57hIGdTJc&#xa;pa1qgP90i9RfzFkm5jGJYvjTuzFZ32LEVN3gs5cn6l8+0hZNZTuBaqs5oRWOfD3IxA3MjkOKPJ&#xa;IklQwC+aZmJTSnePEOxgvDlVlyBy+1mAvV4fRKmScfkR1AW8k9orV3fxGRKOX4yXmj90muY/ha&#xa;nwnz5AQQxWlfzLP1I0oz0ZwGFKptPYDdNoCKs+/9ywaOs1kBTecspQ/nacb+CJK4jVyDWRQLdr&#xa;k1Z2oat/ssPeWbNT0BKr2LbJUy2rpK0gCMev0eYZ027+LF2RCu+XIi2qYh/iIQIV5OcCE0o/KD&#xa;p3BRc3pFKLWqPhQ45B8F+vm1X3It93eyvPDpsekVt3xlocOHe4yu9FpWJj9v3ih5j2W1eZ1q6h&#xa;1osq2rGyXTnDGrxqoZ1iwhUb4RAIceiUzMJHJEckb0ErapQYYVYx1hVRKdhGyYRvtpycBmGUyX&#xa;4DzXG/IF+xX09RUdkl2orxzTcectHnuVr/C02jq0TRKdYIjPJPHFiMgrX74SI9J1jCn3dCOmo9&#xa;iLrjHh5BfME/mqDrbWFKyl+xqwO8N7EhX+8sWWJmnad6iLkC6qkr1kDAcFBbryQl9E0NWQzvv7&#xa;If2mD9Lf/e9qegzc+zIwFKEYyGaRURQPH/dOPS8XoveHxPM0hdIfp9kA3TKZx6hnpPX6OZgbCq&#xa;cGI7tcjlmnnwDR7F5w9XE80XVHFUcVTOaQYF7xAMrDZwuYb9QxWY7D0D0ACcf3q03p1bJ1VRTb&#xa;Sk92Q94vHTnm79Qqs2xkt4hTMINNPrJ2deU5iHJIrQQdkZG2M5uopZUaYbuo5o2bandk44XUdw&#xa;8MTM5gA+nXzdlZmteKmNzdAPxtrjRJvqQaa5RNwSJOsp8V+Xs28/Jtu4A57yWHte+F9nX0KpR+&#xa;OqD/zBbXSRRi54VT1YIS/Iql9GisEZ/hsbyleytNDCDLoqndtUio9ePWfj39ivRXPtU3ncyF4o&#xa;Cu+eok3gqgVUL7EXmtFCOLw35kZbg8XWTc5jZip8LLptcidmlF1p7K7GEVkgJ1GRKKDqRU5M/t&#xa;Ad+o5+0lBTFtgaS1KTP0jcYSNX6kCxGOsbNuh88i8ViwumOV/NTZbqNb+Z+JrTYA1fag23gxEu&#xa;Ae+zTaZHltobASp4KhhFWEtSg19BAw8gDvXoINwx8qiD1QAAhnJKs2kqBT5GNpiJnTgUONEJZ9&#xa;MPmfq9Krf3nsWCY0R45Jw8Napp3I7542s6vCnnfgjU3eJiCSIDHHUUy9SrYUtU7grFiBmbVHE9&#xa;/EsvXgJdIz3keIKYMEybV8iyYowPiYF7aTYSy3sxdn5yvbTaPqZ2WseDQkZDAHUTqKfORwuwOU&#xa;uRfmHzZhch6qNVCwslJtZ73gLA3EiNOTiCtlovRoTVwXXXY8yBPRDP0YzlX9ooeFTv+2as92fQ&#xa;7SF9vHfJMpSFsDZvjlR2gUb2WXPiXbuxw3n7AHPg4wP+F7IIP6MlI4m6etPziMFzsGwb3RtAEm&#xa;e1asAzCCIe7jqLhT7Wa1VBijt/OIkk8htCmZ5n2BCey7qVKfNusuolffwOgBY3vBQXyKcNo6gh&#xa;Ra+tzPAMEYlUFkCkhEc9Kzhm9P3stnVZWP+KzfnZM/GK22O/GqvjMP4JGgHHo6WJqiG0oaqNf8&#xa;1kBPssyh7yhQL6k18XAo/lMW/nkVQw6+R311fQfDd6r6mVmmlXIQzl3wrJyaGblha2LVjEL7yq&#xa;jTCFpmM1GkwRg9cztPiZmph1SBDeAuMSmefxdCGXwzM/y4YZ/8/rdbhP6VxmQxxdNCdvIO/WZ9&#xa;K7depMI1O/fx40mhAOo/fE3qS3d5TPsd2W1eFvWZHXWerHkAyXOr2sCj5uO0z6eVD631jm5tQG&#xa;+CnsOvRIm9Rd150528Xo2oZ8VsZ2tAcsDm5sy8TZcPWxT8YIUBwU8Zbl27GTZR5Duv0jh7eDCa&#xa;VtUxCw5p+SvilEI4gaY2iZMnFSt0qY0+kQe6fD4fbr0o9tNx59pcVcXypJZUHsXLKChMqywfvZ&#xa;M/ohq2xvCxPk12+jRH5CkCl83AkU1/xXjCeMM7iRnx0lQnW+dTYHoJTEEflZUzS0Xc05AVL8LJ&#xa;aad3GM8HyWe5/KXeJCkqZJwcJjNOPI8I0AiiXxSpFsnPkvTwQrYyhNJ8vThdxCptov1exJMHQ6&#xa;Luw2o5E+gZar1La0W0C7hReznRET5NJZX5FO+15nIJk7wG1VCHPab/TDAePO80Cb38AOzOYFqj&#xa;dGuFotd0H5cIGVK5BtKfgfMtQUZGLywU1AjSr7ww1z8GTmNDh4t8o6JWxj9lG/2qMqmIeT5VCC&#xa;s0Ck4LSStT8tHFfQNdplxNE1RKBpNHKIWcqY9gDe6VEWID0m6am2ueA561Kd8ra1sk6ClaOuY6&#xa;yDyivAXG4N7unLDbcn7vXBH97PzbgTMUzLFXElPVB2Rfydi9Zp/FzBCrt+HlZtiAoaL1Q5kQ3v&#xa;lhVmIWe2BXIZJo7JG0DkCWZ6I4SgUDbPYFQ3Ir0IcVXGm4hBHD0YMzqEc6Kz0mOtC3x2f7OnZS&#xa;mVDgfZZ8A9qYacXIgL7JROA7H9rbroGkwuLsZZmMOUQ50vaBGvbdDht8CiQp4KSOfVLgnTSpLX&#xa;tf46ou2eAE3Uyt4rzaRUmOUhyfF1Hsg0K6g5/UAEWKM09dh0mEUyNGIyjp74WT+uxQwMTqZvLl&#xa;QFxw/KwZ1NrzcB1wDYGzLAt7ebh1WLZuKsQGj5VL3dl45dR1+/GhcOprD6+Fu/gBC3nKBGHojW&#xa;yAd6fJ4xxpicCeDpo2XbiyzByqDXKk1bohe8Bi9wstHVwJQu7T9mBHYM6yjftgqkmvJrCR9x7z&#xa;oIEPirV0d3xFs28HzQbpbanZqIc9kst6NORNgK6+D5MrYhpiAH4AP7xdqg+spgYB3bKwLAooMW&#xa;F2/5wPTyQVlRquXVqx2R1d0ry8fgFQwK0hAejKkV7gQ2Rio4mJ1FawFLArycQ7vbMZ9EKFmWae&#xa;vb0zWH3aj6FzJvveLIHhSbEZ5tc0emFzh/SIWiaRde0Wc9ZufX/S1PCS2HIDKhyLtaj7xqFtWh&#xa;ncCvRUnMhKSZ8X8wIsJiSeiRvIDhfvqfODLRwSxSg2aRoC1SRqhni7CYfypMz4MWf76UfPRLjM&#xa;XU6+YLRmGfuH7UbElqf5ZaTPYDB2vvmgDihLrpUOcoTnzNDZQ+p/g8lYn514KzjZLJ9F5GjCnE&#xa;LGPZ92RXEpmXfUaeO96703LROsRtsh8LWSSoK37+3M8tN+crJ0r+BR0AvTuWtKtxbBOTLs1PUF&#xa;M8dSlnaAutioXIRjA2KE7d3V4MaI7LJDDzDIRRMCzUJUdL1WORCCZxUdot03lTPzp4B9lEIT/R&#xa;dOuADihCmwq8q+z/RiWAkoWWhxQxfQ3zcVBKOINxCwv0bsBPgdbf/hhBPFIU4YAeKEC5A7+HFO&#xa;9UlPEXmUD2od52Z6moyPa2MQPAXREVZHB/fDfKjGS0VXH2fnBc7FY8IoIWKlOelraO4eHdz7vH&#xa;C35Yyg4lt4O1bPYYRW74pO+6RLeVZ6hHx49mdH4gzLb/73csOWaB7g5Lqe8Euoi6rP4zh4P34P&#xa;6AsUsb5Fiyc0pwptku9srBoB7HJGFwuvoTZ+fFsx3INNzeQsxsnVjTfbZFND3KCQbJjw2fPy+I&#xa;YOCUP6PeQQMdoC0Q74NH8Kpzay/rKEZmHvCfZ4EbhgQu6QpRZkkRycXtB086qomu9kZKLil3zY&#xa;e4KReG+sx5Pqjoel09vmZ7vPN124x4lPgeIjvadoMKR8zVmsvQ1FHKQOToRNOcdNTzc3ezOff/&#xa;OrJKHQhZ3uTQ4L7dyJ7iwYMkSbXsAR719ss/EaJvLeY0fOuq8Xuoviji2kjh2BglxRd9d5/xGQ&#xa;cTPAcf3DE0IfLLui7n76QkycwLzZLkKJXRDFmHj1mvscCpIbT2voLvDOaea7Ig4NRD9PESULws&#xa;c5Rzb8Q99wD+YcCLdAGZvzbkd4g0rRg4Rc+kKOcr0UuuAw/xOfVzhJ3Ag1ZUU2xtzRIb4puvwM&#xa;GCILeFjZTE6TKLy9GJye3jxinNFEDfF3/PRQH2kctKw8+4Qjd5LZ5155wIVnqtEE/yyscVTfZ2&#xa;Snb5Q8VyZ8NePINnDybJEzpkvuEbX8bNSs+giplkR98v3jkC92GPLbdWt/XhG1VlcIawFxwqyA&#xa;XwX0/+qE2W5wwlV/OGEOBsnn6Y/cYQIuO2GfJN3bxlSKZ/DnaNNFSn++1jHDtKpw9BYIbQodeG&#xa;L3ReNwanpquj7361qCtieMDdY0q0Znrv2EVjG3HNObkNXl9CKDLLCmMuFAwBLhs56tFY151zyL&#xa;caxA7cgPuGSUnewVzv2GQzRpbFOBPiRNiaaR/TGqM2tmLaBTBeUWm33Z+PjZ2xXtOknZfc1oOW&#xa;316yss+/ELST7Y4HI1JqAVVTH+avmqq5Ozpbd595NvssXnUl5ByuCoZEMro5X4WY1Dk4jA2nYG&#xa;KxOPoCRyK2TrUhnVsg3VFBPW1GIU8qUWViD1+wEl1f7oXdfii+POqMCYNkdhZypcKtDiKYsWZT&#xa;Tw/jzlpsGgHU8Gr0d/seKcDcVrDcv12ASs4AXLMDliGgysz/4dCDMEwt9XjjWU0QRlxBCs73EH&#xa;lrOlfu5EsxuGWGGxP6zwUBQX3Z0KIxSySbSvKCPebKVf4EKcKQSQ0xF8ZxVgpvENBCRQboE3wb&#xa;VSlc1oFGrAagyUTiqv1CDPVFzwlL8RordIaKWyDTAvD1cohjTxrsICmpHpZ9aETHNDDOKkhx9f&#xa;r5h5HRJFvOjU7ivlRFUPInAntn3dvGYgNyjazTDmuplpdU9hSZ5PXD9fAGKF+f/PCkv8aYWj/r&#xa;DC4X9Y4UWZDciiIIM9yACxwq/+sMJz/7PCmBArvFP0wsnBHyPOSCKuHGKFGxMJRCBWeOPCCg9A&#xa;rLAcC7U+tmqPzZASHHIlJdGmgm9b2Th4gxda0miAp2SZgFCgr9LIVspWNmHJb4W0yE2EY+lJtb&#xa;xdm9BdXbn7DJVyHJMSb2fd5t4UhtBpqfRsECg/pifK9vFDsnuCsXgEF5zIxcUw22de0qb/XtdH&#xa;79CDkhxVqcH4CebLEdzuhIcpsIwp/hEv4I81XKpA36YzBzUm8IUOWXYy3Sw0Xfe8qhF/WGH7yU&#xa;tWWPXCCkv/sMJEPTnq51X8ECucVFzVCrHC5cuzTGsQKxz+pxUe/tMKe7b9YYUXqlV1Qu2NWvqP&#xa;S7W+4FIJCLGjxaKvIvjr3nFoT05ZPiW8j+7UI8Ju+N53gWw5eSh54CmsJLL/RooxewQerkfInn&#xa;CKbFG64jn1fksM0dkMSC12GFMQit8Ff8t/R7rG2dZrqnmTfxxu8h0Uaj9DMCvxHPo70bEDtOYz&#xa;neO59oer4vsbujPGGoh6OO8H1NHu5CGNvvdHevjy3Jm21JQKn/RsY05c08cE64GULrIHGDV0v4&#xa;hqmS51HIFurckFwUsYdhGq4dBqcqiE9gwUllvIAdLWlba1LOKfzCyhGFEPeyo9UX804n+CZjUX&#xa;tTUbYV32oMwPtclrqy9svO3d54w3H+/UitRUfm47kzoEGt0+tLEecZSCUnhVWick0kifFnZ/qA&#xa;LHdux2quKxngsPdT+lnazsHLKGDR3M8p2Cs4AhHqHTXbhdutmHqzzDTk9tT9y3W9jq65ofY56L&#xa;UOe503wTRLJnQp/yEziCbsFSYHgg7IUwlW1buIY1TmEWQxJfqejy8TiGdhv/BCwh0hAinbRPfB&#xa;E524orRfv+zwrfgsaE+hE7ZyGxc4IQEV4XCAUVDQmcuFCwUFefnyPpjzB53nFVaVPnnawDnvi9&#xa;jxCBJgiF84pKDvC3Y/K1D5ovMy4ivWV/Z/AADhQUvxIUFNkVxijRrxk/672q5gbJc3bOON+Ggm&#xa;K58+Pw4V/PKedlvf/77bGhg4OplbE9xS8KWgjnJcPe9X0t/s+PbdivCHfy/6bwtddxrhP6RsaJ&#xa;/CEEQsD1oncK/x6B9WfhfBgvmRh2bC4gRJgP+cf26K8nV/IfhO0NHR7ZWdsY2jm4XltXrzc8t2&#xa;FZshvyj28qSK9AaOV+Cbm5MYCqirAYkDJTQCSZrsjtqf1zmX9RVnnnOFlPGp65iwNJSz/1pZ7O&#xa;v+zLv2kN4WqO7TAIYRpwvfhRRr9f/Bv6kwTWA9Q9p0XIBxnjzChQUNxXxH0trohbW1kZ6kOmir&#xa;KpoTOFtqONAWQ+/t8/Xk/kcp2SLEuzrAapQjjyDw/210Nt/48UkLXBX6R/qA44kC5vChJmupCu&#xa;g1Zd/hvohk65AEFzMnjfXCMWz/8GumEmX4Ba0dhXuyE1mvipRvve/w3EcTOIn3V5/OYa0b38by&#xa;DOm0FCJvfkbq7RZsh/A3HdDDKdn/ybPqKM+G8g7ptBrhuSRcQQkOtPoOW3/w3EczOIuAzaTx4D&#xa;sv7QQEL7FZBNwt+CfpZyeAmSbZHQS8KHTPxxwPXFElB8WUrOwMD+R3H/fopf6OUAyjLyIG1Q/V&#xa;OQda68We/PGGKia+dg/4tpfSF+PFvJ9AkBCuoT+nVxr/rfF79hKl+Iz4u582VCSv4J+XoIzG77&#xa;F+K/mMcXFAkVHhF4CKUZ6Tqlsus/UG6YxBcUWxSNLB00KKi3ZBeG7cqQH7iJ8rMK3ZP7IK/x55&#xa;gukLKqAn5kg/zr6Zz/x9yQxoY/ciL8nI7mMubixK6HH8o8DyoUlANkjSe/2vAr/4D5WfDCrnbO&#xa;fZgWhpT7AfKPLDl/PexfbzKAVxbIGwpJqXIfRLW1efQOEq2KEK9rdp7/o+YNw/liRW/9OhIoCy&#xa;nnDPKPdwv/emphbv2eZ7iedP4yAqvOHcSL7TTS86ervxqSLBBv/a7fvvIZyA3tc5E5FNZqvOYZ&#xa;pC7agOuGMPXOrX8aK3oXA4X11yMl8zkviKB+8M0spDYRkNqwXoH4Y95UGwptXQMnXSt9w/9Rf9&#xa;EhUaa8oIH016oLEP1SiP79K/ofgTfr/5ic/5MXNIJU5+KLgF/0ysUAfSdeqXPxolMJpOMZrnCw&#xa;iG/m6FvbuMrpmUGC+S+qcJGKbyK791QQEiJd7l5fGsIpLktfScx3s1SXIsCqHlJKT5Trw5OY4b&#xa;KUkKm9ibXNb92xeR1B54LhfQsyo+AxoaCwryAesv2MuFmjTHotYQJSzALAjzvh/np8+S5rSENm&#xa;zr8upMmzOLlDPui7+5BRYY10HdAg9O8Af9NnVbNtMD6QNRjqzo+7jv56sCWuA25WUKwLc5mEtE&#xa;EZ4HpXTYKuKFiZGps4/KdWKNHxb7toBUek6wh8pX+L+Jt2wKPw7MmCtIPJneujwU7tZ8TNGiFt&#xa;eSzjkJZI+GmXpK17JQ7pOlv9XMh/aIMcoRSoPUgbaCP9tAUz/n3xG2qfFeoj1z3CvH2xg4z5qe&#xa;RfLH5f/IaIcyHekl3svntjybHsf1/8Bk9z0eYaGTxfNuEhCzj69fFr4HJd/GYFd/PEW3WQuruj&#xa;XN89Rzy/rCDvaGh4Q/l+I9JkRM6dXdw0JvLT/rwE/C8JfzN6ZWH5WANvJMQH/UvCDZ14Qbh8/T&#xa;HWFUJg2E+EmyUuX615NZYFxV2W+O1bk68DLt/odhVgn/zvAH/TzJfv8Lk62DQzrwNutiqXr7MQ&#xa;vqLwKf8frcrv3PxzHXg53/pVIEzp/x/whgl5AbycqfeqcR+o+k/Am7vicp7KB1cwSB/+1mv8bh&#xa;Lg67uEywnarhpw+5YrVuEXiTCva15OjkR7RXOp4wbNv030dl33cjqRq2vl+54bdP9tF18gLr8r&#xa;fxWxOPhvETdsIi8Ql9+xvPrhsfn4byJuFr58Av1qHIua+Un45s/4L594FLgi0bf22/uavzm4fp&#xa;l1cYby8iGhq3uo1J3/toe6oV0uKnX5y+ure6jPh/8E+tsTSNchl7/nuVqb/LP/Vpv/mwRwFx4W&#xa;SgLyhwMPCmr5FjTkb/8PUEsHCNDdtbVg8wEAMxwCAFBLAQIUABQACAgIAOKVKFDQ3bW1YPMBAD&#xa;McAgARAAAAAAAAAAAAAAAAAAAAAABsaWIvQ2hlc3NUcmVlLmphclBLBQYAAAAAAQABAD8AAACf&#xa;8wEAAAA=" ID="ID_472231825" CREATED="1578585850879" MODIFIED="1578585851055"/>
</node>
</node>
<node TEXT="images" POSITION="right" ID="ID_209340361" CREATED="1521562135195" MODIFIED="1578504823302">
<edge COLOR="#7c7c00"/>
<richcontent TYPE="NOTE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      An add-on may define any number of images as child nodes of the images node. The actual image data has to be placed as base64 encoded binary data into the text of a subnode.
    </p>
    <p>
      The images are saved to the <i>${installationbase}/resources/images</i>&#160;directory.
    </p>
    <p>
      
    </p>
    <p>
      The following images should be present:
    </p>
    <ul>
      <li>
        <i>${name}-icon.png</i>, like <i>oldicons-theme-icon.png</i>. This will be used in the app-on overview.
      </li>
      <li>
        <i>${name}-screenshot-1.png</i>, like <i>oldicons-theme-screenshot-1.png</i>. This will be used in the app-on details dialog. Further images can be included but they are not used yet.
      </li>
    </ul>
    <p>
      Images can be added automatically by releaseAddOn.groovy or must be uploaded into the map via the script <i>Tools-&gt;Scripts-&gt;Insert Binary</i>&#160;since they have to be (base64) encoded as simple strings.
    </p>
  </body>
</html>
</richcontent>
<attribute_layout VALUE_WIDTH="250.0 pt"/>
</node>
</node>
</map>
